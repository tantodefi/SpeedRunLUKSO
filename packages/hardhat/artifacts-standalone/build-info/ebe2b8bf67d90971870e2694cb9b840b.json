{"id":"ebe2b8bf67d90971870e2694cb9b840b","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@erc725/smart-contracts-v8/contracts/constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n// ERC165 INTERFACE IDs\nbytes4 constant _INTERFACEID_ERC725X = 0x7545acac;\nbytes4 constant _INTERFACEID_ERC725Y = 0x629aa694;\n\n// ERC725X OPERATION TYPES\nuint256 constant OPERATION_0_CALL = 0;\nuint256 constant OPERATION_1_CREATE = 1;\nuint256 constant OPERATION_2_CREATE2 = 2;\nuint256 constant OPERATION_3_STATICCALL = 3;\nuint256 constant OPERATION_4_DELEGATECALL = 4;\n"},"@erc725/smart-contracts-v8/contracts/ERC725Y.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// interfaces\nimport {IERC725Y} from \"./interfaces/IERC725Y.sol\";\n\n// modules\nimport {ERC165} from \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\n\n// constants\nimport {_INTERFACEID_ERC725Y} from \"./constants.sol\";\n\n// errors\nimport {\n    ERC725Y_MsgValueDisallowed,\n    ERC725Y_DataKeysValuesLengthMismatch,\n    ERC725Y_DataKeysValuesEmptyArray,\n    OwnableCannotSetZeroAddressAsOwner\n} from \"./errors.sol\";\n\n/**\n * @title Deployable implementation with `constructor` of ERC725Y sub-standard, a generic data key/value store.\n * @author Fabian Vogelsteller <fabian@lukso.network> and <CJ42>, <YamenMerhi>, <B00ste>, <SkimaHarvey>\n * @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n * It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\n */\ncontract ERC725Y is Ownable, ERC165, IERC725Y {\n    /**\n     * @dev Map `bytes32` data keys to their `bytes` data values.\n     */\n    mapping(bytes32 => bytes) internal _store;\n\n    /**\n     * @notice Deploying an ERC725Y smart contract and setting address `initialOwner` as the contract owner.\n     * @dev Deploy a new ERC725Y contract with the provided `initialOwner` as the contract {owner}.\n     * @param initialOwner the owner of the contract.\n     *\n     * @custom:requirements\n     * - `initialOwner` CANNOT be the zero address.\n     */\n    constructor(address initialOwner) payable {\n        if (initialOwner == address(0)) {\n            revert OwnableCannotSetZeroAddressAsOwner();\n        }\n        Ownable._transferOwnership(initialOwner);\n    }\n\n    /**\n     * @inheritdoc IERC725Y\n     */\n    function getData(\n        bytes32 dataKey\n    ) public view virtual override returns (bytes memory dataValue) {\n        return _getData(dataKey);\n    }\n\n    /**\n     * @inheritdoc IERC725Y\n     */\n    function getDataBatch(\n        bytes32[] memory dataKeys\n    ) public view virtual override returns (bytes[] memory dataValues) {\n        dataValues = new bytes[](dataKeys.length);\n\n        for (uint256 i = 0; i < dataKeys.length; ) {\n            dataValues[i] = _getData(dataKeys[i]);\n\n            // Increment the iterator in unchecked block to save gas\n            unchecked {\n                ++i;\n            }\n        }\n\n        return dataValues;\n    }\n\n    /**\n     * @inheritdoc IERC725Y\n     * @custom:requirements\n     * - SHOULD only be callable by the {owner}.\n     *\n     * @custom:warning\n     * **Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value\n     * (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**.\n     * If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\n     *\n     * @custom:events {DataChanged} event.\n     */\n    function setData(\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) public payable virtual override onlyOwner {\n        if (msg.value != 0) revert ERC725Y_MsgValueDisallowed();\n        _setData(dataKey, dataValue);\n    }\n\n    /**\n     * @inheritdoc IERC725Y\n     * @custom:requirements\n     * - SHOULD only be callable by the {owner} of the contract.\n     *\n     * @custom:warning\n     * **Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value\n     * (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**.\n     * If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\n     *\n     * @custom:events {DataChanged} event **for each data key/value pair set**.\n     */\n    function setDataBatch(\n        bytes32[] memory dataKeys,\n        bytes[] memory dataValues\n    ) public payable virtual override onlyOwner {\n        /// @dev do not allow to send value by default when setting data in ERC725Y\n        if (msg.value != 0) revert ERC725Y_MsgValueDisallowed();\n        _setDataBatch(dataKeys, dataValues);\n    }\n\n    /**\n     * @dev Read the value stored under a specific `dataKey` inside the underlying ERC725Y storage,\n     * represented as a mapping of `bytes32` data keys mapped to their `bytes` data values.\n     *\n     * ```solidity\n     * mapping(bytes32 => bytes) _store\n     * ```\n     *\n     * @param dataKey A bytes32 data key to read the associated `bytes` value from the store.\n     * @return dataValue The `bytes` value associated with the given `dataKey` in the ERC725Y storage.\n     */\n    function _getData(\n        bytes32 dataKey\n    ) internal view virtual returns (bytes memory dataValue) {\n        return _store[dataKey];\n    }\n\n    /**\n     * @dev Write a `dataValue` to the underlying ERC725Y storage, represented as a mapping of\n     * `bytes32` data keys mapped to their `bytes` data values.\n     *\n     * ```solidity\n     * mapping(bytes32 => bytes) _store\n     * ```\n     *\n     * @param dataKey A bytes32 data key to write the associated `bytes` value to the store.\n     * @param dataValue The `bytes` value to associate with the given `dataKey` in the ERC725Y storage.\n     *\n     * @custom:events {DataChanged} event emitted after a successful `setData` call.\n     */\n    function _setData(\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) internal virtual {\n        _store[dataKey] = dataValue;\n        emit DataChanged(dataKey, dataValue);\n    }\n\n    /**\n     * @dev Write a set of `dataValues` to the underlying ERC725Y storage for each associated `dataKeys`. The ERC725Y storage is\n     * represented as a mapping of `bytes32` data keys mapped to their `bytes` data values.\n     *\n     * ```solidity\n     * mapping(bytes32 => bytes) _store\n     * ```\n     *\n     * @param dataKeys A bytes32 array of data keys to write the associated `bytes` value to the store.\n     * @param dataValues The `bytes` values to associate with each given `dataKeys` in the ERC725Y storage.\n     *\n     * @custom:events {DataChanged} event emitted for each successful data key-value pairs set.\n     */\n    function _setDataBatch(\n        bytes32[] memory dataKeys,\n        bytes[] memory dataValues\n    ) internal virtual {\n        if (dataKeys.length != dataValues.length) {\n            revert ERC725Y_DataKeysValuesLengthMismatch();\n        }\n\n        if (dataKeys.length == 0) {\n            revert ERC725Y_DataKeysValuesEmptyArray();\n        }\n\n        for (uint256 i = 0; i < dataKeys.length; ) {\n            _setData(dataKeys[i], dataValues[i]);\n\n            // Increment the iterator in unchecked block to save gas\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /**\n     * @inheritdoc ERC165\n     */\n    function supportsInterface(\n        bytes4 interfaceId\n    ) public view virtual override returns (bool) {\n        return\n            interfaceId == _INTERFACEID_ERC725Y ||\n            super.supportsInterface(interfaceId);\n    }\n}\n"},"@erc725/smart-contracts-v8/contracts/errors.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @dev Reverts when trying to send more native tokens `value` than available in current `balance`.\n * @param balance The balance of native tokens of the ERC725X smart contract.\n * @param value The amount of native tokens sent via `ERC725X.execute(...)`/`ERC725X.executeBatch(...)` that is greater than the contract's `balance`.\n */\nerror ERC725X_InsufficientBalance(uint256 balance, uint256 value);\n\n/**\n * @dev Reverts when the `operationTypeProvided` is none of the default operation types available.\n * (CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4)\n * @param operationTypeProvided The unrecognised operation type number provided to `ERC725X.execute(...)`/`ERC725X.executeBatch(...)`.\n */\nerror ERC725X_UnknownOperationType(uint256 operationTypeProvided);\n\n/**\n * @dev Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `staticcall` (`operationType == 3`).\n * Sending native tokens via `staticcall` is not allowed because it is a state changing operation.\n */\nerror ERC725X_MsgValueDisallowedInStaticCall();\n\n/**\n * @dev Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `delegatecall` (`operationType == 4`).\n * Sending native tokens via `staticcall` is not allowed because `msg.value` is persisting.\n */\nerror ERC725X_MsgValueDisallowedInDelegateCall();\n\n/**\n * @dev Reverts when passing a `to` address that is not `address(0)` (= address zero) while deploying a contract via {execute} or {executeBatch} functions.\n * This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`).\n */\nerror ERC725X_CreateOperationsRequireEmptyRecipientAddress();\n\n/**\n * @dev Reverts when contract deployment failed via {execute} or {executeBatch} functions,\n * This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`).\n */\nerror ERC725X_ContractDeploymentFailed();\n\n/**\n * @dev Reverts when no contract bytecode was provided as parameter when trying to deploy a contract via {execute} or {executeBatch}.\n * This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`).\n */\nerror ERC725X_NoContractBytecodeProvided();\n\n/**\n * @dev Reverts when there is not the same number of elements in the `operationTypes`, `targets` addresses, `values`, and `datas`\n * array parameters provided when calling the {executeBatch} function.\n */\nerror ERC725X_ExecuteParametersLengthMismatch();\n\n/**\n * @dev Reverts when one of the array parameter provided to the {executeBatch} function is an empty array.\n */\nerror ERC725X_ExecuteParametersEmptyArray();\n\n/**\n * @dev Reverts when there is not the same number of elements in the `datakeys` and `dataValues`\n * array parameters provided when calling the {setDataBatch} function.\n */\nerror ERC725Y_DataKeysValuesLengthMismatch();\n\n/**\n * @dev Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\n */\nerror ERC725Y_DataKeysValuesEmptyArray();\n\n/**\n * @dev Reverts when sending value to the {setData} or {setDataBatch} function.\n */\nerror ERC725Y_MsgValueDisallowed();\n\n/**\n * @dev Reverts when trying to set `address(0)` as the contract owner when deploying the contract or initializing it.\n */\nerror OwnableCannotSetZeroAddressAsOwner();\n"},"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol":{"content":"// SPDX-License-Identifier: CC0-1.0\npragma solidity ^0.8.0;\n\n/**\n * @title The interface for ERC725Y sub-standard, a generic data key/value store.\n * @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n * It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\n */\ninterface IERC725Y {\n    /**\n     * @notice The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\n     * @dev Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\n     * @param dataKey The data key for which a bytes value is set.\n     * @param dataValue The value to set for the given data key.\n     */\n    event DataChanged(bytes32 indexed dataKey, bytes dataValue);\n\n    /**\n     * @notice Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\n     * @dev Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\n     * @param dataKey The data key for which to retrieve the value.\n     * @return dataValue The bytes value stored under the specified data key.\n     */\n    function getData(\n        bytes32 dataKey\n    ) external view returns (bytes memory dataValue);\n\n    /**\n     * @notice Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\n     * @dev Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\n     * @param dataKeys The array of keys which values to retrieve\n     * @return dataValues The array of data stored at multiple keys\n     */\n    function getDataBatch(\n        bytes32[] memory dataKeys\n    ) external view returns (bytes[] memory dataValues);\n\n    /**\n     * @notice Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\n     *\n     * @dev Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`.\n     * The function is marked as payable to enable flexibility on child contracts. For instance to implement\n     * a fee mechanism for setting specific data.\n     *\n     * @param dataKey The data key for which to set a new value.\n     * @param dataValue The new bytes value to set.\n     */\n    function setData(bytes32 dataKey, bytes memory dataValue) external payable;\n\n    /**\n     * @notice Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\n     *\n     * @dev Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\n     *\n     * @param dataKeys An array of data keys to set bytes values for.\n     * @param dataValues An array of bytes values to set for each `dataKeys`.\n     */\n    function setDataBatch(\n        bytes32[] memory dataKeys,\n        bytes[] memory dataValues\n    ) external payable;\n}\n"},"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol":{"content":"// SPDX-License-Identifier: CC0-1.0\npragma solidity ^0.8.0;\n\n// interfaces\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\n/**\n * @title The interface for ERC725Y sub-standard, a generic data key/value store.\n * @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n * It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\n */\ninterface IERC725Y is IERC165 {\n    /**\n     * @notice The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\n     * @dev Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\n     * @param dataKey The data key for which a bytes value is set.\n     * @param dataValue The value to set for the given data key.\n     */\n    event DataChanged(bytes32 indexed dataKey, bytes dataValue);\n\n    /**\n     * @notice Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\n     * @dev Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\n     * @param dataKey The data key for which to retrieve the value.\n     * @return dataValue The bytes value stored under the specified data key.\n     */\n    function getData(\n        bytes32 dataKey\n    ) external view returns (bytes memory dataValue);\n\n    /**\n     * @notice Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\n     * @dev Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\n     * @param dataKeys The array of keys which values to retrieve\n     * @return dataValues The array of data stored at multiple keys\n     */\n    function getDataBatch(\n        bytes32[] memory dataKeys\n    ) external view returns (bytes[] memory dataValues);\n\n    /**\n     * @notice Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\n     *\n     * @dev Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`.\n     * The function is marked as payable to enable flexibility on child contracts. For instance to implement\n     * a fee mechanism for setting specific data.\n     *\n     * @param dataKey The data key for which to set a new value.\n     * @param dataValue The new bytes value to set.\n     */\n    function setData(bytes32 dataKey, bytes memory dataValue) external payable;\n\n    /**\n     * @notice Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\n     *\n     * @dev Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\n     *\n     * @param dataKeys An array of data keys to set bytes values for.\n     * @param dataValues An array of bytes values to set for each `dataKeys`.\n     */\n    function setDataBatch(\n        bytes32[] memory dataKeys,\n        bytes[] memory dataValues\n    ) external payable;\n}\n"},"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @title Interface of the LSP1 - Universal Receiver standard, an entry function for a contract to receive arbitrary information.\n * @dev LSP1UniversalReceiver allows to receive arbitrary messages and to be informed when assets are sent or received.\n */\ninterface ILSP1UniversalReceiver {\n    /**\n     * @dev Emitted when the {universalReceiver} function was called with a specific `typeId` and some `receivedData`\n     * @notice Address `from` called the `universalReceiver(...)` function while sending `value` LYX. Notification type (typeId): `typeId` - Data received: `receivedData`.\n     *\n     * @param from The address of the EOA or smart contract that called the {universalReceiver(...)} function.\n     * @param value The amount sent to the {universalReceiver(...)} function.\n     * @param typeId A `bytes32` unique identifier (= _\"hook\"_) that describe the type of notification, information or transaction received by the contract. Can be related to a specific standard or a hook.\n     * @param receivedData Any arbitrary data that was sent to the {universalReceiver(...)} function.\n     * @param returnedValue The value returned by the {universalReceiver(...)} function.\n     */\n    event UniversalReceiver(\n        address indexed from,\n        uint256 indexed value,\n        bytes32 indexed typeId,\n        bytes receivedData,\n        bytes returnedValue\n    );\n\n    /**\n     * @dev Generic function that can be used to notify the contract about specific incoming transactions or events like asset transfers, vault transfers, etc. Allows for custom on-chain and off-chain reactions based on the `typeId` and `data`.\n     * @notice Reacted on received notification with `typeId` & `data`.\n     *\n     * @param typeId The hash of a specific standard or a hook.\n     * @param data The arbitrary data received with the call.\n     *\n     * @custom:events {UniversalReceiver} event.\n     */\n    function universalReceiver(\n        bytes32 typeId,\n        bytes calldata data\n    ) external payable returns (bytes memory);\n}\n"},"@lukso/lsp1-contracts/contracts/LSP1Constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// --- ERC165 interface ids\nbytes4 constant _INTERFACEID_LSP1 = 0x6bb56a14;\nbytes4 constant _INTERFACEID_LSP1_DELEGATE = 0xa245bbda;\n\n// --- ERC725Y Data Keys\n\n// bytes10(keccak256('LSP1UniversalReceiverDelegate'))\nbytes10 constant _LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX = 0x0cfc51aec37c55a4d0b1;\n\n// keccak256('LSP1UniversalReceiverDelegate')\nbytes32 constant _LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY = 0x0cfc51aec37c55a4d0b1a65c6255c4bf2fbdf6277f3cc0730c45b828b6db8b47;\n"},"@lukso/lsp1-contracts/contracts/LSP1Utils.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// libraries\nimport {\n    ERC165Checker\n} from \"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\";\nimport {LSP2Utils} from \"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\";\n\n// constants\nimport {ILSP1UniversalReceiver as ILSP1} from \"./ILSP1UniversalReceiver.sol\";\n\n// constants\nimport {\n    _INTERFACEID_LSP1,\n    _LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY,\n    _LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX\n} from \"./LSP1Constants.sol\";\n\n/**\n * @title LSP1 Utility library.\n * @author Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\n * @dev LSP1Utils is a library of utility functions that can be used to notify the `universalReceiver` function of a contract\n * that implements LSP1 and retrieve information related to LSP1 `typeId`.\n * Based on LSP1 Universal Receiver standard.\n */\nlibrary LSP1Utils {\n    using ERC165Checker for address;\n\n    /**\n     * @dev Notify a contract at `lsp1Implementation` address by calling its `universalReceiver` function if this contract\n     * supports the LSP1 interface.\n     *\n     * @param lsp1Implementation The address of the contract to notify.\n     * @param typeId A `bytes32` typeId.\n     * @param data Any optional data to send to the `universalReceiver` function to the `lsp1Implementation` address.\n     */\n    function notifyUniversalReceiver(\n        address lsp1Implementation,\n        bytes32 typeId,\n        bytes memory data\n    ) internal {\n        if (\n            lsp1Implementation.supportsERC165InterfaceUnchecked(\n                _INTERFACEID_LSP1\n            )\n        ) {\n            ILSP1(lsp1Implementation).universalReceiver(typeId, data);\n        }\n    }\n\n    /**\n     * @notice Retrieving the value stored under the ERC725Y data key `LSP1UniversalReceiverDelegate`.\n     *\n     * @dev Query internally the ERC725Y storage of a `ERC725Y` smart contract to retrieve\n     * the value set under the `LSP1UniversalReceiverDelegate` data key.\n     *\n     * @param erc725YStorage A reference to the ERC725Y storage mapping of the contract.\n     * @return The bytes value stored under the `LSP1UniversalReceiverDelegate` data key.\n     */\n    function getLSP1DelegateValue(\n        mapping(bytes32 => bytes) storage erc725YStorage\n    ) internal view returns (bytes memory) {\n        return erc725YStorage[_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY];\n    }\n\n    /**\n     * @notice Retrieving the value stored under the ERC725Y data key `LSP1UniversalReceiverDelegate:<type-id>` for a specific `typeId`.\n     *\n     * @dev Query internally the ERC725Y storage of a `ERC725Y` smart contract to retrieve\n     * the value set under the `LSP1UniversalReceiverDelegate:<bytes32>` data key for a specific LSP1 `typeId`.\n     *\n     * @param erc725YStorage A reference to the ERC725Y storage mapping of the contract.\n     * @param typeId A bytes32 LSP1 `typeId`;\n     * @return The bytes value stored under the `LSP1UniversalReceiverDelegate:<bytes32>` data key.\n     */\n    function getLSP1DelegateValueForTypeId(\n        mapping(bytes32 => bytes) storage erc725YStorage,\n        bytes32 typeId\n    ) internal view returns (bytes memory) {\n        bytes32 lsp1TypeIdDataKey = LSP2Utils.generateMappingKey(\n            _LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX,\n            bytes20(typeId)\n        );\n        return erc725YStorage[lsp1TypeIdDataKey];\n    }\n}\n"},"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// --- ERC165 interface ids\n\n// bytes4(keccack256(\"LSP17Extendable\"))\nbytes4 constant _INTERFACEID_LSP17_EXTENDABLE = 0xa918fa6b;\n\n// bytes4(keccack256(\"LSP17Extension\"))\nbytes4 constant _INTERFACEID_LSP17_EXTENSION = 0xcee78b40;\n\n// --- ERC725Y Data Keys\n\n// Extension Handler Prefix\n\n// bytes10(keccak256('LSP17Extension'))\nbytes10 constant _LSP17_EXTENSION_PREFIX = 0xcee78b4094da86011096;\n"},"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @dev reverts when there is no extension for the function selector being called with\n */\nerror NoExtensionFoundForFunctionSelector(bytes4 functionSelector);\n\n/**\n * @dev reverts when the contract is called with a function selector not valid (less than 4 bytes of data)\n */\nerror InvalidFunctionSelector(bytes data);\n\n/**\n * @dev reverts when the bytes retrieved from the LSP17 data key is not a valid address (not 20 bytes)\n */\nerror InvalidExtensionAddress(bytes storedData);\n"},"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// modules\nimport {ERC165} from \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\nimport {\n    ERC165Checker\n} from \"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\";\n\n// constants\nimport {_INTERFACEID_LSP17_EXTENDABLE} from \"./LSP17Constants.sol\";\n\n// errors\nimport {NoExtensionFoundForFunctionSelector} from \"./LSP17Errors.sol\";\n\n/**\n * @title Module to add more functionalities to a contract using extensions.\n *\n * @dev Implementation of the `fallback(...)` logic according to LSP17 - Contract Extension standard.\n * This module can be inherited to extend the functionality of the parent contract when\n * calling a function that doesn't exist on the parent contract via forwarding the call\n * to an extension mapped to the function selector being called, set originally by the parent contract\n */\nabstract contract LSP17Extendable is ERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(\n        bytes4 interfaceId\n    ) public view virtual override returns (bool) {\n        return\n            interfaceId == _INTERFACEID_LSP17_EXTENDABLE ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns whether the interfaceId being checked is supported in the extension of the\n     * {supportsInterface} selector.\n     *\n     * To be used by extendable contracts wishing to extend the ERC165 interfaceIds originally\n     * supported by reading whether the interfaceId queried is supported in the `supportsInterface`\n     * extension if the extension is set, if not it returns false.\n     */\n    function _supportsInterfaceInERC165Extension(\n        bytes4 interfaceId\n    ) internal view virtual returns (bool) {\n        (address erc165Extension, ) = _getExtensionAndForwardValue(\n            ERC165.supportsInterface.selector\n        );\n        if (erc165Extension == address(0)) return false;\n\n        return\n            ERC165Checker.supportsERC165InterfaceUnchecked(\n                erc165Extension,\n                interfaceId\n            );\n    }\n\n    /**\n     * @dev Returns the extension mapped to a specific function selector\n     * If no extension was found, return the address(0)\n     * To be overridden.\n     * Up to the implementer contract to return an extension based on a function selector\n     */\n    function _getExtensionAndForwardValue(\n        bytes4 functionSelector\n    ) internal view virtual returns (address, bool);\n\n    /**\n     * @dev Forwards the call to an extension mapped to a function selector.\n     *\n     * Calls {_getExtensionAndForwardValue} to get the address of the extension mapped to the function selector being\n     * called on the account. If there is no extension, the `address(0)` will be returned.\n     * Forwards the value if the extension is payable.\n     *\n     * Reverts if there is no extension for the function being called.\n     *\n     * If there is an extension for the function selector being called, it calls the extension with the\n     * `CALL` opcode, passing the `msg.data` appended with the 20 bytes of the {msg.sender} and 32 bytes of the `msg.value`.\n     *\n     * @custom:hint This function does not forward to the extension contract the `msg.value` received by the contract that inherits `LSP17Extendable`.\n     * If you would like to forward the `msg.value` to the extension contract, you can override the code of this internal function as follow:\n     *\n     * ```solidity\n     * (bool success, bytes memory result) = extension.call{value: msg.value}(\n     *     abi.encodePacked(callData, msg.sender, msg.value)\n     * );\n     * ```\n     */\n    function _fallbackLSP17Extendable(\n        bytes calldata callData\n    ) internal virtual returns (bytes memory) {\n        // If there is a function selector\n        (\n            address extension,\n            bool shouldForwardValue\n        ) = _getExtensionAndForwardValue(msg.sig);\n\n        // if no extension was found, revert\n        if (extension == address(0))\n            revert NoExtensionFoundForFunctionSelector(msg.sig);\n\n        (bool success, bytes memory result) = extension.call{\n            value: shouldForwardValue ? msg.value : 0\n        }(abi.encodePacked(callData, msg.sender, msg.value));\n\n        if (success) {\n            return result;\n        } else {\n            // `mload(result)` -> offset in memory where `result.length` is located\n            // `add(result, 32)` -> offset in memory where `result` data starts\n            // solhint-disable no-inline-assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let resultdata_size := mload(result)\n                revert(add(result, 32), resultdata_size)\n            }\n        }\n    }\n}\n"},"@lukso/lsp2-contracts/contracts/LSP2Utils.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// interfaces\nimport {\n    IERC725Y\n} from \"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\";\n\n/**\n * @title LSP2 Utility library.\n * @author Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\n * @dev LSP2Utils is a library of utility functions that can be used to encode data key of different key type\n * defined on the LSP2 standard.\n * Based on LSP2 ERC725Y JSON Schema standard.\n */\nlibrary LSP2Utils {\n    /**\n     * @dev Generates a data key of keyType Singleton by hashing the string `keyName`. As:\n     *\n     * ```\n     * keccak256(\"keyName\")\n     * ```\n     *\n     * @param keyName The string to hash to generate a Singleton data key.\n     *\n     * @return The generated `bytes32` data key of key type Singleton.\n     */\n    function generateSingletonKey(\n        string memory keyName\n    ) internal pure returns (bytes32) {\n        return keccak256(bytes(keyName));\n    }\n\n    /**\n     * @dev Generates a data key of keyType Array by hashing `arrayKeyName`. As:\n     *\n     * ```\n     * keccak256(\"arrayKeyName[]\")\n     * ```\n     *\n     * @param arrayKeyName The string that will be used to generate a data key of key type Array.\n     *\n     * @return The generated `bytes32` data key of key type Array.\n     *\n     * @custom:requirements\n     * - The `keyName` must include at the end of the string the square brackets `\"[]\"`.\n     */\n    function generateArrayKey(\n        string memory arrayKeyName\n    ) internal pure returns (bytes32) {\n        bytes memory dataKey = bytes(arrayKeyName);\n        require(dataKey.length >= 2, \"MUST be longer than 2 characters\");\n        require(\n            dataKey[dataKey.length - 2] == 0x5b && // \"[\" in utf8 encoded\n                dataKey[dataKey.length - 1] == 0x5d, // \"]\" in utf8\n            \"Missing empty square brackets '[]' at the end of the key name\"\n        );\n\n        return keccak256(dataKey);\n    }\n\n    /**\n     * @dev Generates an Array data key at a specific `index` by concatenating together the first 16 bytes of `arrayKey`\n     * with the 16 bytes of `index`. As:\n     *\n     * ```\n     * arrayKey[index]\n     * ```\n     *\n     * @param arrayKey The Array data key from which to generate the Array data key at a specific `index`.\n     * @param index The index number in the `arrayKey`.\n     *\n     * @return The generated `bytes32` data key of key type Array at a specific `index`.\n     */\n    function generateArrayElementKeyAtIndex(\n        bytes32 arrayKey,\n        uint128 index\n    ) internal pure returns (bytes32) {\n        bytes memory elementInArray = bytes.concat(\n            bytes16(arrayKey),\n            bytes16(index)\n        );\n        return bytes32(elementInArray);\n    }\n\n    /**\n     * @dev Generates a data key of key type Mapping that map `firstWord` to `lastWord`. This is done by hashing two strings words `firstWord` and `lastWord`. As:\n     *\n     * ```\n     * bytes10(firstWordHash):0000:bytes20(lastWordHash)\n     * ```\n     *\n     * @param firstWord The word to retrieve the first 10 bytes of its hash.\n     * @param lastWord The word to retrieve the first 10 bytes of its hash.\n     *\n     * @return The generated `bytes32` data key of key type Mapping that map `firstWord` to a specific `lastWord`.\n     */\n    function generateMappingKey(\n        string memory firstWord,\n        string memory lastWord\n    ) internal pure returns (bytes32) {\n        bytes32 firstWordHash = keccak256(bytes(firstWord));\n        bytes32 lastWordHash = keccak256(bytes(lastWord));\n\n        bytes memory temporaryBytes = bytes.concat(\n            bytes10(firstWordHash),\n            bytes2(0),\n            bytes20(lastWordHash)\n        );\n\n        return bytes32(temporaryBytes);\n    }\n\n    /**\n     * @dev Generates a data key of key type Mapping that map `firstWord` to an address `addr`.\n     * This is done by hashing the string word `firstWord` and concatenating its first 10 bytes with `addr`. As:\n     *\n     * ```\n     * bytes10(firstWordHash):0000:<address>\n     * ```\n     *\n     * @param firstWord The word to retrieve the first 10 bytes of its hash.\n     * @param addr An address to map `firstWord` to.\n     *\n     * @return The generated `bytes32` data key of key type Mapping that map `firstWord` to a specific address `addr`.\n     */\n    function generateMappingKey(\n        string memory firstWord,\n        address addr\n    ) internal pure returns (bytes32) {\n        bytes32 firstWordHash = keccak256(bytes(firstWord));\n\n        bytes memory temporaryBytes = bytes.concat(\n            bytes10(firstWordHash),\n            bytes2(0),\n            bytes20(addr)\n        );\n\n        return bytes32(temporaryBytes);\n    }\n\n    /**\n     * @dev Generate a data key of key type Mapping that map a 10 bytes `keyPrefix` to a `bytes20Value`. As:\n     *\n     * ```\n     * keyPrefix:bytes20Value\n     * ```\n     *\n     * @param keyPrefix The first part of the data key of key type Mapping.\n     * @param bytes20Value The second part of the data key of key type Mapping.\n     *\n     * @return The generated `bytes32` data key of key type Mapping that map a `keyPrefix` to a specific `bytes20Value`.\n     */\n    function generateMappingKey(\n        bytes10 keyPrefix,\n        bytes20 bytes20Value\n    ) internal pure returns (bytes32) {\n        bytes memory generatedKey = bytes.concat(\n            keyPrefix,\n            bytes2(0),\n            bytes20Value\n        );\n        return bytes32(generatedKey);\n    }\n\n    /**\n     * @dev Generate a data key of key type MappingWithGrouping by using two strings `firstWord`\n     * mapped to a `secondWord` mapped itself to a specific address `addr`. As:\n     *\n     * ```\n     * bytes6(keccak256(\"firstWord\")):bytes4(keccak256(\"secondWord\")):0000:<address>\n     * ```\n     *\n     * @param firstWord The word to retrieve the first 6 bytes of its hash.\n     * @param secondWord The word to retrieve the first 4 bytes of its hash.\n     * @param addr The address that makes the last part of the MappingWithGrouping.\n     *\n     * @return The generated `bytes32` data key of key type MappingWithGrouping that map a `firstWord` to a `secondWord` to a specific address `addr`.\n     */\n    function generateMappingWithGroupingKey(\n        string memory firstWord,\n        string memory secondWord,\n        address addr\n    ) internal pure returns (bytes32) {\n        bytes32 firstWordHash = keccak256(bytes(firstWord));\n        bytes32 secondWordHash = keccak256(bytes(secondWord));\n\n        bytes memory temporaryBytes = bytes.concat(\n            bytes6(firstWordHash),\n            bytes4(secondWordHash),\n            bytes2(0),\n            bytes20(addr)\n        );\n\n        return bytes32(temporaryBytes);\n    }\n\n    /**\n     * @dev Generate a data key of key type MappingWithGrouping that map a `keyPrefix` to an other `mapPrefix` to a specific `subMapKey`. As:\n     *\n     * ```\n     * keyPrefix:mapPrefix:0000:subMapKey\n     * ```\n     *\n     * @param keyPrefix The first part (6 bytes) of the data key of keyType MappingWithGrouping.\n     * @param mapPrefix The second part (4 bytes) of the data key of keyType MappingWithGrouping.\n     * @param subMapKey The last part (bytes20) of the data key of keyType MappingWithGrouping.\n     *\n     * @return The generated `bytes32` data key of key type MappingWithGrouping that map a `keyPrefix` to a `mapPrefix` to a specific `subMapKey`.\n     */\n    function generateMappingWithGroupingKey(\n        bytes6 keyPrefix,\n        bytes4 mapPrefix,\n        bytes20 subMapKey\n    ) internal pure returns (bytes32) {\n        bytes memory generatedKey = bytes.concat(\n            keyPrefix,\n            mapPrefix,\n            bytes2(0),\n            subMapKey\n        );\n        return bytes32(generatedKey);\n    }\n\n    /**\n     * @dev Generate a data key of key type MappingWithGrouping that map a 10 bytes `keyPrefix` to a specific `bytes20Value`. As:\n     *\n     * @param keyPrefix The first part of the data key of keyType MappingWithGrouping.\n     * @param bytes20Value The last of the data key of keyType MappingWithGrouping.\n     *\n     * @return The generated `bytes32` data key of key type MappingWithGrouping that map a `keyPrefix`\n     * (containing the first and second mapped word) to a specific `bytes20Value`.\n     */\n    function generateMappingWithGroupingKey(\n        bytes10 keyPrefix,\n        bytes20 bytes20Value\n    ) internal pure returns (bytes32) {\n        bytes memory generatedKey = bytes.concat(\n            keyPrefix,\n            bytes2(0),\n            bytes20Value\n        );\n        return bytes32(generatedKey);\n    }\n\n    /**\n     * @dev Generate a JSONURL value content.\n     * @param hashFunction The function used to hash the JSON file.\n     * @param json Bytes value of the JSON file.\n     * @param url The URL where the JSON file is hosted.\n     */\n    function generateJSONURLValue(\n        string memory hashFunction,\n        string memory json,\n        string memory url\n    ) internal pure returns (bytes memory) {\n        bytes32 hashFunctionDigest = keccak256(bytes(hashFunction));\n        bytes32 jsonDigest = keccak256(bytes(json));\n\n        return abi.encodePacked(bytes4(hashFunctionDigest), jsonDigest, url);\n    }\n\n    /**\n     * @dev Generate a ASSETURL value content.\n     *\n     * @param hashFunction The function used to hash the JSON file.\n     * @param assetBytes Bytes value of the JSON file.\n     * @param url The URL where the JSON file is hosted.\n     *\n     * @return The encoded value as an `ASSETURL`.\n     */\n    function generateASSETURLValue(\n        string memory hashFunction,\n        string memory assetBytes,\n        string memory url\n    ) internal pure returns (bytes memory) {\n        bytes32 hashFunctionDigest = keccak256(bytes(hashFunction));\n        bytes32 jsonDigest = keccak256(bytes(assetBytes));\n\n        return abi.encodePacked(bytes4(hashFunctionDigest), jsonDigest, url);\n    }\n\n    /**\n     * @dev Verify if `data` is a valid array of value encoded as a `CompactBytesArray` according to the LSP2 `CompactBytesArray` valueType specification.\n     *\n     * @param compactBytesArray The bytes value to verify.\n     *\n     * @return `true` if the `data` is correctly encoded CompactBytesArray, `false` otherwise.\n     */\n    function isCompactBytesArray(\n        bytes memory compactBytesArray\n    ) internal pure returns (bool) {\n        /**\n         * Pointer will always land on these values:\n         *\n         * ↓↓↓↓\n         * 0003 a00000\n         * 0005 fff83a0011\n         * 0020 aa0000000000000000000000000000000000000000000000000000000000cafe\n         * 0012 bb000000000000000000000000000000beef\n         * 0019 cc00000000000000000000000000000000000000000000deed\n         * ↑↑↑↑\n         *\n         * The pointer can only land on the length of the following bytes value.\n         */\n        uint256 pointer = 0;\n\n        /**\n         * Check each length byte and make sure that when you reach the last length byte.\n         * Make sure that the last length describes exactly the last bytes value and you do not get out of bounds.\n         */\n        while (pointer < compactBytesArray.length) {\n            if (pointer + 1 >= compactBytesArray.length) return false;\n            uint256 elementLength = uint16(\n                bytes2(\n                    abi.encodePacked(\n                        compactBytesArray[pointer],\n                        compactBytesArray[pointer + 1]\n                    )\n                )\n            );\n            pointer += elementLength + 2;\n        }\n        if (pointer == compactBytesArray.length) return true;\n        return false;\n    }\n\n    /**\n     * @dev Validates if the bytes `arrayLength` are exactly 16 bytes long, and are of the exact size of an LSP2 Array length value\n     *\n     * @param arrayLength Plain bytes that should be validated.\n     *\n     * @return `true` if the value is 16 bytes long, `false` otherwise.\n     */\n    function isValidLSP2ArrayLengthValue(\n        bytes memory arrayLength\n    ) internal pure returns (bool) {\n        if (arrayLength.length == 16) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @dev Generates Data Key/Value pairs for removing the last element from an LSP2 Array and a mapping Data Key.\n     *\n     * @param arrayKey The Data Key of Key Type Array.\n     * @param newArrayLength The new Array Length for the `arrayKey`.\n     * @param removedElementIndexKey The Data Key of Key Type Array Index for the removed element.\n     * @param removedElementMapKey The Data Key of a mapping to be removed.\n     */\n    function removeLastElementFromArrayAndMap(\n        bytes32 arrayKey,\n        uint128 newArrayLength,\n        bytes32 removedElementIndexKey,\n        bytes32 removedElementMapKey\n    )\n        internal\n        pure\n        returns (bytes32[] memory dataKeys, bytes[] memory dataValues)\n    {\n        dataKeys = new bytes32[](3);\n        dataValues = new bytes[](3);\n\n        // store the number of received assets decremented by 1\n        dataKeys[0] = arrayKey;\n        dataValues[0] = abi.encodePacked(newArrayLength);\n\n        // remove the data value for the map key of the element\n        dataKeys[1] = removedElementMapKey;\n        dataValues[1] = \"\";\n\n        // remove the data value for the map key of the element\n        dataKeys[2] = removedElementIndexKey;\n        dataValues[2] = \"\";\n    }\n\n    /**\n     * @dev Generates Data Key/Value pairs for removing an element from an LSP2 Array and a mapping Data Key.\n     *\n     * @custom:info The function assumes that the Data Value stored under the mapping Data Key is of length 20 where the last 16 bytes are the index of the element in the array.\n     *\n     * @param erc725YContract The ERC725Y contract.\n     * @param arrayKey The Data Key of Key Type Array.\n     * @param newArrayLength The new Array Length for the `arrayKey`.\n     * @param removedElementIndexKey The Data Key of Key Type Array Index for the removed element.\n     * @param removedElementIndex the index of the removed element.\n     * @param removedElementMapKey The Data Key of a mapping to be removed.\n     */\n    function removeElementFromArrayAndMap(\n        IERC725Y erc725YContract,\n        bytes32 arrayKey,\n        uint128 newArrayLength,\n        bytes32 removedElementIndexKey,\n        uint128 removedElementIndex,\n        bytes32 removedElementMapKey\n    )\n        internal\n        view\n        returns (bytes32[] memory dataKeys, bytes[] memory dataValues)\n    {\n        dataKeys = new bytes32[](5);\n        dataValues = new bytes[](5);\n\n        // store the number of received assets decremented by 1\n        dataKeys[0] = arrayKey;\n        dataValues[0] = abi.encodePacked(newArrayLength);\n\n        // remove the data value for the map key of the element\n        dataKeys[1] = removedElementMapKey;\n        dataValues[1] = \"\";\n\n        // Generate the key of the last element in the array\n        bytes32 lastElementIndexKey = LSP2Utils.generateArrayElementKeyAtIndex(\n            arrayKey,\n            newArrayLength\n        );\n\n        // Get the data value from the key of the last element in the array\n        bytes20 lastElementIndexValue = bytes20(\n            erc725YContract.getData(lastElementIndexKey)\n        );\n\n        // Set data value of the last element instead of the element from the array that will be removed\n        dataKeys[2] = removedElementIndexKey;\n        dataValues[2] = bytes.concat(lastElementIndexValue);\n\n        // Remove the data value for the swapped array element\n        dataKeys[3] = lastElementIndexKey;\n        dataValues[3] = \"\";\n\n        // Generate mapping key for the swapped array element\n        bytes32 lastElementMapKey = LSP2Utils.generateMappingKey(\n            bytes10(removedElementMapKey),\n            lastElementIndexValue\n        );\n\n        // Generate the mapping value for the swapped array element\n        bytes memory lastElementMapValue = abi.encodePacked(\n            bytes4(erc725YContract.getData(lastElementMapKey)),\n            removedElementIndex\n        );\n\n        // Update the map value of the swapped array element to the new index\n        dataKeys[4] = lastElementMapKey;\n        dataValues[4] = lastElementMapValue;\n    }\n}\n"},"@lukso/lsp4-contracts/contracts/LSP4Constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// Token types\nuint256 constant _LSP4_TOKEN_TYPE_TOKEN = 0;\nuint256 constant _LSP4_TOKEN_TYPE_NFT = 1;\nuint256 constant _LSP4_TOKEN_TYPE_COLLECTION = 2;\n\n// --- ERC725Y entries\n\n// bytes10(keccak256('SupportedStandards')) + bytes2(0) + bytes20(keccak256('LSP4DigitalAsset'))\nbytes32 constant _LSP4_SUPPORTED_STANDARDS_KEY = 0xeafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c;\n\n// bytes4(keccak256('LSP4DigitalAsset'))\nbytes constant _LSP4_SUPPORTED_STANDARDS_VALUE = hex\"a4d96624\";\n\n// keccak256('LSP4TokenName')\nbytes32 constant _LSP4_TOKEN_NAME_KEY = 0xdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af1;\n\n// keccak256('LSP4TokenSymbol')\nbytes32 constant _LSP4_TOKEN_SYMBOL_KEY = 0x2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db932756;\n\n// keccak256('LSP4TokenType')\nbytes32 constant _LSP4_TOKEN_TYPE_KEY = 0xe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb3;\n\n// keccak256('LSP4Creators[]')\nbytes32 constant _LSP4_CREATORS_ARRAY_KEY = 0x114bd03b3a46d48759680d81ebb2b414fda7d030a7105a851867accf1c2352e7;\n\n// bytes10(keccak256('LSP4CreatorsMap'))\nbytes10 constant _LSP4_CREATORS_MAP_KEY_PREFIX = 0x6de85eaf5d982b4e5da0;\n\n// keccak256('LSP4Metadata')\nbytes32 constant _LSP4_METADATA_KEY = 0x9afb95cacc9f95858ec44aa8c3b685511002e30ae54415823f406128b85b238e;\n"},"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// modules\nimport {ERC725Y} from \"@erc725/smart-contracts-v8/contracts/ERC725Y.sol\";\n\n// constants\nimport {\n    _LSP4_SUPPORTED_STANDARDS_KEY,\n    _LSP4_SUPPORTED_STANDARDS_VALUE,\n    _LSP4_TOKEN_NAME_KEY,\n    _LSP4_TOKEN_SYMBOL_KEY,\n    _LSP4_TOKEN_TYPE_KEY\n} from \"./LSP4Constants.sol\";\n\n// errors\nimport {\n    LSP4TokenNameNotEditable,\n    LSP4TokenSymbolNotEditable,\n    LSP4TokenTypeNotEditable\n} from \"./LSP4Errors.sol\";\n\n/**\n * @title Implementation of a LSP4DigitalAssetMetadata contract that stores the **Token-Metadata** (`LSP4TokenName` and `LSP4TokenSymbol`) in its ERC725Y data store.\n * @author Matthew Stevens\n * @dev Standard Implementation of the LSP4 standard.\n */\nabstract contract LSP4DigitalAssetMetadata is ERC725Y {\n    /**\n     * @notice Deploying a digital asset `name_` with the `symbol_` symbol.\n     *\n     * @param name_ The name of the token.\n     * @param symbol_ The symbol of the token.\n     * @param initialOwner_ The owner of the token contract.\n     * @param lsp4TokenType_ The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection).\n     */\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        address initialOwner_,\n        uint256 lsp4TokenType_\n    ) ERC725Y(initialOwner_) {\n        // set data key SupportedStandards:LSP4DigitalAsset\n        ERC725Y._setData(\n            _LSP4_SUPPORTED_STANDARDS_KEY,\n            _LSP4_SUPPORTED_STANDARDS_VALUE\n        );\n\n        ERC725Y._setData(_LSP4_TOKEN_NAME_KEY, bytes(name_));\n        ERC725Y._setData(_LSP4_TOKEN_SYMBOL_KEY, bytes(symbol_));\n        ERC725Y._setData(_LSP4_TOKEN_TYPE_KEY, abi.encode(lsp4TokenType_));\n    }\n\n    /**\n     * @dev The ERC725Y data keys `LSP4TokenName` and `LSP4TokenSymbol` cannot be changed\n     * via this function once the digital asset contract has been deployed.\n     */\n    function _setData(\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) internal virtual override {\n        if (dataKey == _LSP4_TOKEN_NAME_KEY) {\n            revert LSP4TokenNameNotEditable();\n        } else if (dataKey == _LSP4_TOKEN_SYMBOL_KEY) {\n            revert LSP4TokenSymbolNotEditable();\n        } else if (dataKey == _LSP4_TOKEN_TYPE_KEY) {\n            revert LSP4TokenTypeNotEditable();\n        } else {\n            _store[dataKey] = dataValue;\n\n            emit DataChanged(dataKey, dataValue);\n        }\n    }\n}\n"},"@lukso/lsp4-contracts/contracts/LSP4Errors.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @dev Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized.\n * The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract.\n * It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\n */\nerror LSP4TokenNameNotEditable();\n\n/**\n * @dev Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized.\n * The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract.\n * It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\n */\nerror LSP4TokenSymbolNotEditable();\n\n/**\n * @dev Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized.\n * The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract.\n * It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized.\n */\nerror LSP4TokenTypeNotEditable();\n"},"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @title Interface of the LSP8 - Identifiable Digital Asset standard, a non-fungible digital asset.\n */\ninterface ILSP8IdentifiableDigitalAsset {\n    // --- Events\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from the `from` to the `to` address.\n     * @param operator The address of operator that sent the `tokenId`\n     * @param from The previous owner of the `tokenId`\n     * @param to The new owner of `tokenId`\n     * @param tokenId The tokenId that was transferred\n     * @param force If the token transfer enforces the `to` recipient address to be a contract that implements the LSP1 standard or not.\n     * @param data Any additional data the caller included by the caller during the transfer, and sent in the hooks to the `from` and `to` addresses.\n     */\n    event Transfer(\n        address operator,\n        address indexed from,\n        address indexed to,\n        bytes32 indexed tokenId,\n        bool force,\n        bytes data\n    );\n\n    /**\n     * @dev Emitted when `tokenOwner` enables `operator` to transfer or burn the `tokenId`.\n     * @param operator The address authorized as an operator.\n     * @param tokenOwner The owner of the `tokenId`.\n     * @param tokenId The tokenId `operator` address has access on behalf of `tokenOwner`.\n     * @param operatorNotificationData The data to notify the operator about via LSP1.\n     */\n    event OperatorAuthorizationChanged(\n        address indexed operator,\n        address indexed tokenOwner,\n        bytes32 indexed tokenId,\n        bytes operatorNotificationData\n    );\n\n    /**\n     * @dev Emitted when `tokenOwner` disables `operator` to transfer or burn `tokenId` on its behalf.\n     * @param operator The address revoked from the operator array ({getOperatorsOf}).\n     * @param tokenOwner The owner of the `tokenId`.\n     * @param tokenId The tokenId `operator` is revoked from operating on.\n     * @param notified Bool indicating whether the operator has been notified or not\n     * @param operatorNotificationData The data to notify the operator about via LSP1.\n     */\n    event OperatorRevoked(\n        address indexed operator,\n        address indexed tokenOwner,\n        bytes32 indexed tokenId,\n        bool notified,\n        bytes operatorNotificationData\n    );\n\n    /**\n     * @dev Emitted when setting data for `tokenId`.\n     * @param tokenId The tokenId which data is set for.\n     * @param dataKey The data key for which a bytes value is set.\n     * @param dataValue The value to set for the given data key.\n     */\n    event TokenIdDataChanged(\n        bytes32 indexed tokenId,\n        bytes32 indexed dataKey,\n        bytes dataValue\n    );\n\n    // --- Token queries\n\n    /**\n     * @dev Returns the number of existing tokens that have been minted in this contract.\n     * @return The number of existing tokens.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // --- Token owner queries\n\n    /**\n     * @dev Get the number of token IDs owned by `tokenOwner`.\n\n     * @param tokenOwner The address to query     *\n     * @return The total number of token IDs that `tokenOwner` owns.\n     */\n    function balanceOf(address tokenOwner) external view returns (uint256);\n\n    /**\n     * @dev Returns the address that owns a given `tokenId`.\n     *\n     * @param tokenId The token ID to query the owner for.\n     * @return The owner address of the given `tokenId`.\n     *\n     * @custom:requirements `tokenId` must exist.\n     * @custom:info if the `tokenId` is not owned by any address, the returned address will be `address(0)`\n     */\n    function tokenOwnerOf(bytes32 tokenId) external view returns (address);\n\n    /**\n     * @dev Returns the list of token IDs that the `tokenOwner` address owns.\n     * @param tokenOwner The address that we want to get the list of token IDs for.\n     * @return An array of `bytes32[] tokenIds` owned by `tokenOwner`.\n     */\n    function tokenIdsOf(\n        address tokenOwner\n    ) external view returns (bytes32[] memory);\n\n    // --- TokenId Metadata functionality\n\n    /**\n     * @notice Retrieves data for a specific `tokenId` and `dataKey`.\n     * @param tokenId The unique identifier for a token.\n     * @param dataKey The key for the data to retrieve.\n     * @return dataValues The data value associated with the given `tokenId` and `dataKey`.\n     */\n    function getDataForTokenId(\n        bytes32 tokenId,\n        bytes32 dataKey\n    ) external returns (bytes memory dataValues);\n\n    /**\n     * @notice Retrieves data in batch for multiple `tokenId` and `dataKey` pairs.\n     * @param tokenIds An array of token IDs.\n     * @param dataKeys An array of data keys corresponding to the token IDs.\n     * @return dataValues An array of data values for each pair of `tokenId` and `dataKey`.\n     */\n    function getDataBatchForTokenIds(\n        bytes32[] memory tokenIds,\n        bytes32[] memory dataKeys\n    ) external returns (bytes[] memory dataValues);\n\n    /**\n     * @notice Sets data for a specific `tokenId` and `dataKey`.\n     * @param tokenId The unique identifier for a token.\n     * @param dataKey The key for the data to set.\n     * @param dataValue The value to set for the given data key.\n     * @custom:events {TokenIdDataChanged} event.\n     */\n    function setDataForTokenId(\n        bytes32 tokenId,\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) external;\n\n    /**\n     * @notice Sets data in batch for multiple `tokenId` and `dataKey` pairs.\n     * @param tokenIds An array of token IDs.\n     * @param dataKeys An array of data keys corresponding to the token IDs.\n     * @param dataValues An array of values to set for the given data keys.\n     * @custom:events {TokenIdDataChanged} event for each pair.\n     */\n    function setDataBatchForTokenIds(\n        bytes32[] memory tokenIds,\n        bytes32[] memory dataKeys,\n        bytes[] memory dataValues\n    ) external;\n\n    // --- Operator functionality\n\n    /**\n     * @dev Allow an `operator` address to transfer or burn a specific `tokenId` on behalf of its token owner. See {isOperatorFor}.\n     * Notify the operator based on the LSP1-UniversalReceiver standard\n     *\n     * @param operator The address to authorize as an operator.\n     * @param tokenId The token ID operator has access to.\n     * @param operatorNotificationData The data to notify the operator about via LSP1.\n     *\n     * @custom:requirements\n     * - `tokenId` must exist.\n     * - caller MUST be the {tokenOwnerOf} `tokenId`.\n     * - the owner of a `tokenId` cannot grant itself as an `operator` (`operator` cannot be the calling address).\n     * - `operator` cannot be the zero address.\n     *\n     * @custom:events {OperatorAuthorizationChanged} event.\n     */\n    function authorizeOperator(\n        address operator,\n        bytes32 tokenId,\n        bytes memory operatorNotificationData\n    ) external;\n\n    /**\n     * @dev Remove access of `operator` for a given `tokenId`, disallowing it to transfer `tokenId` on behalf of its owner.\n     * See also {isOperatorFor}.\n     *\n     * @param operator The address to revoke as an operator.\n     * @param tokenId The tokenId `operator` is revoked from operating on.\n     * @param notify Boolean indicating whether to notify the operator or not\n     * @param operatorNotificationData The data to notify the operator about via LSP1.\n     *\n     * @custom:requirements\n     * - `tokenId` must exist.\n     * - caller must be the {tokenOwnerOf} `tokenId`.\n     * - the owner of a `tokenId` cannot grant revoke itself as an `operator` (`operator` cannot be the calling address).\n     * - `operator` cannot be the zero address.\n     *\n     * @custom:events {OperatorRevoked} event with address of the operator being revoked for the caller (token owner)..\n     */\n    function revokeOperator(\n        address operator,\n        bytes32 tokenId,\n        bool notify,\n        bytes memory operatorNotificationData\n    ) external;\n\n    /**\n     * @dev Returns whether `operator` address is an operator for a given `tokenId`.\n     *\n     * @param operator The address to query operator status for.\n     * @param tokenId The token ID to check if `operator` is allowed to operate on.\n     *\n     * @return `true` if `operator` is an operator for `tokenId`, `false` otherwise.\n     *\n     * @custom:requirements\n     * - `tokenId` must exist.\n     * - caller must be the current {tokenOwnerOf} `tokenId`.\n     *\n     * @custom:info The tokenOwner is its own operator.\n     */\n    function isOperatorFor(\n        address operator,\n        bytes32 tokenId\n    ) external view returns (bool);\n\n    /**\n     * @dev Returns all `operator` addresses that are allowed to transfer or burn a specific `tokenId` on behalf of its owner.\n     *\n     * @param tokenId The token ID to get the operators for.\n     * @return An array of operators allowed to transfer or burn a specific `tokenId`.\n     *\n     * Requirements\n     * - `tokenId` must exist.\n     */\n    function getOperatorsOf(\n        bytes32 tokenId\n    ) external view returns (address[] memory);\n\n    // --- Transfer functionality\n\n    /**\n     * @dev Transfer a given `tokenId` token from the `from` address to the `to` address.\n     *\n     * If operators are set for a specific `tokenId`, all the operators are revoked after the tokenId have been transferred.\n     *\n     * The `force` parameter MUST be set to `true` when transferring tokens to Externally Owned Accounts (EOAs)\n     * or contracts that do not implement the LSP1 standard.\n     *\n     * @param from The address that owns the given `tokenId`.\n     * @param to The address that will receive the `tokenId`.\n     * @param tokenId The token ID to transfer.\n     * @param force When set to `true`, the `to` address CAN be any address.\n     * When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\n     * @param data Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\n     *\n     * @custom:requirements\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` and `to` cannot be the same address (`from` cannot send the `tokenId` to itself).\n     * - `from` must own the given `tokenId`.\n     * - If the caller is not `from`, it must be an operator for the `tokenId`.\n     *\n     * @custom:events\n     * - {Transfer} event when the `tokenId` is successfully transferred.\n     *\n     * @custom:hint The `force` parameter **MUST be set to `true`** to transfer tokens to Externally Owned Accounts (EOAs)\n     * or contracts that do not implement the LSP1 Universal Receiver Standard. Otherwise the function will revert making the transfer fail.\n     *\n     * @custom:info if the `to` address is a contract that implements LSP1, it will always be notified via its `universalReceiver(...)` function, regardless if `force` is set to `true` or `false`.\n     *\n     * @custom:warning Be aware that when either the sender or the recipient can have logic that revert in their `universalReceiver(...)` function when being notified.\n     * This even if the `force` was set to `true`.\n     */\n    function transfer(\n        address from,\n        address to,\n        bytes32 tokenId,\n        bool force,\n        bytes memory data\n    ) external;\n\n    /**\n     * @dev Transfers multiple tokens at once based on the arrays of `from`, `to` and `tokenId`.\n     * If any transfer fails, the whole call will revert.\n     *\n     * @param from An array of sending addresses.\n     * @param to An array of recipient addresses.\n     * @param tokenId An array of token IDs to transfer.\n     * @param force When set to `true`, `to` may be any address.\n     * When set to `false`, `to` must be a contract that supports the LSP1 standard and not revert.\n     * @param data Any additional data the caller wants included in the emitted event, and sent in the hooks to the `from` and `to` addresses.\n     *\n     *\n     * @custom:requirements\n     * - The arrays of `from`, `to` and `tokenId` must have the same length.\n     * - no values in the `from` array can be the zero address.\n     * - no values in the `to` array can be the zero address.\n     * - `from` and `to` cannot be the same address at the same index on each arrays.\n     * - each `tokenId` must be owned by `from`.\n     * - If the caller is not `from`, it must be an operator of each `tokenId`.\n     *\n     * @custom:events\n     * - {Transfer} events on each successful token transfer.\n     */\n    function transferBatch(\n        address[] memory from,\n        address[] memory to,\n        bytes32[] memory tokenId,\n        bool[] memory force,\n        bytes[] memory data\n    ) external;\n\n    /**\n     * @notice Executing the following batch of abi-encoded function calls on the contract: `data`.\n     *\n     * @dev Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\n     * @param data An array of ABI encoded function calls to be called on the contract.\n     * @return results An array of abi-encoded data returned by the functions executed.\n     */\n    function batchCalls(\n        bytes[] calldata data\n    ) external returns (bytes[] memory results);\n}\n"},"@lukso/lsp8-contracts/contracts/LSP8Constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// --- ERC165 interface ids\nbytes4 constant _INTERFACEID_LSP8 = 0x3a271706;\n\nbytes4 constant _INTERFACEID_LSP8_V0_12_0 = 0x30dc5278;\n\nbytes4 constant _INTERFACEID_LSP8_V0_14_0 = 0xecad9f75;\n\n// --- ERC725Y Data Keys\n\n// keccak256('LSP8TokenIdFormat')\nbytes32 constant _LSP8_TOKENID_FORMAT_KEY = 0xf675e9361af1c1664c1868cfa3eb97672d6b1a513aa5b81dec34c9ee330e818d;\n\n// keccak256('LSP8TokenMetadataBaseURI')\nbytes32 constant _LSP8_TOKEN_METADATA_BASE_URI = 0x1a7628600c3bac7101f53697f48df381ddc36b9015e7d7c9c5633d1252aa2843;\n\n// keccak256('LSP8ReferenceContract')\nbytes32 constant _LSP8_REFERENCE_CONTRACT = 0x708e7b881795f2e6b6c2752108c177ec89248458de3bf69d0d43480b3e5034e6;\n\n// --- Token Hooks\n\n// keccak256('LSP8Tokens_SenderNotification')\nbytes32 constant _TYPEID_LSP8_TOKENSSENDER = 0xb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab00;\n\n// keccak256('LSP8Tokens_RecipientNotification')\nbytes32 constant _TYPEID_LSP8_TOKENSRECIPIENT = 0x0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d;\n\n// keccak256('LSP8Tokens_OperatorNotification')\nbytes32 constant _TYPEID_LSP8_TOKENOPERATOR = 0x8a1c15a8799f71b547e08e2bcb2e85257e81b0a07eee2ce6712549eef1f00970;\n\n// --- Token IDs Format\n\nuint256 constant _LSP8_TOKENID_FORMAT_NUMBER = 0;\nuint256 constant _LSP8_TOKENID_FORMAT_STRING = 1;\nuint256 constant _LSP8_TOKENID_FORMAT_ADDRESS = 2;\nuint256 constant _LSP8_TOKENID_FORMAT_UNIQUE_ID = 3;\nuint256 constant _LSP8_TOKENID_FORMAT_HASH = 4;\n\nuint256 constant _LSP8_TOKENID_FORMAT_MIXED_DEFAULT_NUMBER = 100;\nuint256 constant _LSP8_TOKENID_FORMAT_MIXED_DEFAULT_STRING = 101;\nuint256 constant _LSP8_TOKENID_FORMAT_MIXED_DEFAULT_ADDRESS = 102;\nuint256 constant _LSP8_TOKENID_FORMAT_MIXED_DEFAULT_UNIQUE_ID = 103;\nuint256 constant _LSP8_TOKENID_FORMAT_MIXED_DEFAULT_HASH = 104;\n"},"@lukso/lsp8-contracts/contracts/LSP8Errors.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// --- Errors\n\n/**\n * @dev Reverts when `tokenId` has not been minted.\n */\nerror LSP8NonExistentTokenId(bytes32 tokenId);\n\n/**\n * @dev Reverts when `caller` is not the `tokenOwner` of the `tokenId`.\n */\nerror LSP8NotTokenOwner(address tokenOwner, bytes32 tokenId, address caller);\n\n/**\n * @dev Reverts when `caller` is not an allowed operator for `tokenId`.\n */\nerror LSP8NotTokenOperator(bytes32 tokenId, address caller);\n\n/**\n * @dev Reverts when `operator` is already authorized for the `tokenId`.\n */\nerror LSP8OperatorAlreadyAuthorized(address operator, bytes32 tokenId);\n\n/**\n * @dev Reverts when trying to set the zero address as an operator.\n */\nerror LSP8CannotUseAddressZeroAsOperator();\n\n/**\n * @dev Reverts when trying to send token to the zero address.\n */\nerror LSP8CannotSendToAddressZero();\n\n/**\n * @dev Reverts when `operator` is not an operator for the `tokenId`.\n */\nerror LSP8NonExistingOperator(address operator, bytes32 tokenId);\n\n/**\n * @dev Reverts when `tokenId` has already been minted.\n */\nerror LSP8TokenIdAlreadyMinted(bytes32 tokenId);\n\n/**\n * @dev Reverts when the parameters used for `transferBatch` have different lengths.\n */\nerror LSP8InvalidTransferBatch();\n\n/**\n * @dev Reverts if the `tokenReceiver` does not implement LSP1\n * when minting or transferring tokens with `bool force` set as `false`.\n */\nerror LSP8NotifyTokenReceiverContractMissingLSP1Interface(\n    address tokenReceiver\n);\n\n/**\n * @dev Reverts if the `tokenReceiver` is an EOA\n * when minting or transferring tokens with `bool force` set as `false`.\n */\nerror LSP8NotifyTokenReceiverIsEOA(address tokenReceiver);\n\n/**\n * @dev Reverts when trying to authorize or revoke the token's owner as an operator.\n */\nerror LSP8TokenOwnerCannotBeOperator();\n\n/**\n * @dev Error occurs when sending native tokens to the LSP8 contract without sending any data.\n *\n * E.g. Sending value without passing a bytes4 function selector to call a LSP17 Extension.\n *\n * @notice LSP8 contract cannot receive native tokens.\n */\nerror LSP8TokenContractCannotHoldValue();\n\n/**\n * @dev Reverts when trying to edit the data key `LSP8TokenIdFormat` after the identifiable digital asset contract has been deployed.\n * The `LSP8TokenIdFormat` data key is located inside the ERC725Y Data key-value store of the identifiable digital asset contract.\n * It can be set only once inside the constructor/initializer when the identifiable digital asset contract is being deployed.\n */\nerror LSP8TokenIdFormatNotEditable();\n\n/**\n * @dev Reverts when the length of the token IDs data arrays is not equal\n */\nerror LSP8TokenIdsDataLengthMismatch();\n\n/**\n * @dev Reverts when empty arrays is passed to the function\n */\nerror LSP8TokenIdsDataEmptyArray();\n\n/**\n * @dev Reverts when a batch call failed.\n * @notice Batch call failed.\n */\nerror LSP8BatchCallFailed(uint256 callIndex);\n\n/**\n * @dev Reverts when the token owner changed inside the {_beforeTokenTransfer} hook.\n */\nerror LSP8TokenOwnerChanged(\n    bytes32 tokenId,\n    address oldOwner,\n    address newOwner\n);\n\n/**\n * @dev Reverts when the call to revoke operator is not authorized.\n */\nerror LSP8RevokeOperatorNotAuthorized(\n    address caller,\n    address tokenOwner,\n    bytes32 tokenId\n);\n"},"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.12;\n\n// interfaces\nimport {\n    ILSP1UniversalReceiver as ILSP1\n} from \"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol\";\nimport {\n    ILSP8IdentifiableDigitalAsset\n} from \"./ILSP8IdentifiableDigitalAsset.sol\";\n\n// modules\nimport {\n    LSP4DigitalAssetMetadata,\n    ERC725Y\n} from \"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol\";\n\nimport {\n    LSP17Extendable\n} from \"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol\";\n\n// libraries\nimport {\n    EnumerableSet\n} from \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\nimport {\n    ERC165Checker\n} from \"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\";\nimport {LSP1Utils} from \"@lukso/lsp1-contracts/contracts/LSP1Utils.sol\";\nimport {LSP2Utils} from \"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\";\n\n// constants\nimport {\n    _INTERFACEID_LSP1\n} from \"@lukso/lsp1-contracts/contracts/LSP1Constants.sol\";\nimport {\n    _LSP17_EXTENSION_PREFIX\n} from \"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol\";\nimport {\n    _INTERFACEID_LSP8,\n    _LSP8_TOKENID_FORMAT_KEY,\n    _TYPEID_LSP8_TOKENOPERATOR,\n    _TYPEID_LSP8_TOKENSSENDER,\n    _TYPEID_LSP8_TOKENSRECIPIENT\n} from \"./LSP8Constants.sol\";\n\n// errors\nimport {\n    NoExtensionFoundForFunctionSelector,\n    InvalidFunctionSelector,\n    InvalidExtensionAddress\n} from \"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol\";\nimport {\n    LSP8TokenContractCannotHoldValue,\n    LSP8TokenIdFormatNotEditable,\n    LSP8NonExistentTokenId,\n    LSP8NotTokenOwner,\n    LSP8CannotUseAddressZeroAsOperator,\n    LSP8TokenOwnerCannotBeOperator,\n    LSP8OperatorAlreadyAuthorized,\n    LSP8NotTokenOperator,\n    LSP8InvalidTransferBatch,\n    LSP8NonExistingOperator,\n    LSP8CannotSendToAddressZero,\n    LSP8TokenIdAlreadyMinted,\n    LSP8NotifyTokenReceiverContractMissingLSP1Interface,\n    LSP8NotifyTokenReceiverIsEOA,\n    LSP8TokenIdsDataLengthMismatch,\n    LSP8TokenIdsDataEmptyArray,\n    LSP8BatchCallFailed,\n    LSP8TokenOwnerChanged,\n    LSP8RevokeOperatorNotAuthorized\n} from \"./LSP8Errors.sol\";\n\n/**\n * @title Implementation of a LSP8 Identifiable Digital Asset, a contract that represents a non-fungible token.\n * @author Matthew Stevens\n *\n * @dev Standard implementation contract of the LSP8 standard.\n *\n * Minting and transferring are done by providing a unique `tokenId`.\n * This implementation is agnostic to the way tokens are created.\n * A supply mechanism has to be added in a derived contract using {_mint}\n * For a generic mechanism, see {LSP7Mintable}.\n */\nabstract contract LSP8IdentifiableDigitalAsset is\n    ILSP8IdentifiableDigitalAsset,\n    LSP4DigitalAssetMetadata,\n    LSP17Extendable\n{\n    using EnumerableSet for EnumerableSet.AddressSet;\n    using EnumerableSet for EnumerableSet.Bytes32Set;\n\n    // --- Storage\n\n    uint256 internal _existingTokens;\n\n    // Mapping from `tokenId` to `tokenOwner`\n    mapping(bytes32 => address) internal _tokenOwners;\n\n    // Mapping `tokenOwner` to owned tokenIds\n    mapping(address => EnumerableSet.Bytes32Set) internal _ownedTokens;\n\n    // Mapping a `tokenId` to its authorized operator addresses.\n    mapping(bytes32 => EnumerableSet.AddressSet) internal _operators;\n\n    /**\n     * @notice Deploying a LSP8IdentifiableDigitalAsset with name `name_`, symbol `symbol_`, owned by address `newOwner_`\n     * with tokenId format `lsp8TokenIdFormat_`.\n     *\n     * @dev Deploy a `LSP8IdentifiableDigitalAsset` contract and set the tokenId format inside the ERC725Y storage of the contract.\n     * This will also set the token `name_` and `symbol_` under the ERC725Y data keys `LSP4TokenName` and `LSP4TokenSymbol`.\n     *\n     * @param name_ The name of the token\n     * @param symbol_ The symbol of the token\n     * @param newOwner_ The owner of the the token-Metadata\n     * @param lsp4TokenType_ The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection).\n     * @param lsp8TokenIdFormat_ The format of tokenIds (= NFTs) that this contract will create.\n     *\n     * @custom:warning Make sure the tokenId format provided on deployment is correct, as it can only be set once\n     * and cannot be changed in the ERC725Y storage after the contract has been deployed.\n     */\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        address newOwner_,\n        uint256 lsp4TokenType_,\n        uint256 lsp8TokenIdFormat_\n    ) LSP4DigitalAssetMetadata(name_, symbol_, newOwner_, lsp4TokenType_) {\n        LSP4DigitalAssetMetadata._setData(\n            _LSP8_TOKENID_FORMAT_KEY,\n            abi.encode(lsp8TokenIdFormat_)\n        );\n    }\n\n    // fallback functions\n\n    /**\n     * @notice The `fallback` function was called with the following amount of native tokens: `msg.value`; and the following calldata: `callData`.\n     *\n     * @dev Achieves the goal of [LSP-17-ContractExtension] standard by extending the contract to handle calls of functions that do not exist natively,\n     * forwarding the function call to the extension address mapped to the function being called.\n     *\n     * This function is executed when:\n     *    - Sending data of length less than 4 bytes to the contract.\n     *    - The first 4 bytes of the calldata do not match any publicly callable functions from the contract ABI.\n     *    - Receiving native tokens\n     *\n     * 1. If the data is equal or longer than 4 bytes, the [ERC-725Y] storage is queried with the following data key: [_LSP17_EXTENSION_PREFIX] + `bytes4(msg.sig)` (Check [LSP-2-ERC725YJSONSchema] for encoding the data key)\n     *\n     *   - If there is no address stored under the following data key, revert with {NoExtensionFoundForFunctionSelector(bytes4)}. The data key relative to `bytes4(0)` is an exception, where no reverts occurs if there is no extension address stored under. This exception is made to allow users to send random data (graffiti) to the account and to be able to react on it.\n     *\n     *   - If there is an address, forward the `msg.data` to the extension using the CALL opcode, appending 52 bytes (20 bytes of `msg.sender` and 32 bytes of `msg.value`). Return what the calls returns, or revert if the call failed.\n     *\n     * 2. If the data sent to this function is of length less than 4 bytes (not a function selector), revert.\n     */\n    // solhint-disable-next-line no-complex-fallback\n    fallback(\n        bytes calldata callData\n    ) external payable virtual returns (bytes memory) {\n        if (msg.data.length < 4) {\n            revert InvalidFunctionSelector(callData);\n        }\n        return _fallbackLSP17Extendable(callData);\n    }\n\n    /**\n     * @dev Reverts whenever someone tries to send native tokens to a LSP8 contract.\n     * @notice LSP8 contract cannot receive native tokens.\n     */\n    // solhint-disable-next-line no-complex-fallback\n    receive() external payable virtual {\n        // revert on empty calls with no value\n        if (msg.value == 0) {\n            revert InvalidFunctionSelector(hex\"00000000\");\n        }\n\n        revert LSP8TokenContractCannotHoldValue();\n    }\n\n    /**\n     * @dev Forwards the call with the received value to an extension mapped to a function selector.\n     *\n     * Calls {_getExtensionAndForwardValue} to get the address of the extension mapped to the function selector being\n     * called on the account. If there is no extension, the address(0) will be returned.\n     * We will always forward the value to the extension, as the LSP8 contract is not supposed to hold any native tokens.\n     *\n     * Reverts if there is no extension for the function being called.\n     *\n     * If there is an extension for the function selector being called, it calls the extension with the\n     * CALL opcode, passing the {msg.data} appended with the 20 bytes of the {msg.sender} and\n     * 32 bytes of the {msg.value}\n     *\n     * @custom:info The LSP8 Token contract should not hold any native tokens. Any native tokens received by the contract\n     * will be forwarded to the extension address mapped to the selector from `msg.sig`.\n     */\n    function _fallbackLSP17Extendable(\n        bytes calldata callData\n    ) internal virtual override returns (bytes memory) {\n        // If there is a function selector\n        (address extension, ) = _getExtensionAndForwardValue(msg.sig);\n\n        // if no extension was found, revert\n        if (extension == address(0))\n            revert NoExtensionFoundForFunctionSelector(msg.sig);\n\n        (bool success, bytes memory result) = extension.call{value: msg.value}(\n            abi.encodePacked(callData, msg.sender, msg.value)\n        );\n\n        if (success) {\n            return result;\n        } else {\n            // `mload(result)` -> offset in memory where `result.length` is located\n            // `add(result, 32)` -> offset in memory where `result` data starts\n            // solhint-disable no-inline-assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let resultdata_size := mload(result)\n                revert(add(result, 32), resultdata_size)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the extension address stored under the following data key:\n     * - {_LSP17_EXTENSION_PREFIX} + `<bytes4>` (Check [LSP2-ERC725YJSONSchema] for encoding the data key).\n     * - If no extension is stored, returns the address(0).\n     */\n    function _getExtensionAndForwardValue(\n        bytes4 functionSelector\n    ) internal view virtual override returns (address, bool) {\n        // Generate the data key relevant for the functionSelector being called\n        bytes32 mappedExtensionDataKey = LSP2Utils.generateMappingKey(\n            _LSP17_EXTENSION_PREFIX,\n            functionSelector\n        );\n\n        // Check if there is an extension stored under the generated data key\n        bytes memory extensionAddress = _getData(mappedExtensionDataKey);\n        if (extensionAddress.length != 20 && extensionAddress.length != 0)\n            revert InvalidExtensionAddress(extensionAddress);\n\n        return (address(bytes20(extensionAddress)), true);\n    }\n\n    /**\n     * @inheritdoc LSP17Extendable\n     */\n    function supportsInterface(\n        bytes4 interfaceId\n    ) public view virtual override(ERC725Y, LSP17Extendable) returns (bool) {\n        return\n            interfaceId == _INTERFACEID_LSP8 ||\n            super.supportsInterface(interfaceId) ||\n            LSP17Extendable._supportsInterfaceInERC165Extension(interfaceId);\n    }\n\n    /**\n     * @inheritdoc LSP4DigitalAssetMetadata\n     * @dev The ERC725Y data key `_LSP8_TOKENID_FORMAT_KEY` cannot be changed\n     * once the identifiable digital asset contract has been deployed.\n     */\n    function _setData(\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) internal virtual override {\n        if (dataKey == _LSP8_TOKENID_FORMAT_KEY) {\n            revert LSP8TokenIdFormatNotEditable();\n        }\n        LSP4DigitalAssetMetadata._setData(dataKey, dataValue);\n    }\n\n    // --- Token queries\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _existingTokens;\n    }\n\n    // --- Token owner queries\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function balanceOf(\n        address tokenOwner\n    ) public view virtual override returns (uint256) {\n        return _ownedTokens[tokenOwner].length();\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function tokenOwnerOf(\n        bytes32 tokenId\n    ) public view virtual override returns (address) {\n        address tokenOwner = _tokenOwners[tokenId];\n\n        if (tokenOwner == address(0)) {\n            revert LSP8NonExistentTokenId(tokenId);\n        }\n\n        return tokenOwner;\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function tokenIdsOf(\n        address tokenOwner\n    ) public view virtual override returns (bytes32[] memory) {\n        return _ownedTokens[tokenOwner].values();\n    }\n\n    // --- TokenId Metadata functionality\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function getDataForTokenId(\n        bytes32 tokenId,\n        bytes32 dataKey\n    ) public view virtual override returns (bytes memory dataValue) {\n        return _getDataForTokenId(tokenId, dataKey);\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function getDataBatchForTokenIds(\n        bytes32[] memory tokenIds,\n        bytes32[] memory dataKeys\n    ) public view virtual override returns (bytes[] memory dataValues) {\n        if (tokenIds.length != dataKeys.length) {\n            revert LSP8TokenIdsDataLengthMismatch();\n        }\n\n        dataValues = new bytes[](tokenIds.length);\n\n        for (uint256 i; i < tokenIds.length; ) {\n            dataValues[i] = _getDataForTokenId(tokenIds[i], dataKeys[i]);\n\n            // Increment the iterator in unchecked block to save gas\n            unchecked {\n                ++i;\n            }\n        }\n\n        return dataValues;\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function setDataForTokenId(\n        bytes32 tokenId,\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) public virtual override onlyOwner {\n        _setDataForTokenId(tokenId, dataKey, dataValue);\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function setDataBatchForTokenIds(\n        bytes32[] memory tokenIds,\n        bytes32[] memory dataKeys,\n        bytes[] memory dataValues\n    ) public virtual override onlyOwner {\n        if (\n            tokenIds.length != dataKeys.length ||\n            dataKeys.length != dataValues.length\n        ) {\n            revert LSP8TokenIdsDataLengthMismatch();\n        }\n\n        if (tokenIds.length == 0) {\n            revert LSP8TokenIdsDataEmptyArray();\n        }\n\n        for (uint256 i; i < tokenIds.length; ) {\n            _setDataForTokenId(tokenIds[i], dataKeys[i], dataValues[i]);\n\n            // Increment the iterator in unchecked block to save gas\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    // --- General functionality\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     *\n     * @custom:info It's not possible to send value along the functions call due to the use of `delegatecall`.\n     */\n    function batchCalls(\n        bytes[] calldata data\n    ) public virtual override returns (bytes[] memory results) {\n        results = new bytes[](data.length);\n        for (uint256 i; i < data.length; ) {\n            (bool success, bytes memory result) = address(this).delegatecall(\n                data[i]\n            );\n\n            if (!success) {\n                // Look for revert reason and bubble it up if present\n                if (result.length != 0) {\n                    // The easiest way to bubble the revert reason is using memory via assembly\n                    // solhint-disable no-inline-assembly\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        let returndata_size := mload(result)\n                        revert(add(32, result), returndata_size)\n                    }\n                } else {\n                    revert LSP8BatchCallFailed({callIndex: i});\n                }\n            }\n\n            results[i] = result;\n\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    // --- Operator functionality\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function authorizeOperator(\n        address operator,\n        bytes32 tokenId,\n        bytes memory operatorNotificationData\n    ) public virtual override {\n        address tokenOwner = tokenOwnerOf(tokenId);\n\n        if (tokenOwner != msg.sender) {\n            revert LSP8NotTokenOwner(tokenOwner, tokenId, msg.sender);\n        }\n\n        if (operator == address(0)) {\n            revert LSP8CannotUseAddressZeroAsOperator();\n        }\n\n        if (tokenOwner == operator) {\n            revert LSP8TokenOwnerCannotBeOperator();\n        }\n\n        bool isAdded = _operators[tokenId].add(operator);\n        if (!isAdded) revert LSP8OperatorAlreadyAuthorized(operator, tokenId);\n\n        emit OperatorAuthorizationChanged(\n            operator,\n            tokenOwner,\n            tokenId,\n            operatorNotificationData\n        );\n\n        bytes memory lsp1Data = abi.encode(\n            msg.sender,\n            tokenId,\n            true, // authorized\n            operatorNotificationData\n        );\n\n        _notifyTokenOperator(operator, lsp1Data);\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function revokeOperator(\n        address operator,\n        bytes32 tokenId,\n        bool notify,\n        bytes memory operatorNotificationData\n    ) public virtual override {\n        address tokenOwner = tokenOwnerOf(tokenId);\n\n        if (msg.sender != tokenOwner) {\n            if (operator != msg.sender) {\n                revert LSP8RevokeOperatorNotAuthorized(\n                    msg.sender,\n                    tokenOwner,\n                    tokenId\n                );\n            }\n        }\n\n        if (operator == address(0)) {\n            revert LSP8CannotUseAddressZeroAsOperator();\n        }\n\n        if (tokenOwner == operator) {\n            revert LSP8TokenOwnerCannotBeOperator();\n        }\n\n        _revokeOperator(\n            operator,\n            tokenOwner,\n            tokenId,\n            notify,\n            operatorNotificationData\n        );\n\n        if (notify) {\n            bytes memory lsp1Data = abi.encode(\n                tokenOwner,\n                tokenId,\n                false, // unauthorized\n                operatorNotificationData\n            );\n\n            _notifyTokenOperator(operator, lsp1Data);\n        }\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function isOperatorFor(\n        address operator,\n        bytes32 tokenId\n    ) public view virtual override returns (bool) {\n        return _isOperatorOrOwner(operator, tokenId);\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function getOperatorsOf(\n        bytes32 tokenId\n    ) public view virtual override returns (address[] memory) {\n        _existsOrError(tokenId);\n\n        return _operators[tokenId].values();\n    }\n\n    /**\n     * @dev verifies if the `caller` is operator or owner for the `tokenId`\n     * @return true if `caller` is either operator or owner\n     */\n    function _isOperatorOrOwner(\n        address caller,\n        bytes32 tokenId\n    ) internal view virtual returns (bool) {\n        return (caller == tokenOwnerOf(tokenId) ||\n            _operators[tokenId].contains(caller));\n    }\n\n    // --- Transfer functionality\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function transfer(\n        address from,\n        address to,\n        bytes32 tokenId,\n        bool force,\n        bytes memory data\n    ) public virtual override {\n        if (!_isOperatorOrOwner(msg.sender, tokenId)) {\n            revert LSP8NotTokenOperator(tokenId, msg.sender);\n        }\n\n        _transfer(from, to, tokenId, force, data);\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function transferBatch(\n        address[] memory from,\n        address[] memory to,\n        bytes32[] memory tokenId,\n        bool[] memory force,\n        bytes[] memory data\n    ) public virtual override {\n        uint256 fromLength = from.length;\n        if (\n            fromLength != to.length ||\n            fromLength != tokenId.length ||\n            fromLength != force.length ||\n            fromLength != data.length\n        ) {\n            revert LSP8InvalidTransferBatch();\n        }\n\n        for (uint256 i; i < fromLength; ) {\n            transfer(from[i], to[i], tokenId[i], force[i], data[i]);\n\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /**\n     * @dev removes `operator` from the list of operators for the `tokenId`\n     */\n    function _revokeOperator(\n        address operator,\n        address tokenOwner,\n        bytes32 tokenId,\n        bool notified,\n        bytes memory operatorNotificationData\n    ) internal virtual {\n        bool isRemoved = _operators[tokenId].remove(operator);\n        if (!isRemoved) revert LSP8NonExistingOperator(operator, tokenId);\n\n        emit OperatorRevoked(\n            operator,\n            tokenOwner,\n            tokenId,\n            notified,\n            operatorNotificationData\n        );\n    }\n\n    /**\n     * @dev revoke all the current operators for a specific `tokenId` token which belongs to `tokenOwner`.\n     *\n     * @param tokenOwner The address that is the owner of the `tokenId`.\n     * @param tokenId The token to remove the associated operators for.\n     */\n    function _clearOperators(\n        address tokenOwner,\n        bytes32 tokenId\n    ) internal virtual {\n        // here is a good example of why having multiple operators will be expensive.. we\n        // need to clear them on token transfer\n        //\n        // NOTE: this may cause a tx to fail if there is too many operators to clear, in which case\n        // the tokenOwner needs to call `revokeOperator` until there is less operators to clear and\n        // the desired `transfer` or `burn` call can succeed.\n        EnumerableSet.AddressSet storage operatorsForTokenId = _operators[\n            tokenId\n        ];\n\n        uint256 operatorListLength = operatorsForTokenId.length();\n        address operator;\n        for (uint256 i; i < operatorListLength; ) {\n            // we are emptying the list, always remove from index 0\n            operator = operatorsForTokenId.at(0);\n            _revokeOperator(operator, tokenOwner, tokenId, false, \"\");\n\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens start existing when they are minted ({_mint}), and stop existing when they are burned ({_burn}).\n     */\n    function _exists(bytes32 tokenId) internal view virtual returns (bool) {\n        return _tokenOwners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev When `tokenId` does not exist then revert with an error.\n     */\n    function _existsOrError(bytes32 tokenId) internal view virtual {\n        if (!_exists(tokenId)) {\n            revert LSP8NonExistentTokenId(tokenId);\n        }\n    }\n\n    /**\n     * @dev Create `tokenId` by minting it and transfers it to `to`.\n     *\n     * @custom:info Any logic in the:\n     * - {_beforeTokenTransfer} function will run before updating the balances and ownership of `tokenId`s.\n     * - {_afterTokenTransfer} function will run after updating the balances and ownership of `tokenId`s, **but before notifying the recipient via LSP1**.\n     *\n     * @param to The address that will receive the minted `tokenId`.\n     * @param tokenId The token ID to create (= mint).\n     * @param force When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard.\n     * @param data Any additional data the caller wants included in the emitted event, and sent in the hook of the `to` address.\n     *\n     * @custom:requirements\n     * - `tokenId` must not exist and not have been already minted.\n     * - `to` cannot be the zero address.\n\n     * @custom:events {Transfer} event with `address(0)` as `from` address.\n     */\n    function _mint(\n        address to,\n        bytes32 tokenId,\n        bool force,\n        bytes memory data\n    ) internal virtual {\n        if (to == address(0)) {\n            revert LSP8CannotSendToAddressZero();\n        }\n\n        // Check that `tokenId` is not already minted\n        if (_exists(tokenId)) {\n            revert LSP8TokenIdAlreadyMinted(tokenId);\n        }\n\n        _beforeTokenTransfer(address(0), to, tokenId, force, data);\n\n        // Check that `tokenId` was not minted inside the `_beforeTokenTransfer` hook\n        if (_exists(tokenId)) {\n            revert LSP8TokenIdAlreadyMinted(tokenId);\n        }\n\n        // token being minted\n        ++_existingTokens;\n\n        _ownedTokens[to].add(tokenId);\n        _tokenOwners[tokenId] = to;\n\n        emit Transfer(msg.sender, address(0), to, tokenId, force, data);\n\n        _afterTokenTransfer(address(0), to, tokenId, force, data);\n\n        bytes memory lsp1Data = abi.encode(\n            msg.sender,\n            address(0),\n            to,\n            tokenId,\n            data\n        );\n        _notifyTokenReceiver(to, force, lsp1Data);\n    }\n\n    /**\n     * @dev Burn a specific `tokenId`, removing the `tokenId` from the {tokenIdsOf} the caller and decreasing its {balanceOf} by -1.\n     * This will also clear all the operators allowed to transfer the `tokenId`.\n     *\n     * The owner of the `tokenId` will be notified about the `tokenId` being transferred through its LSP1 {universalReceiver}\n     * function, if it is a contract that supports the LSP1 interface. Its {universalReceiver} function will receive\n     * all the parameters in the calldata packed encoded.\n     *\n     * @custom:info Any logic in the:\n     * - {_beforeTokenTransfer} function will run before updating the balances and ownership of `tokenId`s.\n     * - {_afterTokenTransfer} function will run after updating the balances and ownership of `tokenId`s, **but before notifying the sender via LSP1**.\n     *\n     * @param tokenId The token to burn.\n     * @param data Any additional data the caller wants included in the emitted event, and sent in the LSP1 hook on the token owner's address.\n     *\n     * @custom:hint In dApps, you can know which addresses are burning tokens by listening for the `Transfer` event and filter with the zero address as `to`.\n     *\n     * @custom:requirements\n     * - `tokenId` must exist.\n     *\n     * @custom:events {Transfer} event with `address(0)` as the `to` address.\n     */\n    function _burn(bytes32 tokenId, bytes memory data) internal virtual {\n        address tokenOwner = tokenOwnerOf(tokenId);\n\n        _beforeTokenTransfer(tokenOwner, address(0), tokenId, false, data);\n\n        // Re-fetch and update `tokenOwner` in case `tokenId`\n        // was transferred inside the `_beforeTokenTransfer` hook\n        tokenOwner = tokenOwnerOf(tokenId);\n\n        // token being burned\n        --_existingTokens;\n\n        _clearOperators(tokenOwner, tokenId);\n\n        _ownedTokens[tokenOwner].remove(tokenId);\n        delete _tokenOwners[tokenId];\n\n        emit Transfer(msg.sender, tokenOwner, address(0), tokenId, false, data);\n\n        _afterTokenTransfer(tokenOwner, address(0), tokenId, false, data);\n\n        bytes memory lsp1Data = abi.encode(\n            msg.sender,\n            tokenOwner,\n            address(0),\n            tokenId,\n            data\n        );\n\n        _notifyTokenSender(tokenOwner, lsp1Data);\n    }\n\n    /**\n     * @dev Change the owner of the `tokenId` from `from` to `to`.\n     *\n     * Both the sender and recipient will be notified of the `tokenId` being transferred through their LSP1 {universalReceiver}\n     * function, if they are contracts that support the LSP1 interface. Their `universalReceiver` function will receive\n     * all the parameters in the calldata packed encoded.\n     *\n     * @custom:info Any logic in the:\n     * - {_beforeTokenTransfer} function will run before updating the balances and ownership of `tokenId`s.\n     * - {_afterTokenTransfer} function will run after updating the balances and ownership of `tokenId`s, **but before notifying the sender/recipient via LSP1**.\n     *\n     * @param from The sender address.\n     * @param to The recipient address.\n     * @param tokenId The token to transfer.\n     * @param force When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard.\n     * @param data Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\n     *\n     * @custom:requirements\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * @custom:events {Transfer} event.\n     *\n     * @custom:danger This internal function does not check if the sender is authorized or not to operate on the `tokenId`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        bytes32 tokenId,\n        bool force,\n        bytes memory data\n    ) internal virtual {\n        address tokenOwner = tokenOwnerOf(tokenId);\n        if (tokenOwner != from) {\n            revert LSP8NotTokenOwner(tokenOwner, tokenId, from);\n        }\n\n        if (to == address(0)) {\n            revert LSP8CannotSendToAddressZero();\n        }\n\n        _beforeTokenTransfer(from, to, tokenId, force, data);\n\n        // Check that `tokenId`'s owner was not changed inside the `_beforeTokenTransfer` hook\n        address currentTokenOwner = tokenOwnerOf(tokenId);\n        if (tokenOwner != currentTokenOwner) {\n            revert LSP8TokenOwnerChanged(\n                tokenId,\n                tokenOwner,\n                currentTokenOwner\n            );\n        }\n\n        _clearOperators(from, tokenId);\n\n        _ownedTokens[from].remove(tokenId);\n        _ownedTokens[to].add(tokenId);\n        _tokenOwners[tokenId] = to;\n\n        emit Transfer(msg.sender, from, to, tokenId, force, data);\n\n        _afterTokenTransfer(from, to, tokenId, force, data);\n\n        bytes memory lsp1Data = abi.encode(msg.sender, from, to, tokenId, data);\n\n        _notifyTokenSender(from, lsp1Data);\n        _notifyTokenReceiver(to, force, lsp1Data);\n    }\n\n    /**\n     * @dev Sets data for a specific `tokenId` and `dataKey` in the ERC725Y storage\n     * The ERC725Y data key is the hash of the `tokenId` and `dataKey` concatenated\n     * @param tokenId The unique identifier for a token.\n     * @param dataKey The key for the data to set.\n     * @param dataValue The value to set for the given data key.\n     * @custom:events {TokenIdDataChanged} event.\n     */\n    function _setDataForTokenId(\n        bytes32 tokenId,\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) internal virtual {\n        _store[keccak256(bytes.concat(tokenId, dataKey))] = dataValue;\n        emit TokenIdDataChanged(tokenId, dataKey, dataValue);\n    }\n\n    /**\n     * @dev Retrieves data for a specific `tokenId` and `dataKey` from the ERC725Y storage\n     * The ERC725Y data key is the hash of the `tokenId` and `dataKey` concatenated\n     * @param tokenId The unique identifier for a token.\n     * @param dataKey The key for the data to retrieve.\n     * @return dataValues The data value associated with the given `tokenId` and `dataKey`.\n     */\n    function _getDataForTokenId(\n        bytes32 tokenId,\n        bytes32 dataKey\n    ) internal view virtual returns (bytes memory dataValues) {\n        return _store[keccak256(bytes.concat(tokenId, dataKey))];\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer, including minting and burning.\n     * Allows to run custom logic before updating balances and notifying sender/recipient by overriding this function.\n     *\n     * @param from The sender address\n     * @param to The recipient address\n     * @param tokenId The tokenId to transfer\n     * @param force A boolean that describe if transfer to a `to` address that does not support LSP1 is allowed or not.\n     * @param data The data sent alongside the transfer\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        bytes32 tokenId,\n        bool force,\n        bytes memory data // solhint-disable-next-line no-empty-blocks\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer, including minting and burning.\n     * Allows to run custom logic after updating balances, but **before notifying sender/recipient via LSP1** by overriding this function.\n     *\n     * @param from The sender address\n     * @param to The recipient address\n     * @param tokenId The tokenId to transfer\n     * @param force A boolean that describe if transfer to a `to` address that does not support LSP1 is allowed or not.\n     * @param data The data sent alongside the transfer\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        bytes32 tokenId,\n        bool force,\n        bytes memory data // solhint-disable-next-line no-empty-blocks\n    ) internal virtual {}\n\n    /**\n     * @dev Attempt to notify the operator `operator` about the `tokenId` being authorized.\n     * This is done by calling its {universalReceiver} function with the `_TYPEID_LSP8_TOKENOPERATOR` as typeId, if `operator` is a contract that supports the LSP1 interface.\n     * If `operator` is an EOA or a contract that does not support the LSP1 interface, nothing will happen and no notification will be sent.\n\n     * @param operator The address to call the {universalReceiver} function on.\n     * @param lsp1Data the data to be sent to the `operator` address in the `universalReceiver` call.\n     */\n    function _notifyTokenOperator(\n        address operator,\n        bytes memory lsp1Data\n    ) internal virtual {\n        LSP1Utils.notifyUniversalReceiver(\n            operator,\n            _TYPEID_LSP8_TOKENOPERATOR,\n            lsp1Data\n        );\n    }\n\n    /**\n     * @dev Attempt to notify the token sender `from` about the `tokenId` being transferred.\n     * This is done by calling its {universalReceiver} function with the `_TYPEID_LSP8_TOKENSSENDER` as typeId, if `from` is a contract that supports the LSP1 interface.\n     * If `from` is an EOA or a contract that does not support the LSP1 interface, nothing will happen and no notification will be sent.\n\n     * @param from The address to call the {universalReceiver} function on.\n     * @param lsp1Data the data to be sent to the `from` address in the `universalReceiver` call.\n     */\n    function _notifyTokenSender(\n        address from,\n        bytes memory lsp1Data\n    ) internal virtual {\n        LSP1Utils.notifyUniversalReceiver(\n            from,\n            _TYPEID_LSP8_TOKENSSENDER,\n            lsp1Data\n        );\n    }\n\n    /**\n     * @dev Attempt to notify the token receiver `to` about the `tokenId` being received.\n     * This is done by calling its {universalReceiver} function with the `_TYPEID_LSP8_TOKENSRECIPIENT` as typeId, if `to` is a contract that supports the LSP1 interface.\n     *\n     * If `to` is is an EOA or a contract that does not support the LSP1 interface, the behaviour will depend on the `force` boolean flag.\n     * - if `force` is set to `true`, nothing will happen and no notification will be sent.\n     * - if `force` is set to `false, the transaction will revert.\n     *\n     * @param to The address to call the {universalReceiver} function on.\n     * @param force A boolean that describe if transfer to a `to` address that does not support LSP1 is allowed or not.\n     * @param lsp1Data The data to be sent to the `to` address in the `universalReceiver(...)` call.\n     */\n    function _notifyTokenReceiver(\n        address to,\n        bool force,\n        bytes memory lsp1Data\n    ) internal virtual {\n        if (\n            ERC165Checker.supportsERC165InterfaceUnchecked(\n                to,\n                _INTERFACEID_LSP1\n            )\n        ) {\n            ILSP1(to).universalReceiver(_TYPEID_LSP8_TOKENSRECIPIENT, lsp1Data);\n        } else if (!force) {\n            if (to.code.length != 0) {\n                revert LSP8NotifyTokenReceiverContractMissingLSP1Interface(to);\n            } else {\n                revert LSP8NotifyTokenReceiverIsEOA(to);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/Base64.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.6) (utils/Base64.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides a set of functions to operate with Base64 strings.\n *\n * _Available since v4.5._\n */\nlibrary Base64 {\n    /**\n     * @dev Base64 Encoding/Decoding Table\n     */\n    string internal constant _TABLE = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n    /**\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\n     */\n    function encode(bytes memory data) internal pure returns (string memory) {\n        /**\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\n         */\n        if (data.length == 0) return \"\";\n\n        // Loads the table into memory\n        string memory table = _TABLE;\n\n        // Encoding takes 3 bytes chunks of binary data from `bytes` data parameter\n        // and split into 4 numbers of 6 bits.\n        // The final Base64 length should be `bytes` data length multiplied by 4/3 rounded up\n        // - `data.length + 2`  -> Round up\n        // - `/ 3`              -> Number of 3-bytes chunks\n        // - `4 *`              -> 4 characters for each chunk\n        string memory result = new string(4 * ((data.length + 2) / 3));\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Prepare the lookup table (skip the first \"length\" byte)\n            let tablePtr := add(table, 1)\n\n            // Prepare result pointer, jump over length\n            let resultPtr := add(result, 0x20)\n            let dataPtr := data\n            let endPtr := add(data, mload(data))\n\n            // In some cases, the last iteration will read bytes after the end of the data. We cache the value, and\n            // set it to zero to make sure no dirty bytes are read in that section.\n            let afterPtr := add(endPtr, 0x20)\n            let afterCache := mload(afterPtr)\n            mstore(afterPtr, 0x00)\n\n            // Run over the input, 3 bytes at a time\n            for {\n\n            } lt(dataPtr, endPtr) {\n\n            } {\n                // Advance 3 bytes\n                dataPtr := add(dataPtr, 3)\n                let input := mload(dataPtr)\n\n                // To write each character, shift the 3 byte (24 bits) chunk\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\n                // and apply logical AND with 0x3F to bitmask the least significant 6 bits.\n                // Use this as an index into the lookup table, mload an entire word\n                // so the desired character is in the least significant byte, and\n                // mstore8 this least significant byte into the result and continue.\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n            }\n\n            // Reset the value that was cached\n            mstore(afterPtr, afterCache)\n\n            // When data `bytes` is not exactly 3 bytes long\n            // it is padded with `=` characters at the end\n            switch mod(mload(data), 3)\n            case 1 {\n                mstore8(sub(resultPtr, 1), 0x3d)\n                mstore8(sub(resultPtr, 2), 0x3d)\n            }\n            case 2 {\n                mstore8(sub(resultPtr, 1), 0x3d)\n            }\n        }\n\n        return result;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/introspection/ERC165Checker.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Library used to query support of an interface declared via {IERC165}.\n *\n * Note that these functions return the actual result of the query: they do not\n * `revert` if an interface is not supported. It is up to the caller to decide\n * what to do in these cases.\n */\nlibrary ERC165Checker {\n    // As per the EIP-165 spec, no interface should ever match 0xffffffff\n    bytes4 private constant _INTERFACE_ID_INVALID = 0xffffffff;\n\n    /**\n     * @dev Returns true if `account` supports the {IERC165} interface.\n     */\n    function supportsERC165(address account) internal view returns (bool) {\n        // Any contract that implements ERC165 must explicitly indicate support of\n        // InterfaceId_ERC165 and explicitly indicate non-support of InterfaceId_Invalid\n        return\n            supportsERC165InterfaceUnchecked(account, type(IERC165).interfaceId) &&\n            !supportsERC165InterfaceUnchecked(account, _INTERFACE_ID_INVALID);\n    }\n\n    /**\n     * @dev Returns true if `account` supports the interface defined by\n     * `interfaceId`. Support for {IERC165} itself is queried automatically.\n     *\n     * See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(address account, bytes4 interfaceId) internal view returns (bool) {\n        // query support of both ERC165 as per the spec and support of _interfaceId\n        return supportsERC165(account) && supportsERC165InterfaceUnchecked(account, interfaceId);\n    }\n\n    /**\n     * @dev Returns a boolean array where each value corresponds to the\n     * interfaces passed in and whether they're supported or not. This allows\n     * you to batch check interfaces for a contract where your expectation\n     * is that some interfaces may not be supported.\n     *\n     * See {IERC165-supportsInterface}.\n     *\n     * _Available since v3.4._\n     */\n    function getSupportedInterfaces(\n        address account,\n        bytes4[] memory interfaceIds\n    ) internal view returns (bool[] memory) {\n        // an array of booleans corresponding to interfaceIds and whether they're supported or not\n        bool[] memory interfaceIdsSupported = new bool[](interfaceIds.length);\n\n        // query support of ERC165 itself\n        if (supportsERC165(account)) {\n            // query support of each interface in interfaceIds\n            for (uint256 i = 0; i < interfaceIds.length; i++) {\n                interfaceIdsSupported[i] = supportsERC165InterfaceUnchecked(account, interfaceIds[i]);\n            }\n        }\n\n        return interfaceIdsSupported;\n    }\n\n    /**\n     * @dev Returns true if `account` supports all the interfaces defined in\n     * `interfaceIds`. Support for {IERC165} itself is queried automatically.\n     *\n     * Batch-querying can lead to gas savings by skipping repeated checks for\n     * {IERC165} support.\n     *\n     * See {IERC165-supportsInterface}.\n     */\n    function supportsAllInterfaces(address account, bytes4[] memory interfaceIds) internal view returns (bool) {\n        // query support of ERC165 itself\n        if (!supportsERC165(account)) {\n            return false;\n        }\n\n        // query support of each interface in interfaceIds\n        for (uint256 i = 0; i < interfaceIds.length; i++) {\n            if (!supportsERC165InterfaceUnchecked(account, interfaceIds[i])) {\n                return false;\n            }\n        }\n\n        // all interfaces supported\n        return true;\n    }\n\n    /**\n     * @notice Query if a contract implements an interface, does not check ERC165 support\n     * @param account The address of the contract to query for support of an interface\n     * @param interfaceId The interface identifier, as specified in ERC-165\n     * @return true if the contract at account indicates support of the interface with\n     * identifier interfaceId, false otherwise\n     * @dev Assumes that account contains a contract that supports ERC165, otherwise\n     * the behavior of this method is undefined. This precondition can be checked\n     * with {supportsERC165}.\n     *\n     * Some precompiled contracts will falsely indicate support for a given interface, so caution\n     * should be exercised when using this function.\n     *\n     * Interface identification is specified in ERC-165.\n     */\n    function supportsERC165InterfaceUnchecked(address account, bytes4 interfaceId) internal view returns (bool) {\n        // prepare call\n        bytes memory encodedParams = abi.encodeWithSelector(IERC165.supportsInterface.selector, interfaceId);\n\n        // perform static call\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly {\n            success := staticcall(30000, account, add(encodedParams, 0x20), mload(encodedParams), 0x00, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0x00)\n        }\n\n        return success && returnSize >= 0x20 && returnValue > 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/standalone/LSP8LoogiesEnhanced.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol\";\nimport \"@lukso/lsp8-contracts/contracts/LSP8Constants.sol\";\nimport \"@lukso/lsp4-contracts/contracts/LSP4Constants.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport \"@openzeppelin/contracts/utils/Base64.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\n// LSP0 Universal Profile interface ID\ninterface IERC725Y {\n    function getData(bytes32 dataKey) external view returns (bytes memory);\n}\n\n/**\n * @title OnChainMetadata\n * @notice Handles on-chain SVG generation and metadata formatting for LSP8Loogies\n * @dev Provides SVG generation and properly formatted LSP4 metadata\n */\ncontract OnChainMetadata {\n    using Strings for uint256;\n\n    // Universal Profile detection\n    bytes4 constant _INTERFACE_ID_ERC725Y = 0x714df77c;\n    bytes32 constant _LSP3_DATAKEY_NAME = 0xa5f25703c828c6d3c468fa5542c279e8c98f1acc783318e4fcd67ea8fd61be02;\n\n    // Storage for metadata components\n    mapping(string => string[]) private _parts;\n\n    // UP Detection helper\n    function isUniversalProfile(address account) internal view returns (bool) {\n        try IERC165(account).supportsInterface(_INTERFACE_ID_ERC725Y) returns (bool result) {\n            return result;\n        } catch {\n            return false;\n        }\n    }\n    \n    // Get UP name if available\n    function getUPName(address account) internal view returns (string memory) {\n        if (!isUniversalProfile(account)) {\n            return \"\";\n        }\n        \n        try IERC725Y(account).getData(_LSP3_DATAKEY_NAME) returns (bytes memory nameData) {\n            if (nameData.length > 0) {\n                // LSP3 name is encoded with prefix, extract the string part\n                // First byte is the LSP2 valueContent (0 = DIRECT VALUE)\n                // If first byte is 0, then the string starts at index 1\n                if (nameData.length > 1 && nameData[0] == 0) {\n                    // Create a new bytes array without the first byte\n                    bytes memory strBytes = new bytes(nameData.length - 1);\n                    for (uint i = 1; i < nameData.length; i++) {\n                        strBytes[i-1] = nameData[i];\n                    }\n                    return string(strBytes);\n                }\n            }\n            return \"\";\n        } catch {\n            return \"\";\n        }\n    }\n\n    /**\n     * @dev Set up metadata components\n     * @param _index The index/category of components (e.g., \"colors\", \"mouths\")\n     * @param data Array of component values\n     */\n    function _setUp(string memory _index, string[] memory data) internal {\n        delete _parts[_index];\n        for (uint i = 0; i < data.length; i++) {\n            _parts[_index].push(data[i]);\n        }\n    }\n\n    /**\n     * @dev Get random loogie type\n     * @return string The random loogie type\n     */\n    function getRandomLoogieType() internal view returns (string memory) {\n        uint256 rand = uint256(keccak256(abi.encodePacked(block.timestamp, block.prevrandao, msg.sender))) % _parts[\"types\"].length;\n        return _parts[\"types\"][rand];\n    }\n\n    /**\n     * @dev Convert bytes3 to hex string\n     * @param _color The color bytes\n     * @return string The hex string\n     */\n    function toColorHexString(bytes3 _color) public pure returns (string memory) {\n        bytes memory hexChars = \"0123456789abcdef\";\n        bytes memory result = new bytes(6);\n        \n        for (uint256 i = 0; i < 3; i++) {\n            uint8 byteValue = uint8(_color[i]);\n            result[i*2] = hexChars[uint8(byteValue >> 4)];\n            result[i*2 + 1] = hexChars[uint8(byteValue & 0x0f)];\n        }\n        \n        return string(result);\n    }\n    \n    /**\n     * @dev Convert uint to string\n     * @param _i The uint to convert\n     * @return _uintAsString The string representation\n     */\n    function uint2str(uint _i) public pure returns (string memory _uintAsString) {\n        if (_i == 0) {\n            return \"0\";\n        }\n        uint j = _i;\n        uint len;\n        while (j != 0) {\n            len++;\n            j /= 10;\n        }\n        bytes memory bstr = new bytes(len);\n        uint k = len;\n        j = _i;\n        while (j != 0) {\n            bstr[--k] = bytes1(uint8(48 + j % 10));\n            j /= 10;\n        }\n        return string(bstr);\n    }\n\n    /**\n     * @dev Convert bytes32 to string\n     * @param value The bytes32 to convert\n     * @return string The hex string\n     */\n    function bytes32ToHexString(bytes32 value) public pure returns (string memory) {\n        bytes memory hexChars = \"0123456789abcdef\";\n        bytes memory buffer = new bytes(64);\n        \n        for (uint256 i = 0; i < 32; i++) {\n            buffer[i*2] = hexChars[uint8(value[i]) >> 4];\n            buffer[i*2 + 1] = hexChars[uint8(value[i]) & 0x0f];\n        }\n        \n        return string(buffer);\n    }\n\n    /**\n     * @dev Generate Loogie SVG based on attributes\n     * @param tokenId The token ID for randomization\n     * @param loogieType The loogie type\n     * @param colorValue The color value\n     * @param chubbinessValue The chubbiness value\n     * @param mouthLengthValue The mouth length value\n     * @param username The username to display\n     * @param isUP Whether the owner is a Universal Profile\n     * @return string The complete SVG\n     */\n    function generateLoogieSVG(\n        bytes32 tokenId,\n        string memory loogieType,\n        bytes3 colorValue,\n        uint256 chubbinessValue,\n        uint256 mouthLengthValue,\n        string memory username,\n        bool isUP\n    ) public view returns (string memory) {\n        // Determine body color based on loogie type and UP status\n        string memory bodyColor;\n        \n        if (isUP) {\n            // Vibrant colors for UP holders\n            if (keccak256(bytes(loogieType)) == keccak256(bytes(\"green\"))) {\n                bodyColor = \"#00ff00\"; // Bright green\n            } else if (keccak256(bytes(loogieType)) == keccak256(bytes(\"blue\"))) {\n                bodyColor = \"#00ccff\"; // Bright blue\n            } else if (keccak256(bytes(loogieType)) == keccak256(bytes(\"red\"))) {\n                bodyColor = \"#ff0066\"; // Bright pink/red\n            } else if (keccak256(bytes(loogieType)) == keccak256(bytes(\"purple\"))) {\n                bodyColor = \"#cc00ff\"; // Bright purple\n            } else if (keccak256(bytes(loogieType)) == keccak256(bytes(\"yellow\"))) {\n                bodyColor = \"#ffcc00\"; // Bright yellow\n            } else {\n                bodyColor = string(abi.encodePacked(\"#\", toColorHexString(colorValue)));\n            }\n        } else {\n            // Regular colors for non-UP holders\n            if (keccak256(bytes(loogieType)) == keccak256(bytes(\"green\"))) {\n                bodyColor = \"#a3e635\";\n            } else if (keccak256(bytes(loogieType)) == keccak256(bytes(\"blue\"))) {\n                bodyColor = \"#3b82f6\";\n            } else if (keccak256(bytes(loogieType)) == keccak256(bytes(\"red\"))) {\n                bodyColor = \"#ef4444\";\n            } else if (keccak256(bytes(loogieType)) == keccak256(bytes(\"purple\"))) {\n                bodyColor = \"#a855f7\";\n            } else if (keccak256(bytes(loogieType)) == keccak256(bytes(\"yellow\"))) {\n                bodyColor = \"#facc15\";\n            } else {\n                bodyColor = string(abi.encodePacked(\"#\", toColorHexString(colorValue)));\n            }\n        }\n        \n        // Determine if we should add matrix rain effect\n        // UP holders have 75% chance, regular accounts have 25% chance\n        bool hasMatrixEffect = false;\n        uint256 matrixSeed = uint256(keccak256(abi.encodePacked(tokenId, \"matrix\")));\n        if (isUP) {\n            hasMatrixEffect = matrixSeed % 4 < 3; // 75% chance\n        } else {\n            hasMatrixEffect = matrixSeed % 4 == 0; // 25% chance\n        }\n        \n        // Set matrix color based on UP status\n        string memory matrixColor = isUP ? \"#ff00ff\" : \"#00ff00\"; // Pink for UP, Green for regular\n        \n        // Calculate mouth position based on chubbiness\n        uint256 mouthTranslate = (810 - 9 * chubbinessValue) / 11;\n        \n        // Generate Matrix Theme SVG with original Loogies shapes\n        string memory svg = string(\n            abi.encodePacked(\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\" width=\"400\" height=\"400\">',\n                '<defs>',\n                '<style>',\n                '@import url(\"https://fonts.googleapis.com/css2?family=Comic+Sans+MS&amp;display=swap\");',\n                '.username { font-family: \"Comic Sans MS\", cursive; font-size: 16px; fill: white; text-anchor: middle; }',\n                '.matrix-char { font-family: monospace; fill: ', matrixColor, '; opacity: 0.3; animation: fade 3s infinite, fall 8s linear infinite; }',\n                '@keyframes fade { 0% { opacity: 0.2; } 30% { opacity: 0.9; } 70% { opacity: 0.9; } 100% { opacity: 0.2; } }',\n                '@keyframes fall { from { transform: translateY(-20px); } to { transform: translateY(420px); } }',\n                '</style>',\n                hasMatrixEffect ? generateMatrixRainEffect(tokenId) : \"\",\n                '</defs>',\n                '<rect width=\"400\" height=\"400\" fill=\"black\"/>',\n                hasMatrixEffect ? generateRandomMatrixChars(tokenId) : \"\",\n                '<g class=\"loogie-container\">',\n                // First eye\n                '<g id=\"eye1\">',\n                '<ellipse stroke-width=\"3\" ry=\"29.5\" rx=\"29.5\" id=\"svg_1\" cy=\"154.5\" cx=\"181.5\" stroke=\"#000\" fill=\"#fff\"/>',\n                '<ellipse ry=\"3.5\" rx=\"2.5\" id=\"svg_3\" cy=\"154.5\" cx=\"173.5\" stroke-width=\"3\" stroke=\"#000\" fill=\"#000000\"/>',\n                '</g>',\n                // Head\n                '<g id=\"head\">',\n                '<ellipse fill=\"', bodyColor, '\" stroke-width=\"3\" cx=\"204.5\" cy=\"211.80065\" id=\"svg_5\" rx=\"', \n                uint2str(chubbinessValue), '\" ry=\"51.80065\" stroke=\"#000\"/>',\n                '</g>',\n                // Second eye\n                '<g id=\"eye2\">',\n                '<ellipse stroke-width=\"3\" ry=\"29.5\" rx=\"29.5\" id=\"svg_2\" cy=\"168.5\" cx=\"209.5\" stroke=\"#000\" fill=\"#fff\"/>',\n                '<ellipse ry=\"3.5\" rx=\"3\" id=\"svg_4\" cy=\"169.5\" cx=\"208\" stroke-width=\"3\" fill=\"#000000\" stroke=\"#000\"/>',\n                '</g>',\n                // Mouth with translation based on chubbiness\n                '<g class=\"mouth\" transform=\"translate(', uint2str(mouthTranslate), ',0)\">',\n                '<path d=\"M 130 240 Q 165 250 ', uint2str(mouthLengthValue), ' 235\" stroke=\"black\" stroke-width=\"3\" fill=\"transparent\"/>',\n                '</g>',\n                // Display username with Comic Sans for UP\n                bytes(username).length > 0 ? \n                    (isUP ? \n                        string(abi.encodePacked('<text x=\"200\" y=\"300\" class=\"username\" style=\"font-family: \\'Comic Sans MS\\', cursive;\">', username, '</text>')) : \n                        string(abi.encodePacked('<text x=\"200\" y=\"300\" font-family=\"Arial\" font-size=\"16\" fill=\"#ffffff\" text-anchor=\"middle\">', username, '</text>'))\n                    ) : '',\n                '</g>',\n                '</svg>'\n            )\n        );\n        \n        return svg;\n    }\n    \n    /**\n     * @dev Generate Matrix rain effect for SVG\n     */\n    function generateMatrixRainEffect(bytes32 tokenId) internal pure returns (string memory) {\n        return string(\n            abi.encodePacked(\n                '<filter id=\"matrix-glow\" x=\"-20%\" y=\"-20%\" width=\"140%\" height=\"140%\">',\n                '<feGaussianBlur stdDeviation=\"3\" result=\"blur\"/>',\n                '<feComposite in=\"SourceGraphic\" in2=\"blur\" operator=\"over\"/>',\n                '</filter>',\n                '<linearGradient id=\"matrix-bg\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">',\n                '<stop offset=\"0%\" stop-color=\"#000800\"/>',\n                '<stop offset=\"100%\" stop-color=\"#001000\"/>',\n                '</linearGradient>'\n            )\n        );\n    }\n    \n    /**\n     * @dev Generate random Matrix characters for background\n     */\n    function generateRandomMatrixChars(bytes32 seed) internal pure returns (string memory) {\n        string memory chars = '<g class=\"matrix-chars\">';\n        uint8[15] memory xPositions;\n        \n        // Generate random x positions for matrix columns\n        for (uint8 i = 0; i < 15; i++) {\n            xPositions[i] = uint8(uint256(keccak256(abi.encodePacked(seed, i))) % 380 + 10);\n        }\n        \n        // Generate matrix characters\n        for (uint8 i = 0; i < 15; i++) {\n            for (uint8 j = 0; j < 8; j++) {\n                uint8 yPos = uint8(uint256(keccak256(abi.encodePacked(seed, i, j))) % 380 + 10);\n                uint8 charCode = uint8(uint256(keccak256(abi.encodePacked(seed, i, j, \"char\"))) % 10 + 48); // 0-9\n                \n                // Animation delay\n                uint8 delay = uint8(uint256(keccak256(abi.encodePacked(seed, i, j, \"delay\"))) % 5);\n                \n                chars = string(\n                    abi.encodePacked(\n                        chars,\n                        '<text x=\"', uint2str(uint256(xPositions[i])), '\" y=\"', uint2str(uint256(yPos)), \n                        '\" class=\"matrix-char\" style=\"animation-delay: ', uint2str(uint256(delay)), 's;\">',\n                        string(abi.encodePacked(bytes1(charCode))),\n                        '</text>'\n                    )\n                );\n            }\n        }\n        \n        return string(abi.encodePacked(chars, '</g>'));\n    }\n    \n    /**\n     * @dev Generate collection SVG\n     * @return svg The SVG string\n     * @return encodedSvg Base64 encoded SVG with data URI\n     */\n    function generateCollectionSVG() public pure returns (string memory svg, string memory encodedSvg) {\n        svg = string(\n            abi.encodePacked(\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400\" height=\"400\" viewBox=\"0 0 400 400\">',\n                '<rect width=\"400\" height=\"400\" fill=\"#000\"/>',\n                '<filter id=\"glow\">',\n                '<feGaussianBlur stdDeviation=\"3.5\" result=\"blur\"/>',\n                '<feComposite in=\"SourceGraphic\" in2=\"blur\" operator=\"over\"/>',\n                '</filter>',\n                '<text x=\"200\" y=\"180\" font-family=\"Arial\" font-size=\"40\" fill=\"#fff\" text-anchor=\"middle\" filter=\"url(#glow)\">LuksoLoogies</text>',\n                '<text x=\"200\" y=\"230\" font-family=\"Arial\" font-size=\"20\" fill=\"#0f0\" text-anchor=\"middle\" filter=\"url(#glow)\">Matrix Edition</text>',\n                '</svg>'\n            )\n        );\n        \n        encodedSvg = string(\n            abi.encodePacked(\n                \"data:image/svg+xml;base64,\",\n                Base64.encode(bytes(svg))\n            )\n        );\n        \n        return (svg, encodedSvg);\n    }\n    \n    /**\n     * @dev Get token metadata in LUKSO LSP4 format\n     * @param tokenId The token ID\n     * @param loogieTypeValue The loogie type\n     * @param colorBytes The color bytes\n     * @param chubbiness The chubbiness value\n     * @param mouthLength The mouth length value\n     * @param username The username\n     * @param isUP Whether the owner is a Universal Profile\n     * @return raw Raw metadata bytes\n     * @return encoded Encoded metadata bytes\n     */\n    function getMetadataBytes(\n        bytes32 tokenId,\n        string memory loogieTypeValue,\n        bytes3 colorBytes,\n        uint256 chubbiness,\n        uint256 mouthLength,\n        string memory username,\n        bool isUP\n    ) public view returns (bytes memory raw, bytes memory encoded) {\n        // Generate SVG for token\n        string memory svg = generateLoogieSVG(\n            tokenId, \n            loogieTypeValue, \n            colorBytes, \n            chubbiness, \n            mouthLength, \n            username,\n            isUP\n        );\n        \n        // Get color hex\n        string memory colorHex = toColorHexString(colorBytes);\n        \n        // Create token name and description\n        string memory tokenName = string(abi.encodePacked(\"Loogie #\", uint256(uint256(tokenId)).toString()));\n        string memory description = string(\n            abi.encodePacked(\n                \"This Matrix Loogie is the color #\",\n                colorHex,\n                \" with a chubbiness of \",\n                uint2str(chubbiness),\n                \" and mouth length of \",\n                uint2str(mouthLength),\n                isUP ? \". Owned by a Universal Profile!\" : \".\"\n            )\n        );\n        \n        // Format LSP4 metadata\n        string memory metadata = string(abi.encodePacked(\n            '{\"LSP4Metadata\": {\"name\": \"', tokenName, \n            '\",\"description\": \"', description, \n            '\",\"links\": [{\"title\":\"Website\",\"url\":\"https://luksoloogies.vercel.app\"}],\"icon\":[],',\n            '\"images\": [[{\"width\": 400,\"height\": 400,\"url\": \"',\n            'data:image/svg+xml;base64,', Base64.encode(bytes(svg)),\n            '\"}]],',\n            '\"attributes\":[',\n            '{\"key\":\"color\",\"value\":\"#', colorHex, '\",\"type\":\"string\"},',\n            '{\"key\":\"chubbiness\",\"value\":', uint2str(chubbiness), ',\"type\":\"number\"},',\n            '{\"key\":\"mouthLength\",\"value\":', uint2str(mouthLength), ',\"type\":\"number\"},',\n            '{\"key\":\"username\",\"value\":\"', username, '\",\"type\":\"string\"},',\n            '{\"key\":\"isUP\",\"value\":', isUP ? 'true' : 'false', ',\"type\":\"boolean\"},',\n            '{\"key\":\"type\",\"value\":\"', loogieTypeValue, '\",\"type\":\"string\"}',\n            ']}}'\n        ));\n        \n        // Encode as raw bytes\n        raw = bytes(metadata);\n        \n        // Encode the metadata with data URI\n        encoded = bytes(string(\n            abi.encodePacked(\n                \"data:application/json;base64,\",\n                Base64.encode(raw)\n            )\n        ));\n        \n        return (raw, encoded);\n    }\n    \n    /**\n     * @dev Get collection metadata in LUKSO LSP4 format\n     * @param limit The token supply limit\n     * @return raw Raw metadata bytes\n     * @return encoded Encoded metadata bytes\n     */\n    function getCollectionMetadataBytes(uint256 limit) public pure returns (bytes memory raw, bytes memory encoded) {\n        // Generate collection SVG\n        (string memory collectionSvg, string memory encodedSvg) = generateCollectionSVG();\n        \n        // Format LSP4 metadata\n        string memory metadata = string(abi.encodePacked(\n            '{\"LSP4Metadata\":{',\n            '\"name\":\"LuksoLoogies\",',\n            '\"description\":\"LuksoLoogies are LUKSO Standard LSP8 NFTs with a smile :) Only ', uint2str(limit), ' LuksoLoogies available on a price curve increasing 0.2% with each new mint. This Matrix Edition features animated Matrix-style designs for each Loogie.\",',\n            '\"links\":[{\"title\":\"Website\",\"url\":\"https://luksoloogies.vercel.app\"},{\"title\":\"Twitter\",\"url\":\"https://twitter.com/luksoLoogies\"}],',\n            '\"images\":[[{\"width\":400,\"height\":400,\"url\":\"', encodedSvg, '\"}]],',\n            // Collection-specific attributes\n            '\"attributes\":[',\n            '{\"key\":\"type\",\"value\":\"collection\",\"type\":\"string\"},',\n            '{\"key\":\"limit\",\"value\":', uint2str(limit), ',\"type\":\"number\"},',\n            '{\"key\":\"curve\",\"value\":100.2,\"type\":\"number\"}',\n            ']',\n            '}}'\n        ));\n        \n        // Encode as raw bytes\n        raw = bytes(metadata);\n        \n        // Encode the metadata with data URI\n        encoded = bytes(string(\n            abi.encodePacked(\n                \"data:application/json;base64,\",\n                Base64.encode(raw)\n            )\n        ));\n        \n        return (raw, encoded);\n    }\n}\n\n/**\n * @title LSP8LoogiesEnhanced\n * @notice An LSP8 NFT contract for LuksoLoogies with improved SVG rendering and metadata\n */\ncontract LSP8LoogiesEnhanced is LSP8IdentifiableDigitalAsset, OnChainMetadata, ReentrancyGuard {\n    using Strings for uint256;\n    \n    // Token attributes\n    uint256 private _tokenIds;\n    mapping(bytes32 => bytes3) public color;\n    mapping(bytes32 => uint256) public chubbiness;\n    mapping(bytes32 => uint256) public mouthLength;\n    mapping(bytes32 => string) public loogieTypes;\n    mapping(bytes32 => string) public upUsernames;\n    \n    // Collection constants\n    uint256 public constant MAX_SUPPLY = 3728;\n    uint256 public constant MAX_MINTABLE = 10;\n    uint256 public constant PRICE = 0.1 ether;\n    \n    // Funds recipient\n    address payable public constant recipient = payable(0xa81a6a910FeD20374361B35C451a4a44F86CeD46);\n    \n    // Minting status\n    bool public publicMintSet = false;\n    \n    // Store how many tokens each address has minted\n    mapping(address => uint) public mintedPerAddress;\n    \n    // Events\n    event UsernameUpdated(bytes32 indexed tokenId, string username);\n    \n    /**\n     * @dev Constructor\n     */\n    constructor(address contractOwner) \n    LSP8IdentifiableDigitalAsset(\n        \"LuksoLoogies\", \n        \"LUKLOOG\", \n        contractOwner, \n        2, // Collection type (2)\n        0 // Token ID format (0)\n    ) {\n        // Initialize loogieTypes data\n        string[] memory types = new string[](5);\n        types[0] = \"green\";\n        types[1] = \"blue\";\n        types[2] = \"red\";\n        types[3] = \"purple\";\n        types[4] = \"yellow\";\n        _setUp(\"types\", types);\n        \n        // Set up collection metadata - must be done in the constructor\n        (bytes memory rawMetadata, bytes memory encodedMetadata) = getCollectionMetadataBytes(MAX_SUPPLY);\n        bytes memory verifiableURI = bytes.concat(\n            hex\"00006f357c6a0020\",\n            keccak256(rawMetadata),\n            encodedMetadata\n        );\n        _setData(_LSP4_METADATA_KEY, verifiableURI);\n        \n        // Set collection supply data\n        bytes32 LSP4_METADATA_TOTAL_SUPPLY = 0xa23ea79c706be4641bfd97c9afb5b71a552c5bc320930dbe09b3530ed76dee0f;\n        _setData(LSP4_METADATA_TOTAL_SUPPLY, bytes.concat(bytes32(uint256(MAX_SUPPLY))));\n        \n        bytes32 LSP4_METADATA_MAX_SUPPLY = 0xd28c95357cf4c94d638a4f572d5d3df8d7e1415c8b650e747a219c559d1435c8;\n        _setData(LSP4_METADATA_MAX_SUPPLY, bytes.concat(bytes32(uint256(MAX_SUPPLY))));\n    }\n    \n    /**\n     * @dev Get total supply\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _tokenIds;\n    }\n    \n    /**\n     * @dev Get token supply cap\n     */\n    function tokenSupplyCap() public view virtual returns (uint256) {\n        return MAX_SUPPLY;\n    }\n    \n    /**\n     * @dev Set minting status\n     */\n    function setMintStatus(bool _publicMintSet) external onlyOwner {\n        publicMintSet = _publicMintSet;\n    }\n    \n    /**\n     * @dev Mint with custom username\n     */\n    function mintItemWithUsername(string memory _username) public payable nonReentrant returns (bytes32) {\n        require(publicMintSet, \"Public minting is closed\");\n        require(_tokenIds < MAX_SUPPLY, \"DONE MINTING\");\n        require(msg.value >= PRICE, \"NOT ENOUGH\");\n        require(mintedPerAddress[msg.sender] < MAX_MINTABLE, \"MINT LIMIT REACHED\");\n        \n        // Increment minted count for this address\n        mintedPerAddress[msg.sender]++;\n        \n        // Mint token\n        _tokenIds++;\n        bytes32 tokenId = bytes32(uint256(_tokenIds));\n        \n        // Generate random attributes\n        bytes32 predictableRandom = keccak256(\n            abi.encodePacked(\n                tokenId,\n                blockhash(block.number - 1),\n                msg.sender,\n                address(this)\n            )\n        );\n        \n        // Set token attributes through mintAndGenerate with custom username\n        mintAndGenerateWithUsername(msg.sender, tokenId, predictableRandom, _username);\n        \n        // Send funds to recipient\n        (bool success, ) = recipient.call{ value: msg.value }(\"\");\n        require(success, \"could not send\");\n        \n        return tokenId;\n    }\n    \n    /**\n     * @dev Mint with auto-detected username for UP\n     */\n    function mintItem() public payable nonReentrant returns (bytes32) {\n        require(publicMintSet, \"Public minting is closed\");\n        require(_tokenIds < MAX_SUPPLY, \"DONE MINTING\");\n        require(msg.value >= PRICE, \"NOT ENOUGH\");\n        require(mintedPerAddress[msg.sender] < MAX_MINTABLE, \"MINT LIMIT REACHED\");\n        \n        // Increment minted count for this address\n        mintedPerAddress[msg.sender]++;\n        \n        // Mint token\n        _tokenIds++;\n        bytes32 tokenId = bytes32(uint256(_tokenIds));\n        \n        // Generate random attributes\n        bytes32 predictableRandom = keccak256(\n            abi.encodePacked(\n                tokenId,\n                blockhash(block.number - 1),\n                msg.sender,\n                address(this)\n            )\n        );\n        \n        // Try to get UP name if minter is a Universal Profile\n        string memory upName = \"\";\n        if (isUniversalProfile(msg.sender)) {\n            upName = getUPName(msg.sender);\n            if (bytes(upName).length == 0) {\n                upName = \"UP Owner\";\n            }\n        } else {\n            upName = \"luksonaut\";\n        }\n        \n        // Set token attributes through mintAndGenerate\n        mintAndGenerateWithUsername(msg.sender, tokenId, predictableRandom, upName);\n        \n        // Send funds to recipient\n        (bool success, ) = recipient.call{ value: msg.value }(\"\");\n        require(success, \"could not send\");\n        \n        return tokenId;\n    }\n    \n    /**\n     * @dev Mint token and generate attributes with username\n     */\n    function mintAndGenerateWithUsername(address _to, bytes32 _tokenId, bytes32 _randomSeed, string memory _username) internal {\n        // Set token attributes\n        color[_tokenId] = bytes2(_randomSeed[0]) |\n            (bytes2(_randomSeed[1]) >> 8) |\n            (bytes3(_randomSeed[2]) >> 16);\n            \n        chubbiness[_tokenId] = 35 + ((55 * uint256(uint8(_randomSeed[3]))) / 255);\n        \n        mouthLength[_tokenId] = 180 + ((uint256(chubbiness[_tokenId] / 4) * uint256(uint8(_randomSeed[4]))) / 255);\n        \n        // Randomly assign loogie type\n        uint256 typeIndex = uint256(uint8(_randomSeed[5])) % 5;\n        if (typeIndex == 0) loogieTypes[_tokenId] = \"green\";\n        else if (typeIndex == 1) loogieTypes[_tokenId] = \"blue\";\n        else if (typeIndex == 2) loogieTypes[_tokenId] = \"red\";\n        else if (typeIndex == 3) loogieTypes[_tokenId] = \"purple\";\n        else loogieTypes[_tokenId] = \"yellow\";\n        \n        // Set username\n        upUsernames[_tokenId] = _username;\n        \n        // Mint the token\n        _mint(_to, _tokenId, true, \"\");\n    }\n    \n    // For backward compatibility\n    function mintAndGenerate(address _to, bytes32 _tokenId, bytes32 _randomSeed) internal {\n        // Get UP name if possible\n        string memory upName = \"\";\n        if (isUniversalProfile(_to)) {\n            upName = getUPName(_to);\n            if (bytes(upName).length == 0) {\n                upName = \"UP Owner\";\n            }\n        } else {\n            upName = \"luksonaut\";\n        }\n        \n        mintAndGenerateWithUsername(_to, _tokenId, _randomSeed, upName);\n    }\n    \n    /**\n     * @dev Set username for token\n     */\n    function setUsername(bytes32 tokenId, string memory username) public {\n        require(tokenOwnerOf(tokenId) == msg.sender, \"Not token owner\");\n        upUsernames[tokenId] = username;\n        emit UsernameUpdated(tokenId, username);\n    }\n    \n    /**\n     * @dev Withdraw funds\n     */\n    function withdraw(address payable _to) external onlyOwner {\n        _to.transfer(address(this).balance);\n    }\n    \n    /**\n     * @dev Override _getDataForTokenId to return token-specific metadata\n     */\n    function _getDataForTokenId(\n        bytes32 tokenId,\n        bytes32 dataKey\n    ) internal view virtual override returns (bytes memory dataValues) {\n        // Only override for LSP4 metadata key\n        if (dataKey != _LSP4_METADATA_KEY) {\n            return super._getDataForTokenId(tokenId, dataKey);\n        }\n        \n        // Get token attributes\n        string memory _loogieType = loogieTypes[tokenId];\n        bytes3 colorValue = color[tokenId];\n        uint256 chubbinessValue = chubbiness[tokenId];\n        uint256 mouthLengthValue = mouthLength[tokenId];\n        string memory username = upUsernames[tokenId];\n        \n        // Check if owner is a Universal Profile\n        address owner = tokenOwnerOf(tokenId);\n        bool isUP = isUniversalProfile(owner);\n        \n        // Get metadata in LUKSO format\n        (bytes memory _metadata, bytes memory _encoded) = getMetadataBytes(\n            tokenId,\n            _loogieType,\n            colorValue,\n            chubbinessValue,\n            mouthLengthValue,\n            username,\n            isUP\n        );\n        \n        // Return in LUKSO format with verification\n        bytes memory verifiableURI = bytes.concat(\n            hex\"00006f357c6a0020\",\n            keccak256(_metadata),\n            _encoded\n        );\n        \n        return verifiableURI;\n    }\n} "}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/standalone/LSP8LoogiesEnhanced.sol:272:39:\n    |\n272 |     function generateMatrixRainEffect(bytes32 tokenId) internal pure returns (string memory) {\n    |                                       ^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":11507,"file":"contracts/standalone/LSP8LoogiesEnhanced.sol","start":11492},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/standalone/LSP8LoogiesEnhanced.sol:442:10:\n    |\n442 |         (string memory collectionSvg, string memory encodedSvg) = generateCollectionSVG();\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":18398,"file":"contracts/standalone/LSP8LoogiesEnhanced.sol","start":18371},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n   --> contracts/standalone/LSP8LoogiesEnhanced.sol:159:5:\n    |\n159 |     function generateLoogieSVG(\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":11384,"file":"contracts/standalone/LSP8LoogiesEnhanced.sol","start":5479},"type":"Warning"}],"sources":{"@erc725/smart-contracts-v8/contracts/ERC725Y.sol":{"ast":{"absolutePath":"@erc725/smart-contracts-v8/contracts/ERC725Y.sol","exportedSymbols":{"ERC165":[4117],"ERC725Y":[269],"ERC725Y_DataKeysValuesEmptyArray":[333],"ERC725Y_DataKeysValuesLengthMismatch":[330],"ERC725Y_MsgValueDisallowed":[336],"IERC725Y":[386],"Ownable":[3722],"OwnableCannotSetZeroAddressAsOwner":[339],"_INTERFACEID_ERC725Y":[277]},"id":270,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:0"},{"absolutePath":"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol","file":"./interfaces/IERC725Y.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":270,"sourceUnit":387,"src":"78:51:0","symbolAliases":[{"foreign":{"id":2,"name":"IERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"86:8:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":270,"sourceUnit":4118,"src":"142:78:0","symbolAliases":[{"foreign":{"id":4,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"150:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":270,"sourceUnit":3723,"src":"221:67:0","symbolAliases":[{"foreign":{"id":6,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"229:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts-v8/contracts/constants.sol","file":"./constants.sol","id":9,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":270,"sourceUnit":293,"src":"303:53:0","symbolAliases":[{"foreign":{"id":8,"name":"_INTERFACEID_ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"311:20:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts-v8/contracts/errors.sol","file":"./errors.sol","id":14,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":270,"sourceUnit":340,"src":"368:182:0","symbolAliases":[{"foreign":{"id":10,"name":"ERC725Y_MsgValueDisallowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"381:26:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":11,"name":"ERC725Y_DataKeysValuesLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"413:36:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":12,"name":"ERC725Y_DataKeysValuesEmptyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"455:32:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":13,"name":"OwnableCannotSetZeroAddressAsOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"493:34:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":16,"name":"Ownable","nameLocations":["1029:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3722,"src":"1029:7:0"},"id":17,"nodeType":"InheritanceSpecifier","src":"1029:7:0"},{"baseName":{"id":18,"name":"ERC165","nameLocations":["1038:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":4117,"src":"1038:6:0"},"id":19,"nodeType":"InheritanceSpecifier","src":"1038:6:0"},{"baseName":{"id":20,"name":"IERC725Y","nameLocations":["1046:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":386,"src":"1046:8:0"},"id":21,"nodeType":"InheritanceSpecifier","src":"1046:8:0"}],"canonicalName":"ERC725Y","contractDependencies":[],"contractKind":"contract","documentation":{"id":15,"nodeType":"StructuredDocumentation","src":"552:456:0","text":" @title Deployable implementation with `constructor` of ERC725Y sub-standard, a generic data key/value store.\n @author Fabian Vogelsteller <fabian@lukso.network> and <CJ42>, <YamenMerhi>, <B00ste>, <SkimaHarvey>\n @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage."},"fullyImplemented":true,"id":269,"linearizedBaseContracts":[269,386,4117,4323,3722,3864],"name":"ERC725Y","nameLocation":"1018:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"1061:77:0","text":" @dev Map `bytes32` data keys to their `bytes` data values."},"id":26,"mutability":"mutable","name":"_store","nameLocation":"1178:6:0","nodeType":"VariableDeclaration","scope":269,"src":"1143:41:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"typeName":{"id":25,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1151:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1143:25:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":24,"name":"bytes","nodeType":"ElementaryTypeName","src":"1162:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"visibility":"internal"},{"body":{"id":49,"nodeType":"Block","src":"1599:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":32,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1613:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":35,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1637:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":34,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1629:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":33,"name":"address","nodeType":"ElementaryTypeName","src":"1629:7:0","typeDescriptions":{}}},"id":36,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1629:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1613:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":42,"nodeType":"IfStatement","src":"1609:100:0","trueBody":{"id":41,"nodeType":"Block","src":"1641:68:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":38,"name":"OwnableCannotSetZeroAddressAsOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"1662:34:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1662:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":40,"nodeType":"RevertStatement","src":"1655:43:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1745:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":43,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"1718:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Ownable_$3722_$","typeString":"type(contract Ownable)"}},"id":45,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:18:0","memberName":"_transferOwnership","nodeType":"MemberAccess","referencedDeclaration":3721,"src":"1718:26:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1718:40:0"}]},"documentation":{"id":27,"nodeType":"StructuredDocumentation","src":"1191:361:0","text":" @notice Deploying an ERC725Y smart contract and setting address `initialOwner` as the contract owner.\n @dev Deploy a new ERC725Y contract with the provided `initialOwner` as the contract {owner}.\n @param initialOwner the owner of the contract.\n @custom:requirements\n - `initialOwner` CANNOT be the zero address."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"initialOwner","nameLocation":"1577:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1569:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"1569:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1568:22:0"},"returnParameters":{"id":31,"nodeType":"ParameterList","parameters":[],"src":"1599:0:0"},"scope":269,"src":"1557:208:0","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[357],"body":{"id":63,"nodeType":"Block","src":"1925:41:0","statements":[{"expression":{"arguments":[{"id":60,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"1951:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":59,"name":"_getData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"1942:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view returns (bytes memory)"}},"id":61,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1942:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":58,"id":62,"nodeType":"Return","src":"1935:24:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1771:39:0","text":" @inheritdoc IERC725Y"},"functionSelector":"54f6127f","id":64,"implemented":true,"kind":"function","modifiers":[],"name":"getData","nameLocation":"1824:7:0","nodeType":"FunctionDefinition","overrides":{"id":55,"nodeType":"OverrideSpecifier","overrides":[],"src":"1883:8:0"},"parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53,"mutability":"mutable","name":"dataKey","nameLocation":"1849:7:0","nodeType":"VariableDeclaration","scope":64,"src":"1841:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":52,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1841:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1831:31:0"},"returnParameters":{"id":58,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57,"mutability":"mutable","name":"dataValue","nameLocation":"1914:9:0","nodeType":"VariableDeclaration","scope":64,"src":"1901:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":56,"name":"bytes","nodeType":"ElementaryTypeName","src":"1901:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1900:24:0"},"scope":269,"src":"1815:151:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[367],"body":{"id":110,"nodeType":"Block","src":"2144:330:0","statements":[{"expression":{"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":75,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"2154:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":79,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"2179:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2188:6:0","memberName":"length","nodeType":"MemberAccess","src":"2179:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":78,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2167:11:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":76,"name":"bytes","nodeType":"ElementaryTypeName","src":"2171:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":77,"nodeType":"ArrayTypeName","src":"2171:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":81,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2167:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"2154:41:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":83,"nodeType":"ExpressionStatement","src":"2154:41:0"},{"body":{"id":106,"nodeType":"Block","src":"2249:191:0","statements":[{"expression":{"id":100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":92,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"2263:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":94,"indexExpression":{"id":93,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2274:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2263:13:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":96,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"2288:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":98,"indexExpression":{"id":97,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2297:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2288:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":95,"name":"_getData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"2279:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view returns (bytes memory)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2279:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"2263:37:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":101,"nodeType":"ExpressionStatement","src":"2263:37:0"},{"id":105,"nodeType":"UncheckedBlock","src":"2384:46:0","statements":[{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2412:3:0","subExpression":{"id":102,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2414:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":104,"nodeType":"ExpressionStatement","src":"2412:3:0"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":88,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2226:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":89,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"2230:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2239:6:0","memberName":"length","nodeType":"MemberAccess","src":"2230:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2226:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":107,"initializationExpression":{"assignments":[85],"declarations":[{"constant":false,"id":85,"mutability":"mutable","name":"i","nameLocation":"2219:1:0","nodeType":"VariableDeclaration","scope":107,"src":"2211:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":84,"name":"uint256","nodeType":"ElementaryTypeName","src":"2211:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":87,"initialValue":{"hexValue":"30","id":86,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2223:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2211:13:0"},"nodeType":"ForStatement","src":"2206:234:0"},{"expression":{"id":108,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"2457:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"functionReturnParameters":74,"id":109,"nodeType":"Return","src":"2450:17:0"}]},"documentation":{"id":65,"nodeType":"StructuredDocumentation","src":"1972:39:0","text":" @inheritdoc IERC725Y"},"functionSelector":"dedff9c6","id":111,"implemented":true,"kind":"function","modifiers":[],"name":"getDataBatch","nameLocation":"2025:12:0","nodeType":"FunctionDefinition","overrides":{"id":70,"nodeType":"OverrideSpecifier","overrides":[],"src":"2099:8:0"},"parameters":{"id":69,"nodeType":"ParameterList","parameters":[{"constant":false,"id":68,"mutability":"mutable","name":"dataKeys","nameLocation":"2064:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2047:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":66,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2047:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":67,"nodeType":"ArrayTypeName","src":"2047:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"2037:41:0"},"returnParameters":{"id":74,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"mutability":"mutable","name":"dataValues","nameLocation":"2132:10:0","nodeType":"VariableDeclaration","scope":111,"src":"2117:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":71,"name":"bytes","nodeType":"ElementaryTypeName","src":"2117:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":72,"nodeType":"ArrayTypeName","src":"2117:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"2116:27:0"},"scope":269,"src":"2016:458:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[375],"body":{"id":135,"nodeType":"Block","src":"3198:110:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":122,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3212:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3216:5:0","memberName":"value","nodeType":"MemberAccess","src":"3212:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3225:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3212:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":129,"nodeType":"IfStatement","src":"3208:55:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":126,"name":"ERC725Y_MsgValueDisallowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"3235:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3235:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":128,"nodeType":"RevertStatement","src":"3228:35:0"}},{"expression":{"arguments":[{"id":131,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"3282:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":132,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"3291:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":130,"name":"_setData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"3273:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3273:28:0"}]},"documentation":{"id":112,"nodeType":"StructuredDocumentation","src":"2480:591:0","text":" @inheritdoc IERC725Y\n @custom:requirements\n - SHOULD only be callable by the {owner}.\n @custom:warning\n **Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value\n (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**.\n If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\n @custom:events {DataChanged} event."},"functionSelector":"7f23690c","id":136,"implemented":true,"kind":"function","modifiers":[{"id":120,"kind":"modifierInvocation","modifierName":{"id":119,"name":"onlyOwner","nameLocations":["3188:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":3641,"src":"3188:9:0"},"nodeType":"ModifierInvocation","src":"3188:9:0"}],"name":"setData","nameLocation":"3085:7:0","nodeType":"FunctionDefinition","overrides":{"id":118,"nodeType":"OverrideSpecifier","overrides":[],"src":"3179:8:0"},"parameters":{"id":117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":114,"mutability":"mutable","name":"dataKey","nameLocation":"3110:7:0","nodeType":"VariableDeclaration","scope":136,"src":"3102:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":113,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3102:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":116,"mutability":"mutable","name":"dataValue","nameLocation":"3140:9:0","nodeType":"VariableDeclaration","scope":136,"src":"3127:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":115,"name":"bytes","nodeType":"ElementaryTypeName","src":"3127:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3092:63:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[],"src":"3198:0:0"},"scope":269,"src":"3076:232:0","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[385],"body":{"id":162,"nodeType":"Block","src":"4103:201:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":149,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4201:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4205:5:0","memberName":"value","nodeType":"MemberAccess","src":"4201:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4214:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4201:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":"@dev do not allow to send value by default when setting data in ERC725Y","id":156,"nodeType":"IfStatement","src":"4197:55:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":153,"name":"ERC725Y_MsgValueDisallowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"4224:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4224:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":155,"nodeType":"RevertStatement","src":"4217:35:0"}},{"expression":{"arguments":[{"id":158,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"4276:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":159,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"4286:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}],"id":157,"name":"_setDataBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"4262:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$","typeString":"function (bytes32[] memory,bytes memory[] memory)"}},"id":160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":161,"nodeType":"ExpressionStatement","src":"4262:35:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3314:644:0","text":" @inheritdoc IERC725Y\n @custom:requirements\n - SHOULD only be callable by the {owner} of the contract.\n @custom:warning\n **Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value\n (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**.\n If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\n @custom:events {DataChanged} event **for each data key/value pair set**."},"functionSelector":"97902421","id":163,"implemented":true,"kind":"function","modifiers":[{"id":147,"kind":"modifierInvocation","modifierName":{"id":146,"name":"onlyOwner","nameLocations":["4093:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":3641,"src":"4093:9:0"},"nodeType":"ModifierInvocation","src":"4093:9:0"}],"name":"setDataBatch","nameLocation":"3972:12:0","nodeType":"FunctionDefinition","overrides":{"id":145,"nodeType":"OverrideSpecifier","overrides":[],"src":"4084:8:0"},"parameters":{"id":144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"dataKeys","nameLocation":"4011:8:0","nodeType":"VariableDeclaration","scope":163,"src":"3994:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":138,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3994:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":139,"nodeType":"ArrayTypeName","src":"3994:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":143,"mutability":"mutable","name":"dataValues","nameLocation":"4044:10:0","nodeType":"VariableDeclaration","scope":163,"src":"4029:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":141,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":142,"nodeType":"ArrayTypeName","src":"4029:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"3984:76:0"},"returnParameters":{"id":148,"nodeType":"ParameterList","parameters":[],"src":"4103:0:0"},"scope":269,"src":"3963:341:0","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":175,"nodeType":"Block","src":"4903:39:0","statements":[{"expression":{"baseExpression":{"id":171,"name":"_store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"4920:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":173,"indexExpression":{"id":172,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"4927:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4920:15:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"functionReturnParameters":170,"id":174,"nodeType":"Return","src":"4913:22:0"}]},"documentation":{"id":164,"nodeType":"StructuredDocumentation","src":"4310:484:0","text":" @dev Read the value stored under a specific `dataKey` inside the underlying ERC725Y storage,\n represented as a mapping of `bytes32` data keys mapped to their `bytes` data values.\n ```solidity\n mapping(bytes32 => bytes) _store\n ```\n @param dataKey A bytes32 data key to read the associated `bytes` value from the store.\n @return dataValue The `bytes` value associated with the given `dataKey` in the ERC725Y storage."},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_getData","nameLocation":"4808:8:0","nodeType":"FunctionDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"dataKey","nameLocation":"4834:7:0","nodeType":"VariableDeclaration","scope":176,"src":"4826:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4826:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4816:31:0"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"dataValue","nameLocation":"4892:9:0","nodeType":"VariableDeclaration","scope":176,"src":"4879:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":168,"name":"bytes","nodeType":"ElementaryTypeName","src":"4879:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4878:24:0"},"scope":269,"src":"4799:143:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":195,"nodeType":"Block","src":"5594:90:0","statements":[{"expression":{"id":188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":184,"name":"_store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"5604:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":186,"indexExpression":{"id":185,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"5611:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5604:15:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":187,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"5622:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"5604:27:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":189,"nodeType":"ExpressionStatement","src":"5604:27:0"},{"eventCall":{"arguments":[{"id":191,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"5658:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":192,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"5667:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":190,"name":"DataChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"5646:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5646:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":194,"nodeType":"EmitStatement","src":"5641:36:0"}]},"documentation":{"id":177,"nodeType":"StructuredDocumentation","src":"4948:543:0","text":" @dev Write a `dataValue` to the underlying ERC725Y storage, represented as a mapping of\n `bytes32` data keys mapped to their `bytes` data values.\n ```solidity\n mapping(bytes32 => bytes) _store\n ```\n @param dataKey A bytes32 data key to write the associated `bytes` value to the store.\n @param dataValue The `bytes` value to associate with the given `dataKey` in the ERC725Y storage.\n @custom:events {DataChanged} event emitted after a successful `setData` call."},"id":196,"implemented":true,"kind":"function","modifiers":[],"name":"_setData","nameLocation":"5505:8:0","nodeType":"FunctionDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":179,"mutability":"mutable","name":"dataKey","nameLocation":"5531:7:0","nodeType":"VariableDeclaration","scope":196,"src":"5523:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5523:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":181,"mutability":"mutable","name":"dataValue","nameLocation":"5561:9:0","nodeType":"VariableDeclaration","scope":196,"src":"5548:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":180,"name":"bytes","nodeType":"ElementaryTypeName","src":"5548:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5513:63:0"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"5594:0:0"},"scope":269,"src":"5496:188:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":248,"nodeType":"Block","src":"6442:473:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":206,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"6456:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6465:6:0","memberName":"length","nodeType":"MemberAccess","src":"6456:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":208,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"6475:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6486:6:0","memberName":"length","nodeType":"MemberAccess","src":"6475:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6456:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":215,"nodeType":"IfStatement","src":"6452:112:0","trueBody":{"id":214,"nodeType":"Block","src":"6494:70:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":211,"name":"ERC725Y_DataKeysValuesLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"6515:36:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6515:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":213,"nodeType":"RevertStatement","src":"6508:45:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":216,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"6578:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6587:6:0","memberName":"length","nodeType":"MemberAccess","src":"6578:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6578:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":224,"nodeType":"IfStatement","src":"6574:92:0","trueBody":{"id":223,"nodeType":"Block","src":"6600:66:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":220,"name":"ERC725Y_DataKeysValuesEmptyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"6621:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6621:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":222,"nodeType":"RevertStatement","src":"6614:41:0"}]}},{"body":{"id":246,"nodeType":"Block","src":"6719:190:0","statements":[{"expression":{"arguments":[{"baseExpression":{"id":234,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"6742:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":236,"indexExpression":{"id":235,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"6751:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6742:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":237,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"6755:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":239,"indexExpression":{"id":238,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"6766:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6755:13:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":233,"name":"_setData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"6733:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6733:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":241,"nodeType":"ExpressionStatement","src":"6733:36:0"},{"id":245,"nodeType":"UncheckedBlock","src":"6853:46:0","statements":[{"expression":{"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6881:3:0","subExpression":{"id":242,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"6883:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":244,"nodeType":"ExpressionStatement","src":"6881:3:0"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":229,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"6696:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":230,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"6700:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6709:6:0","memberName":"length","nodeType":"MemberAccess","src":"6700:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6696:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":247,"initializationExpression":{"assignments":[226],"declarations":[{"constant":false,"id":226,"mutability":"mutable","name":"i","nameLocation":"6689:1:0","nodeType":"VariableDeclaration","scope":247,"src":"6681:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":225,"name":"uint256","nodeType":"ElementaryTypeName","src":"6681:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":228,"initialValue":{"hexValue":"30","id":227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6693:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6681:13:0"},"nodeType":"ForStatement","src":"6676:233:0"}]},"documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"5690:631:0","text":" @dev Write a set of `dataValues` to the underlying ERC725Y storage for each associated `dataKeys`. The ERC725Y storage is\n represented as a mapping of `bytes32` data keys mapped to their `bytes` data values.\n ```solidity\n mapping(bytes32 => bytes) _store\n ```\n @param dataKeys A bytes32 array of data keys to write the associated `bytes` value to the store.\n @param dataValues The `bytes` values to associate with each given `dataKeys` in the ERC725Y storage.\n @custom:events {DataChanged} event emitted for each successful data key-value pairs set."},"id":249,"implemented":true,"kind":"function","modifiers":[],"name":"_setDataBatch","nameLocation":"6335:13:0","nodeType":"FunctionDefinition","parameters":{"id":204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"dataKeys","nameLocation":"6375:8:0","nodeType":"VariableDeclaration","scope":249,"src":"6358:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6358:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":199,"nodeType":"ArrayTypeName","src":"6358:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":203,"mutability":"mutable","name":"dataValues","nameLocation":"6408:10:0","nodeType":"VariableDeclaration","scope":249,"src":"6393:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":201,"name":"bytes","nodeType":"ElementaryTypeName","src":"6393:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":202,"nodeType":"ArrayTypeName","src":"6393:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"6348:76:0"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[],"src":"6442:0:0"},"scope":269,"src":"6326:589:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[4116],"body":{"id":267,"nodeType":"Block","src":"7068:123:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":258,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"7097:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":259,"name":"_INTERFACEID_ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"7112:20:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"7097:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":263,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"7172:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":261,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7148:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC725Y_$269_$","typeString":"type(contract super ERC725Y)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7154:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4116,"src":"7148:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7148:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7097:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":257,"id":266,"nodeType":"Return","src":"7078:106:0"}]},"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"6921:37:0","text":" @inheritdoc ERC165"},"functionSelector":"01ffc9a7","id":268,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"6972:17:0","nodeType":"FunctionDefinition","overrides":{"id":254,"nodeType":"OverrideSpecifier","overrides":[],"src":"7044:8:0"},"parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"interfaceId","nameLocation":"7006:11:0","nodeType":"VariableDeclaration","scope":268,"src":"6999:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":251,"name":"bytes4","nodeType":"ElementaryTypeName","src":"6999:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"6989:34:0"},"returnParameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":268,"src":"7062:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":255,"name":"bool","nodeType":"ElementaryTypeName","src":"7062:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7061:6:0"},"scope":269,"src":"6963:228:0","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":270,"src":"1009:6184:0","usedErrors":[330,333,336,339],"usedEvents":[349,3623]}],"src":"39:7155:0"},"id":0},"@erc725/smart-contracts-v8/contracts/constants.sol":{"ast":{"absolutePath":"@erc725/smart-contracts-v8/contracts/constants.sol","exportedSymbols":{"OPERATION_0_CALL":[280],"OPERATION_1_CREATE":[283],"OPERATION_2_CREATE2":[286],"OPERATION_3_STATICCALL":[289],"OPERATION_4_DELEGATECALL":[292],"_INTERFACEID_ERC725X":[274],"_INTERFACEID_ERC725Y":[277]},"id":293,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":271,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:1"},{"constant":true,"id":274,"mutability":"constant","name":"_INTERFACEID_ERC725X","nameLocation":"104:20:1","nodeType":"VariableDeclaration","scope":293,"src":"88:49:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":272,"name":"bytes4","nodeType":"ElementaryTypeName","src":"88:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783735343561636163","id":273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"127:10:1","typeDescriptions":{"typeIdentifier":"t_rational_1967500460_by_1","typeString":"int_const 1967500460"},"value":"0x7545acac"},"visibility":"internal"},{"constant":true,"id":277,"mutability":"constant","name":"_INTERFACEID_ERC725Y","nameLocation":"155:20:1","nodeType":"VariableDeclaration","scope":293,"src":"139:49:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":275,"name":"bytes4","nodeType":"ElementaryTypeName","src":"139:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783632396161363934","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"178:10:1","typeDescriptions":{"typeIdentifier":"t_rational_1654302356_by_1","typeString":"int_const 1654302356"},"value":"0x629aa694"},"visibility":"internal"},{"constant":true,"id":280,"mutability":"constant","name":"OPERATION_0_CALL","nameLocation":"235:16:1","nodeType":"VariableDeclaration","scope":293,"src":"218:37:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"218:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"254:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":true,"id":283,"mutability":"constant","name":"OPERATION_1_CREATE","nameLocation":"274:18:1","nodeType":"VariableDeclaration","scope":293,"src":"257:39:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":281,"name":"uint256","nodeType":"ElementaryTypeName","src":"257:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"295:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":286,"mutability":"constant","name":"OPERATION_2_CREATE2","nameLocation":"315:19:1","nodeType":"VariableDeclaration","scope":293,"src":"298:40:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":284,"name":"uint256","nodeType":"ElementaryTypeName","src":"298:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"337:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"constant":true,"id":289,"mutability":"constant","name":"OPERATION_3_STATICCALL","nameLocation":"357:22:1","nodeType":"VariableDeclaration","scope":293,"src":"340:43:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":287,"name":"uint256","nodeType":"ElementaryTypeName","src":"340:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"382:1:1","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"internal"},{"constant":true,"id":292,"mutability":"constant","name":"OPERATION_4_DELEGATECALL","nameLocation":"402:24:1","nodeType":"VariableDeclaration","scope":293,"src":"385:45:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":290,"name":"uint256","nodeType":"ElementaryTypeName","src":"385:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"34","id":291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"429:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"visibility":"internal"}],"src":"39:393:1"},"id":1},"@erc725/smart-contracts-v8/contracts/errors.sol":{"ast":{"absolutePath":"@erc725/smart-contracts-v8/contracts/errors.sol","exportedSymbols":{"ERC725X_ContractDeploymentFailed":[318],"ERC725X_CreateOperationsRequireEmptyRecipientAddress":[315],"ERC725X_ExecuteParametersEmptyArray":[327],"ERC725X_ExecuteParametersLengthMismatch":[324],"ERC725X_InsufficientBalance":[301],"ERC725X_MsgValueDisallowedInDelegateCall":[312],"ERC725X_MsgValueDisallowedInStaticCall":[309],"ERC725X_NoContractBytecodeProvided":[321],"ERC725X_UnknownOperationType":[306],"ERC725Y_DataKeysValuesEmptyArray":[333],"ERC725Y_DataKeysValuesLengthMismatch":[330],"ERC725Y_MsgValueDisallowed":[336],"OwnableCannotSetZeroAddressAsOwner":[339]},"id":340,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":294,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:2"},{"documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"64:336:2","text":" @dev Reverts when trying to send more native tokens `value` than available in current `balance`.\n @param balance The balance of native tokens of the ERC725X smart contract.\n @param value The amount of native tokens sent via `ERC725X.execute(...)`/`ERC725X.executeBatch(...)` that is greater than the contract's `balance`."},"errorSelector":"0df9a8f8","id":301,"name":"ERC725X_InsufficientBalance","nameLocation":"407:27:2","nodeType":"ErrorDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":297,"mutability":"mutable","name":"balance","nameLocation":"443:7:2","nodeType":"VariableDeclaration","scope":301,"src":"435:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":296,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":299,"mutability":"mutable","name":"value","nameLocation":"460:5:2","nodeType":"VariableDeclaration","scope":301,"src":"452:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":298,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"434:32:2"},"src":"401:66:2"},{"documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"469:314:2","text":" @dev Reverts when the `operationTypeProvided` is none of the default operation types available.\n (CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4)\n @param operationTypeProvided The unrecognised operation type number provided to `ERC725X.execute(...)`/`ERC725X.executeBatch(...)`."},"errorSelector":"7583b3bc","id":306,"name":"ERC725X_UnknownOperationType","nameLocation":"790:28:2","nodeType":"ErrorDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"operationTypeProvided","nameLocation":"827:21:2","nodeType":"VariableDeclaration","scope":306,"src":"819:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:31:2"},"src":"784:66:2"},{"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"852:282:2","text":" @dev Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `staticcall` (`operationType == 3`).\n Sending native tokens via `staticcall` is not allowed because it is a state changing operation."},"errorSelector":"72f2bc6a","id":309,"name":"ERC725X_MsgValueDisallowedInStaticCall","nameLocation":"1141:38:2","nodeType":"ErrorDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[],"src":"1179:2:2"},"src":"1135:47:2"},{"documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"1184:277:2","text":" @dev Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `delegatecall` (`operationType == 4`).\n Sending native tokens via `staticcall` is not allowed because `msg.value` is persisting."},"errorSelector":"5ac83135","id":312,"name":"ERC725X_MsgValueDisallowedInDelegateCall","nameLocation":"1468:40:2","nodeType":"ErrorDefinition","parameters":{"id":311,"nodeType":"ParameterList","parameters":[],"src":"1508:2:2"},"src":"1462:49:2"},{"documentation":{"id":313,"nodeType":"StructuredDocumentation","src":"1513:246:2","text":" @dev Reverts when passing a `to` address that is not `address(0)` (= address zero) while deploying a contract via {execute} or {executeBatch} functions.\n This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`)."},"errorSelector":"3041824a","id":315,"name":"ERC725X_CreateOperationsRequireEmptyRecipientAddress","nameLocation":"1766:52:2","nodeType":"ErrorDefinition","parameters":{"id":314,"nodeType":"ParameterList","parameters":[],"src":"1818:2:2"},"src":"1760:61:2"},{"documentation":{"id":316,"nodeType":"StructuredDocumentation","src":"1823:181:2","text":" @dev Reverts when contract deployment failed via {execute} or {executeBatch} functions,\n This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`)."},"errorSelector":"0b07489b","id":318,"name":"ERC725X_ContractDeploymentFailed","nameLocation":"2011:32:2","nodeType":"ErrorDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[],"src":"2043:2:2"},"src":"2005:41:2"},{"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"2048:224:2","text":" @dev Reverts when no contract bytecode was provided as parameter when trying to deploy a contract via {execute} or {executeBatch}.\n This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`)."},"errorSelector":"b81cd8d9","id":321,"name":"ERC725X_NoContractBytecodeProvided","nameLocation":"2279:34:2","nodeType":"ErrorDefinition","parameters":{"id":320,"nodeType":"ParameterList","parameters":[],"src":"2313:2:2"},"src":"2273:43:2"},{"documentation":{"id":322,"nodeType":"StructuredDocumentation","src":"2318:208:2","text":" @dev Reverts when there is not the same number of elements in the `operationTypes`, `targets` addresses, `values`, and `datas`\n array parameters provided when calling the {executeBatch} function."},"errorSelector":"3ff55f4d","id":324,"name":"ERC725X_ExecuteParametersLengthMismatch","nameLocation":"2533:39:2","nodeType":"ErrorDefinition","parameters":{"id":323,"nodeType":"ParameterList","parameters":[],"src":"2572:2:2"},"src":"2527:48:2"},{"documentation":{"id":325,"nodeType":"StructuredDocumentation","src":"2577:114:2","text":" @dev Reverts when one of the array parameter provided to the {executeBatch} function is an empty array."},"errorSelector":"e9ad2b5f","id":327,"name":"ERC725X_ExecuteParametersEmptyArray","nameLocation":"2698:35:2","nodeType":"ErrorDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[],"src":"2733:2:2"},"src":"2692:44:2"},{"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"2738:175:2","text":" @dev Reverts when there is not the same number of elements in the `datakeys` and `dataValues`\n array parameters provided when calling the {setDataBatch} function."},"errorSelector":"3bcc8979","id":330,"name":"ERC725Y_DataKeysValuesLengthMismatch","nameLocation":"2920:36:2","nodeType":"ErrorDefinition","parameters":{"id":329,"nodeType":"ParameterList","parameters":[],"src":"2956:2:2"},"src":"2914:45:2"},{"documentation":{"id":331,"nodeType":"StructuredDocumentation","src":"2961:110:2","text":" @dev Reverts when one of the array parameter provided to {setDataBatch} function is an empty array."},"errorSelector":"97da5f95","id":333,"name":"ERC725Y_DataKeysValuesEmptyArray","nameLocation":"3078:32:2","nodeType":"ErrorDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[],"src":"3110:2:2"},"src":"3072:41:2"},{"documentation":{"id":334,"nodeType":"StructuredDocumentation","src":"3115:87:2","text":" @dev Reverts when sending value to the {setData} or {setDataBatch} function."},"errorSelector":"f36ba737","id":336,"name":"ERC725Y_MsgValueDisallowed","nameLocation":"3209:26:2","nodeType":"ErrorDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[],"src":"3235:2:2"},"src":"3203:35:2"},{"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"3240:125:2","text":" @dev Reverts when trying to set `address(0)` as the contract owner when deploying the contract or initializing it."},"errorSelector":"1ad8836c","id":339,"name":"OwnableCannotSetZeroAddressAsOwner","nameLocation":"3372:34:2","nodeType":"ErrorDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[],"src":"3406:2:2"},"src":"3366:43:2"}],"src":"39:3371:2"},"id":2},"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol":{"ast":{"absolutePath":"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol","exportedSymbols":{"IERC725Y":[386]},"id":387,"license":"CC0-1.0","nodeType":"SourceUnit","nodes":[{"id":341,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"36:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC725Y","contractDependencies":[],"contractKind":"interface","documentation":{"id":342,"nodeType":"StructuredDocumentation","src":"61:322:3","text":" @title The interface for ERC725Y sub-standard, a generic data key/value store.\n @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage."},"fullyImplemented":false,"id":386,"linearizedBaseContracts":[386],"name":"IERC725Y","nameLocation":"394:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":343,"nodeType":"StructuredDocumentation","src":"409:373:3","text":" @notice The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\n @dev Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\n @param dataKey The data key for which a bytes value is set.\n @param dataValue The value to set for the given data key."},"eventSelector":"ece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2","id":349,"name":"DataChanged","nameLocation":"793:11:3","nodeType":"EventDefinition","parameters":{"id":348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":345,"indexed":true,"mutability":"mutable","name":"dataKey","nameLocation":"821:7:3","nodeType":"VariableDeclaration","scope":349,"src":"805:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"805:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":347,"indexed":false,"mutability":"mutable","name":"dataValue","nameLocation":"836:9:3","nodeType":"VariableDeclaration","scope":349,"src":"830:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":346,"name":"bytes","nodeType":"ElementaryTypeName","src":"830:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"804:42:3"},"src":"787:60:3"},{"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"853:361:3","text":" @notice Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\n @dev Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\n @param dataKey The data key for which to retrieve the value.\n @return dataValue The bytes value stored under the specified data key."},"functionSelector":"54f6127f","id":357,"implemented":false,"kind":"function","modifiers":[],"name":"getData","nameLocation":"1228:7:3","nodeType":"FunctionDefinition","parameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"dataKey","nameLocation":"1253:7:3","nodeType":"VariableDeclaration","scope":357,"src":"1245:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1245:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1235:31:3"},"returnParameters":{"id":356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":355,"mutability":"mutable","name":"dataValue","nameLocation":"1303:9:3","nodeType":"VariableDeclaration","scope":357,"src":"1290:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":354,"name":"bytes","nodeType":"ElementaryTypeName","src":"1290:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1289:24:3"},"scope":386,"src":"1219:95:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"1320:353:3","text":" @notice Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\n @dev Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\n @param dataKeys The array of keys which values to retrieve\n @return dataValues The array of data stored at multiple keys"},"functionSelector":"dedff9c6","id":367,"implemented":false,"kind":"function","modifiers":[],"name":"getDataBatch","nameLocation":"1687:12:3","nodeType":"FunctionDefinition","parameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"dataKeys","nameLocation":"1726:8:3","nodeType":"VariableDeclaration","scope":367,"src":"1709:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":359,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1709:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":360,"nodeType":"ArrayTypeName","src":"1709:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1699:41:3"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"dataValues","nameLocation":"1779:10:3","nodeType":"VariableDeclaration","scope":367,"src":"1764:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":363,"name":"bytes","nodeType":"ElementaryTypeName","src":"1764:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":364,"nodeType":"ArrayTypeName","src":"1764:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"1763:27:3"},"scope":386,"src":"1678:113:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":368,"nodeType":"StructuredDocumentation","src":"1797:536:3","text":" @notice Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\n @dev Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`.\n The function is marked as payable to enable flexibility on child contracts. For instance to implement\n a fee mechanism for setting specific data.\n @param dataKey The data key for which to set a new value.\n @param dataValue The new bytes value to set."},"functionSelector":"7f23690c","id":375,"implemented":false,"kind":"function","modifiers":[],"name":"setData","nameLocation":"2347:7:3","nodeType":"FunctionDefinition","parameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":370,"mutability":"mutable","name":"dataKey","nameLocation":"2363:7:3","nodeType":"VariableDeclaration","scope":375,"src":"2355:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2355:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":372,"mutability":"mutable","name":"dataValue","nameLocation":"2385:9:3","nodeType":"VariableDeclaration","scope":375,"src":"2372:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":371,"name":"bytes","nodeType":"ElementaryTypeName","src":"2372:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2354:41:3"},"returnParameters":{"id":374,"nodeType":"ParameterList","parameters":[],"src":"2412:0:3"},"scope":386,"src":"2338:75:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":376,"nodeType":"StructuredDocumentation","src":"2419:478:3","text":" @notice Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\n @dev Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\n @param dataKeys An array of data keys to set bytes values for.\n @param dataValues An array of bytes values to set for each `dataKeys`."},"functionSelector":"97902421","id":385,"implemented":false,"kind":"function","modifiers":[],"name":"setDataBatch","nameLocation":"2911:12:3","nodeType":"FunctionDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":379,"mutability":"mutable","name":"dataKeys","nameLocation":"2950:8:3","nodeType":"VariableDeclaration","scope":385,"src":"2933:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2933:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":378,"nodeType":"ArrayTypeName","src":"2933:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":382,"mutability":"mutable","name":"dataValues","nameLocation":"2983:10:3","nodeType":"VariableDeclaration","scope":385,"src":"2968:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":380,"name":"bytes","nodeType":"ElementaryTypeName","src":"2968:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":381,"nodeType":"ArrayTypeName","src":"2968:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"2923:76:3"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[],"src":"3016:0:3"},"scope":386,"src":"2902:115:3","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":387,"src":"384:2635:3","usedErrors":[],"usedEvents":[349]}],"src":"36:2984:3"},"id":3},"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol":{"ast":{"absolutePath":"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol","exportedSymbols":{"IERC165":[4323],"IERC725Y":[437]},"id":438,"license":"CC0-1.0","nodeType":"SourceUnit","nodes":[{"id":388,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"36:23:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":390,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":438,"sourceUnit":4324,"src":"75:80:4","symbolAliases":[{"foreign":{"id":389,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"83:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":392,"name":"IERC165","nameLocations":["502:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":4323,"src":"502:7:4"},"id":393,"nodeType":"InheritanceSpecifier","src":"502:7:4"}],"canonicalName":"IERC725Y","contractDependencies":[],"contractKind":"interface","documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"157:322:4","text":" @title The interface for ERC725Y sub-standard, a generic data key/value store.\n @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage."},"fullyImplemented":false,"id":437,"linearizedBaseContracts":[437,4323],"name":"IERC725Y","nameLocation":"490:8:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":394,"nodeType":"StructuredDocumentation","src":"516:373:4","text":" @notice The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\n @dev Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\n @param dataKey The data key for which a bytes value is set.\n @param dataValue The value to set for the given data key."},"eventSelector":"ece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2","id":400,"name":"DataChanged","nameLocation":"900:11:4","nodeType":"EventDefinition","parameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"indexed":true,"mutability":"mutable","name":"dataKey","nameLocation":"928:7:4","nodeType":"VariableDeclaration","scope":400,"src":"912:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":395,"name":"bytes32","nodeType":"ElementaryTypeName","src":"912:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":398,"indexed":false,"mutability":"mutable","name":"dataValue","nameLocation":"943:9:4","nodeType":"VariableDeclaration","scope":400,"src":"937:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":397,"name":"bytes","nodeType":"ElementaryTypeName","src":"937:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"911:42:4"},"src":"894:60:4"},{"documentation":{"id":401,"nodeType":"StructuredDocumentation","src":"960:361:4","text":" @notice Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\n @dev Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\n @param dataKey The data key for which to retrieve the value.\n @return dataValue The bytes value stored under the specified data key."},"functionSelector":"54f6127f","id":408,"implemented":false,"kind":"function","modifiers":[],"name":"getData","nameLocation":"1335:7:4","nodeType":"FunctionDefinition","parameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"dataKey","nameLocation":"1360:7:4","nodeType":"VariableDeclaration","scope":408,"src":"1352:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1352:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1342:31:4"},"returnParameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"dataValue","nameLocation":"1410:9:4","nodeType":"VariableDeclaration","scope":408,"src":"1397:22:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":405,"name":"bytes","nodeType":"ElementaryTypeName","src":"1397:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1396:24:4"},"scope":437,"src":"1326:95:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":409,"nodeType":"StructuredDocumentation","src":"1427:353:4","text":" @notice Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\n @dev Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\n @param dataKeys The array of keys which values to retrieve\n @return dataValues The array of data stored at multiple keys"},"functionSelector":"dedff9c6","id":418,"implemented":false,"kind":"function","modifiers":[],"name":"getDataBatch","nameLocation":"1794:12:4","nodeType":"FunctionDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"dataKeys","nameLocation":"1833:8:4","nodeType":"VariableDeclaration","scope":418,"src":"1816:25:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1816:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":411,"nodeType":"ArrayTypeName","src":"1816:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1806:41:4"},"returnParameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"dataValues","nameLocation":"1886:10:4","nodeType":"VariableDeclaration","scope":418,"src":"1871:25:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":414,"name":"bytes","nodeType":"ElementaryTypeName","src":"1871:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":415,"nodeType":"ArrayTypeName","src":"1871:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"1870:27:4"},"scope":437,"src":"1785:113:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":419,"nodeType":"StructuredDocumentation","src":"1904:536:4","text":" @notice Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\n @dev Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`.\n The function is marked as payable to enable flexibility on child contracts. For instance to implement\n a fee mechanism for setting specific data.\n @param dataKey The data key for which to set a new value.\n @param dataValue The new bytes value to set."},"functionSelector":"7f23690c","id":426,"implemented":false,"kind":"function","modifiers":[],"name":"setData","nameLocation":"2454:7:4","nodeType":"FunctionDefinition","parameters":{"id":424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":421,"mutability":"mutable","name":"dataKey","nameLocation":"2470:7:4","nodeType":"VariableDeclaration","scope":426,"src":"2462:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":420,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2462:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":423,"mutability":"mutable","name":"dataValue","nameLocation":"2492:9:4","nodeType":"VariableDeclaration","scope":426,"src":"2479:22:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":422,"name":"bytes","nodeType":"ElementaryTypeName","src":"2479:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2461:41:4"},"returnParameters":{"id":425,"nodeType":"ParameterList","parameters":[],"src":"2519:0:4"},"scope":437,"src":"2445:75:4","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"2526:478:4","text":" @notice Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\n @dev Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\n @param dataKeys An array of data keys to set bytes values for.\n @param dataValues An array of bytes values to set for each `dataKeys`."},"functionSelector":"97902421","id":436,"implemented":false,"kind":"function","modifiers":[],"name":"setDataBatch","nameLocation":"3018:12:4","nodeType":"FunctionDefinition","parameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"dataKeys","nameLocation":"3057:8:4","nodeType":"VariableDeclaration","scope":436,"src":"3040:25:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":428,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3040:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":429,"nodeType":"ArrayTypeName","src":"3040:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":433,"mutability":"mutable","name":"dataValues","nameLocation":"3090:10:4","nodeType":"VariableDeclaration","scope":436,"src":"3075:25:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":431,"name":"bytes","nodeType":"ElementaryTypeName","src":"3075:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":432,"nodeType":"ArrayTypeName","src":"3075:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"3030:76:4"},"returnParameters":{"id":435,"nodeType":"ParameterList","parameters":[],"src":"3123:0:4"},"scope":437,"src":"3009:115:4","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":438,"src":"480:2646:4","usedErrors":[],"usedEvents":[400]}],"src":"36:3091:4"},"id":4},"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol":{"ast":{"absolutePath":"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol","exportedSymbols":{"ILSP1UniversalReceiver":[464]},"id":465,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":439,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"ILSP1UniversalReceiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":440,"nodeType":"StructuredDocumentation","src":"64:257:5","text":" @title Interface of the LSP1 - Universal Receiver standard, an entry function for a contract to receive arbitrary information.\n @dev LSP1UniversalReceiver allows to receive arbitrary messages and to be informed when assets are sent or received."},"fullyImplemented":false,"id":464,"linearizedBaseContracts":[464],"name":"ILSP1UniversalReceiver","nameLocation":"332:22:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":441,"nodeType":"StructuredDocumentation","src":"361:894:5","text":" @dev Emitted when the {universalReceiver} function was called with a specific `typeId` and some `receivedData`\n @notice Address `from` called the `universalReceiver(...)` function while sending `value` LYX. Notification type (typeId): `typeId` - Data received: `receivedData`.\n @param from The address of the EOA or smart contract that called the {universalReceiver(...)} function.\n @param value The amount sent to the {universalReceiver(...)} function.\n @param typeId A `bytes32` unique identifier (= _\"hook\"_) that describe the type of notification, information or transaction received by the contract. Can be related to a specific standard or a hook.\n @param receivedData Any arbitrary data that was sent to the {universalReceiver(...)} function.\n @param returnedValue The value returned by the {universalReceiver(...)} function."},"eventSelector":"9c3ba68eb5742b8e3961aea0afc7371a71bf433c8a67a831803b64c064a178c2","id":453,"name":"UniversalReceiver","nameLocation":"1266:17:5","nodeType":"EventDefinition","parameters":{"id":452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"1309:4:5","nodeType":"VariableDeclaration","scope":453,"src":"1293:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":442,"name":"address","nodeType":"ElementaryTypeName","src":"1293:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":445,"indexed":true,"mutability":"mutable","name":"value","nameLocation":"1339:5:5","nodeType":"VariableDeclaration","scope":453,"src":"1323:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":444,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":447,"indexed":true,"mutability":"mutable","name":"typeId","nameLocation":"1370:6:5","nodeType":"VariableDeclaration","scope":453,"src":"1354:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":446,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1354:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":449,"indexed":false,"mutability":"mutable","name":"receivedData","nameLocation":"1392:12:5","nodeType":"VariableDeclaration","scope":453,"src":"1386:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":448,"name":"bytes","nodeType":"ElementaryTypeName","src":"1386:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":451,"indexed":false,"mutability":"mutable","name":"returnedValue","nameLocation":"1420:13:5","nodeType":"VariableDeclaration","scope":453,"src":"1414:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":450,"name":"bytes","nodeType":"ElementaryTypeName","src":"1414:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1283:156:5"},"src":"1260:180:5"},{"documentation":{"id":454,"nodeType":"StructuredDocumentation","src":"1446:517:5","text":" @dev Generic function that can be used to notify the contract about specific incoming transactions or events like asset transfers, vault transfers, etc. Allows for custom on-chain and off-chain reactions based on the `typeId` and `data`.\n @notice Reacted on received notification with `typeId` & `data`.\n @param typeId The hash of a specific standard or a hook.\n @param data The arbitrary data received with the call.\n @custom:events {UniversalReceiver} event."},"functionSelector":"6bb56a14","id":463,"implemented":false,"kind":"function","modifiers":[],"name":"universalReceiver","nameLocation":"1977:17:5","nodeType":"FunctionDefinition","parameters":{"id":459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":456,"mutability":"mutable","name":"typeId","nameLocation":"2012:6:5","nodeType":"VariableDeclaration","scope":463,"src":"2004:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2004:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":458,"mutability":"mutable","name":"data","nameLocation":"2043:4:5","nodeType":"VariableDeclaration","scope":463,"src":"2028:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":457,"name":"bytes","nodeType":"ElementaryTypeName","src":"2028:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1994:59:5"},"returnParameters":{"id":462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":463,"src":"2080:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":460,"name":"bytes","nodeType":"ElementaryTypeName","src":"2080:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2079:14:5"},"scope":464,"src":"1968:126:5","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":465,"src":"322:1774:5","usedErrors":[],"usedEvents":[453]}],"src":"39:2058:5"},"id":5},"@lukso/lsp1-contracts/contracts/LSP1Constants.sol":{"ast":{"absolutePath":"@lukso/lsp1-contracts/contracts/LSP1Constants.sol","exportedSymbols":{"_INTERFACEID_LSP1":[469],"_INTERFACEID_LSP1_DELEGATE":[472],"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY":[478],"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX":[475]},"id":479,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":466,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:6"},{"constant":true,"id":469,"mutability":"constant","name":"_INTERFACEID_LSP1","nameLocation":"108:17:6","nodeType":"VariableDeclaration","scope":479,"src":"92:46:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":467,"name":"bytes4","nodeType":"ElementaryTypeName","src":"92:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783662623536613134","id":468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"128:10:6","typeDescriptions":{"typeIdentifier":"t_rational_1807051284_by_1","typeString":"int_const 1807051284"},"value":"0x6bb56a14"},"visibility":"internal"},{"constant":true,"id":472,"mutability":"constant","name":"_INTERFACEID_LSP1_DELEGATE","nameLocation":"156:26:6","nodeType":"VariableDeclaration","scope":479,"src":"140:55:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":470,"name":"bytes4","nodeType":"ElementaryTypeName","src":"140:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786132343562626461","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"185:10:6","typeDescriptions":{"typeIdentifier":"t_rational_2722479066_by_1","typeString":"int_const 2722479066"},"value":"0xa245bbda"},"visibility":"internal"},{"constant":true,"id":475,"mutability":"constant","name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX","nameLocation":"296:40:6","nodeType":"VariableDeclaration","scope":479,"src":"279:82:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"},"typeName":{"id":473,"name":"bytes10","nodeType":"ElementaryTypeName","src":"279:7:6","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"value":{"hexValue":"30783063666335316165633337633535613464306231","id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"339:22:6","typeDescriptions":{"typeIdentifier":"t_rational_61322863157712349614257_by_1","typeString":"int_const 61322863157712349614257"},"value":"0x0cfc51aec37c55a4d0b1"},"visibility":"internal"},{"constant":true,"id":478,"mutability":"constant","name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY","nameLocation":"427:37:6","nodeType":"VariableDeclaration","scope":479,"src":"410:123:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"410:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830636663353161656333376335356134643062316136356336323535633462663266626466363237376633636330373330633435623832386236646238623437","id":477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"467:66:6","typeDescriptions":{"typeIdentifier":"t_rational_5873563396395204772354203425660447968463963513255343663932314865640255753031_by_1","typeString":"int_const 5873...(68 digits omitted)...3031"},"value":"0x0cfc51aec37c55a4d0b1a65c6255c4bf2fbdf6277f3cc0730c45b828b6db8b47"},"visibility":"internal"}],"src":"39:496:6"},"id":6},"@lukso/lsp1-contracts/contracts/LSP1Utils.sol":{"ast":{"absolutePath":"@lukso/lsp1-contracts/contracts/LSP1Utils.sol","exportedSymbols":{"ERC165Checker":[4311],"ILSP1":[464],"LSP1Utils":[563],"LSP2Utils":[1462],"_INTERFACEID_LSP1":[469],"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY":[478],"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX":[475]},"id":564,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":480,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","id":482,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":564,"sourceUnit":4312,"src":"77:98:7","symbolAliases":[{"foreign":{"id":481,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"90:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp2-contracts/contracts/LSP2Utils.sol","file":"@lukso/lsp2-contracts/contracts/LSP2Utils.sol","id":484,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":564,"sourceUnit":1463,"src":"176:72:7","symbolAliases":[{"foreign":{"id":483,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"184:9:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol","file":"./ILSP1UniversalReceiver.sol","id":486,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":564,"sourceUnit":465,"src":"263:77:7","symbolAliases":[{"foreign":{"id":485,"name":"ILSP1UniversalReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"271:22:7","typeDescriptions":{}},"local":"ILSP1","nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp1-contracts/contracts/LSP1Constants.sol","file":"./LSP1Constants.sol","id":490,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":564,"sourceUnit":479,"src":"355:149:7","symbolAliases":[{"foreign":{"id":487,"name":"_INTERFACEID_LSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"368:17:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":488,"name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"391:37:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":489,"name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"434:40:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"LSP1Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"506:369:7","text":" @title LSP1 Utility library.\n @author Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\n @dev LSP1Utils is a library of utility functions that can be used to notify the `universalReceiver` function of a contract\n that implements LSP1 and retrieve information related to LSP1 `typeId`.\n Based on LSP1 Universal Receiver standard."},"fullyImplemented":true,"id":563,"linearizedBaseContracts":[563],"name":"LSP1Utils","nameLocation":"884:9:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":494,"libraryName":{"id":492,"name":"ERC165Checker","nameLocations":["906:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":4311,"src":"906:13:7"},"nodeType":"UsingForDirective","src":"900:32:7","typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"924:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":518,"nodeType":"Block","src":"1486:226:7","statements":[{"condition":{"arguments":[{"id":506,"name":"_INTERFACEID_LSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"1582:17:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":504,"name":"lsp1Implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"1513:18:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1532:32:7","memberName":"supportsERC165InterfaceUnchecked","nodeType":"MemberAccess","referencedDeclaration":4310,"src":"1513:51:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$attached_to$_t_address_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1513:100:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":517,"nodeType":"IfStatement","src":"1496:210:7","trueBody":{"id":516,"nodeType":"Block","src":"1624:82:7","statements":[{"expression":{"arguments":[{"id":512,"name":"typeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"1682:6:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":513,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"1690:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":509,"name":"lsp1Implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"1644:18:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":508,"name":"ILSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"1638:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILSP1UniversalReceiver_$464_$","typeString":"type(contract ILSP1UniversalReceiver)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILSP1UniversalReceiver_$464","typeString":"contract ILSP1UniversalReceiver"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1664:17:7","memberName":"universalReceiver","nodeType":"MemberAccess","referencedDeclaration":463,"src":"1638:43:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32,bytes memory) payable external returns (bytes memory)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:57:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":515,"nodeType":"ExpressionStatement","src":"1638:57:7"}]}}]},"documentation":{"id":495,"nodeType":"StructuredDocumentation","src":"938:408:7","text":" @dev Notify a contract at `lsp1Implementation` address by calling its `universalReceiver` function if this contract\n supports the LSP1 interface.\n @param lsp1Implementation The address of the contract to notify.\n @param typeId A `bytes32` typeId.\n @param data Any optional data to send to the `universalReceiver` function to the `lsp1Implementation` address."},"id":519,"implemented":true,"kind":"function","modifiers":[],"name":"notifyUniversalReceiver","nameLocation":"1360:23:7","nodeType":"FunctionDefinition","parameters":{"id":502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":497,"mutability":"mutable","name":"lsp1Implementation","nameLocation":"1401:18:7","nodeType":"VariableDeclaration","scope":519,"src":"1393:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":496,"name":"address","nodeType":"ElementaryTypeName","src":"1393:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":499,"mutability":"mutable","name":"typeId","nameLocation":"1437:6:7","nodeType":"VariableDeclaration","scope":519,"src":"1429:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1429:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":501,"mutability":"mutable","name":"data","nameLocation":"1466:4:7","nodeType":"VariableDeclaration","scope":519,"src":"1453:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":500,"name":"bytes","nodeType":"ElementaryTypeName","src":"1453:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1383:93:7"},"returnParameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"1486:0:7"},"scope":563,"src":"1351:361:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":533,"nodeType":"Block","src":"2325:77:7","statements":[{"expression":{"baseExpression":{"id":529,"name":"erc725YStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"2342:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":531,"indexExpression":{"id":530,"name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"2357:37:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2342:53:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"functionReturnParameters":528,"id":532,"nodeType":"Return","src":"2335:60:7"}]},"documentation":{"id":520,"nodeType":"StructuredDocumentation","src":"1718:471:7","text":" @notice Retrieving the value stored under the ERC725Y data key `LSP1UniversalReceiverDelegate`.\n @dev Query internally the ERC725Y storage of a `ERC725Y` smart contract to retrieve\n the value set under the `LSP1UniversalReceiverDelegate` data key.\n @param erc725YStorage A reference to the ERC725Y storage mapping of the contract.\n @return The bytes value stored under the `LSP1UniversalReceiverDelegate` data key."},"id":534,"implemented":true,"kind":"function","modifiers":[],"name":"getLSP1DelegateValue","nameLocation":"2203:20:7","nodeType":"FunctionDefinition","parameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"mutability":"mutable","name":"erc725YStorage","nameLocation":"2267:14:7","nodeType":"VariableDeclaration","scope":534,"src":"2233:48:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"typeName":{"id":523,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2241:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2233:25:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":522,"name":"bytes","nodeType":"ElementaryTypeName","src":"2252:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"visibility":"internal"}],"src":"2223:64:7"},"returnParameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":534,"src":"2311:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":526,"name":"bytes","nodeType":"ElementaryTypeName","src":"2311:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2310:14:7"},"scope":563,"src":"2194:208:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":561,"nodeType":"Block","src":"3177:216:7","statements":[{"assignments":[547],"declarations":[{"constant":false,"id":547,"mutability":"mutable","name":"lsp1TypeIdDataKey","nameLocation":"3195:17:7","nodeType":"VariableDeclaration","scope":561,"src":"3187:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":546,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3187:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":556,"initialValue":{"arguments":[{"id":550,"name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"3257:40:7","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"id":553,"name":"typeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"3319:6:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3311:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":551,"name":"bytes20","nodeType":"ElementaryTypeName","src":"3311:7:7","typeDescriptions":{}}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3311:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":548,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"3215:9:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP2Utils_$1462_$","typeString":"type(library LSP2Utils)"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3225:18:7","memberName":"generateMappingKey","nodeType":"MemberAccess","referencedDeclaration":952,"src":"3215:28:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes10_$_t_bytes20_$returns$_t_bytes32_$","typeString":"function (bytes10,bytes20) pure returns (bytes32)"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3215:121:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3187:149:7"},{"expression":{"baseExpression":{"id":557,"name":"erc725YStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"3353:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":559,"indexExpression":{"id":558,"name":"lsp1TypeIdDataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"3368:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3353:33:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"functionReturnParameters":545,"id":560,"nodeType":"Return","src":"3346:40:7"}]},"documentation":{"id":535,"nodeType":"StructuredDocumentation","src":"2408:600:7","text":" @notice Retrieving the value stored under the ERC725Y data key `LSP1UniversalReceiverDelegate:<type-id>` for a specific `typeId`.\n @dev Query internally the ERC725Y storage of a `ERC725Y` smart contract to retrieve\n the value set under the `LSP1UniversalReceiverDelegate:<bytes32>` data key for a specific LSP1 `typeId`.\n @param erc725YStorage A reference to the ERC725Y storage mapping of the contract.\n @param typeId A bytes32 LSP1 `typeId`;\n @return The bytes value stored under the `LSP1UniversalReceiverDelegate:<bytes32>` data key."},"id":562,"implemented":true,"kind":"function","modifiers":[],"name":"getLSP1DelegateValueForTypeId","nameLocation":"3022:29:7","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":539,"mutability":"mutable","name":"erc725YStorage","nameLocation":"3095:14:7","nodeType":"VariableDeclaration","scope":562,"src":"3061:48:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"typeName":{"id":538,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":536,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3069:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"3061:25:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":537,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"visibility":"internal"},{"constant":false,"id":541,"mutability":"mutable","name":"typeId","nameLocation":"3127:6:7","nodeType":"VariableDeclaration","scope":562,"src":"3119:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":540,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3119:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3051:88:7"},"returnParameters":{"id":545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":562,"src":"3163:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":543,"name":"bytes","nodeType":"ElementaryTypeName","src":"3163:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3162:14:7"},"scope":563,"src":"3013:380:7","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":564,"src":"876:2519:7","usedErrors":[],"usedEvents":[]}],"src":"39:3357:7"},"id":7},"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol":{"ast":{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol","exportedSymbols":{"_INTERFACEID_LSP17_EXTENDABLE":[568],"_INTERFACEID_LSP17_EXTENSION":[571],"_LSP17_EXTENSION_PREFIX":[574]},"id":575,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":565,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:8"},{"constant":true,"id":568,"mutability":"constant","name":"_INTERFACEID_LSP17_EXTENDABLE","nameLocation":"150:29:8","nodeType":"VariableDeclaration","scope":575,"src":"134:58:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":566,"name":"bytes4","nodeType":"ElementaryTypeName","src":"134:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786139313866613662","id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"182:10:8","typeDescriptions":{"typeIdentifier":"t_rational_2836986475_by_1","typeString":"int_const 2836986475"},"value":"0xa918fa6b"},"visibility":"internal"},{"constant":true,"id":571,"mutability":"constant","name":"_INTERFACEID_LSP17_EXTENSION","nameLocation":"251:28:8","nodeType":"VariableDeclaration","scope":575,"src":"235:57:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":569,"name":"bytes4","nodeType":"ElementaryTypeName","src":"235:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786365653738623430","id":570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"282:10:8","typeDescriptions":{"typeIdentifier":"t_rational_3471280960_by_1","typeString":"int_const 3471280960"},"value":"0xcee78b40"},"visibility":"internal"},{"constant":true,"id":574,"mutability":"constant","name":"_LSP17_EXTENSION_PREFIX","nameLocation":"407:23:8","nodeType":"VariableDeclaration","scope":575,"src":"390:65:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"},"typeName":{"id":572,"name":"bytes10","nodeType":"ElementaryTypeName","src":"390:7:8","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"value":{"hexValue":"30786365653738623430393464613836303131303936","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"433:22:8","typeDescriptions":{"typeIdentifier":"t_rational_977078727535809873907862_by_1","typeString":"int_const 977078727535809873907862"},"value":"0xcee78b4094da86011096"},"visibility":"internal"}],"src":"39:418:8"},"id":8},"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol":{"ast":{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol","exportedSymbols":{"InvalidExtensionAddress":[591],"InvalidFunctionSelector":[586],"NoExtensionFoundForFunctionSelector":[581]},"id":592,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":576,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:9"},{"documentation":{"id":577,"nodeType":"StructuredDocumentation","src":"64:94:9","text":" @dev reverts when there is no extension for the function selector being called with"},"errorSelector":"bb370b2b","id":581,"name":"NoExtensionFoundForFunctionSelector","nameLocation":"165:35:9","nodeType":"ErrorDefinition","parameters":{"id":580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":579,"mutability":"mutable","name":"functionSelector","nameLocation":"208:16:9","nodeType":"VariableDeclaration","scope":581,"src":"201:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":578,"name":"bytes4","nodeType":"ElementaryTypeName","src":"201:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"200:25:9"},"src":"159:67:9"},{"documentation":{"id":582,"nodeType":"StructuredDocumentation","src":"228:114:9","text":" @dev reverts when the contract is called with a function selector not valid (less than 4 bytes of data)"},"errorSelector":"e5099ee3","id":586,"name":"InvalidFunctionSelector","nameLocation":"349:23:9","nodeType":"ErrorDefinition","parameters":{"id":585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":584,"mutability":"mutable","name":"data","nameLocation":"379:4:9","nodeType":"VariableDeclaration","scope":586,"src":"373:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":583,"name":"bytes","nodeType":"ElementaryTypeName","src":"373:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"372:12:9"},"src":"343:42:9"},{"documentation":{"id":587,"nodeType":"StructuredDocumentation","src":"387:110:9","text":" @dev reverts when the bytes retrieved from the LSP17 data key is not a valid address (not 20 bytes)"},"errorSelector":"42bfe79f","id":591,"name":"InvalidExtensionAddress","nameLocation":"504:23:9","nodeType":"ErrorDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"storedData","nameLocation":"534:10:9","nodeType":"VariableDeclaration","scope":591,"src":"528:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":588,"name":"bytes","nodeType":"ElementaryTypeName","src":"528:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"527:18:9"},"src":"498:48:9"}],"src":"39:508:9"},"id":9},"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol":{"ast":{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol","exportedSymbols":{"ERC165":[4117],"ERC165Checker":[4311],"LSP17Extendable":[725],"NoExtensionFoundForFunctionSelector":[581],"_INTERFACEID_LSP17_EXTENDABLE":[568]},"id":726,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":593,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:10"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165.sol","id":595,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":726,"sourceUnit":4118,"src":"75:78:10","symbolAliases":[{"foreign":{"id":594,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"83:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","id":597,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":726,"sourceUnit":4312,"src":"154:98:10","symbolAliases":[{"foreign":{"id":596,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"167:13:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol","file":"./LSP17Constants.sol","id":599,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":726,"sourceUnit":575,"src":"267:67:10","symbolAliases":[{"foreign":{"id":598,"name":"_INTERFACEID_LSP17_EXTENDABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"275:29:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol","file":"./LSP17Errors.sol","id":601,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":726,"sourceUnit":592,"src":"346:70:10","symbolAliases":[{"foreign":{"id":600,"name":"NoExtensionFoundForFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"354:35:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":603,"name":"ERC165","nameLocations":["924:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":4117,"src":"924:6:10"},"id":604,"nodeType":"InheritanceSpecifier","src":"924:6:10"}],"canonicalName":"LSP17Extendable","contractDependencies":[],"contractKind":"contract","documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"418:468:10","text":" @title Module to add more functionalities to a contract using extensions.\n @dev Implementation of the `fallback(...)` logic according to LSP17 - Contract Extension standard.\n This module can be inherited to extend the functionality of the parent contract when\n calling a function that doesn't exist on the parent contract via forwarding the call\n to an extension mapped to the function selector being called, set originally by the parent contract"},"fullyImplemented":false,"id":725,"linearizedBaseContracts":[725,4117,4323],"name":"LSP17Extendable","nameLocation":"905:15:10","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4116],"body":{"id":622,"nodeType":"Block","src":"1103:132:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":613,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"1132:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":614,"name":"_INTERFACEID_LSP17_EXTENDABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"1147:29:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1132:44:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":618,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"1216:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":616,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1192:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_LSP17Extendable_$725_$","typeString":"type(contract super LSP17Extendable)"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1198:17:10","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4116,"src":"1192:23:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1192:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1132:96:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":612,"id":621,"nodeType":"Return","src":"1113:115:10"}]},"documentation":{"id":605,"nodeType":"StructuredDocumentation","src":"937:56:10","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":623,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1007:17:10","nodeType":"FunctionDefinition","overrides":{"id":609,"nodeType":"OverrideSpecifier","overrides":[],"src":"1079:8:10"},"parameters":{"id":608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"interfaceId","nameLocation":"1041:11:10","nodeType":"VariableDeclaration","scope":623,"src":"1034:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":606,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1034:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1024:34:10"},"returnParameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":623,"src":"1097:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":610,"name":"bool","nodeType":"ElementaryTypeName","src":"1097:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1096:6:10"},"scope":725,"src":"998:237:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":654,"nodeType":"Block","src":"1774:341:10","statements":[{"assignments":[632,null],"declarations":[{"constant":false,"id":632,"mutability":"mutable","name":"erc165Extension","nameLocation":"1793:15:10","nodeType":"VariableDeclaration","scope":654,"src":"1785:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"1785:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},null],"id":638,"initialValue":{"arguments":[{"expression":{"expression":{"id":634,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"1856:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC165_$4117_$","typeString":"type(contract ERC165)"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1863:17:10","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4116,"src":"1856:24:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1881:8:10","memberName":"selector","nodeType":"MemberAccess","src":"1856:33:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":633,"name":"_getExtensionAndForwardValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"1814:28:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_address_$_t_bool_$","typeString":"function (bytes4) view returns (address,bool)"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1814:85:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"1784:115:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":639,"name":"erc165Extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"1913:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1940:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1932:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":640,"name":"address","nodeType":"ElementaryTypeName","src":"1932:7:10","typeDescriptions":{}}},"id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1932:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1913:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":647,"nodeType":"IfStatement","src":"1909:47:10","trueBody":{"expression":{"hexValue":"66616c7365","id":645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1951:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":630,"id":646,"nodeType":"Return","src":"1944:12:10"}},{"expression":{"arguments":[{"id":650,"name":"erc165Extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"2050:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":651,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"2083:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":648,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"1986:13:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC165Checker_$4311_$","typeString":"type(library ERC165Checker)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2000:32:10","memberName":"supportsERC165InterfaceUnchecked","nodeType":"MemberAccess","referencedDeclaration":4310,"src":"1986:46:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1986:122:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":630,"id":653,"nodeType":"Return","src":"1967:141:10"}]},"documentation":{"id":624,"nodeType":"StructuredDocumentation","src":"1241:412:10","text":" @dev Returns whether the interfaceId being checked is supported in the extension of the\n {supportsInterface} selector.\n To be used by extendable contracts wishing to extend the ERC165 interfaceIds originally\n supported by reading whether the interfaceId queried is supported in the `supportsInterface`\n extension if the extension is set, if not it returns false."},"id":655,"implemented":true,"kind":"function","modifiers":[],"name":"_supportsInterfaceInERC165Extension","nameLocation":"1667:35:10","nodeType":"FunctionDefinition","parameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":626,"mutability":"mutable","name":"interfaceId","nameLocation":"1719:11:10","nodeType":"VariableDeclaration","scope":655,"src":"1712:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":625,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1712:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1702:34:10"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":655,"src":"1768:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":628,"name":"bool","nodeType":"ElementaryTypeName","src":"1768:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1767:6:10"},"scope":725,"src":"1658:457:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":656,"nodeType":"StructuredDocumentation","src":"2121:255:10","text":" @dev Returns the extension mapped to a specific function selector\n If no extension was found, return the address(0)\n To be overridden.\n Up to the implementer contract to return an extension based on a function selector"},"id":665,"implemented":false,"kind":"function","modifiers":[],"name":"_getExtensionAndForwardValue","nameLocation":"2390:28:10","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":658,"mutability":"mutable","name":"functionSelector","nameLocation":"2435:16:10","nodeType":"VariableDeclaration","scope":665,"src":"2428:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":657,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2428:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2418:39:10"},"returnParameters":{"id":664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":665,"src":"2489:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":660,"name":"address","nodeType":"ElementaryTypeName","src":"2489:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":665,"src":"2498:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":662,"name":"bool","nodeType":"ElementaryTypeName","src":"2498:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2488:15:10"},"scope":725,"src":"2381:123:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":723,"nodeType":"Block","src":"3788:991:10","statements":[{"assignments":[674,676],"declarations":[{"constant":false,"id":674,"mutability":"mutable","name":"extension","nameLocation":"3863:9:10","nodeType":"VariableDeclaration","scope":723,"src":"3855:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"3855:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":676,"mutability":"mutable","name":"shouldForwardValue","nameLocation":"3891:18:10","nodeType":"VariableDeclaration","scope":723,"src":"3886:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":675,"name":"bool","nodeType":"ElementaryTypeName","src":"3886:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":681,"initialValue":{"arguments":[{"expression":{"id":678,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3951:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3955:3:10","memberName":"sig","nodeType":"MemberAccess","src":"3951:7:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":677,"name":"_getExtensionAndForwardValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"3922:28:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_address_$_t_bool_$","typeString":"function (bytes4) view returns (address,bool)"}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3922:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"3841:118:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":682,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"4019:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4040:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4032:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":683,"name":"address","nodeType":"ElementaryTypeName","src":"4032:7:10","typeDescriptions":{}}},"id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4019:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":693,"nodeType":"IfStatement","src":"4015:92:10","trueBody":{"errorCall":{"arguments":[{"expression":{"id":689,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4099:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4103:3:10","memberName":"sig","nodeType":"MemberAccess","src":"4099:7:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":688,"name":"NoExtensionFoundForFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"4063:35:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4063:44:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":692,"nodeType":"RevertStatement","src":"4056:51:10"}},{"assignments":[695,697],"declarations":[{"constant":false,"id":695,"mutability":"mutable","name":"success","nameLocation":"4124:7:10","nodeType":"VariableDeclaration","scope":723,"src":"4119:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":694,"name":"bool","nodeType":"ElementaryTypeName","src":"4119:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"result","nameLocation":"4146:6:10","nodeType":"VariableDeclaration","scope":723,"src":"4133:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":696,"name":"bytes","nodeType":"ElementaryTypeName","src":"4133:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":715,"initialValue":{"arguments":[{"arguments":[{"id":708,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"4253:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":709,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4263:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4267:6:10","memberName":"sender","nodeType":"MemberAccess","src":"4263:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":711,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4275:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4279:5:10","memberName":"value","nodeType":"MemberAccess","src":"4275:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":706,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4236:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4240:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"4236:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4236:49:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":698,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"4156:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4166:4:10","memberName":"call","nodeType":"MemberAccess","src":"4156:14:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"condition":{"id":700,"name":"shouldForwardValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"4191:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4224:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4191:34:10","trueExpression":{"expression":{"id":701,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4212:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4216:5:10","memberName":"value","nodeType":"MemberAccess","src":"4212:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4156:79:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4156:130:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4118:168:10"},{"condition":{"id":716,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"4301:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":721,"nodeType":"Block","src":"4354:419:10","statements":[{"AST":{"nodeType":"YulBlock","src":"4638:125:10","statements":[{"nodeType":"YulVariableDeclaration","src":"4656:36:10","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"4685:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4679:5:10"},"nodeType":"YulFunctionCall","src":"4679:13:10"},"variables":[{"name":"resultdata_size","nodeType":"YulTypedName","src":"4660:15:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"4720:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"4728:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4716:3:10"},"nodeType":"YulFunctionCall","src":"4716:15:10"},{"name":"resultdata_size","nodeType":"YulIdentifier","src":"4733:15:10"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4709:6:10"},"nodeType":"YulFunctionCall","src":"4709:40:10"},"nodeType":"YulExpressionStatement","src":"4709:40:10"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":697,"isOffset":false,"isSlot":false,"src":"4685:6:10","valueSize":1},{"declaration":697,"isOffset":false,"isSlot":false,"src":"4720:6:10","valueSize":1}],"id":720,"nodeType":"InlineAssembly","src":"4629:134:10"}]},"id":722,"nodeType":"IfStatement","src":"4297:476:10","trueBody":{"id":719,"nodeType":"Block","src":"4310:38:10","statements":[{"expression":{"id":717,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"4331:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":672,"id":718,"nodeType":"Return","src":"4324:13:10"}]}}]},"documentation":{"id":666,"nodeType":"StructuredDocumentation","src":"2510:1160:10","text":" @dev Forwards the call to an extension mapped to a function selector.\n Calls {_getExtensionAndForwardValue} to get the address of the extension mapped to the function selector being\n called on the account. If there is no extension, the `address(0)` will be returned.\n Forwards the value if the extension is payable.\n Reverts if there is no extension for the function being called.\n If there is an extension for the function selector being called, it calls the extension with the\n `CALL` opcode, passing the `msg.data` appended with the 20 bytes of the {msg.sender} and 32 bytes of the `msg.value`.\n @custom:hint This function does not forward to the extension contract the `msg.value` received by the contract that inherits `LSP17Extendable`.\n If you would like to forward the `msg.value` to the extension contract, you can override the code of this internal function as follow:\n ```solidity\n (bool success, bytes memory result) = extension.call{value: msg.value}(\n     abi.encodePacked(callData, msg.sender, msg.value)\n );\n ```"},"id":724,"implemented":true,"kind":"function","modifiers":[],"name":"_fallbackLSP17Extendable","nameLocation":"3684:24:10","nodeType":"FunctionDefinition","parameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"mutability":"mutable","name":"callData","nameLocation":"3733:8:10","nodeType":"VariableDeclaration","scope":724,"src":"3718:23:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":667,"name":"bytes","nodeType":"ElementaryTypeName","src":"3718:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3708:39:10"},"returnParameters":{"id":672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":724,"src":"3774:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":670,"name":"bytes","nodeType":"ElementaryTypeName","src":"3774:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3773:14:10"},"scope":725,"src":"3675:1104:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":726,"src":"887:3894:10","usedErrors":[],"usedEvents":[]}],"src":"39:4743:10"},"id":10},"@lukso/lsp2-contracts/contracts/LSP2Utils.sol":{"ast":{"absolutePath":"@lukso/lsp2-contracts/contracts/LSP2Utils.sol","exportedSymbols":{"IERC725Y":[437],"LSP2Utils":[1462]},"id":1463,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":727,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:11"},{"absolutePath":"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol","file":"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol","id":729,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1463,"sourceUnit":438,"src":"78:89:11","symbolAliases":[{"foreign":{"id":728,"name":"IERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"91:8:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"LSP2Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":730,"nodeType":"StructuredDocumentation","src":"169:312:11","text":" @title LSP2 Utility library.\n @author Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\n @dev LSP2Utils is a library of utility functions that can be used to encode data key of different key type\n defined on the LSP2 standard.\n Based on LSP2 ERC725Y JSON Schema standard."},"fullyImplemented":true,"id":1462,"linearizedBaseContracts":[1462],"name":"LSP2Utils","nameLocation":"490:9:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":745,"nodeType":"Block","src":"929:49:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":741,"name":"keyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"962:7:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"956:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":739,"name":"bytes","nodeType":"ElementaryTypeName","src":"956:5:11","typeDescriptions":{}}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"956:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":738,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"946:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"946:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":737,"id":744,"nodeType":"Return","src":"939:32:11"}]},"documentation":{"id":731,"nodeType":"StructuredDocumentation","src":"506:319:11","text":" @dev Generates a data key of keyType Singleton by hashing the string `keyName`. As:\n ```\n keccak256(\"keyName\")\n ```\n @param keyName The string to hash to generate a Singleton data key.\n @return The generated `bytes32` data key of key type Singleton."},"id":746,"implemented":true,"kind":"function","modifiers":[],"name":"generateSingletonKey","nameLocation":"839:20:11","nodeType":"FunctionDefinition","parameters":{"id":734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":733,"mutability":"mutable","name":"keyName","nameLocation":"883:7:11","nodeType":"VariableDeclaration","scope":746,"src":"869:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":732,"name":"string","nodeType":"ElementaryTypeName","src":"869:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"859:37:11"},"returnParameters":{"id":737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":746,"src":"920:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":735,"name":"bytes32","nodeType":"ElementaryTypeName","src":"920:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"919:9:11"},"scope":1462,"src":"830:148:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":794,"nodeType":"Block","src":"1548:415:11","statements":[{"assignments":[755],"declarations":[{"constant":false,"id":755,"mutability":"mutable","name":"dataKey","nameLocation":"1571:7:11","nodeType":"VariableDeclaration","scope":794,"src":"1558:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":754,"name":"bytes","nodeType":"ElementaryTypeName","src":"1558:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":760,"initialValue":{"arguments":[{"id":758,"name":"arrayKeyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"1587:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1581:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":756,"name":"bytes","nodeType":"ElementaryTypeName","src":"1581:5:11","typeDescriptions":{}}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1581:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1558:42:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":762,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"1618:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1626:6:11","memberName":"length","nodeType":"MemberAccess","src":"1618:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"32","id":764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1636:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1618:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d555354206265206c6f6e676572207468616e20322063686172616374657273","id":766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1639:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1330e5505d03eb8c2f3c566a974e84b491f709354814e0b84c5b75865f42fea2","typeString":"literal_string \"MUST be longer than 2 characters\""},"value":"MUST be longer than 2 characters"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1330e5505d03eb8c2f3c566a974e84b491f709354814e0b84c5b75865f42fea2","typeString":"literal_string \"MUST be longer than 2 characters\""}],"id":761,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1610:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1610:64:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":768,"nodeType":"ExpressionStatement","src":"1610:64:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":770,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"1705:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":775,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":771,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"1713:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1721:6:11","memberName":"length","nodeType":"MemberAccess","src":"1713:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1730:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1713:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1705:27:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783562","id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1736:4:11","typeDescriptions":{"typeIdentifier":"t_rational_91_by_1","typeString":"int_const 91"},"value":"0x5b"},"src":"1705:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":778,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"1783:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":783,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":779,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"1791:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1799:6:11","memberName":"length","nodeType":"MemberAccess","src":"1791:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1791:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1783:27:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783564","id":784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1814:4:11","typeDescriptions":{"typeIdentifier":"t_rational_93_by_1","typeString":"int_const 93"},"value":"0x5d"},"src":"1783:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1705:113:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d697373696e6720656d7074792073717561726520627261636b65747320275b5d272061742074686520656e64206f6620746865206b6579206e616d65","id":787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1847:63:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5e3b6aa919fe1aff12eb32ef9916d0e70635ca417f19f845d5b01296b02b93b3","typeString":"literal_string \"Missing empty square brackets '[]' at the end of the key name\""},"value":"Missing empty square brackets '[]' at the end of the key name"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5e3b6aa919fe1aff12eb32ef9916d0e70635ca417f19f845d5b01296b02b93b3","typeString":"literal_string \"Missing empty square brackets '[]' at the end of the key name\""}],"id":769,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1684:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1684:236:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":789,"nodeType":"ExpressionStatement","src":"1684:236:11"},{"expression":{"arguments":[{"id":791,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"1948:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":790,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1938:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1938:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":753,"id":793,"nodeType":"Return","src":"1931:25:11"}]},"documentation":{"id":747,"nodeType":"StructuredDocumentation","src":"984:459:11","text":" @dev Generates a data key of keyType Array by hashing `arrayKeyName`. As:\n ```\n keccak256(\"arrayKeyName[]\")\n ```\n @param arrayKeyName The string that will be used to generate a data key of key type Array.\n @return The generated `bytes32` data key of key type Array.\n @custom:requirements\n - The `keyName` must include at the end of the string the square brackets `\"[]\"`."},"id":795,"implemented":true,"kind":"function","modifiers":[],"name":"generateArrayKey","nameLocation":"1457:16:11","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":749,"mutability":"mutable","name":"arrayKeyName","nameLocation":"1497:12:11","nodeType":"VariableDeclaration","scope":795,"src":"1483:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":748,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1473:42:11"},"returnParameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":795,"src":"1539:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":751,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1539:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1538:9:11"},"scope":1462,"src":"1448:515:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":825,"nodeType":"Block","src":"2592:168:11","statements":[{"assignments":[806],"declarations":[{"constant":false,"id":806,"mutability":"mutable","name":"elementInArray","nameLocation":"2615:14:11","nodeType":"VariableDeclaration","scope":825,"src":"2602:27:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":805,"name":"bytes","nodeType":"ElementaryTypeName","src":"2602:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":819,"initialValue":{"arguments":[{"arguments":[{"id":812,"name":"arrayKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"2666:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2658:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":810,"name":"bytes16","nodeType":"ElementaryTypeName","src":"2658:7:11","typeDescriptions":{}}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2658:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},{"arguments":[{"id":816,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"2697:5:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2689:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":814,"name":"bytes16","nodeType":"ElementaryTypeName","src":"2689:7:11","typeDescriptions":{}}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2689:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"},{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"expression":{"id":808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2632:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":807,"name":"bytes","nodeType":"ElementaryTypeName","src":"2632:5:11","typeDescriptions":{}}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2638:6:11","memberName":"concat","nodeType":"MemberAccess","src":"2632:12:11","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2632:81:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2602:111:11"},{"expression":{"arguments":[{"id":822,"name":"elementInArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"2738:14:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2730:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":820,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2730:7:11","typeDescriptions":{}}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":804,"id":824,"nodeType":"Return","src":"2723:30:11"}]},"documentation":{"id":796,"nodeType":"StructuredDocumentation","src":"1969:491:11","text":" @dev Generates an Array data key at a specific `index` by concatenating together the first 16 bytes of `arrayKey`\n with the 16 bytes of `index`. As:\n ```\n arrayKey[index]\n ```\n @param arrayKey The Array data key from which to generate the Array data key at a specific `index`.\n @param index The index number in the `arrayKey`.\n @return The generated `bytes32` data key of key type Array at a specific `index`."},"id":826,"implemented":true,"kind":"function","modifiers":[],"name":"generateArrayElementKeyAtIndex","nameLocation":"2474:30:11","nodeType":"FunctionDefinition","parameters":{"id":801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":798,"mutability":"mutable","name":"arrayKey","nameLocation":"2522:8:11","nodeType":"VariableDeclaration","scope":826,"src":"2514:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":797,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2514:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":800,"mutability":"mutable","name":"index","nameLocation":"2548:5:11","nodeType":"VariableDeclaration","scope":826,"src":"2540:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":799,"name":"uint128","nodeType":"ElementaryTypeName","src":"2540:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2504:55:11"},"returnParameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"2583:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":802,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2583:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2582:9:11"},"scope":1462,"src":"2465:295:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":878,"nodeType":"Block","src":"3444:325:11","statements":[{"assignments":[837],"declarations":[{"constant":false,"id":837,"mutability":"mutable","name":"firstWordHash","nameLocation":"3462:13:11","nodeType":"VariableDeclaration","scope":878,"src":"3454:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":836,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3454:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":844,"initialValue":{"arguments":[{"arguments":[{"id":841,"name":"firstWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"3494:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3488:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":839,"name":"bytes","nodeType":"ElementaryTypeName","src":"3488:5:11","typeDescriptions":{}}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3488:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":838,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3478:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3478:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3454:51:11"},{"assignments":[846],"declarations":[{"constant":false,"id":846,"mutability":"mutable","name":"lastWordHash","nameLocation":"3523:12:11","nodeType":"VariableDeclaration","scope":878,"src":"3515:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":845,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3515:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":853,"initialValue":{"arguments":[{"arguments":[{"id":850,"name":"lastWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"3554:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3548:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":848,"name":"bytes","nodeType":"ElementaryTypeName","src":"3548:5:11","typeDescriptions":{}}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3548:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":847,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3538:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3538:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3515:49:11"},{"assignments":[855],"declarations":[{"constant":false,"id":855,"mutability":"mutable","name":"temporaryBytes","nameLocation":"3588:14:11","nodeType":"VariableDeclaration","scope":878,"src":"3575:27:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":854,"name":"bytes","nodeType":"ElementaryTypeName","src":"3575:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":872,"initialValue":{"arguments":[{"arguments":[{"id":861,"name":"firstWordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"3639:13:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3631:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes10_$","typeString":"type(bytes10)"},"typeName":{"id":859,"name":"bytes10","nodeType":"ElementaryTypeName","src":"3631:7:11","typeDescriptions":{}}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3631:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"hexValue":"30","id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3674:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3667:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":863,"name":"bytes2","nodeType":"ElementaryTypeName","src":"3667:6:11","typeDescriptions":{}}},"id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3667:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"arguments":[{"id":869,"name":"lastWordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"3698:12:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3690:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":867,"name":"bytes20","nodeType":"ElementaryTypeName","src":"3690:7:11","typeDescriptions":{}}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3690:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3605:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":856,"name":"bytes","nodeType":"ElementaryTypeName","src":"3605:5:11","typeDescriptions":{}}},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3611:6:11","memberName":"concat","nodeType":"MemberAccess","src":"3605:12:11","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3605:116:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3575:146:11"},{"expression":{"arguments":[{"id":875,"name":"temporaryBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"3747:14:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":873,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3739:7:11","typeDescriptions":{}}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":835,"id":877,"nodeType":"Return","src":"3732:30:11"}]},"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"2766:542:11","text":" @dev Generates a data key of key type Mapping that map `firstWord` to `lastWord`. This is done by hashing two strings words `firstWord` and `lastWord`. As:\n ```\n bytes10(firstWordHash):0000:bytes20(lastWordHash)\n ```\n @param firstWord The word to retrieve the first 10 bytes of its hash.\n @param lastWord The word to retrieve the first 10 bytes of its hash.\n @return The generated `bytes32` data key of key type Mapping that map `firstWord` to a specific `lastWord`."},"id":879,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingKey","nameLocation":"3322:18:11","nodeType":"FunctionDefinition","parameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"firstWord","nameLocation":"3364:9:11","nodeType":"VariableDeclaration","scope":879,"src":"3350:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":828,"name":"string","nodeType":"ElementaryTypeName","src":"3350:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":831,"mutability":"mutable","name":"lastWord","nameLocation":"3397:8:11","nodeType":"VariableDeclaration","scope":879,"src":"3383:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":830,"name":"string","nodeType":"ElementaryTypeName","src":"3383:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3340:71:11"},"returnParameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":879,"src":"3435:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":833,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3435:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3434:9:11"},"scope":1462,"src":"3313:456:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":922,"nodeType":"Block","src":"4458:258:11","statements":[{"assignments":[890],"declarations":[{"constant":false,"id":890,"mutability":"mutable","name":"firstWordHash","nameLocation":"4476:13:11","nodeType":"VariableDeclaration","scope":922,"src":"4468:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":889,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4468:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":897,"initialValue":{"arguments":[{"arguments":[{"id":894,"name":"firstWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"4508:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4502:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":892,"name":"bytes","nodeType":"ElementaryTypeName","src":"4502:5:11","typeDescriptions":{}}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":891,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4492:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4492:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4468:51:11"},{"assignments":[899],"declarations":[{"constant":false,"id":899,"mutability":"mutable","name":"temporaryBytes","nameLocation":"4543:14:11","nodeType":"VariableDeclaration","scope":922,"src":"4530:27:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":898,"name":"bytes","nodeType":"ElementaryTypeName","src":"4530:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":916,"initialValue":{"arguments":[{"arguments":[{"id":905,"name":"firstWordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"4594:13:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes10_$","typeString":"type(bytes10)"},"typeName":{"id":903,"name":"bytes10","nodeType":"ElementaryTypeName","src":"4586:7:11","typeDescriptions":{}}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"hexValue":"30","id":909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4629:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4622:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":907,"name":"bytes2","nodeType":"ElementaryTypeName","src":"4622:6:11","typeDescriptions":{}}},"id":910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4622:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"arguments":[{"id":913,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"4653:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4645:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":911,"name":"bytes20","nodeType":"ElementaryTypeName","src":"4645:7:11","typeDescriptions":{}}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4645:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4560:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":900,"name":"bytes","nodeType":"ElementaryTypeName","src":"4560:5:11","typeDescriptions":{}}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4566:6:11","memberName":"concat","nodeType":"MemberAccess","src":"4560:12:11","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4560:108:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4530:138:11"},{"expression":{"arguments":[{"id":919,"name":"temporaryBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"4694:14:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4686:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":917,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4686:7:11","typeDescriptions":{}}},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4686:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":888,"id":921,"nodeType":"Return","src":"4679:30:11"}]},"documentation":{"id":880,"nodeType":"StructuredDocumentation","src":"3775:557:11","text":" @dev Generates a data key of key type Mapping that map `firstWord` to an address `addr`.\n This is done by hashing the string word `firstWord` and concatenating its first 10 bytes with `addr`. As:\n ```\n bytes10(firstWordHash):0000:<address>\n ```\n @param firstWord The word to retrieve the first 10 bytes of its hash.\n @param addr An address to map `firstWord` to.\n @return The generated `bytes32` data key of key type Mapping that map `firstWord` to a specific address `addr`."},"id":923,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingKey","nameLocation":"4346:18:11","nodeType":"FunctionDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"firstWord","nameLocation":"4388:9:11","nodeType":"VariableDeclaration","scope":923,"src":"4374:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":881,"name":"string","nodeType":"ElementaryTypeName","src":"4374:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":884,"mutability":"mutable","name":"addr","nameLocation":"4415:4:11","nodeType":"VariableDeclaration","scope":923,"src":"4407:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":883,"name":"address","nodeType":"ElementaryTypeName","src":"4407:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4364:61:11"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":923,"src":"4449:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":886,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4449:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4448:9:11"},"scope":1462,"src":"4337:379:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":951,"nodeType":"Block","src":"5320:177:11","statements":[{"assignments":[934],"declarations":[{"constant":false,"id":934,"mutability":"mutable","name":"generatedKey","nameLocation":"5343:12:11","nodeType":"VariableDeclaration","scope":951,"src":"5330:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":933,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":945,"initialValue":{"arguments":[{"id":938,"name":"keyPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"5384:9:11","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"hexValue":"30","id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5414:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5407:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":939,"name":"bytes2","nodeType":"ElementaryTypeName","src":"5407:6:11","typeDescriptions":{}}},"id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"id":943,"name":"bytes20Value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"5430:12:11","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5358:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":935,"name":"bytes","nodeType":"ElementaryTypeName","src":"5358:5:11","typeDescriptions":{}}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5364:6:11","memberName":"concat","nodeType":"MemberAccess","src":"5358:12:11","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5358:94:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5330:122:11"},{"expression":{"arguments":[{"id":948,"name":"generatedKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"5477:12:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5469:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":946,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5469:7:11","typeDescriptions":{}}},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5469:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":932,"id":950,"nodeType":"Return","src":"5462:28:11"}]},"documentation":{"id":924,"nodeType":"StructuredDocumentation","src":"4722:470:11","text":" @dev Generate a data key of key type Mapping that map a 10 bytes `keyPrefix` to a `bytes20Value`. As:\n ```\n keyPrefix:bytes20Value\n ```\n @param keyPrefix The first part of the data key of key type Mapping.\n @param bytes20Value The second part of the data key of key type Mapping.\n @return The generated `bytes32` data key of key type Mapping that map a `keyPrefix` to a specific `bytes20Value`."},"id":952,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingKey","nameLocation":"5206:18:11","nodeType":"FunctionDefinition","parameters":{"id":929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":926,"mutability":"mutable","name":"keyPrefix","nameLocation":"5242:9:11","nodeType":"VariableDeclaration","scope":952,"src":"5234:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"},"typeName":{"id":925,"name":"bytes10","nodeType":"ElementaryTypeName","src":"5234:7:11","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"visibility":"internal"},{"constant":false,"id":928,"mutability":"mutable","name":"bytes20Value","nameLocation":"5269:12:11","nodeType":"VariableDeclaration","scope":952,"src":"5261:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":927,"name":"bytes20","nodeType":"ElementaryTypeName","src":"5261:7:11","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"src":"5224:63:11"},"returnParameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":952,"src":"5311:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":930,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5311:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5310:9:11"},"scope":1462,"src":"5197:300:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1010,"nodeType":"Block","src":"6379:356:11","statements":[{"assignments":[965],"declarations":[{"constant":false,"id":965,"mutability":"mutable","name":"firstWordHash","nameLocation":"6397:13:11","nodeType":"VariableDeclaration","scope":1010,"src":"6389:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":964,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6389:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":972,"initialValue":{"arguments":[{"arguments":[{"id":969,"name":"firstWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"6429:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6423:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":967,"name":"bytes","nodeType":"ElementaryTypeName","src":"6423:5:11","typeDescriptions":{}}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6423:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":966,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6413:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6413:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6389:51:11"},{"assignments":[974],"declarations":[{"constant":false,"id":974,"mutability":"mutable","name":"secondWordHash","nameLocation":"6458:14:11","nodeType":"VariableDeclaration","scope":1010,"src":"6450:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":973,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6450:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":981,"initialValue":{"arguments":[{"arguments":[{"id":978,"name":"secondWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"6491:10:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6485:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":976,"name":"bytes","nodeType":"ElementaryTypeName","src":"6485:5:11","typeDescriptions":{}}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6485:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":975,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6475:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6475:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6450:53:11"},{"assignments":[983],"declarations":[{"constant":false,"id":983,"mutability":"mutable","name":"temporaryBytes","nameLocation":"6527:14:11","nodeType":"VariableDeclaration","scope":1010,"src":"6514:27:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":982,"name":"bytes","nodeType":"ElementaryTypeName","src":"6514:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1004,"initialValue":{"arguments":[{"arguments":[{"id":989,"name":"firstWordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"6577:13:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6570:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes6_$","typeString":"type(bytes6)"},"typeName":{"id":987,"name":"bytes6","nodeType":"ElementaryTypeName","src":"6570:6:11","typeDescriptions":{}}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6570:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}},{"arguments":[{"id":993,"name":"secondWordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"6612:14:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6605:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":991,"name":"bytes4","nodeType":"ElementaryTypeName","src":"6605:6:11","typeDescriptions":{}}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6605:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"arguments":[{"hexValue":"30","id":997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6648:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6641:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":995,"name":"bytes2","nodeType":"ElementaryTypeName","src":"6641:6:11","typeDescriptions":{}}},"id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6641:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"arguments":[{"id":1001,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"6672:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6664:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":999,"name":"bytes20","nodeType":"ElementaryTypeName","src":"6664:7:11","typeDescriptions":{}}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6664:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes6","typeString":"bytes6"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6544:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":984,"name":"bytes","nodeType":"ElementaryTypeName","src":"6544:5:11","typeDescriptions":{}}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6550:6:11","memberName":"concat","nodeType":"MemberAccess","src":"6544:12:11","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6544:143:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6514:173:11"},{"expression":{"arguments":[{"id":1007,"name":"temporaryBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"6713:14:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6705:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1005,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6705:7:11","typeDescriptions":{}}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6705:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":963,"id":1009,"nodeType":"Return","src":"6698:30:11"}]},"documentation":{"id":953,"nodeType":"StructuredDocumentation","src":"5503:704:11","text":" @dev Generate a data key of key type MappingWithGrouping by using two strings `firstWord`\n mapped to a `secondWord` mapped itself to a specific address `addr`. As:\n ```\n bytes6(keccak256(\"firstWord\")):bytes4(keccak256(\"secondWord\")):0000:<address>\n ```\n @param firstWord The word to retrieve the first 6 bytes of its hash.\n @param secondWord The word to retrieve the first 4 bytes of its hash.\n @param addr The address that makes the last part of the MappingWithGrouping.\n @return The generated `bytes32` data key of key type MappingWithGrouping that map a `firstWord` to a `secondWord` to a specific address `addr`."},"id":1011,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingWithGroupingKey","nameLocation":"6221:30:11","nodeType":"FunctionDefinition","parameters":{"id":960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":955,"mutability":"mutable","name":"firstWord","nameLocation":"6275:9:11","nodeType":"VariableDeclaration","scope":1011,"src":"6261:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":954,"name":"string","nodeType":"ElementaryTypeName","src":"6261:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":957,"mutability":"mutable","name":"secondWord","nameLocation":"6308:10:11","nodeType":"VariableDeclaration","scope":1011,"src":"6294:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":956,"name":"string","nodeType":"ElementaryTypeName","src":"6294:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"addr","nameLocation":"6336:4:11","nodeType":"VariableDeclaration","scope":1011,"src":"6328:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"6328:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6251:95:11"},"returnParameters":{"id":963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1011,"src":"6370:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":961,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6370:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6369:9:11"},"scope":1462,"src":"6212:523:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1042,"nodeType":"Block","src":"7579:197:11","statements":[{"assignments":[1024],"declarations":[{"constant":false,"id":1024,"mutability":"mutable","name":"generatedKey","nameLocation":"7602:12:11","nodeType":"VariableDeclaration","scope":1042,"src":"7589:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1023,"name":"bytes","nodeType":"ElementaryTypeName","src":"7589:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1036,"initialValue":{"arguments":[{"id":1028,"name":"keyPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"7643:9:11","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}},{"id":1029,"name":"mapPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"7666:9:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"arguments":[{"hexValue":"30","id":1032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7696:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7689:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1030,"name":"bytes2","nodeType":"ElementaryTypeName","src":"7689:6:11","typeDescriptions":{}}},"id":1033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7689:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"id":1034,"name":"subMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"7712:9:11","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes6","typeString":"bytes6"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":1026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7617:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1025,"name":"bytes","nodeType":"ElementaryTypeName","src":"7617:5:11","typeDescriptions":{}}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7623:6:11","memberName":"concat","nodeType":"MemberAccess","src":"7617:12:11","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7617:114:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"7589:142:11"},{"expression":{"arguments":[{"id":1039,"name":"generatedKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"7756:12:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7748:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1037,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7748:7:11","typeDescriptions":{}}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7748:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1022,"id":1041,"nodeType":"Return","src":"7741:28:11"}]},"documentation":{"id":1012,"nodeType":"StructuredDocumentation","src":"6741:676:11","text":" @dev Generate a data key of key type MappingWithGrouping that map a `keyPrefix` to an other `mapPrefix` to a specific `subMapKey`. As:\n ```\n keyPrefix:mapPrefix:0000:subMapKey\n ```\n @param keyPrefix The first part (6 bytes) of the data key of keyType MappingWithGrouping.\n @param mapPrefix The second part (4 bytes) of the data key of keyType MappingWithGrouping.\n @param subMapKey The last part (bytes20) of the data key of keyType MappingWithGrouping.\n @return The generated `bytes32` data key of key type MappingWithGrouping that map a `keyPrefix` to a `mapPrefix` to a specific `subMapKey`."},"id":1043,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingWithGroupingKey","nameLocation":"7431:30:11","nodeType":"FunctionDefinition","parameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1014,"mutability":"mutable","name":"keyPrefix","nameLocation":"7478:9:11","nodeType":"VariableDeclaration","scope":1043,"src":"7471:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"},"typeName":{"id":1013,"name":"bytes6","nodeType":"ElementaryTypeName","src":"7471:6:11","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}},"visibility":"internal"},{"constant":false,"id":1016,"mutability":"mutable","name":"mapPrefix","nameLocation":"7504:9:11","nodeType":"VariableDeclaration","scope":1043,"src":"7497:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1015,"name":"bytes4","nodeType":"ElementaryTypeName","src":"7497:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":1018,"mutability":"mutable","name":"subMapKey","nameLocation":"7531:9:11","nodeType":"VariableDeclaration","scope":1043,"src":"7523:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":1017,"name":"bytes20","nodeType":"ElementaryTypeName","src":"7523:7:11","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"src":"7461:85:11"},"returnParameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1043,"src":"7570:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1020,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7570:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7569:9:11"},"scope":1462,"src":"7422:354:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1071,"nodeType":"Block","src":"8434:177:11","statements":[{"assignments":[1054],"declarations":[{"constant":false,"id":1054,"mutability":"mutable","name":"generatedKey","nameLocation":"8457:12:11","nodeType":"VariableDeclaration","scope":1071,"src":"8444:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1053,"name":"bytes","nodeType":"ElementaryTypeName","src":"8444:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1065,"initialValue":{"arguments":[{"id":1058,"name":"keyPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"8498:9:11","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"hexValue":"30","id":1061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8528:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8521:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1059,"name":"bytes2","nodeType":"ElementaryTypeName","src":"8521:6:11","typeDescriptions":{}}},"id":1062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8521:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"id":1063,"name":"bytes20Value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"8544:12:11","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":1056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8472:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1055,"name":"bytes","nodeType":"ElementaryTypeName","src":"8472:5:11","typeDescriptions":{}}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8478:6:11","memberName":"concat","nodeType":"MemberAccess","src":"8472:12:11","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8472:94:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"8444:122:11"},{"expression":{"arguments":[{"id":1068,"name":"generatedKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"8591:12:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1066,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8583:7:11","typeDescriptions":{}}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1052,"id":1070,"nodeType":"Return","src":"8576:28:11"}]},"documentation":{"id":1044,"nodeType":"StructuredDocumentation","src":"7782:512:11","text":" @dev Generate a data key of key type MappingWithGrouping that map a 10 bytes `keyPrefix` to a specific `bytes20Value`. As:\n @param keyPrefix The first part of the data key of keyType MappingWithGrouping.\n @param bytes20Value The last of the data key of keyType MappingWithGrouping.\n @return The generated `bytes32` data key of key type MappingWithGrouping that map a `keyPrefix`\n (containing the first and second mapped word) to a specific `bytes20Value`."},"id":1072,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingWithGroupingKey","nameLocation":"8308:30:11","nodeType":"FunctionDefinition","parameters":{"id":1049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1046,"mutability":"mutable","name":"keyPrefix","nameLocation":"8356:9:11","nodeType":"VariableDeclaration","scope":1072,"src":"8348:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"},"typeName":{"id":1045,"name":"bytes10","nodeType":"ElementaryTypeName","src":"8348:7:11","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"visibility":"internal"},{"constant":false,"id":1048,"mutability":"mutable","name":"bytes20Value","nameLocation":"8383:12:11","nodeType":"VariableDeclaration","scope":1072,"src":"8375:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":1047,"name":"bytes20","nodeType":"ElementaryTypeName","src":"8375:7:11","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"src":"8338:63:11"},"returnParameters":{"id":1052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1072,"src":"8425:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1050,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8425:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8424:9:11"},"scope":1462,"src":"8299:312:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1112,"nodeType":"Block","src":"9017:208:11","statements":[{"assignments":[1085],"declarations":[{"constant":false,"id":1085,"mutability":"mutable","name":"hashFunctionDigest","nameLocation":"9035:18:11","nodeType":"VariableDeclaration","scope":1112,"src":"9027:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1084,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9027:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1092,"initialValue":{"arguments":[{"arguments":[{"id":1089,"name":"hashFunction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"9072:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9066:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1087,"name":"bytes","nodeType":"ElementaryTypeName","src":"9066:5:11","typeDescriptions":{}}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9066:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1086,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9056:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9056:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9027:59:11"},{"assignments":[1094],"declarations":[{"constant":false,"id":1094,"mutability":"mutable","name":"jsonDigest","nameLocation":"9104:10:11","nodeType":"VariableDeclaration","scope":1112,"src":"9096:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1093,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9096:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1101,"initialValue":{"arguments":[{"arguments":[{"id":1098,"name":"json","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"9133:4:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9127:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1096,"name":"bytes","nodeType":"ElementaryTypeName","src":"9127:5:11","typeDescriptions":{}}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9127:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1095,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9117:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9117:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9096:43:11"},{"expression":{"arguments":[{"arguments":[{"id":1106,"name":"hashFunctionDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"9181:18:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9174:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1104,"name":"bytes4","nodeType":"ElementaryTypeName","src":"9174:6:11","typeDescriptions":{}}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9174:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1108,"name":"jsonDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"9202:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1109,"name":"url","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"9214:3:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1102,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9157:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9161:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"9157:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9157:61:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1083,"id":1111,"nodeType":"Return","src":"9150:68:11"}]},"documentation":{"id":1073,"nodeType":"StructuredDocumentation","src":"8617:231:11","text":" @dev Generate a JSONURL value content.\n @param hashFunction The function used to hash the JSON file.\n @param json Bytes value of the JSON file.\n @param url The URL where the JSON file is hosted."},"id":1113,"implemented":true,"kind":"function","modifiers":[],"name":"generateJSONURLValue","nameLocation":"8862:20:11","nodeType":"FunctionDefinition","parameters":{"id":1080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"hashFunction","nameLocation":"8906:12:11","nodeType":"VariableDeclaration","scope":1113,"src":"8892:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1074,"name":"string","nodeType":"ElementaryTypeName","src":"8892:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"json","nameLocation":"8942:4:11","nodeType":"VariableDeclaration","scope":1113,"src":"8928:18:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1076,"name":"string","nodeType":"ElementaryTypeName","src":"8928:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1079,"mutability":"mutable","name":"url","nameLocation":"8970:3:11","nodeType":"VariableDeclaration","scope":1113,"src":"8956:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1078,"name":"string","nodeType":"ElementaryTypeName","src":"8956:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8882:97:11"},"returnParameters":{"id":1083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1113,"src":"9003:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1081,"name":"bytes","nodeType":"ElementaryTypeName","src":"9003:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9002:14:11"},"scope":1462,"src":"8853:372:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1153,"nodeType":"Block","src":"9710:214:11","statements":[{"assignments":[1126],"declarations":[{"constant":false,"id":1126,"mutability":"mutable","name":"hashFunctionDigest","nameLocation":"9728:18:11","nodeType":"VariableDeclaration","scope":1153,"src":"9720:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1125,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9720:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1133,"initialValue":{"arguments":[{"arguments":[{"id":1130,"name":"hashFunction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"9765:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9759:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1128,"name":"bytes","nodeType":"ElementaryTypeName","src":"9759:5:11","typeDescriptions":{}}},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9759:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1127,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9749:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9749:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9720:59:11"},{"assignments":[1135],"declarations":[{"constant":false,"id":1135,"mutability":"mutable","name":"jsonDigest","nameLocation":"9797:10:11","nodeType":"VariableDeclaration","scope":1153,"src":"9789:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9789:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1142,"initialValue":{"arguments":[{"arguments":[{"id":1139,"name":"assetBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"9826:10:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9820:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1137,"name":"bytes","nodeType":"ElementaryTypeName","src":"9820:5:11","typeDescriptions":{}}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9820:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1136,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9810:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9810:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9789:49:11"},{"expression":{"arguments":[{"arguments":[{"id":1147,"name":"hashFunctionDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"9880:18:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9873:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1145,"name":"bytes4","nodeType":"ElementaryTypeName","src":"9873:6:11","typeDescriptions":{}}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9873:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1149,"name":"jsonDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"9901:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1150,"name":"url","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"9913:3:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1143,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9856:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9860:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"9856:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9856:61:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1124,"id":1152,"nodeType":"Return","src":"9849:68:11"}]},"documentation":{"id":1114,"nodeType":"StructuredDocumentation","src":"9231:303:11","text":" @dev Generate a ASSETURL value content.\n @param hashFunction The function used to hash the JSON file.\n @param assetBytes Bytes value of the JSON file.\n @param url The URL where the JSON file is hosted.\n @return The encoded value as an `ASSETURL`."},"id":1154,"implemented":true,"kind":"function","modifiers":[],"name":"generateASSETURLValue","nameLocation":"9548:21:11","nodeType":"FunctionDefinition","parameters":{"id":1121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1116,"mutability":"mutable","name":"hashFunction","nameLocation":"9593:12:11","nodeType":"VariableDeclaration","scope":1154,"src":"9579:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1115,"name":"string","nodeType":"ElementaryTypeName","src":"9579:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1118,"mutability":"mutable","name":"assetBytes","nameLocation":"9629:10:11","nodeType":"VariableDeclaration","scope":1154,"src":"9615:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1117,"name":"string","nodeType":"ElementaryTypeName","src":"9615:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1120,"mutability":"mutable","name":"url","nameLocation":"9663:3:11","nodeType":"VariableDeclaration","scope":1154,"src":"9649:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1119,"name":"string","nodeType":"ElementaryTypeName","src":"9649:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9569:103:11"},"returnParameters":{"id":1124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1154,"src":"9696:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1122,"name":"bytes","nodeType":"ElementaryTypeName","src":"9696:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9695:14:11"},"scope":1462,"src":"9539:385:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1217,"nodeType":"Block","src":"10373:1273:11","statements":[{"assignments":[1164],"declarations":[{"constant":false,"id":1164,"mutability":"mutable","name":"pointer","nameLocation":"10870:7:11","nodeType":"VariableDeclaration","scope":1217,"src":"10862:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1163,"name":"uint256","nodeType":"ElementaryTypeName","src":"10862:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"documentation":" Pointer will always land on these values:\n ↓↓↓↓\n 0003 a00000\n 0005 fff83a0011\n 0020 aa0000000000000000000000000000000000000000000000000000000000cafe\n 0012 bb000000000000000000000000000000beef\n 0019 cc00000000000000000000000000000000000000000000deed\n ↑↑↑↑\n The pointer can only land on the length of the following bytes value.","id":1166,"initialValue":{"hexValue":"30","id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10880:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10862:19:11"},{"body":{"id":1206,"nodeType":"Block","src":"11164:392:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1171,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"11182:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11192:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11182:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1174,"name":"compactBytesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"11197:17:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11215:6:11","memberName":"length","nodeType":"MemberAccess","src":"11197:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:39:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1179,"nodeType":"IfStatement","src":"11178:57:11","trueBody":{"expression":{"hexValue":"66616c7365","id":1177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11230:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1161,"id":1178,"nodeType":"Return","src":"11223:12:11"}},{"assignments":[1181],"declarations":[{"constant":false,"id":1181,"mutability":"mutable","name":"elementLength","nameLocation":"11257:13:11","nodeType":"VariableDeclaration","scope":1206,"src":"11249:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1180,"name":"uint256","nodeType":"ElementaryTypeName","src":"11249:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1199,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"baseExpression":{"id":1188,"name":"compactBytesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"11367:17:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1190,"indexExpression":{"id":1189,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"11385:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11367:26:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},{"baseExpression":{"id":1191,"name":"compactBytesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"11419:17:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1195,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1192,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"11437:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11447:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11437:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11419:30:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"},{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"expression":{"id":1186,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11325:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11329:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"11325:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11325:146:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11297:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1184,"name":"bytes2","nodeType":"ElementaryTypeName","src":"11297:6:11","typeDescriptions":{}}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11297:192:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes2","typeString":"bytes2"}],"id":1183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11273:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":1182,"name":"uint16","nodeType":"ElementaryTypeName","src":"11273:6:11","typeDescriptions":{}}},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11273:230:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"VariableDeclarationStatement","src":"11249:254:11"},{"expression":{"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1200,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"11517:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1201,"name":"elementLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"11528:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11544:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11528:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11517:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1205,"nodeType":"ExpressionStatement","src":"11517:28:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1167,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"11128:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1168,"name":"compactBytesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"11138:17:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11156:6:11","memberName":"length","nodeType":"MemberAccess","src":"11138:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11128:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":" Check each length byte and make sure that when you reach the last length byte.\n Make sure that the last length describes exactly the last bytes value and you do not get out of bounds.","id":1207,"nodeType":"WhileStatement","src":"11121:435:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1208,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"11569:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1209,"name":"compactBytesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"11580:17:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11598:6:11","memberName":"length","nodeType":"MemberAccess","src":"11580:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11569:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1214,"nodeType":"IfStatement","src":"11565:52:11","trueBody":{"expression":{"hexValue":"74727565","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11613:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1161,"id":1213,"nodeType":"Return","src":"11606:11:11"}},{"expression":{"hexValue":"66616c7365","id":1215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11634:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1161,"id":1216,"nodeType":"Return","src":"11627:12:11"}]},"documentation":{"id":1155,"nodeType":"StructuredDocumentation","src":"9930:334:11","text":" @dev Verify if `data` is a valid array of value encoded as a `CompactBytesArray` according to the LSP2 `CompactBytesArray` valueType specification.\n @param compactBytesArray The bytes value to verify.\n @return `true` if the `data` is correctly encoded CompactBytesArray, `false` otherwise."},"id":1218,"implemented":true,"kind":"function","modifiers":[],"name":"isCompactBytesArray","nameLocation":"10278:19:11","nodeType":"FunctionDefinition","parameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"compactBytesArray","nameLocation":"10320:17:11","nodeType":"VariableDeclaration","scope":1218,"src":"10307:30:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1156,"name":"bytes","nodeType":"ElementaryTypeName","src":"10307:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10297:46:11"},"returnParameters":{"id":1161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1218,"src":"10367:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1159,"name":"bool","nodeType":"ElementaryTypeName","src":"10367:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10366:6:11"},"scope":1462,"src":"10269:1377:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1236,"nodeType":"Block","src":"12056:104:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1226,"name":"arrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"12070:11:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12082:6:11","memberName":"length","nodeType":"MemberAccess","src":"12070:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3136","id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12092:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12070:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1233,"nodeType":"IfStatement","src":"12066:66:11","trueBody":{"id":1232,"nodeType":"Block","src":"12096:36:11","statements":[{"expression":{"hexValue":"74727565","id":1230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12117:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1225,"id":1231,"nodeType":"Return","src":"12110:11:11"}]}},{"expression":{"hexValue":"66616c7365","id":1234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12148:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1225,"id":1235,"nodeType":"Return","src":"12141:12:11"}]},"documentation":{"id":1219,"nodeType":"StructuredDocumentation","src":"11652:293:11","text":" @dev Validates if the bytes `arrayLength` are exactly 16 bytes long, and are of the exact size of an LSP2 Array length value\n @param arrayLength Plain bytes that should be validated.\n @return `true` if the value is 16 bytes long, `false` otherwise."},"id":1237,"implemented":true,"kind":"function","modifiers":[],"name":"isValidLSP2ArrayLengthValue","nameLocation":"11959:27:11","nodeType":"FunctionDefinition","parameters":{"id":1222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1221,"mutability":"mutable","name":"arrayLength","nameLocation":"12009:11:11","nodeType":"VariableDeclaration","scope":1237,"src":"11996:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1220,"name":"bytes","nodeType":"ElementaryTypeName","src":"11996:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11986:40:11"},"returnParameters":{"id":1225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1237,"src":"12050:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1223,"name":"bool","nodeType":"ElementaryTypeName","src":"12050:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12049:6:11"},"scope":1462,"src":"11950:210:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1310,"nodeType":"Block","src":"12894:512:11","statements":[{"expression":{"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1255,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"12904:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"33","id":1259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12929:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"id":1258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12915:13:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1256,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12919:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1257,"nodeType":"ArrayTypeName","src":"12919:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12915:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"src":"12904:27:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1262,"nodeType":"ExpressionStatement","src":"12904:27:11"},{"expression":{"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1263,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"12941:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"33","id":1267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12966:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"id":1266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12954:11:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":1264,"name":"bytes","nodeType":"ElementaryTypeName","src":"12958:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1265,"nodeType":"ArrayTypeName","src":"12958:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":1268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12954:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"12941:27:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1270,"nodeType":"ExpressionStatement","src":"12941:27:11"},{"expression":{"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1271,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"13043:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1273,"indexExpression":{"hexValue":"30","id":1272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13052:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13043:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1274,"name":"arrayKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"13057:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"13043:22:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1276,"nodeType":"ExpressionStatement","src":"13043:22:11"},{"expression":{"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1277,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"13075:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1279,"indexExpression":{"hexValue":"30","id":1278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13086:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13075:13:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1282,"name":"newArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"13108:14:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":1280,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13091:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13095:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"13091:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13091:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"13075:48:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1285,"nodeType":"ExpressionStatement","src":"13075:48:11"},{"expression":{"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1286,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"13198:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1288,"indexExpression":{"hexValue":"31","id":1287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13207:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13198:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1289,"name":"removedElementMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"13212:20:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"13198:34:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1291,"nodeType":"ExpressionStatement","src":"13198:34:11"},{"expression":{"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1292,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"13242:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1294,"indexExpression":{"hexValue":"31","id":1293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13253:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13242:13:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":1295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13258:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"13242:18:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1297,"nodeType":"ExpressionStatement","src":"13242:18:11"},{"expression":{"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1298,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"13335:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1300,"indexExpression":{"hexValue":"32","id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13344:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13335:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1301,"name":"removedElementIndexKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"13349:22:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"13335:36:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1303,"nodeType":"ExpressionStatement","src":"13335:36:11"},{"expression":{"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1304,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"13381:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1306,"indexExpression":{"hexValue":"32","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13392:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13381:13:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":1307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13397:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"13381:18:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1309,"nodeType":"ExpressionStatement","src":"13381:18:11"}]},"documentation":{"id":1238,"nodeType":"StructuredDocumentation","src":"12166:434:11","text":" @dev Generates Data Key/Value pairs for removing the last element from an LSP2 Array and a mapping Data Key.\n @param arrayKey The Data Key of Key Type Array.\n @param newArrayLength The new Array Length for the `arrayKey`.\n @param removedElementIndexKey The Data Key of Key Type Array Index for the removed element.\n @param removedElementMapKey The Data Key of a mapping to be removed."},"id":1311,"implemented":true,"kind":"function","modifiers":[],"name":"removeLastElementFromArrayAndMap","nameLocation":"12614:32:11","nodeType":"FunctionDefinition","parameters":{"id":1247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1240,"mutability":"mutable","name":"arrayKey","nameLocation":"12664:8:11","nodeType":"VariableDeclaration","scope":1311,"src":"12656:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1239,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12656:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"newArrayLength","nameLocation":"12690:14:11","nodeType":"VariableDeclaration","scope":1311,"src":"12682:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1241,"name":"uint128","nodeType":"ElementaryTypeName","src":"12682:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1244,"mutability":"mutable","name":"removedElementIndexKey","nameLocation":"12722:22:11","nodeType":"VariableDeclaration","scope":1311,"src":"12714:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1243,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12714:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1246,"mutability":"mutable","name":"removedElementMapKey","nameLocation":"12762:20:11","nodeType":"VariableDeclaration","scope":1311,"src":"12754:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12754:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12646:142:11"},"returnParameters":{"id":1254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1250,"mutability":"mutable","name":"dataKeys","nameLocation":"12853:8:11","nodeType":"VariableDeclaration","scope":1311,"src":"12836:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12836:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1249,"nodeType":"ArrayTypeName","src":"12836:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1253,"mutability":"mutable","name":"dataValues","nameLocation":"12878:10:11","nodeType":"VariableDeclaration","scope":1311,"src":"12863:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1251,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1252,"nodeType":"ArrayTypeName","src":"12863:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"12835:54:11"},"scope":1462,"src":"12605:801:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1460,"nodeType":"Block","src":"14506:1736:11","statements":[{"expression":{"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1334,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"14516:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"35","id":1338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14541:1:11","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"}],"id":1337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14527:13:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1335,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14531:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1336,"nodeType":"ArrayTypeName","src":"14531:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14527:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"src":"14516:27:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1341,"nodeType":"ExpressionStatement","src":"14516:27:11"},{"expression":{"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1342,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"14553:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"35","id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14578:1:11","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"}],"id":1345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14566:11:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":1343,"name":"bytes","nodeType":"ElementaryTypeName","src":"14570:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1344,"nodeType":"ArrayTypeName","src":"14570:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14566:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"14553:27:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1349,"nodeType":"ExpressionStatement","src":"14553:27:11"},{"expression":{"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1350,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"14655:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1352,"indexExpression":{"hexValue":"30","id":1351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14664:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14655:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1353,"name":"arrayKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"14669:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"14655:22:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1355,"nodeType":"ExpressionStatement","src":"14655:22:11"},{"expression":{"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1356,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"14687:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1358,"indexExpression":{"hexValue":"30","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14698:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14687:13:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1361,"name":"newArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"14720:14:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":1359,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14703:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14707:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"14703:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14703:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"14687:48:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1364,"nodeType":"ExpressionStatement","src":"14687:48:11"},{"expression":{"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1365,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"14810:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1367,"indexExpression":{"hexValue":"31","id":1366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14819:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14810:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1368,"name":"removedElementMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"14824:20:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"14810:34:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1370,"nodeType":"ExpressionStatement","src":"14810:34:11"},{"expression":{"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1371,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"14854:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1373,"indexExpression":{"hexValue":"31","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14865:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14854:13:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":1374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14870:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"14854:18:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1376,"nodeType":"ExpressionStatement","src":"14854:18:11"},{"assignments":[1378],"declarations":[{"constant":false,"id":1378,"mutability":"mutable","name":"lastElementIndexKey","nameLocation":"14952:19:11","nodeType":"VariableDeclaration","scope":1460,"src":"14944:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14944:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1384,"initialValue":{"arguments":[{"id":1381,"name":"arrayKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"15028:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1382,"name":"newArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"15050:14:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":1379,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"14974:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP2Utils_$1462_$","typeString":"type(library LSP2Utils)"}},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14984:30:11","memberName":"generateArrayElementKeyAtIndex","nodeType":"MemberAccess","referencedDeclaration":826,"src":"14974:40:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint128_$returns$_t_bytes32_$","typeString":"function (bytes32,uint128) pure returns (bytes32)"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14974:100:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"14944:130:11"},{"assignments":[1386],"declarations":[{"constant":false,"id":1386,"mutability":"mutable","name":"lastElementIndexValue","nameLocation":"15169:21:11","nodeType":"VariableDeclaration","scope":1460,"src":"15161:29:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":1385,"name":"bytes20","nodeType":"ElementaryTypeName","src":"15161:7:11","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"id":1394,"initialValue":{"arguments":[{"arguments":[{"id":1391,"name":"lastElementIndexKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"15238:19:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1389,"name":"erc725YContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"15214:15:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC725Y_$437","typeString":"contract IERC725Y"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15230:7:11","memberName":"getData","nodeType":"MemberAccess","referencedDeclaration":408,"src":"15214:23:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view external returns (bytes memory)"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15214:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15193:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":1387,"name":"bytes20","nodeType":"ElementaryTypeName","src":"15193:7:11","typeDescriptions":{}}},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15193:75:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"nodeType":"VariableDeclarationStatement","src":"15161:107:11"},{"expression":{"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1395,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"15384:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1397,"indexExpression":{"hexValue":"32","id":1396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15393:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15384:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1398,"name":"removedElementIndexKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"15398:22:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15384:36:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1400,"nodeType":"ExpressionStatement","src":"15384:36:11"},{"expression":{"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1401,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"15430:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1403,"indexExpression":{"hexValue":"32","id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15441:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15430:13:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1407,"name":"lastElementIndexValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"15459:21:11","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":1405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15446:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1404,"name":"bytes","nodeType":"ElementaryTypeName","src":"15446:5:11","typeDescriptions":{}}},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15452:6:11","memberName":"concat","nodeType":"MemberAccess","src":"15446:12:11","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15446:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"15430:51:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1410,"nodeType":"ExpressionStatement","src":"15430:51:11"},{"expression":{"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1411,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"15555:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1413,"indexExpression":{"hexValue":"33","id":1412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15564:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15555:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1414,"name":"lastElementIndexKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"15569:19:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15555:33:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1416,"nodeType":"ExpressionStatement","src":"15555:33:11"},{"expression":{"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1417,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"15598:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1419,"indexExpression":{"hexValue":"33","id":1418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15609:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15598:13:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":1420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15614:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"15598:18:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1422,"nodeType":"ExpressionStatement","src":"15598:18:11"},{"assignments":[1424],"declarations":[{"constant":false,"id":1424,"mutability":"mutable","name":"lastElementMapKey","nameLocation":"15697:17:11","nodeType":"VariableDeclaration","scope":1460,"src":"15689:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1423,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15689:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1433,"initialValue":{"arguments":[{"arguments":[{"id":1429,"name":"removedElementMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"15767:20:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15759:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes10_$","typeString":"type(bytes10)"},"typeName":{"id":1427,"name":"bytes10","nodeType":"ElementaryTypeName","src":"15759:7:11","typeDescriptions":{}}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15759:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"id":1431,"name":"lastElementIndexValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"15802:21:11","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":1425,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"15717:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP2Utils_$1462_$","typeString":"type(library LSP2Utils)"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15727:18:11","memberName":"generateMappingKey","nodeType":"MemberAccess","referencedDeclaration":952,"src":"15717:28:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes10_$_t_bytes20_$returns$_t_bytes32_$","typeString":"function (bytes10,bytes20) pure returns (bytes32)"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15717:116:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"15689:144:11"},{"assignments":[1435],"declarations":[{"constant":false,"id":1435,"mutability":"mutable","name":"lastElementMapValue","nameLocation":"15925:19:11","nodeType":"VariableDeclaration","scope":1460,"src":"15912:32:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1434,"name":"bytes","nodeType":"ElementaryTypeName","src":"15912:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1447,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":1442,"name":"lastElementMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"16008:17:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1440,"name":"erc725YContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"15984:15:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC725Y_$437","typeString":"contract IERC725Y"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16000:7:11","memberName":"getData","nodeType":"MemberAccess","referencedDeclaration":408,"src":"15984:23:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view external returns (bytes memory)"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15984:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15977:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1438,"name":"bytes4","nodeType":"ElementaryTypeName","src":"15977:6:11","typeDescriptions":{}}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15977:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1445,"name":"removedElementIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"16041:19:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":1436,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15947:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15951:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"15947:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15947:123:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"15912:158:11"},{"expression":{"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1448,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"16159:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1450,"indexExpression":{"hexValue":"34","id":1449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16168:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16159:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1451,"name":"lastElementMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"16173:17:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"16159:31:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1453,"nodeType":"ExpressionStatement","src":"16159:31:11"},{"expression":{"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1454,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"16200:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1456,"indexExpression":{"hexValue":"34","id":1455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16211:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16200:13:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1457,"name":"lastElementMapValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"16216:19:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16200:35:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1459,"nodeType":"ExpressionStatement","src":"16200:35:11"}]},"documentation":{"id":1312,"nodeType":"StructuredDocumentation","src":"13412:733:11","text":" @dev Generates Data Key/Value pairs for removing an element from an LSP2 Array and a mapping Data Key.\n @custom:info The function assumes that the Data Value stored under the mapping Data Key is of length 20 where the last 16 bytes are the index of the element in the array.\n @param erc725YContract The ERC725Y contract.\n @param arrayKey The Data Key of Key Type Array.\n @param newArrayLength The new Array Length for the `arrayKey`.\n @param removedElementIndexKey The Data Key of Key Type Array Index for the removed element.\n @param removedElementIndex the index of the removed element.\n @param removedElementMapKey The Data Key of a mapping to be removed."},"id":1461,"implemented":true,"kind":"function","modifiers":[],"name":"removeElementFromArrayAndMap","nameLocation":"14159:28:11","nodeType":"FunctionDefinition","parameters":{"id":1326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"erc725YContract","nameLocation":"14206:15:11","nodeType":"VariableDeclaration","scope":1461,"src":"14197:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC725Y_$437","typeString":"contract IERC725Y"},"typeName":{"id":1314,"nodeType":"UserDefinedTypeName","pathNode":{"id":1313,"name":"IERC725Y","nameLocations":["14197:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"14197:8:11"},"referencedDeclaration":437,"src":"14197:8:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC725Y_$437","typeString":"contract IERC725Y"}},"visibility":"internal"},{"constant":false,"id":1317,"mutability":"mutable","name":"arrayKey","nameLocation":"14239:8:11","nodeType":"VariableDeclaration","scope":1461,"src":"14231:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1316,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14231:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1319,"mutability":"mutable","name":"newArrayLength","nameLocation":"14265:14:11","nodeType":"VariableDeclaration","scope":1461,"src":"14257:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1318,"name":"uint128","nodeType":"ElementaryTypeName","src":"14257:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1321,"mutability":"mutable","name":"removedElementIndexKey","nameLocation":"14297:22:11","nodeType":"VariableDeclaration","scope":1461,"src":"14289:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14289:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1323,"mutability":"mutable","name":"removedElementIndex","nameLocation":"14337:19:11","nodeType":"VariableDeclaration","scope":1461,"src":"14329:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1322,"name":"uint128","nodeType":"ElementaryTypeName","src":"14329:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1325,"mutability":"mutable","name":"removedElementMapKey","nameLocation":"14374:20:11","nodeType":"VariableDeclaration","scope":1461,"src":"14366:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14366:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14187:213:11"},"returnParameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1329,"mutability":"mutable","name":"dataKeys","nameLocation":"14465:8:11","nodeType":"VariableDeclaration","scope":1461,"src":"14448:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1327,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14448:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1328,"nodeType":"ArrayTypeName","src":"14448:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1332,"mutability":"mutable","name":"dataValues","nameLocation":"14490:10:11","nodeType":"VariableDeclaration","scope":1461,"src":"14475:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1330,"name":"bytes","nodeType":"ElementaryTypeName","src":"14475:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1331,"nodeType":"ArrayTypeName","src":"14475:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"14447:54:11"},"scope":1462,"src":"14150:2092:11","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1463,"src":"482:15762:11","usedErrors":[],"usedEvents":[]}],"src":"39:16206:11"},"id":11},"@lukso/lsp4-contracts/contracts/LSP4Constants.sol":{"ast":{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4Constants.sol","exportedSymbols":{"_LSP4_CREATORS_ARRAY_KEY":[1491],"_LSP4_CREATORS_MAP_KEY_PREFIX":[1494],"_LSP4_METADATA_KEY":[1497],"_LSP4_SUPPORTED_STANDARDS_KEY":[1476],"_LSP4_SUPPORTED_STANDARDS_VALUE":[1479],"_LSP4_TOKEN_NAME_KEY":[1482],"_LSP4_TOKEN_SYMBOL_KEY":[1485],"_LSP4_TOKEN_TYPE_COLLECTION":[1473],"_LSP4_TOKEN_TYPE_KEY":[1488],"_LSP4_TOKEN_TYPE_NFT":[1470],"_LSP4_TOKEN_TYPE_TOKEN":[1467]},"id":1498,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1464,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:12"},{"constant":true,"id":1467,"mutability":"constant","name":"_LSP4_TOKEN_TYPE_TOKEN","nameLocation":"96:22:12","nodeType":"VariableDeclaration","scope":1498,"src":"79:43:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1465,"name":"uint256","nodeType":"ElementaryTypeName","src":"79:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":1466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"121:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":true,"id":1470,"mutability":"constant","name":"_LSP4_TOKEN_TYPE_NFT","nameLocation":"141:20:12","nodeType":"VariableDeclaration","scope":1498,"src":"124:41:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1468,"name":"uint256","nodeType":"ElementaryTypeName","src":"124:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"164:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":1473,"mutability":"constant","name":"_LSP4_TOKEN_TYPE_COLLECTION","nameLocation":"184:27:12","nodeType":"VariableDeclaration","scope":1498,"src":"167:48:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1471,"name":"uint256","nodeType":"ElementaryTypeName","src":"167:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"214:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"constant":true,"id":1476,"mutability":"constant","name":"_LSP4_SUPPORTED_STANDARDS_KEY","nameLocation":"356:29:12","nodeType":"VariableDeclaration","scope":1498,"src":"339:115:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1474,"name":"bytes32","nodeType":"ElementaryTypeName","src":"339:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307865616665633464383966613936313938383462363030303061346439363632346133386637616332643864396136303465636630376331326337376534383063","id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"388:66:12","typeDescriptions":{"typeIdentifier":"t_rational_106291344305384829327323777171026204092068863755428044681309751323096797562892_by_1","typeString":"int_const 1062...(70 digits omitted)...2892"},"value":"0xeafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c"},"visibility":"internal"},{"constant":true,"id":1479,"mutability":"constant","name":"_LSP4_SUPPORTED_STANDARDS_VALUE","nameLocation":"513:31:12","nodeType":"VariableDeclaration","scope":1498,"src":"498:62:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1477,"name":"bytes","nodeType":"ElementaryTypeName","src":"498:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":{"hexValue":"a4d96624","id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"547:13:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_8031d7c868dca389fb4e96c3f4df5650d21c8966ab67d753610d01e72b8a0278","typeString":"literal_string hex\"a4d96624\""}},"visibility":"internal"},{"constant":true,"id":1482,"mutability":"constant","name":"_LSP4_TOKEN_NAME_KEY","nameLocation":"610:20:12","nodeType":"VariableDeclaration","scope":1498,"src":"593:106:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1480,"name":"bytes32","nodeType":"ElementaryTypeName","src":"593:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307864656261316532393266386261383832333865313061623363376638386264346265346661633536636164353139346236656363656166363533343638616631","id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"633:66:12","typeDescriptions":{"typeIdentifier":"t_rational_100742294102289264549068743044138917200237013684961480918773254279156963117809_by_1","typeString":"int_const 1007...(70 digits omitted)...7809"},"value":"0xdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af1"},"visibility":"internal"},{"constant":true,"id":1485,"mutability":"constant","name":"_LSP4_TOKEN_SYMBOL_KEY","nameLocation":"751:22:12","nodeType":"VariableDeclaration","scope":1498,"src":"734:108:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1483,"name":"bytes32","nodeType":"ElementaryTypeName","src":"734:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307832663061363861623037373638653031393433613539396537333336326130653137613633613732653934646432653338346432633164346462393332373536","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"776:66:12","typeDescriptions":{"typeIdentifier":"t_rational_21277094746618207019470167271284656117398221945515764204453433194201650243414_by_1","typeString":"int_const 2127...(69 digits omitted)...3414"},"value":"0x2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db932756"},"visibility":"internal"},{"constant":true,"id":1488,"mutability":"constant","name":"_LSP4_TOKEN_TYPE_KEY","nameLocation":"892:20:12","nodeType":"VariableDeclaration","scope":1498,"src":"875:106:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1486,"name":"bytes32","nodeType":"ElementaryTypeName","src":"875:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307865303236316661393564623265623362353433396264303333636461363664353662393666393266323433613832323866643837353530656437626466646233","id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"915:66:12","typeDescriptions":{"typeIdentifier":"t_rational_101385436791348632936915532486413845551797772917774025249609027894947960716723_by_1","typeString":"int_const 1013...(70 digits omitted)...6723"},"value":"0xe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb3"},"visibility":"internal"},{"constant":true,"id":1491,"mutability":"constant","name":"_LSP4_CREATORS_ARRAY_KEY","nameLocation":"1032:24:12","nodeType":"VariableDeclaration","scope":1498,"src":"1015:110:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1489,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1015:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307831313462643033623361343664343837353936383064383165626232623431346664613764303330613731303561383531383637616363663163323335326537","id":1490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1059:66:12","typeDescriptions":{"typeIdentifier":"t_rational_7823269115788143993216587392684831921119603420524855766908370213719800763111_by_1","typeString":"int_const 7823...(68 digits omitted)...3111"},"value":"0x114bd03b3a46d48759680d81ebb2b414fda7d030a7105a851867accf1c2352e7"},"visibility":"internal"},{"constant":true,"id":1494,"mutability":"constant","name":"_LSP4_CREATORS_MAP_KEY_PREFIX","nameLocation":"1186:29:12","nodeType":"VariableDeclaration","scope":1498,"src":"1169:71:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"},"typeName":{"id":1492,"name":"bytes10","nodeType":"ElementaryTypeName","src":"1169:7:12","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"value":{"hexValue":"30783664653835656166356439383262346535646130","id":1493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1218:22:12","typeDescriptions":{"typeIdentifier":"t_rational_519024414032760576826784_by_1","typeString":"int_const 519024414032760576826784"},"value":"0x6de85eaf5d982b4e5da0"},"visibility":"internal"},{"constant":true,"id":1497,"mutability":"constant","name":"_LSP4_METADATA_KEY","nameLocation":"1289:18:12","nodeType":"VariableDeclaration","scope":1498,"src":"1272:104:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1495,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1272:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839616662393563616363396639353835386563343461613863336236383535313130303265333061653534343135383233663430363132386238356232333865","id":1496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1310:66:12","typeDescriptions":{"typeIdentifier":"t_rational_70100691122746653413313834938425876827577001362390431744658469452576166978446_by_1","typeString":"int_const 7010...(69 digits omitted)...8446"},"value":"0x9afb95cacc9f95858ec44aa8c3b685511002e30ae54415823f406128b85b238e"},"visibility":"internal"}],"src":"39:1339:12"},"id":12},"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol":{"ast":{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol","exportedSymbols":{"ERC725Y":[269],"LSP4DigitalAssetMetadata":[1614],"LSP4TokenNameNotEditable":[1619],"LSP4TokenSymbolNotEditable":[1622],"LSP4TokenTypeNotEditable":[1625],"_LSP4_SUPPORTED_STANDARDS_KEY":[1476],"_LSP4_SUPPORTED_STANDARDS_VALUE":[1479],"_LSP4_TOKEN_NAME_KEY":[1482],"_LSP4_TOKEN_SYMBOL_KEY":[1485],"_LSP4_TOKEN_TYPE_KEY":[1488]},"id":1615,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1499,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:13"},{"absolutePath":"@erc725/smart-contracts-v8/contracts/ERC725Y.sol","file":"@erc725/smart-contracts-v8/contracts/ERC725Y.sol","id":1501,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1615,"sourceUnit":270,"src":"75:73:13","symbolAliases":[{"foreign":{"id":1500,"name":"ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"83:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4Constants.sol","file":"./LSP4Constants.sol","id":1507,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1615,"sourceUnit":1498,"src":"163:189:13","symbolAliases":[{"foreign":{"id":1502,"name":"_LSP4_SUPPORTED_STANDARDS_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"176:29:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1503,"name":"_LSP4_SUPPORTED_STANDARDS_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"211:31:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1504,"name":"_LSP4_TOKEN_NAME_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"248:20:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1505,"name":"_LSP4_TOKEN_SYMBOL_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"274:22:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1506,"name":"_LSP4_TOKEN_TYPE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"302:20:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4Errors.sol","file":"./LSP4Errors.sol","id":1511,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1615,"sourceUnit":1626,"src":"364:126:13","symbolAliases":[{"foreign":{"id":1508,"name":"LSP4TokenNameNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"377:24:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1509,"name":"LSP4TokenSymbolNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"407:26:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1510,"name":"LSP4TokenTypeNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"439:24:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1513,"name":"ERC725Y","nameLocations":["793:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":269,"src":"793:7:13"},"id":1514,"nodeType":"InheritanceSpecifier","src":"793:7:13"}],"canonicalName":"LSP4DigitalAssetMetadata","contractDependencies":[],"contractKind":"contract","documentation":{"id":1512,"nodeType":"StructuredDocumentation","src":"492:254:13","text":" @title Implementation of a LSP4DigitalAssetMetadata contract that stores the **Token-Metadata** (`LSP4TokenName` and `LSP4TokenSymbol`) in its ERC725Y data store.\n @author Matthew Stevens\n @dev Standard Implementation of the LSP4 standard."},"fullyImplemented":true,"id":1614,"linearizedBaseContracts":[1614,269,386,4117,4323,3722,3864],"name":"LSP4DigitalAssetMetadata","nameLocation":"765:24:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":1566,"nodeType":"Block","src":"1351:396:13","statements":[{"expression":{"arguments":[{"id":1532,"name":"_LSP4_SUPPORTED_STANDARDS_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"1451:29:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1533,"name":"_LSP4_SUPPORTED_STANDARDS_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"1494:31:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1529,"name":"ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1421:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725Y_$269_$","typeString":"type(contract ERC725Y)"}},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1429:8:13","memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":196,"src":"1421:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1421:114:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1535,"nodeType":"ExpressionStatement","src":"1421:114:13"},{"expression":{"arguments":[{"id":1539,"name":"_LSP4_TOKEN_NAME_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"1563:20:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1542,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"1591:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1585:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1540,"name":"bytes","nodeType":"ElementaryTypeName","src":"1585:5:13","typeDescriptions":{}}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1585:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1536,"name":"ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1546:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725Y_$269_$","typeString":"type(contract ERC725Y)"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1554:8:13","memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":196,"src":"1546:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1546:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1545,"nodeType":"ExpressionStatement","src":"1546:52:13"},{"expression":{"arguments":[{"id":1549,"name":"_LSP4_TOKEN_SYMBOL_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"1625:22:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1552,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"1655:7:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1649:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1550,"name":"bytes","nodeType":"ElementaryTypeName","src":"1649:5:13","typeDescriptions":{}}},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1546,"name":"ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1608:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725Y_$269_$","typeString":"type(contract ERC725Y)"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1616:8:13","memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":196,"src":"1608:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1608:56:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1555,"nodeType":"ExpressionStatement","src":"1608:56:13"},{"expression":{"arguments":[{"id":1559,"name":"_LSP4_TOKEN_TYPE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"1691:20:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1562,"name":"lsp4TokenType_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"1724:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1560,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1713:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1717:6:13","memberName":"encode","nodeType":"MemberAccess","src":"1713:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1713:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1556,"name":"ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1674:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725Y_$269_$","typeString":"type(contract ERC725Y)"}},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1682:8:13","memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":196,"src":"1674:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1674:66:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1565,"nodeType":"ExpressionStatement","src":"1674:66:13"}]},"documentation":{"id":1515,"nodeType":"StructuredDocumentation","src":"807:375:13","text":" @notice Deploying a digital asset `name_` with the `symbol_` symbol.\n @param name_ The name of the token.\n @param symbol_ The symbol of the token.\n @param initialOwner_ The owner of the token contract.\n @param lsp4TokenType_ The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection)."},"id":1567,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1526,"name":"initialOwner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"1336:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1527,"kind":"baseConstructorSpecifier","modifierName":{"id":1525,"name":"ERC725Y","nameLocations":["1328:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":269,"src":"1328:7:13"},"nodeType":"ModifierInvocation","src":"1328:22:13"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1517,"mutability":"mutable","name":"name_","nameLocation":"1222:5:13","nodeType":"VariableDeclaration","scope":1567,"src":"1208:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1516,"name":"string","nodeType":"ElementaryTypeName","src":"1208:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1519,"mutability":"mutable","name":"symbol_","nameLocation":"1251:7:13","nodeType":"VariableDeclaration","scope":1567,"src":"1237:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1518,"name":"string","nodeType":"ElementaryTypeName","src":"1237:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1521,"mutability":"mutable","name":"initialOwner_","nameLocation":"1276:13:13","nodeType":"VariableDeclaration","scope":1567,"src":"1268:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1520,"name":"address","nodeType":"ElementaryTypeName","src":"1268:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1523,"mutability":"mutable","name":"lsp4TokenType_","nameLocation":"1307:14:13","nodeType":"VariableDeclaration","scope":1567,"src":"1299:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1522,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1198:129:13"},"returnParameters":{"id":1528,"nodeType":"ParameterList","parameters":[],"src":"1351:0:13"},"scope":1614,"src":"1187:560:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[196],"body":{"id":1612,"nodeType":"Block","src":"2042:426:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1576,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"2056:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1577,"name":"_LSP4_TOKEN_NAME_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"2067:20:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2056:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1583,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"2157:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1584,"name":"_LSP4_TOKEN_SYMBOL_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"2168:22:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2157:33:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1590,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"2262:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1591,"name":"_LSP4_TOKEN_TYPE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"2273:20:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2262:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1608,"nodeType":"Block","src":"2359:103:13","statements":[{"expression":{"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1597,"name":"_store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2373:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":1599,"indexExpression":{"id":1598,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"2380:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2373:15:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1600,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"2391:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"2373:27:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":1602,"nodeType":"ExpressionStatement","src":"2373:27:13"},{"eventCall":{"arguments":[{"id":1604,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"2432:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1605,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"2441:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1603,"name":"DataChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"2420:11:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2420:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1607,"nodeType":"EmitStatement","src":"2415:36:13"}]},"id":1609,"nodeType":"IfStatement","src":"2258:204:13","trueBody":{"id":1596,"nodeType":"Block","src":"2295:58:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1593,"name":"LSP4TokenTypeNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"2316:24:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2316:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1595,"nodeType":"RevertStatement","src":"2309:33:13"}]}},"id":1610,"nodeType":"IfStatement","src":"2153:309:13","trueBody":{"id":1589,"nodeType":"Block","src":"2192:60:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1586,"name":"LSP4TokenSymbolNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"2213:26:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2213:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1588,"nodeType":"RevertStatement","src":"2206:35:13"}]}},"id":1611,"nodeType":"IfStatement","src":"2052:410:13","trueBody":{"id":1582,"nodeType":"Block","src":"2089:58:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1579,"name":"LSP4TokenNameNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"2110:24:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2110:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1581,"nodeType":"RevertStatement","src":"2103:33:13"}]}}]},"documentation":{"id":1568,"nodeType":"StructuredDocumentation","src":"1753:177:13","text":" @dev The ERC725Y data keys `LSP4TokenName` and `LSP4TokenSymbol` cannot be changed\n via this function once the digital asset contract has been deployed."},"id":1613,"implemented":true,"kind":"function","modifiers":[],"name":"_setData","nameLocation":"1944:8:13","nodeType":"FunctionDefinition","overrides":{"id":1574,"nodeType":"OverrideSpecifier","overrides":[],"src":"2033:8:13"},"parameters":{"id":1573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1570,"mutability":"mutable","name":"dataKey","nameLocation":"1970:7:13","nodeType":"VariableDeclaration","scope":1613,"src":"1962:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1569,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1962:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1572,"mutability":"mutable","name":"dataValue","nameLocation":"2000:9:13","nodeType":"VariableDeclaration","scope":1613,"src":"1987:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1571,"name":"bytes","nodeType":"ElementaryTypeName","src":"1987:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1952:63:13"},"returnParameters":{"id":1575,"nodeType":"ParameterList","parameters":[],"src":"2042:0:13"},"scope":1614,"src":"1935:533:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1615,"src":"747:1723:13","usedErrors":[330,333,336,339,1619,1622,1625],"usedEvents":[349,3623]}],"src":"39:2432:13"},"id":13},"@lukso/lsp4-contracts/contracts/LSP4Errors.sol":{"ast":{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4Errors.sol","exportedSymbols":{"LSP4TokenNameNotEditable":[1619],"LSP4TokenSymbolNotEditable":[1622],"LSP4TokenTypeNotEditable":[1625]},"id":1626,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1616,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:14"},{"documentation":{"id":1617,"nodeType":"StructuredDocumentation","src":"64:379:14","text":" @dev Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized.\n The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract.\n It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized."},"errorSelector":"85c169bd","id":1619,"name":"LSP4TokenNameNotEditable","nameLocation":"450:24:14","nodeType":"ErrorDefinition","parameters":{"id":1618,"nodeType":"ParameterList","parameters":[],"src":"474:2:14"},"src":"444:33:14"},{"documentation":{"id":1620,"nodeType":"StructuredDocumentation","src":"479:383:14","text":" @dev Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized.\n The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract.\n It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized."},"errorSelector":"76755b38","id":1622,"name":"LSP4TokenSymbolNotEditable","nameLocation":"869:26:14","nodeType":"ErrorDefinition","parameters":{"id":1621,"nodeType":"ParameterList","parameters":[],"src":"895:2:14"},"src":"863:35:14"},{"documentation":{"id":1623,"nodeType":"StructuredDocumentation","src":"900:381:14","text":" @dev Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized.\n The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract.\n It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized."},"errorSelector":"4ef6d7fb","id":1625,"name":"LSP4TokenTypeNotEditable","nameLocation":"1288:24:14","nodeType":"ErrorDefinition","parameters":{"id":1624,"nodeType":"ParameterList","parameters":[],"src":"1312:2:14"},"src":"1282:33:14"}],"src":"39:1277:14"},"id":14},"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol":{"ast":{"absolutePath":"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol","exportedSymbols":{"ILSP8IdentifiableDigitalAsset":[1838]},"id":1839,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1627,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"ILSP8IdentifiableDigitalAsset","contractDependencies":[],"contractKind":"interface","documentation":{"id":1628,"nodeType":"StructuredDocumentation","src":"64:108:15","text":" @title Interface of the LSP8 - Identifiable Digital Asset standard, a non-fungible digital asset."},"fullyImplemented":false,"id":1838,"linearizedBaseContracts":[1838],"name":"ILSP8IdentifiableDigitalAsset","nameLocation":"183:29:15","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1629,"nodeType":"StructuredDocumentation","src":"238:616:15","text":" @dev Emitted when `tokenId` token is transferred from the `from` to the `to` address.\n @param operator The address of operator that sent the `tokenId`\n @param from The previous owner of the `tokenId`\n @param to The new owner of `tokenId`\n @param tokenId The tokenId that was transferred\n @param force If the token transfer enforces the `to` recipient address to be a contract that implements the LSP1 standard or not.\n @param data Any additional data the caller included by the caller during the transfer, and sent in the hooks to the `from` and `to` addresses."},"eventSelector":"b333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf","id":1643,"name":"Transfer","nameLocation":"865:8:15","nodeType":"EventDefinition","parameters":{"id":1642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1631,"indexed":false,"mutability":"mutable","name":"operator","nameLocation":"891:8:15","nodeType":"VariableDeclaration","scope":1643,"src":"883:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1630,"name":"address","nodeType":"ElementaryTypeName","src":"883:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1633,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"925:4:15","nodeType":"VariableDeclaration","scope":1643,"src":"909:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1632,"name":"address","nodeType":"ElementaryTypeName","src":"909:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1635,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"955:2:15","nodeType":"VariableDeclaration","scope":1643,"src":"939:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1634,"name":"address","nodeType":"ElementaryTypeName","src":"939:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1637,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"983:7:15","nodeType":"VariableDeclaration","scope":1643,"src":"967:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1636,"name":"bytes32","nodeType":"ElementaryTypeName","src":"967:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1639,"indexed":false,"mutability":"mutable","name":"force","nameLocation":"1005:5:15","nodeType":"VariableDeclaration","scope":1643,"src":"1000:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1638,"name":"bool","nodeType":"ElementaryTypeName","src":"1000:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1641,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"1026:4:15","nodeType":"VariableDeclaration","scope":1643,"src":"1020:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1640,"name":"bytes","nodeType":"ElementaryTypeName","src":"1020:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"873:163:15"},"src":"859:178:15"},{"anonymous":false,"documentation":{"id":1644,"nodeType":"StructuredDocumentation","src":"1043:396:15","text":" @dev Emitted when `tokenOwner` enables `operator` to transfer or burn the `tokenId`.\n @param operator The address authorized as an operator.\n @param tokenOwner The owner of the `tokenId`.\n @param tokenId The tokenId `operator` address has access on behalf of `tokenOwner`.\n @param operatorNotificationData The data to notify the operator about via LSP1."},"eventSelector":"1b1b58aa2ec0cec2228b2d37124556d41f5a1f7b12f089171f896cc236671215","id":1654,"name":"OperatorAuthorizationChanged","nameLocation":"1450:28:15","nodeType":"EventDefinition","parameters":{"id":1653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1646,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1504:8:15","nodeType":"VariableDeclaration","scope":1654,"src":"1488:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1645,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1648,"indexed":true,"mutability":"mutable","name":"tokenOwner","nameLocation":"1538:10:15","nodeType":"VariableDeclaration","scope":1654,"src":"1522:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1647,"name":"address","nodeType":"ElementaryTypeName","src":"1522:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1650,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1574:7:15","nodeType":"VariableDeclaration","scope":1654,"src":"1558:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1649,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1558:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1652,"indexed":false,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"1597:24:15","nodeType":"VariableDeclaration","scope":1654,"src":"1591:30:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1651,"name":"bytes","nodeType":"ElementaryTypeName","src":"1591:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1478:149:15"},"src":"1444:184:15"},{"anonymous":false,"documentation":{"id":1655,"nodeType":"StructuredDocumentation","src":"1634:501:15","text":" @dev Emitted when `tokenOwner` disables `operator` to transfer or burn `tokenId` on its behalf.\n @param operator The address revoked from the operator array ({getOperatorsOf}).\n @param tokenOwner The owner of the `tokenId`.\n @param tokenId The tokenId `operator` is revoked from operating on.\n @param notified Bool indicating whether the operator has been notified or not\n @param operatorNotificationData The data to notify the operator about via LSP1."},"eventSelector":"c78cd419d6136f9f1c1c6aec1d3fae098cffaf8bc86314a8f2685e32fe574e3c","id":1667,"name":"OperatorRevoked","nameLocation":"2146:15:15","nodeType":"EventDefinition","parameters":{"id":1666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1657,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"2187:8:15","nodeType":"VariableDeclaration","scope":1667,"src":"2171:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1656,"name":"address","nodeType":"ElementaryTypeName","src":"2171:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1659,"indexed":true,"mutability":"mutable","name":"tokenOwner","nameLocation":"2221:10:15","nodeType":"VariableDeclaration","scope":1667,"src":"2205:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1658,"name":"address","nodeType":"ElementaryTypeName","src":"2205:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1661,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2257:7:15","nodeType":"VariableDeclaration","scope":1667,"src":"2241:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1660,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2241:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1663,"indexed":false,"mutability":"mutable","name":"notified","nameLocation":"2279:8:15","nodeType":"VariableDeclaration","scope":1667,"src":"2274:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1662,"name":"bool","nodeType":"ElementaryTypeName","src":"2274:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1665,"indexed":false,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"2303:24:15","nodeType":"VariableDeclaration","scope":1667,"src":"2297:30:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1664,"name":"bytes","nodeType":"ElementaryTypeName","src":"2297:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2161:172:15"},"src":"2140:194:15"},{"anonymous":false,"documentation":{"id":1668,"nodeType":"StructuredDocumentation","src":"2340:253:15","text":" @dev Emitted when setting data for `tokenId`.\n @param tokenId The tokenId which data is set for.\n @param dataKey The data key for which a bytes value is set.\n @param dataValue The value to set for the given data key."},"eventSelector":"a6e4251f855f750545fe414f120db91c76b88def14d120969e5bb2d3f05debbb","id":1676,"name":"TokenIdDataChanged","nameLocation":"2604:18:15","nodeType":"EventDefinition","parameters":{"id":1675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1670,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2648:7:15","nodeType":"VariableDeclaration","scope":1676,"src":"2632:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1669,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2632:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1672,"indexed":true,"mutability":"mutable","name":"dataKey","nameLocation":"2681:7:15","nodeType":"VariableDeclaration","scope":1676,"src":"2665:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1671,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2665:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1674,"indexed":false,"mutability":"mutable","name":"dataValue","nameLocation":"2704:9:15","nodeType":"VariableDeclaration","scope":1676,"src":"2698:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1673,"name":"bytes","nodeType":"ElementaryTypeName","src":"2698:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2622:97:15"},"src":"2598:122:15"},{"documentation":{"id":1677,"nodeType":"StructuredDocumentation","src":"2752:147:15","text":" @dev Returns the number of existing tokens that have been minted in this contract.\n @return The number of existing tokens."},"functionSelector":"18160ddd","id":1682,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2913:11:15","nodeType":"FunctionDefinition","parameters":{"id":1678,"nodeType":"ParameterList","parameters":[],"src":"2924:2:15"},"returnParameters":{"id":1681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1682,"src":"2950:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1679,"name":"uint256","nodeType":"ElementaryTypeName","src":"2950:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2949:9:15"},"scope":1838,"src":"2904:55:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1683,"nodeType":"StructuredDocumentation","src":"2997:196:15","text":" @dev Get the number of token IDs owned by `tokenOwner`.\n @param tokenOwner The address to query     *\n @return The total number of token IDs that `tokenOwner` owns."},"functionSelector":"70a08231","id":1690,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3207:9:15","nodeType":"FunctionDefinition","parameters":{"id":1686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1685,"mutability":"mutable","name":"tokenOwner","nameLocation":"3225:10:15","nodeType":"VariableDeclaration","scope":1690,"src":"3217:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1684,"name":"address","nodeType":"ElementaryTypeName","src":"3217:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3216:20:15"},"returnParameters":{"id":1689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1690,"src":"3260:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1687,"name":"uint256","nodeType":"ElementaryTypeName","src":"3260:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3259:9:15"},"scope":1838,"src":"3198:71:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1691,"nodeType":"StructuredDocumentation","src":"3275:360:15","text":" @dev Returns the address that owns a given `tokenId`.\n @param tokenId The token ID to query the owner for.\n @return The owner address of the given `tokenId`.\n @custom:requirements `tokenId` must exist.\n @custom:info if the `tokenId` is not owned by any address, the returned address will be `address(0)`"},"functionSelector":"217b2270","id":1698,"implemented":false,"kind":"function","modifiers":[],"name":"tokenOwnerOf","nameLocation":"3649:12:15","nodeType":"FunctionDefinition","parameters":{"id":1694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1693,"mutability":"mutable","name":"tokenId","nameLocation":"3670:7:15","nodeType":"VariableDeclaration","scope":1698,"src":"3662:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1692,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3662:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3661:17:15"},"returnParameters":{"id":1697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1698,"src":"3702:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1695,"name":"address","nodeType":"ElementaryTypeName","src":"3702:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3701:9:15"},"scope":1838,"src":"3640:71:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1699,"nodeType":"StructuredDocumentation","src":"3717:244:15","text":" @dev Returns the list of token IDs that the `tokenOwner` address owns.\n @param tokenOwner The address that we want to get the list of token IDs for.\n @return An array of `bytes32[] tokenIds` owned by `tokenOwner`."},"functionSelector":"a3b261f2","id":1707,"implemented":false,"kind":"function","modifiers":[],"name":"tokenIdsOf","nameLocation":"3975:10:15","nodeType":"FunctionDefinition","parameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1701,"mutability":"mutable","name":"tokenOwner","nameLocation":"4003:10:15","nodeType":"VariableDeclaration","scope":1707,"src":"3995:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"3995:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3985:34:15"},"returnParameters":{"id":1706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1707,"src":"4043:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1703,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4043:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1704,"nodeType":"ArrayTypeName","src":"4043:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4042:18:15"},"scope":1838,"src":"3966:95:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1708,"nodeType":"StructuredDocumentation","src":"4110:286:15","text":" @notice Retrieves data for a specific `tokenId` and `dataKey`.\n @param tokenId The unique identifier for a token.\n @param dataKey The key for the data to retrieve.\n @return dataValues The data value associated with the given `tokenId` and `dataKey`."},"functionSelector":"16e023b3","id":1717,"implemented":false,"kind":"function","modifiers":[],"name":"getDataForTokenId","nameLocation":"4410:17:15","nodeType":"FunctionDefinition","parameters":{"id":1713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1710,"mutability":"mutable","name":"tokenId","nameLocation":"4445:7:15","nodeType":"VariableDeclaration","scope":1717,"src":"4437:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1709,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4437:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1712,"mutability":"mutable","name":"dataKey","nameLocation":"4470:7:15","nodeType":"VariableDeclaration","scope":1717,"src":"4462:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1711,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4462:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4427:56:15"},"returnParameters":{"id":1716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"mutability":"mutable","name":"dataValues","nameLocation":"4515:10:15","nodeType":"VariableDeclaration","scope":1717,"src":"4502:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1714,"name":"bytes","nodeType":"ElementaryTypeName","src":"4502:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4501:25:15"},"scope":1838,"src":"4401:126:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1718,"nodeType":"StructuredDocumentation","src":"4533:309:15","text":" @notice Retrieves data in batch for multiple `tokenId` and `dataKey` pairs.\n @param tokenIds An array of token IDs.\n @param dataKeys An array of data keys corresponding to the token IDs.\n @return dataValues An array of data values for each pair of `tokenId` and `dataKey`."},"functionSelector":"1d26fce6","id":1730,"implemented":false,"kind":"function","modifiers":[],"name":"getDataBatchForTokenIds","nameLocation":"4856:23:15","nodeType":"FunctionDefinition","parameters":{"id":1725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1721,"mutability":"mutable","name":"tokenIds","nameLocation":"4906:8:15","nodeType":"VariableDeclaration","scope":1730,"src":"4889:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1719,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4889:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1720,"nodeType":"ArrayTypeName","src":"4889:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1724,"mutability":"mutable","name":"dataKeys","nameLocation":"4941:8:15","nodeType":"VariableDeclaration","scope":1730,"src":"4924:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1722,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4924:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1723,"nodeType":"ArrayTypeName","src":"4924:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4879:76:15"},"returnParameters":{"id":1729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1728,"mutability":"mutable","name":"dataValues","nameLocation":"4989:10:15","nodeType":"VariableDeclaration","scope":1730,"src":"4974:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1726,"name":"bytes","nodeType":"ElementaryTypeName","src":"4974:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1727,"nodeType":"ArrayTypeName","src":"4974:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"4973:27:15"},"scope":1838,"src":"4847:154:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1731,"nodeType":"StructuredDocumentation","src":"5007:299:15","text":" @notice Sets data for a specific `tokenId` and `dataKey`.\n @param tokenId The unique identifier for a token.\n @param dataKey The key for the data to set.\n @param dataValue The value to set for the given data key.\n @custom:events {TokenIdDataChanged} event."},"functionSelector":"d6c1407c","id":1740,"implemented":false,"kind":"function","modifiers":[],"name":"setDataForTokenId","nameLocation":"5320:17:15","nodeType":"FunctionDefinition","parameters":{"id":1738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1733,"mutability":"mutable","name":"tokenId","nameLocation":"5355:7:15","nodeType":"VariableDeclaration","scope":1740,"src":"5347:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1732,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5347:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1735,"mutability":"mutable","name":"dataKey","nameLocation":"5380:7:15","nodeType":"VariableDeclaration","scope":1740,"src":"5372:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1734,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5372:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1737,"mutability":"mutable","name":"dataValue","nameLocation":"5410:9:15","nodeType":"VariableDeclaration","scope":1740,"src":"5397:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1736,"name":"bytes","nodeType":"ElementaryTypeName","src":"5397:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5337:88:15"},"returnParameters":{"id":1739,"nodeType":"ParameterList","parameters":[],"src":"5434:0:15"},"scope":1838,"src":"5311:124:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1741,"nodeType":"StructuredDocumentation","src":"5441:352:15","text":" @notice Sets data in batch for multiple `tokenId` and `dataKey` pairs.\n @param tokenIds An array of token IDs.\n @param dataKeys An array of data keys corresponding to the token IDs.\n @param dataValues An array of values to set for the given data keys.\n @custom:events {TokenIdDataChanged} event for each pair."},"functionSelector":"be9f0e6f","id":1753,"implemented":false,"kind":"function","modifiers":[],"name":"setDataBatchForTokenIds","nameLocation":"5807:23:15","nodeType":"FunctionDefinition","parameters":{"id":1751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1744,"mutability":"mutable","name":"tokenIds","nameLocation":"5857:8:15","nodeType":"VariableDeclaration","scope":1753,"src":"5840:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1742,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5840:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1743,"nodeType":"ArrayTypeName","src":"5840:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1747,"mutability":"mutable","name":"dataKeys","nameLocation":"5892:8:15","nodeType":"VariableDeclaration","scope":1753,"src":"5875:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1745,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5875:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1746,"nodeType":"ArrayTypeName","src":"5875:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1750,"mutability":"mutable","name":"dataValues","nameLocation":"5925:10:15","nodeType":"VariableDeclaration","scope":1753,"src":"5910:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1748,"name":"bytes","nodeType":"ElementaryTypeName","src":"5910:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1749,"nodeType":"ArrayTypeName","src":"5910:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"5830:111:15"},"returnParameters":{"id":1752,"nodeType":"ParameterList","parameters":[],"src":"5950:0:15"},"scope":1838,"src":"5798:153:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1754,"nodeType":"StructuredDocumentation","src":"5992:782:15","text":" @dev Allow an `operator` address to transfer or burn a specific `tokenId` on behalf of its token owner. See {isOperatorFor}.\n Notify the operator based on the LSP1-UniversalReceiver standard\n @param operator The address to authorize as an operator.\n @param tokenId The token ID operator has access to.\n @param operatorNotificationData The data to notify the operator about via LSP1.\n @custom:requirements\n - `tokenId` must exist.\n - caller MUST be the {tokenOwnerOf} `tokenId`.\n - the owner of a `tokenId` cannot grant itself as an `operator` (`operator` cannot be the calling address).\n - `operator` cannot be the zero address.\n @custom:events {OperatorAuthorizationChanged} event."},"functionSelector":"86a10ddd","id":1763,"implemented":false,"kind":"function","modifiers":[],"name":"authorizeOperator","nameLocation":"6788:17:15","nodeType":"FunctionDefinition","parameters":{"id":1761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1756,"mutability":"mutable","name":"operator","nameLocation":"6823:8:15","nodeType":"VariableDeclaration","scope":1763,"src":"6815:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1755,"name":"address","nodeType":"ElementaryTypeName","src":"6815:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1758,"mutability":"mutable","name":"tokenId","nameLocation":"6849:7:15","nodeType":"VariableDeclaration","scope":1763,"src":"6841:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1757,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6841:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1760,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"6879:24:15","nodeType":"VariableDeclaration","scope":1763,"src":"6866:37:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1759,"name":"bytes","nodeType":"ElementaryTypeName","src":"6866:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6805:104:15"},"returnParameters":{"id":1762,"nodeType":"ParameterList","parameters":[],"src":"6918:0:15"},"scope":1838,"src":"6779:140:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1764,"nodeType":"StructuredDocumentation","src":"6925:893:15","text":" @dev Remove access of `operator` for a given `tokenId`, disallowing it to transfer `tokenId` on behalf of its owner.\n See also {isOperatorFor}.\n @param operator The address to revoke as an operator.\n @param tokenId The tokenId `operator` is revoked from operating on.\n @param notify Boolean indicating whether to notify the operator or not\n @param operatorNotificationData The data to notify the operator about via LSP1.\n @custom:requirements\n - `tokenId` must exist.\n - caller must be the {tokenOwnerOf} `tokenId`.\n - the owner of a `tokenId` cannot grant revoke itself as an `operator` (`operator` cannot be the calling address).\n - `operator` cannot be the zero address.\n @custom:events {OperatorRevoked} event with address of the operator being revoked for the caller (token owner).."},"functionSelector":"db8c9663","id":1775,"implemented":false,"kind":"function","modifiers":[],"name":"revokeOperator","nameLocation":"7832:14:15","nodeType":"FunctionDefinition","parameters":{"id":1773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1766,"mutability":"mutable","name":"operator","nameLocation":"7864:8:15","nodeType":"VariableDeclaration","scope":1775,"src":"7856:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1765,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1768,"mutability":"mutable","name":"tokenId","nameLocation":"7890:7:15","nodeType":"VariableDeclaration","scope":1775,"src":"7882:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1767,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7882:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1770,"mutability":"mutable","name":"notify","nameLocation":"7912:6:15","nodeType":"VariableDeclaration","scope":1775,"src":"7907:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1769,"name":"bool","nodeType":"ElementaryTypeName","src":"7907:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1772,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"7941:24:15","nodeType":"VariableDeclaration","scope":1775,"src":"7928:37:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1771,"name":"bytes","nodeType":"ElementaryTypeName","src":"7928:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7846:125:15"},"returnParameters":{"id":1774,"nodeType":"ParameterList","parameters":[],"src":"7980:0:15"},"scope":1838,"src":"7823:158:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1776,"nodeType":"StructuredDocumentation","src":"7987:535:15","text":" @dev Returns whether `operator` address is an operator for a given `tokenId`.\n @param operator The address to query operator status for.\n @param tokenId The token ID to check if `operator` is allowed to operate on.\n @return `true` if `operator` is an operator for `tokenId`, `false` otherwise.\n @custom:requirements\n - `tokenId` must exist.\n - caller must be the current {tokenOwnerOf} `tokenId`.\n @custom:info The tokenOwner is its own operator."},"functionSelector":"2a3654a4","id":1785,"implemented":false,"kind":"function","modifiers":[],"name":"isOperatorFor","nameLocation":"8536:13:15","nodeType":"FunctionDefinition","parameters":{"id":1781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1778,"mutability":"mutable","name":"operator","nameLocation":"8567:8:15","nodeType":"VariableDeclaration","scope":1785,"src":"8559:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1777,"name":"address","nodeType":"ElementaryTypeName","src":"8559:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1780,"mutability":"mutable","name":"tokenId","nameLocation":"8593:7:15","nodeType":"VariableDeclaration","scope":1785,"src":"8585:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1779,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8585:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8549:57:15"},"returnParameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1785,"src":"8630:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1782,"name":"bool","nodeType":"ElementaryTypeName","src":"8630:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8629:6:15"},"scope":1838,"src":"8527:109:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1786,"nodeType":"StructuredDocumentation","src":"8642:351:15","text":" @dev Returns all `operator` addresses that are allowed to transfer or burn a specific `tokenId` on behalf of its owner.\n @param tokenId The token ID to get the operators for.\n @return An array of operators allowed to transfer or burn a specific `tokenId`.\n Requirements\n - `tokenId` must exist."},"functionSelector":"49a6078d","id":1794,"implemented":false,"kind":"function","modifiers":[],"name":"getOperatorsOf","nameLocation":"9007:14:15","nodeType":"FunctionDefinition","parameters":{"id":1789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1788,"mutability":"mutable","name":"tokenId","nameLocation":"9039:7:15","nodeType":"VariableDeclaration","scope":1794,"src":"9031:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1787,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9031:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9021:31:15"},"returnParameters":{"id":1793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1794,"src":"9076:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1790,"name":"address","nodeType":"ElementaryTypeName","src":"9076:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1791,"nodeType":"ArrayTypeName","src":"9076:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"9075:18:15"},"scope":1838,"src":"8998:96:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1795,"nodeType":"StructuredDocumentation","src":"9135:2076:15","text":" @dev Transfer a given `tokenId` token from the `from` address to the `to` address.\n If operators are set for a specific `tokenId`, all the operators are revoked after the tokenId have been transferred.\n The `force` parameter MUST be set to `true` when transferring tokens to Externally Owned Accounts (EOAs)\n or contracts that do not implement the LSP1 standard.\n @param from The address that owns the given `tokenId`.\n @param to The address that will receive the `tokenId`.\n @param tokenId The token ID to transfer.\n @param force When set to `true`, the `to` address CAN be any address.\n When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\n @param data Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\n @custom:requirements\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` and `to` cannot be the same address (`from` cannot send the `tokenId` to itself).\n - `from` must own the given `tokenId`.\n - If the caller is not `from`, it must be an operator for the `tokenId`.\n @custom:events\n - {Transfer} event when the `tokenId` is successfully transferred.\n @custom:hint The `force` parameter **MUST be set to `true`** to transfer tokens to Externally Owned Accounts (EOAs)\n or contracts that do not implement the LSP1 Universal Receiver Standard. Otherwise the function will revert making the transfer fail.\n @custom:info if the `to` address is a contract that implements LSP1, it will always be notified via its `universalReceiver(...)` function, regardless if `force` is set to `true` or `false`.\n @custom:warning Be aware that when either the sender or the recipient can have logic that revert in their `universalReceiver(...)` function when being notified.\n This even if the `force` was set to `true`."},"functionSelector":"511b6952","id":1808,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"11225:8:15","nodeType":"FunctionDefinition","parameters":{"id":1806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1797,"mutability":"mutable","name":"from","nameLocation":"11251:4:15","nodeType":"VariableDeclaration","scope":1808,"src":"11243:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1796,"name":"address","nodeType":"ElementaryTypeName","src":"11243:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1799,"mutability":"mutable","name":"to","nameLocation":"11273:2:15","nodeType":"VariableDeclaration","scope":1808,"src":"11265:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1798,"name":"address","nodeType":"ElementaryTypeName","src":"11265:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1801,"mutability":"mutable","name":"tokenId","nameLocation":"11293:7:15","nodeType":"VariableDeclaration","scope":1808,"src":"11285:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1800,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11285:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1803,"mutability":"mutable","name":"force","nameLocation":"11315:5:15","nodeType":"VariableDeclaration","scope":1808,"src":"11310:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1802,"name":"bool","nodeType":"ElementaryTypeName","src":"11310:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1805,"mutability":"mutable","name":"data","nameLocation":"11343:4:15","nodeType":"VariableDeclaration","scope":1808,"src":"11330:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1804,"name":"bytes","nodeType":"ElementaryTypeName","src":"11330:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11233:120:15"},"returnParameters":{"id":1807,"nodeType":"ParameterList","parameters":[],"src":"11362:0:15"},"scope":1838,"src":"11216:147:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1809,"nodeType":"StructuredDocumentation","src":"11369:1189:15","text":" @dev Transfers multiple tokens at once based on the arrays of `from`, `to` and `tokenId`.\n If any transfer fails, the whole call will revert.\n @param from An array of sending addresses.\n @param to An array of recipient addresses.\n @param tokenId An array of token IDs to transfer.\n @param force When set to `true`, `to` may be any address.\n When set to `false`, `to` must be a contract that supports the LSP1 standard and not revert.\n @param data Any additional data the caller wants included in the emitted event, and sent in the hooks to the `from` and `to` addresses.\n @custom:requirements\n - The arrays of `from`, `to` and `tokenId` must have the same length.\n - no values in the `from` array can be the zero address.\n - no values in the `to` array can be the zero address.\n - `from` and `to` cannot be the same address at the same index on each arrays.\n - each `tokenId` must be owned by `from`.\n - If the caller is not `from`, it must be an operator of each `tokenId`.\n @custom:events\n - {Transfer} events on each successful token transfer."},"functionSelector":"7e87632c","id":1827,"implemented":false,"kind":"function","modifiers":[],"name":"transferBatch","nameLocation":"12572:13:15","nodeType":"FunctionDefinition","parameters":{"id":1825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1812,"mutability":"mutable","name":"from","nameLocation":"12612:4:15","nodeType":"VariableDeclaration","scope":1827,"src":"12595:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1810,"name":"address","nodeType":"ElementaryTypeName","src":"12595:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1811,"nodeType":"ArrayTypeName","src":"12595:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1815,"mutability":"mutable","name":"to","nameLocation":"12643:2:15","nodeType":"VariableDeclaration","scope":1827,"src":"12626:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1813,"name":"address","nodeType":"ElementaryTypeName","src":"12626:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1814,"nodeType":"ArrayTypeName","src":"12626:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1818,"mutability":"mutable","name":"tokenId","nameLocation":"12672:7:15","nodeType":"VariableDeclaration","scope":1827,"src":"12655:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1816,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12655:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1817,"nodeType":"ArrayTypeName","src":"12655:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1821,"mutability":"mutable","name":"force","nameLocation":"12703:5:15","nodeType":"VariableDeclaration","scope":1827,"src":"12689:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1819,"name":"bool","nodeType":"ElementaryTypeName","src":"12689:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1820,"nodeType":"ArrayTypeName","src":"12689:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1824,"mutability":"mutable","name":"data","nameLocation":"12733:4:15","nodeType":"VariableDeclaration","scope":1827,"src":"12718:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1822,"name":"bytes","nodeType":"ElementaryTypeName","src":"12718:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1823,"nodeType":"ArrayTypeName","src":"12718:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"12585:158:15"},"returnParameters":{"id":1826,"nodeType":"ParameterList","parameters":[],"src":"12752:0:15"},"scope":1838,"src":"12563:190:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1828,"nodeType":"StructuredDocumentation","src":"12759:460:15","text":" @notice Executing the following batch of abi-encoded function calls on the contract: `data`.\n @dev Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\n @param data An array of ABI encoded function calls to be called on the contract.\n @return results An array of abi-encoded data returned by the functions executed."},"functionSelector":"6963d438","id":1837,"implemented":false,"kind":"function","modifiers":[],"name":"batchCalls","nameLocation":"13233:10:15","nodeType":"FunctionDefinition","parameters":{"id":1832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1831,"mutability":"mutable","name":"data","nameLocation":"13270:4:15","nodeType":"VariableDeclaration","scope":1837,"src":"13253:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1829,"name":"bytes","nodeType":"ElementaryTypeName","src":"13253:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1830,"nodeType":"ArrayTypeName","src":"13253:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13243:37:15"},"returnParameters":{"id":1836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1835,"mutability":"mutable","name":"results","nameLocation":"13314:7:15","nodeType":"VariableDeclaration","scope":1837,"src":"13299:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1833,"name":"bytes","nodeType":"ElementaryTypeName","src":"13299:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1834,"nodeType":"ArrayTypeName","src":"13299:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13298:24:15"},"scope":1838,"src":"13224:99:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1839,"src":"173:13152:15","usedErrors":[],"usedEvents":[1643,1654,1667,1676]}],"src":"39:13287:15"},"id":15},"@lukso/lsp8-contracts/contracts/LSP8Constants.sol":{"ast":{"absolutePath":"@lukso/lsp8-contracts/contracts/LSP8Constants.sol","exportedSymbols":{"_INTERFACEID_LSP8":[1843],"_INTERFACEID_LSP8_V0_12_0":[1846],"_INTERFACEID_LSP8_V0_14_0":[1849],"_LSP8_REFERENCE_CONTRACT":[1858],"_LSP8_TOKENID_FORMAT_ADDRESS":[1876],"_LSP8_TOKENID_FORMAT_HASH":[1882],"_LSP8_TOKENID_FORMAT_KEY":[1852],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_ADDRESS":[1891],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_HASH":[1897],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_NUMBER":[1885],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_STRING":[1888],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_UNIQUE_ID":[1894],"_LSP8_TOKENID_FORMAT_NUMBER":[1870],"_LSP8_TOKENID_FORMAT_STRING":[1873],"_LSP8_TOKENID_FORMAT_UNIQUE_ID":[1879],"_LSP8_TOKEN_METADATA_BASE_URI":[1855],"_TYPEID_LSP8_TOKENOPERATOR":[1867],"_TYPEID_LSP8_TOKENSRECIPIENT":[1864],"_TYPEID_LSP8_TOKENSSENDER":[1861]},"id":1898,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1840,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:16"},{"constant":true,"id":1843,"mutability":"constant","name":"_INTERFACEID_LSP8","nameLocation":"108:17:16","nodeType":"VariableDeclaration","scope":1898,"src":"92:46:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1841,"name":"bytes4","nodeType":"ElementaryTypeName","src":"92:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783361323731373036","id":1842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"128:10:16","typeDescriptions":{"typeIdentifier":"t_rational_975640326_by_1","typeString":"int_const 975640326"},"value":"0x3a271706"},"visibility":"internal"},{"constant":true,"id":1846,"mutability":"constant","name":"_INTERFACEID_LSP8_V0_12_0","nameLocation":"157:25:16","nodeType":"VariableDeclaration","scope":1898,"src":"141:54:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1844,"name":"bytes4","nodeType":"ElementaryTypeName","src":"141:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783330646335323738","id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"185:10:16","typeDescriptions":{"typeIdentifier":"t_rational_819745400_by_1","typeString":"int_const 819745400"},"value":"0x30dc5278"},"visibility":"internal"},{"constant":true,"id":1849,"mutability":"constant","name":"_INTERFACEID_LSP8_V0_14_0","nameLocation":"214:25:16","nodeType":"VariableDeclaration","scope":1898,"src":"198:54:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1847,"name":"bytes4","nodeType":"ElementaryTypeName","src":"198:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786563616439663735","id":1848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"242:10:16","typeDescriptions":{"typeIdentifier":"t_rational_3970801525_by_1","typeString":"int_const 3970801525"},"value":"0xecad9f75"},"visibility":"internal"},{"constant":true,"id":1852,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_KEY","nameLocation":"332:24:16","nodeType":"VariableDeclaration","scope":1898,"src":"315:110:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1850,"name":"bytes32","nodeType":"ElementaryTypeName","src":"315:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866363735653933363161663163313636346331383638636661336562393736373264366231613531336161356238316465633334633965653333306538313864","id":1851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"359:66:16","typeDescriptions":{"typeIdentifier":"t_rational_111477291423636096748029871472748476558390830835668367522651640064380322611597_by_1","typeString":"int_const 1114...(70 digits omitted)...1597"},"value":"0xf675e9361af1c1664c1868cfa3eb97672d6b1a513aa5b81dec34c9ee330e818d"},"visibility":"internal"},{"constant":true,"id":1855,"mutability":"constant","name":"_LSP8_TOKEN_METADATA_BASE_URI","nameLocation":"486:29:16","nodeType":"VariableDeclaration","scope":1898,"src":"469:115:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1853,"name":"bytes32","nodeType":"ElementaryTypeName","src":"469:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307831613736323836303063336261633731303166353336393766343864663338316464633336623930313565376437633963353633336431323532616132383433","id":1854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:66:16","typeDescriptions":{"typeIdentifier":"t_rational_11968900676105822912557464315324495329565190357858734522371517867650361993283_by_1","typeString":"int_const 1196...(69 digits omitted)...3283"},"value":"0x1a7628600c3bac7101f53697f48df381ddc36b9015e7d7c9c5633d1252aa2843"},"visibility":"internal"},{"constant":true,"id":1858,"mutability":"constant","name":"_LSP8_REFERENCE_CONTRACT","nameLocation":"642:24:16","nodeType":"VariableDeclaration","scope":1898,"src":"625:110:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1856,"name":"bytes32","nodeType":"ElementaryTypeName","src":"625:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307837303865376238383137393566326536623663323735323130386331373765633839323438343538646533626636396430643433343830623365353033346536","id":1857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"669:66:16","typeDescriptions":{"typeIdentifier":"t_rational_50910783908361636124804393116408259141598108534342564848859926123218144867558_by_1","typeString":"int_const 5091...(69 digits omitted)...7558"},"value":"0x708e7b881795f2e6b6c2752108c177ec89248458de3bf69d0d43480b3e5034e6"},"visibility":"internal"},{"constant":true,"id":1861,"mutability":"constant","name":"_TYPEID_LSP8_TOKENSSENDER","nameLocation":"821:25:16","nodeType":"VariableDeclaration","scope":1898,"src":"804:111:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1859,"name":"bytes32","nodeType":"ElementaryTypeName","src":"804:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862323365616537653664313536346232393562346333653362653430326439613266303737366335376264663336353930333439366636666134383161623030","id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"849:66:16","typeDescriptions":{"typeIdentifier":"t_rational_80622435878143139083563480449382184796258105498148027923970953027117195045632_by_1","typeString":"int_const 8062...(69 digits omitted)...5632"},"value":"0xb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab00"},"visibility":"internal"},{"constant":true,"id":1864,"mutability":"constant","name":"_TYPEID_LSP8_TOKENSRECIPIENT","nameLocation":"984:28:16","nodeType":"VariableDeclaration","scope":1898,"src":"967:114:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1862,"name":"bytes32","nodeType":"ElementaryTypeName","src":"967:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830623038346135356562663730666433633036666437353532363964616332323132633464336630663464303930373937383062666135306331623239383464","id":1863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1015:66:16","typeDescriptions":{"typeIdentifier":"t_rational_4990089156609310438051076814138656340767597687526420738174868187457831213133_by_1","typeString":"int_const 4990...(68 digits omitted)...3133"},"value":"0x0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d"},"visibility":"internal"},{"constant":true,"id":1867,"mutability":"constant","name":"_TYPEID_LSP8_TOKENOPERATOR","nameLocation":"1149:26:16","nodeType":"VariableDeclaration","scope":1898,"src":"1132:112:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1865,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1132:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307838613163313561383739396637316235343765303865326263623265383532353765383162306130376565653263653637313235343965656631663030393730","id":1866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1178:66:16","typeDescriptions":{"typeIdentifier":"t_rational_62468794301057257859859864036220190757926884000171377020854266712521628977520_by_1","typeString":"int_const 6246...(69 digits omitted)...7520"},"value":"0x8a1c15a8799f71b547e08e2bcb2e85257e81b0a07eee2ce6712549eef1f00970"},"visibility":"internal"},{"constant":true,"id":1870,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_NUMBER","nameLocation":"1289:27:16","nodeType":"VariableDeclaration","scope":1898,"src":"1272:48:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1868,"name":"uint256","nodeType":"ElementaryTypeName","src":"1272:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":1869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1319:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":true,"id":1873,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_STRING","nameLocation":"1339:27:16","nodeType":"VariableDeclaration","scope":1898,"src":"1322:48:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1871,"name":"uint256","nodeType":"ElementaryTypeName","src":"1322:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1369:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":1876,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_ADDRESS","nameLocation":"1389:28:16","nodeType":"VariableDeclaration","scope":1898,"src":"1372:49:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1874,"name":"uint256","nodeType":"ElementaryTypeName","src":"1372:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1420:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"constant":true,"id":1879,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_UNIQUE_ID","nameLocation":"1440:30:16","nodeType":"VariableDeclaration","scope":1898,"src":"1423:51:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1877,"name":"uint256","nodeType":"ElementaryTypeName","src":"1423:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":1878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1473:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"internal"},{"constant":true,"id":1882,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_HASH","nameLocation":"1493:25:16","nodeType":"VariableDeclaration","scope":1898,"src":"1476:46:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1880,"name":"uint256","nodeType":"ElementaryTypeName","src":"1476:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"34","id":1881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1521:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"visibility":"internal"},{"constant":true,"id":1885,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_NUMBER","nameLocation":"1542:41:16","nodeType":"VariableDeclaration","scope":1898,"src":"1525:64:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1883,"name":"uint256","nodeType":"ElementaryTypeName","src":"1525:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":1884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1586:3:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"internal"},{"constant":true,"id":1888,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_STRING","nameLocation":"1608:41:16","nodeType":"VariableDeclaration","scope":1898,"src":"1591:64:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1886,"name":"uint256","nodeType":"ElementaryTypeName","src":"1591:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313031","id":1887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1652:3:16","typeDescriptions":{"typeIdentifier":"t_rational_101_by_1","typeString":"int_const 101"},"value":"101"},"visibility":"internal"},{"constant":true,"id":1891,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_ADDRESS","nameLocation":"1674:42:16","nodeType":"VariableDeclaration","scope":1898,"src":"1657:65:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1889,"name":"uint256","nodeType":"ElementaryTypeName","src":"1657:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313032","id":1890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1719:3:16","typeDescriptions":{"typeIdentifier":"t_rational_102_by_1","typeString":"int_const 102"},"value":"102"},"visibility":"internal"},{"constant":true,"id":1894,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_UNIQUE_ID","nameLocation":"1741:44:16","nodeType":"VariableDeclaration","scope":1898,"src":"1724:67:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1892,"name":"uint256","nodeType":"ElementaryTypeName","src":"1724:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313033","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:16","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"visibility":"internal"},{"constant":true,"id":1897,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_HASH","nameLocation":"1810:39:16","nodeType":"VariableDeclaration","scope":1898,"src":"1793:62:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1895,"name":"uint256","nodeType":"ElementaryTypeName","src":"1793:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313034","id":1896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1852:3:16","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},"visibility":"internal"}],"src":"39:1818:16"},"id":16},"@lukso/lsp8-contracts/contracts/LSP8Errors.sol":{"ast":{"absolutePath":"@lukso/lsp8-contracts/contracts/LSP8Errors.sol","exportedSymbols":{"LSP8BatchCallFailed":[1978],"LSP8CannotSendToAddressZero":[1933],"LSP8CannotUseAddressZeroAsOperator":[1930],"LSP8InvalidTransferBatch":[1948],"LSP8NonExistentTokenId":[1904],"LSP8NonExistingOperator":[1940],"LSP8NotTokenOperator":[1920],"LSP8NotTokenOwner":[1913],"LSP8NotifyTokenReceiverContractMissingLSP1Interface":[1953],"LSP8NotifyTokenReceiverIsEOA":[1958],"LSP8OperatorAlreadyAuthorized":[1927],"LSP8RevokeOperatorNotAuthorized":[1996],"LSP8TokenContractCannotHoldValue":[1964],"LSP8TokenIdAlreadyMinted":[1945],"LSP8TokenIdFormatNotEditable":[1967],"LSP8TokenIdsDataEmptyArray":[1973],"LSP8TokenIdsDataLengthMismatch":[1970],"LSP8TokenOwnerCannotBeOperator":[1961],"LSP8TokenOwnerChanged":[1987]},"id":1997,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1899,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:17"},{"documentation":{"id":1900,"nodeType":"StructuredDocumentation","src":"79:59:17","text":" @dev Reverts when `tokenId` has not been minted."},"errorSelector":"ae8f9a36","id":1904,"name":"LSP8NonExistentTokenId","nameLocation":"145:22:17","nodeType":"ErrorDefinition","parameters":{"id":1903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1902,"mutability":"mutable","name":"tokenId","nameLocation":"176:7:17","nodeType":"VariableDeclaration","scope":1904,"src":"168:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1901,"name":"bytes32","nodeType":"ElementaryTypeName","src":"168:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"167:17:17"},"src":"139:46:17"},{"documentation":{"id":1905,"nodeType":"StructuredDocumentation","src":"187:79:17","text":" @dev Reverts when `caller` is not the `tokenOwner` of the `tokenId`."},"errorSelector":"5b271ea2","id":1913,"name":"LSP8NotTokenOwner","nameLocation":"273:17:17","nodeType":"ErrorDefinition","parameters":{"id":1912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1907,"mutability":"mutable","name":"tokenOwner","nameLocation":"299:10:17","nodeType":"VariableDeclaration","scope":1913,"src":"291:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1906,"name":"address","nodeType":"ElementaryTypeName","src":"291:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1909,"mutability":"mutable","name":"tokenId","nameLocation":"319:7:17","nodeType":"VariableDeclaration","scope":1913,"src":"311:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1908,"name":"bytes32","nodeType":"ElementaryTypeName","src":"311:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1911,"mutability":"mutable","name":"caller","nameLocation":"336:6:17","nodeType":"VariableDeclaration","scope":1913,"src":"328:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1910,"name":"address","nodeType":"ElementaryTypeName","src":"328:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"290:53:17"},"src":"267:77:17"},{"documentation":{"id":1914,"nodeType":"StructuredDocumentation","src":"346:79:17","text":" @dev Reverts when `caller` is not an allowed operator for `tokenId`."},"errorSelector":"1294d2a9","id":1920,"name":"LSP8NotTokenOperator","nameLocation":"432:20:17","nodeType":"ErrorDefinition","parameters":{"id":1919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1916,"mutability":"mutable","name":"tokenId","nameLocation":"461:7:17","nodeType":"VariableDeclaration","scope":1920,"src":"453:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1915,"name":"bytes32","nodeType":"ElementaryTypeName","src":"453:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1918,"mutability":"mutable","name":"caller","nameLocation":"478:6:17","nodeType":"VariableDeclaration","scope":1920,"src":"470:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1917,"name":"address","nodeType":"ElementaryTypeName","src":"470:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"452:33:17"},"src":"426:60:17"},{"documentation":{"id":1921,"nodeType":"StructuredDocumentation","src":"488:80:17","text":" @dev Reverts when `operator` is already authorized for the `tokenId`."},"errorSelector":"a7626b68","id":1927,"name":"LSP8OperatorAlreadyAuthorized","nameLocation":"575:29:17","nodeType":"ErrorDefinition","parameters":{"id":1926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1923,"mutability":"mutable","name":"operator","nameLocation":"613:8:17","nodeType":"VariableDeclaration","scope":1927,"src":"605:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1922,"name":"address","nodeType":"ElementaryTypeName","src":"605:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1925,"mutability":"mutable","name":"tokenId","nameLocation":"631:7:17","nodeType":"VariableDeclaration","scope":1927,"src":"623:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"623:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"604:35:17"},"src":"569:71:17"},{"documentation":{"id":1928,"nodeType":"StructuredDocumentation","src":"642:75:17","text":" @dev Reverts when trying to set the zero address as an operator."},"errorSelector":"9577b8b3","id":1930,"name":"LSP8CannotUseAddressZeroAsOperator","nameLocation":"724:34:17","nodeType":"ErrorDefinition","parameters":{"id":1929,"nodeType":"ParameterList","parameters":[],"src":"758:2:17"},"src":"718:43:17"},{"documentation":{"id":1931,"nodeType":"StructuredDocumentation","src":"763:70:17","text":" @dev Reverts when trying to send token to the zero address."},"errorSelector":"24ecef4d","id":1933,"name":"LSP8CannotSendToAddressZero","nameLocation":"840:27:17","nodeType":"ErrorDefinition","parameters":{"id":1932,"nodeType":"ParameterList","parameters":[],"src":"867:2:17"},"src":"834:36:17"},{"documentation":{"id":1934,"nodeType":"StructuredDocumentation","src":"872:77:17","text":" @dev Reverts when `operator` is not an operator for the `tokenId`."},"errorSelector":"4aa31a8c","id":1940,"name":"LSP8NonExistingOperator","nameLocation":"956:23:17","nodeType":"ErrorDefinition","parameters":{"id":1939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"mutability":"mutable","name":"operator","nameLocation":"988:8:17","nodeType":"VariableDeclaration","scope":1940,"src":"980:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1935,"name":"address","nodeType":"ElementaryTypeName","src":"980:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1938,"mutability":"mutable","name":"tokenId","nameLocation":"1006:7:17","nodeType":"VariableDeclaration","scope":1940,"src":"998:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1937,"name":"bytes32","nodeType":"ElementaryTypeName","src":"998:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"979:35:17"},"src":"950:65:17"},{"documentation":{"id":1941,"nodeType":"StructuredDocumentation","src":"1017:63:17","text":" @dev Reverts when `tokenId` has already been minted."},"errorSelector":"34c7b511","id":1945,"name":"LSP8TokenIdAlreadyMinted","nameLocation":"1087:24:17","nodeType":"ErrorDefinition","parameters":{"id":1944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1943,"mutability":"mutable","name":"tokenId","nameLocation":"1120:7:17","nodeType":"VariableDeclaration","scope":1945,"src":"1112:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1942,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1112:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1111:17:17"},"src":"1081:48:17"},{"documentation":{"id":1946,"nodeType":"StructuredDocumentation","src":"1131:92:17","text":" @dev Reverts when the parameters used for `transferBatch` have different lengths."},"errorSelector":"93a83119","id":1948,"name":"LSP8InvalidTransferBatch","nameLocation":"1230:24:17","nodeType":"ErrorDefinition","parameters":{"id":1947,"nodeType":"ParameterList","parameters":[],"src":"1254:2:17"},"src":"1224:33:17"},{"documentation":{"id":1949,"nodeType":"StructuredDocumentation","src":"1259:143:17","text":" @dev Reverts if the `tokenReceiver` does not implement LSP1\n when minting or transferring tokens with `bool force` set as `false`."},"errorSelector":"4349776d","id":1953,"name":"LSP8NotifyTokenReceiverContractMissingLSP1Interface","nameLocation":"1409:51:17","nodeType":"ErrorDefinition","parameters":{"id":1952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1951,"mutability":"mutable","name":"tokenReceiver","nameLocation":"1474:13:17","nodeType":"VariableDeclaration","scope":1953,"src":"1466:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1950,"name":"address","nodeType":"ElementaryTypeName","src":"1466:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1460:29:17"},"src":"1403:87:17"},{"documentation":{"id":1954,"nodeType":"StructuredDocumentation","src":"1492:129:17","text":" @dev Reverts if the `tokenReceiver` is an EOA\n when minting or transferring tokens with `bool force` set as `false`."},"errorSelector":"03173137","id":1958,"name":"LSP8NotifyTokenReceiverIsEOA","nameLocation":"1628:28:17","nodeType":"ErrorDefinition","parameters":{"id":1957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1956,"mutability":"mutable","name":"tokenReceiver","nameLocation":"1665:13:17","nodeType":"VariableDeclaration","scope":1958,"src":"1657:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1955,"name":"address","nodeType":"ElementaryTypeName","src":"1657:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1656:23:17"},"src":"1622:58:17"},{"documentation":{"id":1959,"nodeType":"StructuredDocumentation","src":"1682:92:17","text":" @dev Reverts when trying to authorize or revoke the token's owner as an operator."},"errorSelector":"89fdad62","id":1961,"name":"LSP8TokenOwnerCannotBeOperator","nameLocation":"1781:30:17","nodeType":"ErrorDefinition","parameters":{"id":1960,"nodeType":"ParameterList","parameters":[],"src":"1811:2:17"},"src":"1775:39:17"},{"documentation":{"id":1962,"nodeType":"StructuredDocumentation","src":"1816:255:17","text":" @dev Error occurs when sending native tokens to the LSP8 contract without sending any data.\n E.g. Sending value without passing a bytes4 function selector to call a LSP17 Extension.\n @notice LSP8 contract cannot receive native tokens."},"errorSelector":"61f49442","id":1964,"name":"LSP8TokenContractCannotHoldValue","nameLocation":"2078:32:17","nodeType":"ErrorDefinition","parameters":{"id":1963,"nodeType":"ParameterList","parameters":[],"src":"2110:2:17"},"src":"2072:41:17"},{"documentation":{"id":1965,"nodeType":"StructuredDocumentation","src":"2115:398:17","text":" @dev Reverts when trying to edit the data key `LSP8TokenIdFormat` after the identifiable digital asset contract has been deployed.\n The `LSP8TokenIdFormat` data key is located inside the ERC725Y Data key-value store of the identifiable digital asset contract.\n It can be set only once inside the constructor/initializer when the identifiable digital asset contract is being deployed."},"errorSelector":"3664800a","id":1967,"name":"LSP8TokenIdFormatNotEditable","nameLocation":"2520:28:17","nodeType":"ErrorDefinition","parameters":{"id":1966,"nodeType":"ParameterList","parameters":[],"src":"2548:2:17"},"src":"2514:37:17"},{"documentation":{"id":1968,"nodeType":"StructuredDocumentation","src":"2553:81:17","text":" @dev Reverts when the length of the token IDs data arrays is not equal"},"errorSelector":"2fa71dfe","id":1970,"name":"LSP8TokenIdsDataLengthMismatch","nameLocation":"2641:30:17","nodeType":"ErrorDefinition","parameters":{"id":1969,"nodeType":"ParameterList","parameters":[],"src":"2671:2:17"},"src":"2635:39:17"},{"documentation":{"id":1971,"nodeType":"StructuredDocumentation","src":"2676:67:17","text":" @dev Reverts when empty arrays is passed to the function"},"errorSelector":"80c98305","id":1973,"name":"LSP8TokenIdsDataEmptyArray","nameLocation":"2750:26:17","nodeType":"ErrorDefinition","parameters":{"id":1972,"nodeType":"ParameterList","parameters":[],"src":"2776:2:17"},"src":"2744:35:17"},{"documentation":{"id":1974,"nodeType":"StructuredDocumentation","src":"2781:79:17","text":" @dev Reverts when a batch call failed.\n @notice Batch call failed."},"errorSelector":"234eb819","id":1978,"name":"LSP8BatchCallFailed","nameLocation":"2867:19:17","nodeType":"ErrorDefinition","parameters":{"id":1977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1976,"mutability":"mutable","name":"callIndex","nameLocation":"2895:9:17","nodeType":"VariableDeclaration","scope":1978,"src":"2887:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1975,"name":"uint256","nodeType":"ElementaryTypeName","src":"2887:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2886:19:17"},"src":"2861:45:17"},{"documentation":{"id":1979,"nodeType":"StructuredDocumentation","src":"2908:92:17","text":" @dev Reverts when the token owner changed inside the {_beforeTokenTransfer} hook."},"errorSelector":"5a9c31d3","id":1987,"name":"LSP8TokenOwnerChanged","nameLocation":"3007:21:17","nodeType":"ErrorDefinition","parameters":{"id":1986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1981,"mutability":"mutable","name":"tokenId","nameLocation":"3042:7:17","nodeType":"VariableDeclaration","scope":1987,"src":"3034:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1980,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3034:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1983,"mutability":"mutable","name":"oldOwner","nameLocation":"3063:8:17","nodeType":"VariableDeclaration","scope":1987,"src":"3055:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1982,"name":"address","nodeType":"ElementaryTypeName","src":"3055:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1985,"mutability":"mutable","name":"newOwner","nameLocation":"3085:8:17","nodeType":"VariableDeclaration","scope":1987,"src":"3077:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1984,"name":"address","nodeType":"ElementaryTypeName","src":"3077:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3028:67:17"},"src":"3001:95:17"},{"documentation":{"id":1988,"nodeType":"StructuredDocumentation","src":"3098:75:17","text":" @dev Reverts when the call to revoke operator is not authorized."},"errorSelector":"760b5acd","id":1996,"name":"LSP8RevokeOperatorNotAuthorized","nameLocation":"3180:31:17","nodeType":"ErrorDefinition","parameters":{"id":1995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1990,"mutability":"mutable","name":"caller","nameLocation":"3225:6:17","nodeType":"VariableDeclaration","scope":1996,"src":"3217:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1989,"name":"address","nodeType":"ElementaryTypeName","src":"3217:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1992,"mutability":"mutable","name":"tokenOwner","nameLocation":"3245:10:17","nodeType":"VariableDeclaration","scope":1996,"src":"3237:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1991,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1994,"mutability":"mutable","name":"tokenId","nameLocation":"3269:7:17","nodeType":"VariableDeclaration","scope":1996,"src":"3261:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1993,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3261:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3211:67:17"},"src":"3174:105:17"}],"src":"39:3241:17"},"id":17},"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol":{"ast":{"absolutePath":"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol","exportedSymbols":{"ERC165Checker":[4311],"ERC725Y":[269],"EnumerableSet":[5907],"ILSP1":[464],"ILSP8IdentifiableDigitalAsset":[1838],"InvalidExtensionAddress":[591],"InvalidFunctionSelector":[586],"LSP17Extendable":[725],"LSP1Utils":[563],"LSP2Utils":[1462],"LSP4DigitalAssetMetadata":[1614],"LSP8BatchCallFailed":[1978],"LSP8CannotSendToAddressZero":[1933],"LSP8CannotUseAddressZeroAsOperator":[1930],"LSP8IdentifiableDigitalAsset":[3609],"LSP8InvalidTransferBatch":[1948],"LSP8NonExistentTokenId":[1904],"LSP8NonExistingOperator":[1940],"LSP8NotTokenOperator":[1920],"LSP8NotTokenOwner":[1913],"LSP8NotifyTokenReceiverContractMissingLSP1Interface":[1953],"LSP8NotifyTokenReceiverIsEOA":[1958],"LSP8OperatorAlreadyAuthorized":[1927],"LSP8RevokeOperatorNotAuthorized":[1996],"LSP8TokenContractCannotHoldValue":[1964],"LSP8TokenIdAlreadyMinted":[1945],"LSP8TokenIdFormatNotEditable":[1967],"LSP8TokenIdsDataEmptyArray":[1973],"LSP8TokenIdsDataLengthMismatch":[1970],"LSP8TokenOwnerCannotBeOperator":[1961],"LSP8TokenOwnerChanged":[1987],"NoExtensionFoundForFunctionSelector":[581],"_INTERFACEID_LSP1":[469],"_INTERFACEID_LSP8":[1843],"_LSP17_EXTENSION_PREFIX":[574],"_LSP8_TOKENID_FORMAT_KEY":[1852],"_TYPEID_LSP8_TOKENOPERATOR":[1867],"_TYPEID_LSP8_TOKENSRECIPIENT":[1864],"_TYPEID_LSP8_TOKENSSENDER":[1861]},"id":3610,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1998,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"39:24:18"},{"absolutePath":"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol","file":"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol","id":2000,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3610,"sourceUnit":465,"src":"79:113:18","symbolAliases":[{"foreign":{"id":1999,"name":"ILSP1UniversalReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"92:22:18","typeDescriptions":{}},"local":"ILSP1","nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol","file":"./ILSP8IdentifiableDigitalAsset.sol","id":2002,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3610,"sourceUnit":1839,"src":"193:88:18","symbolAliases":[{"foreign":{"id":2001,"name":"ILSP8IdentifiableDigitalAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"206:29:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol","file":"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol","id":2005,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3610,"sourceUnit":1615,"src":"294:121:18","symbolAliases":[{"foreign":{"id":2003,"name":"LSP4DigitalAssetMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"307:24:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2004,"name":"ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"337:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol","file":"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol","id":2007,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3610,"sourceUnit":726,"src":"417:108:18","symbolAliases":[{"foreign":{"id":2006,"name":"LSP17Extendable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"430:15:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":2009,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3610,"sourceUnit":5908,"src":"540:92:18","symbolAliases":[{"foreign":{"id":2008,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"553:13:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","id":2011,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3610,"sourceUnit":4312,"src":"633:98:18","symbolAliases":[{"foreign":{"id":2010,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"646:13:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp1-contracts/contracts/LSP1Utils.sol","file":"@lukso/lsp1-contracts/contracts/LSP1Utils.sol","id":2013,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3610,"sourceUnit":564,"src":"732:72:18","symbolAliases":[{"foreign":{"id":2012,"name":"LSP1Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"740:9:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp2-contracts/contracts/LSP2Utils.sol","file":"@lukso/lsp2-contracts/contracts/LSP2Utils.sol","id":2015,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3610,"sourceUnit":1463,"src":"805:72:18","symbolAliases":[{"foreign":{"id":2014,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"813:9:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp1-contracts/contracts/LSP1Constants.sol","file":"@lukso/lsp1-contracts/contracts/LSP1Constants.sol","id":2017,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3610,"sourceUnit":479,"src":"892:90:18","symbolAliases":[{"foreign":{"id":2016,"name":"_INTERFACEID_LSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"905:17:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol","file":"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol","id":2019,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3610,"sourceUnit":575,"src":"983:115:18","symbolAliases":[{"foreign":{"id":2018,"name":"_LSP17_EXTENSION_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"996:23:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp8-contracts/contracts/LSP8Constants.sol","file":"./LSP8Constants.sol","id":2025,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3610,"sourceUnit":1898,"src":"1099:187:18","symbolAliases":[{"foreign":{"id":2020,"name":"_INTERFACEID_LSP8","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"1112:17:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2021,"name":"_LSP8_TOKENID_FORMAT_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"1135:24:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2022,"name":"_TYPEID_LSP8_TOKENOPERATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"1165:26:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2023,"name":"_TYPEID_LSP8_TOKENSSENDER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"1197:25:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2024,"name":"_TYPEID_LSP8_TOKENSRECIPIENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"1228:28:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol","file":"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol","id":2029,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3610,"sourceUnit":592,"src":"1298:182:18","symbolAliases":[{"foreign":{"id":2026,"name":"NoExtensionFoundForFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"1311:35:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2027,"name":"InvalidFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"1352:23:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2028,"name":"InvalidExtensionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"1381:23:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp8-contracts/contracts/LSP8Errors.sol","file":"./LSP8Errors.sol","id":2049,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3610,"sourceUnit":1997,"src":"1481:664:18","symbolAliases":[{"foreign":{"id":2030,"name":"LSP8TokenContractCannotHoldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"1494:32:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2031,"name":"LSP8TokenIdFormatNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"1532:28:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2032,"name":"LSP8NonExistentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"1566:22:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2033,"name":"LSP8NotTokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"1594:17:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2034,"name":"LSP8CannotUseAddressZeroAsOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"1617:34:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2035,"name":"LSP8TokenOwnerCannotBeOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"1657:30:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2036,"name":"LSP8OperatorAlreadyAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"1693:29:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2037,"name":"LSP8NotTokenOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"1728:20:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2038,"name":"LSP8InvalidTransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"1754:24:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2039,"name":"LSP8NonExistingOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"1784:23:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2040,"name":"LSP8CannotSendToAddressZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"1813:27:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2041,"name":"LSP8TokenIdAlreadyMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"1846:24:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2042,"name":"LSP8NotifyTokenReceiverContractMissingLSP1Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"1876:51:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2043,"name":"LSP8NotifyTokenReceiverIsEOA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"1933:28:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2044,"name":"LSP8TokenIdsDataLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"1967:30:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2045,"name":"LSP8TokenIdsDataEmptyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"2003:26:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2046,"name":"LSP8BatchCallFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"2035:19:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2047,"name":"LSP8TokenOwnerChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"2060:21:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2048,"name":"LSP8RevokeOperatorNotAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"2087:31:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2051,"name":"ILSP8IdentifiableDigitalAsset","nameLocations":["2675:29:18"],"nodeType":"IdentifierPath","referencedDeclaration":1838,"src":"2675:29:18"},"id":2052,"nodeType":"InheritanceSpecifier","src":"2675:29:18"},{"baseName":{"id":2053,"name":"LSP4DigitalAssetMetadata","nameLocations":["2710:24:18"],"nodeType":"IdentifierPath","referencedDeclaration":1614,"src":"2710:24:18"},"id":2054,"nodeType":"InheritanceSpecifier","src":"2710:24:18"},{"baseName":{"id":2055,"name":"LSP17Extendable","nameLocations":["2740:15:18"],"nodeType":"IdentifierPath","referencedDeclaration":725,"src":"2740:15:18"},"id":2056,"nodeType":"InheritanceSpecifier","src":"2740:15:18"}],"canonicalName":"LSP8IdentifiableDigitalAsset","contractDependencies":[],"contractKind":"contract","documentation":{"id":2050,"nodeType":"StructuredDocumentation","src":"2147:473:18","text":" @title Implementation of a LSP8 Identifiable Digital Asset, a contract that represents a non-fungible token.\n @author Matthew Stevens\n @dev Standard implementation contract of the LSP8 standard.\n Minting and transferring are done by providing a unique `tokenId`.\n This implementation is agnostic to the way tokens are created.\n A supply mechanism has to be added in a derived contract using {_mint}\n For a generic mechanism, see {LSP7Mintable}."},"fullyImplemented":true,"id":3609,"internalFunctionIDs":{"4116":1},"linearizedBaseContracts":[3609,725,1614,269,386,4117,4323,3722,3864,1838],"name":"LSP8IdentifiableDigitalAsset","nameLocation":"2639:28:18","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2060,"libraryName":{"id":2057,"name":"EnumerableSet","nameLocations":["2768:13:18"],"nodeType":"IdentifierPath","referencedDeclaration":5907,"src":"2768:13:18"},"nodeType":"UsingForDirective","src":"2762:49:18","typeName":{"id":2059,"nodeType":"UserDefinedTypeName","pathNode":{"id":2058,"name":"EnumerableSet.AddressSet","nameLocations":["2786:13:18","2800:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":5620,"src":"2786:24:18"},"referencedDeclaration":5620,"src":"2786:24:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5620_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"global":false,"id":2064,"libraryName":{"id":2061,"name":"EnumerableSet","nameLocations":["2822:13:18"],"nodeType":"IdentifierPath","referencedDeclaration":5907,"src":"2822:13:18"},"nodeType":"UsingForDirective","src":"2816:49:18","typeName":{"id":2063,"nodeType":"UserDefinedTypeName","pathNode":{"id":2062,"name":"EnumerableSet.Bytes32Set","nameLocations":["2840:13:18","2854:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":5499,"src":"2840:24:18"},"referencedDeclaration":5499,"src":"2840:24:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5499_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}}},{"constant":false,"id":2066,"mutability":"mutable","name":"_existingTokens","nameLocation":"2908:15:18","nodeType":"VariableDeclaration","scope":3609,"src":"2891:32:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2065,"name":"uint256","nodeType":"ElementaryTypeName","src":"2891:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2070,"mutability":"mutable","name":"_tokenOwners","nameLocation":"3013:12:18","nodeType":"VariableDeclaration","scope":3609,"src":"2976:49:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"typeName":{"id":2069,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2067,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2984:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2976:27:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2068,"name":"address","nodeType":"ElementaryTypeName","src":"2995:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"constant":false,"id":2075,"mutability":"mutable","name":"_ownedTokens","nameLocation":"3132:12:18","nodeType":"VariableDeclaration","scope":3609,"src":"3078:66:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$5499_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set)"},"typeName":{"id":2074,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2071,"name":"address","nodeType":"ElementaryTypeName","src":"3086:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3078:44:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$5499_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2073,"nodeType":"UserDefinedTypeName","pathNode":{"id":2072,"name":"EnumerableSet.Bytes32Set","nameLocations":["3097:13:18","3111:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":5499,"src":"3097:24:18"},"referencedDeclaration":5499,"src":"3097:24:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5499_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}}},"visibility":"internal"},{"constant":false,"id":2080,"mutability":"mutable","name":"_operators","nameLocation":"3270:10:18","nodeType":"VariableDeclaration","scope":3609,"src":"3216:64:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$5620_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"typeName":{"id":2079,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2076,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3224:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"3216:44:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$5620_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2078,"nodeType":"UserDefinedTypeName","pathNode":{"id":2077,"name":"EnumerableSet.AddressSet","nameLocations":["3235:13:18","3249:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":5620,"src":"3235:24:18"},"referencedDeclaration":5620,"src":"3235:24:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5620_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},"visibility":"internal"},{"body":{"id":2110,"nodeType":"Block","src":"4572:142:18","statements":[{"expression":{"arguments":[{"id":2103,"name":"_LSP8_TOKENID_FORMAT_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"4629:24:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":2106,"name":"lsp8TokenIdFormat_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"4678:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2104,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4667:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4671:6:18","memberName":"encode","nodeType":"MemberAccess","src":"4667:10:18","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4667:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2100,"name":"LSP4DigitalAssetMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"4582:24:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP4DigitalAssetMetadata_$1614_$","typeString":"type(contract LSP4DigitalAssetMetadata)"}},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4607:8:18","memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":1613,"src":"4582:33:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4582:125:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2109,"nodeType":"ExpressionStatement","src":"4582:125:18"}]},"documentation":{"id":2081,"nodeType":"StructuredDocumentation","src":"3287:1039:18","text":" @notice Deploying a LSP8IdentifiableDigitalAsset with name `name_`, symbol `symbol_`, owned by address `newOwner_`\n with tokenId format `lsp8TokenIdFormat_`.\n @dev Deploy a `LSP8IdentifiableDigitalAsset` contract and set the tokenId format inside the ERC725Y storage of the contract.\n This will also set the token `name_` and `symbol_` under the ERC725Y data keys `LSP4TokenName` and `LSP4TokenSymbol`.\n @param name_ The name of the token\n @param symbol_ The symbol of the token\n @param newOwner_ The owner of the the token-Metadata\n @param lsp4TokenType_ The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection).\n @param lsp8TokenIdFormat_ The format of tokenIds (= NFTs) that this contract will create.\n @custom:warning Make sure the tokenId format provided on deployment is correct, as it can only be set once\n and cannot be changed in the ERC725Y storage after the contract has been deployed."},"id":2111,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2094,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"4529:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2095,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"4536:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2096,"name":"newOwner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"4545:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2097,"name":"lsp4TokenType_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"4556:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2098,"kind":"baseConstructorSpecifier","modifierName":{"id":2093,"name":"LSP4DigitalAssetMetadata","nameLocations":["4504:24:18"],"nodeType":"IdentifierPath","referencedDeclaration":1614,"src":"4504:24:18"},"nodeType":"ModifierInvocation","src":"4504:67:18"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2083,"mutability":"mutable","name":"name_","nameLocation":"4366:5:18","nodeType":"VariableDeclaration","scope":2111,"src":"4352:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2082,"name":"string","nodeType":"ElementaryTypeName","src":"4352:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2085,"mutability":"mutable","name":"symbol_","nameLocation":"4395:7:18","nodeType":"VariableDeclaration","scope":2111,"src":"4381:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2084,"name":"string","nodeType":"ElementaryTypeName","src":"4381:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2087,"mutability":"mutable","name":"newOwner_","nameLocation":"4420:9:18","nodeType":"VariableDeclaration","scope":2111,"src":"4412:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2086,"name":"address","nodeType":"ElementaryTypeName","src":"4412:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2089,"mutability":"mutable","name":"lsp4TokenType_","nameLocation":"4447:14:18","nodeType":"VariableDeclaration","scope":2111,"src":"4439:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2088,"name":"uint256","nodeType":"ElementaryTypeName","src":"4439:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2091,"mutability":"mutable","name":"lsp8TokenIdFormat_","nameLocation":"4479:18:18","nodeType":"VariableDeclaration","scope":2111,"src":"4471:26:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2090,"name":"uint256","nodeType":"ElementaryTypeName","src":"4471:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4342:161:18"},"returnParameters":{"id":2099,"nodeType":"ParameterList","parameters":[],"src":"4572:0:18"},"scope":3609,"src":"4331:383:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2134,"nodeType":"Block","src":"6548:157:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2119,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6562:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6566:4:18","memberName":"data","nodeType":"MemberAccess","src":"6562:8:18","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6571:6:18","memberName":"length","nodeType":"MemberAccess","src":"6562:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"34","id":2122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6580:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"6562:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2129,"nodeType":"IfStatement","src":"6558:90:18","trueBody":{"id":2128,"nodeType":"Block","src":"6583:65:18","statements":[{"errorCall":{"arguments":[{"id":2125,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"6628:8:18","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2124,"name":"InvalidFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"6604:23:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6604:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2127,"nodeType":"RevertStatement","src":"6597:40:18"}]}},{"expression":{"arguments":[{"id":2131,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"6689:8:18","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2130,"name":"_fallbackLSP17Extendable","nodeType":"Identifier","overloadedDeclarations":[2208],"referencedDeclaration":2208,"src":"6664:24:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_calldata_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes calldata) returns (bytes memory)"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6664:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2118,"id":2133,"nodeType":"Return","src":"6657:41:18"}]},"documentation":{"id":2112,"nodeType":"StructuredDocumentation","src":"4747:1647:18","text":" @notice The `fallback` function was called with the following amount of native tokens: `msg.value`; and the following calldata: `callData`.\n @dev Achieves the goal of [LSP-17-ContractExtension] standard by extending the contract to handle calls of functions that do not exist natively,\n forwarding the function call to the extension address mapped to the function being called.\n This function is executed when:\n    - Sending data of length less than 4 bytes to the contract.\n    - The first 4 bytes of the calldata do not match any publicly callable functions from the contract ABI.\n    - Receiving native tokens\n 1. If the data is equal or longer than 4 bytes, the [ERC-725Y] storage is queried with the following data key: [_LSP17_EXTENSION_PREFIX] + `bytes4(msg.sig)` (Check [LSP-2-ERC725YJSONSchema] for encoding the data key)\n   - If there is no address stored under the following data key, revert with {NoExtensionFoundForFunctionSelector(bytes4)}. The data key relative to `bytes4(0)` is an exception, where no reverts occurs if there is no extension address stored under. This exception is made to allow users to send random data (graffiti) to the account and to be able to react on it.\n   - If there is an address, forward the `msg.data` to the extension using the CALL opcode, appending 52 bytes (20 bytes of `msg.sender` and 32 bytes of `msg.value`). Return what the calls returns, or revert if the call failed.\n 2. If the data sent to this function is of length less than 4 bytes (not a function selector), revert."},"id":2135,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2114,"mutability":"mutable","name":"callData","nameLocation":"6485:8:18","nodeType":"VariableDeclaration","scope":2135,"src":"6470:23:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2113,"name":"bytes","nodeType":"ElementaryTypeName","src":"6470:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6460:39:18"},"returnParameters":{"id":2118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2135,"src":"6534:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2116,"name":"bytes","nodeType":"ElementaryTypeName","src":"6534:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6533:14:18"},"scope":3609,"src":"6452:253:18","stateMutability":"payable","virtual":true,"visibility":"external"},{"body":{"id":2152,"nodeType":"Block","src":"6959:205:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2139,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7020:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7024:5:18","memberName":"value","nodeType":"MemberAccess","src":"7020:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7033:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7020:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2148,"nodeType":"IfStatement","src":"7016:90:18","trueBody":{"id":2147,"nodeType":"Block","src":"7036:70:18","statements":[{"errorCall":{"arguments":[{"hexValue":"00000000","id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"7081:13:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c","typeString":"literal_string hex\"00000000\""},"value":"\u0000\u0000\u0000\u0000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c","typeString":"literal_string hex\"00000000\""}],"id":2143,"name":"InvalidFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"7057:23:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7057:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2146,"nodeType":"RevertStatement","src":"7050:45:18"}]}},{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2149,"name":"LSP8TokenContractCannotHoldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"7123:32:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7123:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2151,"nodeType":"RevertStatement","src":"7116:41:18"}]},"documentation":{"id":2136,"nodeType":"StructuredDocumentation","src":"6711:155:18","text":" @dev Reverts whenever someone tries to send native tokens to a LSP8 contract.\n @notice LSP8 contract cannot receive native tokens."},"id":2153,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2137,"nodeType":"ParameterList","parameters":[],"src":"6931:2:18"},"returnParameters":{"id":2138,"nodeType":"ParameterList","parameters":[],"src":"6959:0:18"},"scope":3609,"src":"6924:240:18","stateMutability":"payable","virtual":true,"visibility":"external"},{"baseFunctions":[724],"body":{"id":2207,"nodeType":"Block","src":"8281:909:18","statements":[{"assignments":[2163,null],"declarations":[{"constant":false,"id":2163,"mutability":"mutable","name":"extension","nameLocation":"8343:9:18","nodeType":"VariableDeclaration","scope":2207,"src":"8335:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2162,"name":"address","nodeType":"ElementaryTypeName","src":"8335:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},null],"id":2168,"initialValue":{"arguments":[{"expression":{"id":2165,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8387:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8391:3:18","memberName":"sig","nodeType":"MemberAccess","src":"8387:7:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":2164,"name":"_getExtensionAndForwardValue","nodeType":"Identifier","overloadedDeclarations":[2258],"referencedDeclaration":2258,"src":"8358:28:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_address_$_t_bool_$","typeString":"function (bytes4) view returns (address,bool)"}},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8358:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"8334:61:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2169,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"8455:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8476:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8468:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2170,"name":"address","nodeType":"ElementaryTypeName","src":"8468:7:18","typeDescriptions":{}}},"id":2173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8468:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8455:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2180,"nodeType":"IfStatement","src":"8451:92:18","trueBody":{"errorCall":{"arguments":[{"expression":{"id":2176,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8535:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8539:3:18","memberName":"sig","nodeType":"MemberAccess","src":"8535:7:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":2175,"name":"NoExtensionFoundForFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"8499:35:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8499:44:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2179,"nodeType":"RevertStatement","src":"8492:51:18"}},{"assignments":[2182,2184],"declarations":[{"constant":false,"id":2182,"mutability":"mutable","name":"success","nameLocation":"8560:7:18","nodeType":"VariableDeclaration","scope":2207,"src":"8555:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2181,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2184,"mutability":"mutable","name":"result","nameLocation":"8582:6:18","nodeType":"VariableDeclaration","scope":2207,"src":"8569:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2183,"name":"bytes","nodeType":"ElementaryTypeName","src":"8569:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2199,"initialValue":{"arguments":[{"arguments":[{"id":2192,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"8655:8:18","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":2193,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8665:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8669:6:18","memberName":"sender","nodeType":"MemberAccess","src":"8665:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2195,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8677:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8681:5:18","memberName":"value","nodeType":"MemberAccess","src":"8677:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2190,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8638:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8642:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"8638:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8638:49:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2185,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"8592:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8602:4:18","memberName":"call","nodeType":"MemberAccess","src":"8592:14:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":2187,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8614:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8618:5:18","memberName":"value","nodeType":"MemberAccess","src":"8614:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"8592:32:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8592:105:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"8554:143:18"},{"condition":{"id":2200,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"8712:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2205,"nodeType":"Block","src":"8765:419:18","statements":[{"AST":{"nodeType":"YulBlock","src":"9049:125:18","statements":[{"nodeType":"YulVariableDeclaration","src":"9067:36:18","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"9096:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9090:5:18"},"nodeType":"YulFunctionCall","src":"9090:13:18"},"variables":[{"name":"resultdata_size","nodeType":"YulTypedName","src":"9071:15:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"9131:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"9139:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9127:3:18"},"nodeType":"YulFunctionCall","src":"9127:15:18"},{"name":"resultdata_size","nodeType":"YulIdentifier","src":"9144:15:18"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9120:6:18"},"nodeType":"YulFunctionCall","src":"9120:40:18"},"nodeType":"YulExpressionStatement","src":"9120:40:18"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2184,"isOffset":false,"isSlot":false,"src":"9096:6:18","valueSize":1},{"declaration":2184,"isOffset":false,"isSlot":false,"src":"9131:6:18","valueSize":1}],"id":2204,"nodeType":"InlineAssembly","src":"9040:134:18"}]},"id":2206,"nodeType":"IfStatement","src":"8708:476:18","trueBody":{"id":2203,"nodeType":"Block","src":"8721:38:18","statements":[{"expression":{"id":2201,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"8742:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2161,"id":2202,"nodeType":"Return","src":"8735:13:18"}]}}]},"documentation":{"id":2154,"nodeType":"StructuredDocumentation","src":"7170:984:18","text":" @dev Forwards the call with the received value to an extension mapped to a function selector.\n Calls {_getExtensionAndForwardValue} to get the address of the extension mapped to the function selector being\n called on the account. If there is no extension, the address(0) will be returned.\n We will always forward the value to the extension, as the LSP8 contract is not supposed to hold any native tokens.\n Reverts if there is no extension for the function being called.\n If there is an extension for the function selector being called, it calls the extension with the\n CALL opcode, passing the {msg.data} appended with the 20 bytes of the {msg.sender} and\n 32 bytes of the {msg.value}\n @custom:info The LSP8 Token contract should not hold any native tokens. Any native tokens received by the contract\n will be forwarded to the extension address mapped to the selector from `msg.sig`."},"id":2208,"implemented":true,"kind":"function","modifiers":[],"name":"_fallbackLSP17Extendable","nameLocation":"8168:24:18","nodeType":"FunctionDefinition","overrides":{"id":2158,"nodeType":"OverrideSpecifier","overrides":[],"src":"8249:8:18"},"parameters":{"id":2157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2156,"mutability":"mutable","name":"callData","nameLocation":"8217:8:18","nodeType":"VariableDeclaration","scope":2208,"src":"8202:23:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2155,"name":"bytes","nodeType":"ElementaryTypeName","src":"8202:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8192:39:18"},"returnParameters":{"id":2161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2208,"src":"8267:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2159,"name":"bytes","nodeType":"ElementaryTypeName","src":"8267:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8266:14:18"},"scope":3609,"src":"8159:1031:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[665],"body":{"id":2257,"nodeType":"Block","src":"9591:585:18","statements":[{"assignments":[2220],"declarations":[{"constant":false,"id":2220,"mutability":"mutable","name":"mappedExtensionDataKey","nameLocation":"9689:22:18","nodeType":"VariableDeclaration","scope":2257,"src":"9681:30:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9681:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2226,"initialValue":{"arguments":[{"id":2223,"name":"_LSP17_EXTENSION_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"9756:23:18","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"id":2224,"name":"functionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"9793:16:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2221,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"9714:9:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP2Utils_$1462_$","typeString":"type(library LSP2Utils)"}},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9724:18:18","memberName":"generateMappingKey","nodeType":"MemberAccess","referencedDeclaration":952,"src":"9714:28:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes10_$_t_bytes20_$returns$_t_bytes32_$","typeString":"function (bytes10,bytes20) pure returns (bytes32)"}},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9714:105:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9681:138:18"},{"assignments":[2228],"declarations":[{"constant":false,"id":2228,"mutability":"mutable","name":"extensionAddress","nameLocation":"9921:16:18","nodeType":"VariableDeclaration","scope":2257,"src":"9908:29:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2227,"name":"bytes","nodeType":"ElementaryTypeName","src":"9908:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2232,"initialValue":{"arguments":[{"id":2230,"name":"mappedExtensionDataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"9949:22:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2229,"name":"_getData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"9940:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view returns (bytes memory)"}},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9940:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9908:64:18"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2233,"name":"extensionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"9986:16:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10003:6:18","memberName":"length","nodeType":"MemberAccess","src":"9986:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3230","id":2235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10013:2:18","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"9986:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2237,"name":"extensionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"10019:16:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10036:6:18","memberName":"length","nodeType":"MemberAccess","src":"10019:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10046:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10019:28:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9986:61:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2246,"nodeType":"IfStatement","src":"9982:127:18","trueBody":{"errorCall":{"arguments":[{"id":2243,"name":"extensionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"10092:16:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2242,"name":"InvalidExtensionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"10068:23:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10068:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2245,"nodeType":"RevertStatement","src":"10061:48:18"}},{"expression":{"components":[{"arguments":[{"arguments":[{"id":2251,"name":"extensionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"10144:16:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10136:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":2249,"name":"bytes20","nodeType":"ElementaryTypeName","src":"10136:7:18","typeDescriptions":{}}},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10136:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":2248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10128:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2247,"name":"address","nodeType":"ElementaryTypeName","src":"10128:7:18","typeDescriptions":{}}},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10128:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":2254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10164:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"id":2255,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10127:42:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"functionReturnParameters":2218,"id":2256,"nodeType":"Return","src":"10120:49:18"}]},"documentation":{"id":2209,"nodeType":"StructuredDocumentation","src":"9196:258:18","text":" @dev Returns the extension address stored under the following data key:\n - {_LSP17_EXTENSION_PREFIX} + `<bytes4>` (Check [LSP2-ERC725YJSONSchema] for encoding the data key).\n - If no extension is stored, returns the address(0)."},"id":2258,"implemented":true,"kind":"function","modifiers":[],"name":"_getExtensionAndForwardValue","nameLocation":"9468:28:18","nodeType":"FunctionDefinition","overrides":{"id":2213,"nodeType":"OverrideSpecifier","overrides":[],"src":"9558:8:18"},"parameters":{"id":2212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2211,"mutability":"mutable","name":"functionSelector","nameLocation":"9513:16:18","nodeType":"VariableDeclaration","scope":2258,"src":"9506:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2210,"name":"bytes4","nodeType":"ElementaryTypeName","src":"9506:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"9496:39:18"},"returnParameters":{"id":2218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2258,"src":"9576:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2214,"name":"address","nodeType":"ElementaryTypeName","src":"9576:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2258,"src":"9585:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2216,"name":"bool","nodeType":"ElementaryTypeName","src":"9585:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9575:15:18"},"scope":3609,"src":"9459:717:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[268,623],"body":{"id":2283,"nodeType":"Block","src":"10364:200:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2269,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"10393:11:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2270,"name":"_INTERFACEID_LSP8","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"10408:17:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"10393:32:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2274,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"10465:11:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2272,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"10441:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_LSP8IdentifiableDigitalAsset_$3609_$","typeString":"type(contract super LSP8IdentifiableDigitalAsset)"}},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10447:17:18","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":623,"src":"10441:23:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10441:36:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10393:84:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2279,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"10545:11:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2277,"name":"LSP17Extendable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"10493:15:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP17Extendable_$725_$","typeString":"type(contract LSP17Extendable)"}},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10509:35:18","memberName":"_supportsInterfaceInERC165Extension","nodeType":"MemberAccess","referencedDeclaration":655,"src":"10493:51:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10493:64:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10393:164:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2268,"id":2282,"nodeType":"Return","src":"10374:183:18"}]},"documentation":{"id":2259,"nodeType":"StructuredDocumentation","src":"10182:46:18","text":" @inheritdoc LSP17Extendable"},"functionSelector":"01ffc9a7","id":2284,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"10242:17:18","nodeType":"FunctionDefinition","overrides":{"id":2265,"nodeType":"OverrideSpecifier","overrides":[{"id":2263,"name":"ERC725Y","nameLocations":["10323:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":269,"src":"10323:7:18"},{"id":2264,"name":"LSP17Extendable","nameLocations":["10332:15:18"],"nodeType":"IdentifierPath","referencedDeclaration":725,"src":"10332:15:18"}],"src":"10314:34:18"},"parameters":{"id":2262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2261,"mutability":"mutable","name":"interfaceId","nameLocation":"10276:11:18","nodeType":"VariableDeclaration","scope":2284,"src":"10269:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2260,"name":"bytes4","nodeType":"ElementaryTypeName","src":"10269:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"10259:34:18"},"returnParameters":{"id":2268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2284,"src":"10358:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2266,"name":"bool","nodeType":"ElementaryTypeName","src":"10358:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10357:6:18"},"scope":3609,"src":"10233:331:18","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1613],"body":{"id":2308,"nodeType":"Block","src":"10886:182:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2293,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"10900:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2294,"name":"_LSP8_TOKENID_FORMAT_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"10911:24:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10900:35:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2300,"nodeType":"IfStatement","src":"10896:103:18","trueBody":{"id":2299,"nodeType":"Block","src":"10937:62:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2296,"name":"LSP8TokenIdFormatNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"10958:28:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10958:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2298,"nodeType":"RevertStatement","src":"10951:37:18"}]}},{"expression":{"arguments":[{"id":2304,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"11042:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2305,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"11051:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2301,"name":"LSP4DigitalAssetMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"11008:24:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP4DigitalAssetMetadata_$1614_$","typeString":"type(contract LSP4DigitalAssetMetadata)"}},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11033:8:18","memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":1613,"src":"11008:33:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11008:53:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2307,"nodeType":"ExpressionStatement","src":"11008:53:18"}]},"documentation":{"id":2285,"nodeType":"StructuredDocumentation","src":"10570:204:18","text":" @inheritdoc LSP4DigitalAssetMetadata\n @dev The ERC725Y data key `_LSP8_TOKENID_FORMAT_KEY` cannot be changed\n once the identifiable digital asset contract has been deployed."},"id":2309,"implemented":true,"kind":"function","modifiers":[],"name":"_setData","nameLocation":"10788:8:18","nodeType":"FunctionDefinition","overrides":{"id":2291,"nodeType":"OverrideSpecifier","overrides":[],"src":"10877:8:18"},"parameters":{"id":2290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2287,"mutability":"mutable","name":"dataKey","nameLocation":"10814:7:18","nodeType":"VariableDeclaration","scope":2309,"src":"10806:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2286,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10806:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2289,"mutability":"mutable","name":"dataValue","nameLocation":"10844:9:18","nodeType":"VariableDeclaration","scope":2309,"src":"10831:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2288,"name":"bytes","nodeType":"ElementaryTypeName","src":"10831:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10796:63:18"},"returnParameters":{"id":2292,"nodeType":"ParameterList","parameters":[],"src":"10886:0:18"},"scope":3609,"src":"10779:289:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1682],"body":{"id":2318,"nodeType":"Block","src":"11235:39:18","statements":[{"expression":{"id":2316,"name":"_existingTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"11252:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2315,"id":2317,"nodeType":"Return","src":"11245:22:18"}]},"documentation":{"id":2310,"nodeType":"StructuredDocumentation","src":"11100:60:18","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"18160ddd","id":2319,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"11174:11:18","nodeType":"FunctionDefinition","overrides":{"id":2312,"nodeType":"OverrideSpecifier","overrides":[],"src":"11208:8:18"},"parameters":{"id":2311,"nodeType":"ParameterList","parameters":[],"src":"11185:2:18"},"returnParameters":{"id":2315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2319,"src":"11226:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2313,"name":"uint256","nodeType":"ElementaryTypeName","src":"11226:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11225:9:18"},"scope":3609,"src":"11165:109:18","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1690],"body":{"id":2334,"nodeType":"Block","src":"11477:57:18","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":2328,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"11494:12:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$5499_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set storage ref)"}},"id":2330,"indexExpression":{"id":2329,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"11507:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11494:24:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5499_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":2331,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11519:6:18","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":5568,"src":"11494:31:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$5499_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Bytes32Set_$5499_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer) view returns (uint256)"}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11494:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2327,"id":2333,"nodeType":"Return","src":"11487:40:18"}]},"documentation":{"id":2320,"nodeType":"StructuredDocumentation","src":"11312:60:18","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"70a08231","id":2335,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"11386:9:18","nodeType":"FunctionDefinition","overrides":{"id":2324,"nodeType":"OverrideSpecifier","overrides":[],"src":"11450:8:18"},"parameters":{"id":2323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2322,"mutability":"mutable","name":"tokenOwner","nameLocation":"11413:10:18","nodeType":"VariableDeclaration","scope":2335,"src":"11405:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2321,"name":"address","nodeType":"ElementaryTypeName","src":"11405:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11395:34:18"},"returnParameters":{"id":2327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2326,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2335,"src":"11468:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2325,"name":"uint256","nodeType":"ElementaryTypeName","src":"11468:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11467:9:18"},"scope":3609,"src":"11377:157:18","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1698],"body":{"id":2364,"nodeType":"Block","src":"11705:190:18","statements":[{"assignments":[2345],"declarations":[{"constant":false,"id":2345,"mutability":"mutable","name":"tokenOwner","nameLocation":"11723:10:18","nodeType":"VariableDeclaration","scope":2364,"src":"11715:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2344,"name":"address","nodeType":"ElementaryTypeName","src":"11715:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2349,"initialValue":{"baseExpression":{"id":2346,"name":"_tokenOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"11736:12:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":2348,"indexExpression":{"id":2347,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"11749:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11736:21:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11715:42:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2350,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"11772:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11794:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11786:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2351,"name":"address","nodeType":"ElementaryTypeName","src":"11786:7:18","typeDescriptions":{}}},"id":2354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11786:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11772:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2361,"nodeType":"IfStatement","src":"11768:93:18","trueBody":{"id":2360,"nodeType":"Block","src":"11798:63:18","statements":[{"errorCall":{"arguments":[{"id":2357,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"11842:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2356,"name":"LSP8NonExistentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"11819:22:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11819:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2359,"nodeType":"RevertStatement","src":"11812:38:18"}]}},{"expression":{"id":2362,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"11878:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2343,"id":2363,"nodeType":"Return","src":"11871:17:18"}]},"documentation":{"id":2336,"nodeType":"StructuredDocumentation","src":"11540:60:18","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"217b2270","id":2365,"implemented":true,"kind":"function","modifiers":[],"name":"tokenOwnerOf","nameLocation":"11614:12:18","nodeType":"FunctionDefinition","overrides":{"id":2340,"nodeType":"OverrideSpecifier","overrides":[],"src":"11678:8:18"},"parameters":{"id":2339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2338,"mutability":"mutable","name":"tokenId","nameLocation":"11644:7:18","nodeType":"VariableDeclaration","scope":2365,"src":"11636:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11636:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11626:31:18"},"returnParameters":{"id":2343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2365,"src":"11696:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2341,"name":"address","nodeType":"ElementaryTypeName","src":"11696:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11695:9:18"},"scope":3609,"src":"11605:290:18","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1707],"body":{"id":2381,"nodeType":"Block","src":"12076:57:18","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":2375,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"12093:12:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$5499_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set storage ref)"}},"id":2377,"indexExpression":{"id":2376,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"12106:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12093:24:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5499_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":2378,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12118:6:18","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":5616,"src":"12093:31:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$5499_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$attached_to$_t_struct$_Bytes32Set_$5499_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer) view returns (bytes32[] memory)"}},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12093:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2374,"id":2380,"nodeType":"Return","src":"12086:40:18"}]},"documentation":{"id":2366,"nodeType":"StructuredDocumentation","src":"11901:60:18","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"a3b261f2","id":2382,"implemented":true,"kind":"function","modifiers":[],"name":"tokenIdsOf","nameLocation":"11975:10:18","nodeType":"FunctionDefinition","overrides":{"id":2370,"nodeType":"OverrideSpecifier","overrides":[],"src":"12040:8:18"},"parameters":{"id":2369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2368,"mutability":"mutable","name":"tokenOwner","nameLocation":"12003:10:18","nodeType":"VariableDeclaration","scope":2382,"src":"11995:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2367,"name":"address","nodeType":"ElementaryTypeName","src":"11995:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11985:34:18"},"returnParameters":{"id":2374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2382,"src":"12058:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12058:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2372,"nodeType":"ArrayTypeName","src":"12058:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"12057:18:18"},"scope":3609,"src":"11966:167:18","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1717],"body":{"id":2398,"nodeType":"Block","src":"12392:60:18","statements":[{"expression":{"arguments":[{"id":2394,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"12428:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2395,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"12437:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2393,"name":"_getDataForTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"12409:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32,bytes32) view returns (bytes memory)"}},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12409:36:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2392,"id":2397,"nodeType":"Return","src":"12402:43:18"}]},"documentation":{"id":2383,"nodeType":"StructuredDocumentation","src":"12182:60:18","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"16e023b3","id":2399,"implemented":true,"kind":"function","modifiers":[],"name":"getDataForTokenId","nameLocation":"12256:17:18","nodeType":"FunctionDefinition","overrides":{"id":2389,"nodeType":"OverrideSpecifier","overrides":[],"src":"12350:8:18"},"parameters":{"id":2388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2385,"mutability":"mutable","name":"tokenId","nameLocation":"12291:7:18","nodeType":"VariableDeclaration","scope":2399,"src":"12283:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2384,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12283:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2387,"mutability":"mutable","name":"dataKey","nameLocation":"12316:7:18","nodeType":"VariableDeclaration","scope":2399,"src":"12308:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12308:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12273:56:18"},"returnParameters":{"id":2392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"dataValue","nameLocation":"12381:9:18","nodeType":"VariableDeclaration","scope":2399,"src":"12368:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2390,"name":"bytes","nodeType":"ElementaryTypeName","src":"12368:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12367:24:18"},"scope":3609,"src":"12247:205:18","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1730],"body":{"id":2460,"nodeType":"Block","src":"12697:463:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2413,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"12711:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12720:6:18","memberName":"length","nodeType":"MemberAccess","src":"12711:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2415,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"12730:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12739:6:18","memberName":"length","nodeType":"MemberAccess","src":"12730:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12711:34:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2422,"nodeType":"IfStatement","src":"12707:104:18","trueBody":{"id":2421,"nodeType":"Block","src":"12747:64:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2418,"name":"LSP8TokenIdsDataLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"12768:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12768:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2420,"nodeType":"RevertStatement","src":"12761:39:18"}]}},{"expression":{"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2423,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"12821:10:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2427,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"12846:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12855:6:18","memberName":"length","nodeType":"MemberAccess","src":"12846:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12834:11:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":2424,"name":"bytes","nodeType":"ElementaryTypeName","src":"12838:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2425,"nodeType":"ArrayTypeName","src":"12838:7:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12834:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"12821:41:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2431,"nodeType":"ExpressionStatement","src":"12821:41:18"},{"body":{"id":2456,"nodeType":"Block","src":"12912:214:18","statements":[{"expression":{"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2439,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"12926:10:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2441,"indexExpression":{"id":2440,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"12937:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12926:13:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":2443,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"12961:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2445,"indexExpression":{"id":2444,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"12970:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12961:11:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":2446,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"12974:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2448,"indexExpression":{"id":2447,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"12983:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12974:11:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2442,"name":"_getDataForTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"12942:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32,bytes32) view returns (bytes memory)"}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12942:44:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"12926:60:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2451,"nodeType":"ExpressionStatement","src":"12926:60:18"},{"id":2455,"nodeType":"UncheckedBlock","src":"13070:46:18","statements":[{"expression":{"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13098:3:18","subExpression":{"id":2452,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"13100:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2454,"nodeType":"ExpressionStatement","src":"13098:3:18"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2435,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"12889:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2436,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"12893:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12902:6:18","memberName":"length","nodeType":"MemberAccess","src":"12893:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12889:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2457,"initializationExpression":{"assignments":[2433],"declarations":[{"constant":false,"id":2433,"mutability":"mutable","name":"i","nameLocation":"12886:1:18","nodeType":"VariableDeclaration","scope":2457,"src":"12878:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"12878:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2434,"nodeType":"VariableDeclarationStatement","src":"12878:9:18"},"nodeType":"ForStatement","src":"12873:253:18"},{"expression":{"id":2458,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"13143:10:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"functionReturnParameters":2412,"id":2459,"nodeType":"Return","src":"13136:17:18"}]},"documentation":{"id":2400,"nodeType":"StructuredDocumentation","src":"12458:60:18","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"1d26fce6","id":2461,"implemented":true,"kind":"function","modifiers":[],"name":"getDataBatchForTokenIds","nameLocation":"12532:23:18","nodeType":"FunctionDefinition","overrides":{"id":2408,"nodeType":"OverrideSpecifier","overrides":[],"src":"12652:8:18"},"parameters":{"id":2407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"tokenIds","nameLocation":"12582:8:18","nodeType":"VariableDeclaration","scope":2461,"src":"12565:25:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2401,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12565:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2402,"nodeType":"ArrayTypeName","src":"12565:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2406,"mutability":"mutable","name":"dataKeys","nameLocation":"12617:8:18","nodeType":"VariableDeclaration","scope":2461,"src":"12600:25:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2404,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12600:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2405,"nodeType":"ArrayTypeName","src":"12600:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"12555:76:18"},"returnParameters":{"id":2412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2411,"mutability":"mutable","name":"dataValues","nameLocation":"12685:10:18","nodeType":"VariableDeclaration","scope":2461,"src":"12670:25:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2409,"name":"bytes","nodeType":"ElementaryTypeName","src":"12670:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2410,"nodeType":"ArrayTypeName","src":"12670:7:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"12669:27:18"},"scope":3609,"src":"12523:637:18","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1740],"body":{"id":2480,"nodeType":"Block","src":"13380:64:18","statements":[{"expression":{"arguments":[{"id":2475,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"13409:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2476,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"13418:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2477,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"13427:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2474,"name":"_setDataForTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"13390:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes32,bytes memory)"}},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13390:47:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2479,"nodeType":"ExpressionStatement","src":"13390:47:18"}]},"documentation":{"id":2462,"nodeType":"StructuredDocumentation","src":"13166:60:18","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"d6c1407c","id":2481,"implemented":true,"kind":"function","modifiers":[{"id":2472,"kind":"modifierInvocation","modifierName":{"id":2471,"name":"onlyOwner","nameLocations":["13370:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":3641,"src":"13370:9:18"},"nodeType":"ModifierInvocation","src":"13370:9:18"}],"name":"setDataForTokenId","nameLocation":"13240:17:18","nodeType":"FunctionDefinition","overrides":{"id":2470,"nodeType":"OverrideSpecifier","overrides":[],"src":"13361:8:18"},"parameters":{"id":2469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2464,"mutability":"mutable","name":"tokenId","nameLocation":"13275:7:18","nodeType":"VariableDeclaration","scope":2481,"src":"13267:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2463,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13267:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2466,"mutability":"mutable","name":"dataKey","nameLocation":"13300:7:18","nodeType":"VariableDeclaration","scope":2481,"src":"13292:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2465,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13292:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2468,"mutability":"mutable","name":"dataValue","nameLocation":"13330:9:18","nodeType":"VariableDeclaration","scope":2481,"src":"13317:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2467,"name":"bytes","nodeType":"ElementaryTypeName","src":"13317:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13257:88:18"},"returnParameters":{"id":2473,"nodeType":"ParameterList","parameters":[],"src":"13380:0:18"},"scope":3609,"src":"13231:213:18","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1753],"body":{"id":2547,"nodeType":"Block","src":"13693:552:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2497,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"13720:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13729:6:18","memberName":"length","nodeType":"MemberAccess","src":"13720:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2499,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"13739:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13748:6:18","memberName":"length","nodeType":"MemberAccess","src":"13739:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13720:34:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2502,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"13770:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13779:6:18","memberName":"length","nodeType":"MemberAccess","src":"13770:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2504,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"13789:10:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13800:6:18","memberName":"length","nodeType":"MemberAccess","src":"13789:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13770:36:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13720:86:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2512,"nodeType":"IfStatement","src":"13703:178:18","trueBody":{"id":2511,"nodeType":"Block","src":"13817:64:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2508,"name":"LSP8TokenIdsDataLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"13838:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13838:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2510,"nodeType":"RevertStatement","src":"13831:39:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2513,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"13895:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13904:6:18","memberName":"length","nodeType":"MemberAccess","src":"13895:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13914:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13895:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2521,"nodeType":"IfStatement","src":"13891:86:18","trueBody":{"id":2520,"nodeType":"Block","src":"13917:60:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2517,"name":"LSP8TokenIdsDataEmptyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"13938:26:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13938:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2519,"nodeType":"RevertStatement","src":"13931:35:18"}]}},{"body":{"id":2545,"nodeType":"Block","src":"14026:213:18","statements":[{"expression":{"arguments":[{"baseExpression":{"id":2530,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"14059:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2532,"indexExpression":{"id":2531,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"14068:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14059:11:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":2533,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"14072:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2535,"indexExpression":{"id":2534,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"14081:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14072:11:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":2536,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"14085:10:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2538,"indexExpression":{"id":2537,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"14096:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14085:13:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2529,"name":"_setDataForTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"14040:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes32,bytes memory)"}},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14040:59:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2540,"nodeType":"ExpressionStatement","src":"14040:59:18"},{"id":2544,"nodeType":"UncheckedBlock","src":"14183:46:18","statements":[{"expression":{"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"14211:3:18","subExpression":{"id":2541,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"14213:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2543,"nodeType":"ExpressionStatement","src":"14211:3:18"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2525,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"14003:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2526,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"14007:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14016:6:18","memberName":"length","nodeType":"MemberAccess","src":"14007:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14003:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2546,"initializationExpression":{"assignments":[2523],"declarations":[{"constant":false,"id":2523,"mutability":"mutable","name":"i","nameLocation":"14000:1:18","nodeType":"VariableDeclaration","scope":2546,"src":"13992:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2522,"name":"uint256","nodeType":"ElementaryTypeName","src":"13992:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2524,"nodeType":"VariableDeclarationStatement","src":"13992:9:18"},"nodeType":"ForStatement","src":"13987:252:18"}]},"documentation":{"id":2482,"nodeType":"StructuredDocumentation","src":"13450:60:18","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"be9f0e6f","id":2548,"implemented":true,"kind":"function","modifiers":[{"id":2495,"kind":"modifierInvocation","modifierName":{"id":2494,"name":"onlyOwner","nameLocations":["13683:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":3641,"src":"13683:9:18"},"nodeType":"ModifierInvocation","src":"13683:9:18"}],"name":"setDataBatchForTokenIds","nameLocation":"13524:23:18","nodeType":"FunctionDefinition","overrides":{"id":2493,"nodeType":"OverrideSpecifier","overrides":[],"src":"13674:8:18"},"parameters":{"id":2492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2485,"mutability":"mutable","name":"tokenIds","nameLocation":"13574:8:18","nodeType":"VariableDeclaration","scope":2548,"src":"13557:25:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2483,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13557:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2484,"nodeType":"ArrayTypeName","src":"13557:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2488,"mutability":"mutable","name":"dataKeys","nameLocation":"13609:8:18","nodeType":"VariableDeclaration","scope":2548,"src":"13592:25:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2486,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13592:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2487,"nodeType":"ArrayTypeName","src":"13592:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2491,"mutability":"mutable","name":"dataValues","nameLocation":"13642:10:18","nodeType":"VariableDeclaration","scope":2548,"src":"13627:25:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2489,"name":"bytes","nodeType":"ElementaryTypeName","src":"13627:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2490,"nodeType":"ArrayTypeName","src":"13627:7:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13547:111:18"},"returnParameters":{"id":2496,"nodeType":"ParameterList","parameters":[],"src":"13693:0:18"},"scope":3609,"src":"13515:730:18","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1837],"body":{"id":2617,"nodeType":"Block","src":"14582:967:18","statements":[{"expression":{"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2559,"name":"results","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"14592:7:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2563,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"14614:4:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14619:6:18","memberName":"length","nodeType":"MemberAccess","src":"14614:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14602:11:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":2560,"name":"bytes","nodeType":"ElementaryTypeName","src":"14606:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2561,"nodeType":"ArrayTypeName","src":"14606:7:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14602:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"14592:34:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2567,"nodeType":"ExpressionStatement","src":"14592:34:18"},{"body":{"id":2615,"nodeType":"Block","src":"14671:872:18","statements":[{"assignments":[2576,2578],"declarations":[{"constant":false,"id":2576,"mutability":"mutable","name":"success","nameLocation":"14691:7:18","nodeType":"VariableDeclaration","scope":2615,"src":"14686:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2575,"name":"bool","nodeType":"ElementaryTypeName","src":"14686:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2578,"mutability":"mutable","name":"result","nameLocation":"14713:6:18","nodeType":"VariableDeclaration","scope":2615,"src":"14700:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2577,"name":"bytes","nodeType":"ElementaryTypeName","src":"14700:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2588,"initialValue":{"arguments":[{"baseExpression":{"id":2584,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"14767:4:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":2586,"indexExpression":{"id":2585,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"14772:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14767:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"id":2581,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"14731:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_LSP8IdentifiableDigitalAsset_$3609","typeString":"contract LSP8IdentifiableDigitalAsset"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LSP8IdentifiableDigitalAsset_$3609","typeString":"contract LSP8IdentifiableDigitalAsset"}],"id":2580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14723:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2579,"name":"address","nodeType":"ElementaryTypeName","src":"14723:7:18","typeDescriptions":{}}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14723:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14737:12:18","memberName":"delegatecall","nodeType":"MemberAccess","src":"14723:26:18","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14723:65:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"14685:103:18"},{"condition":{"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14807:8:18","subExpression":{"id":2589,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"14808:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2604,"nodeType":"IfStatement","src":"14803:636:18","trueBody":{"id":2603,"nodeType":"Block","src":"14817:622:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2591,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"14909:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14916:6:18","memberName":"length","nodeType":"MemberAccess","src":"14909:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14926:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14909:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2601,"nodeType":"Block","src":"15342:83:18","statements":[{"errorCall":{"arguments":[{"id":2598,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"15403:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2597,"name":"LSP8BatchCallFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"15371:19:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":["15392:9:18"],"names":["callIndex"],"nodeType":"FunctionCall","src":"15371:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2600,"nodeType":"RevertStatement","src":"15364:42:18"}]},"id":2602,"nodeType":"IfStatement","src":"14905:520:18","trueBody":{"id":2596,"nodeType":"Block","src":"14929:407:18","statements":[{"AST":{"nodeType":"YulBlock","src":"15169:149:18","statements":[{"nodeType":"YulVariableDeclaration","src":"15195:36:18","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"15224:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15218:5:18"},"nodeType":"YulFunctionCall","src":"15218:13:18"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"15199:15:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15267:2:18","type":"","value":"32"},{"name":"result","nodeType":"YulIdentifier","src":"15271:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15263:3:18"},"nodeType":"YulFunctionCall","src":"15263:15:18"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"15280:15:18"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15256:6:18"},"nodeType":"YulFunctionCall","src":"15256:40:18"},"nodeType":"YulExpressionStatement","src":"15256:40:18"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2578,"isOffset":false,"isSlot":false,"src":"15224:6:18","valueSize":1},{"declaration":2578,"isOffset":false,"isSlot":false,"src":"15271:6:18","valueSize":1}],"id":2595,"nodeType":"InlineAssembly","src":"15160:158:18"}]}}]}},{"expression":{"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2605,"name":"results","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"15453:7:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2607,"indexExpression":{"id":2606,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"15461:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15453:10:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2608,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"15466:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"15453:19:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2610,"nodeType":"ExpressionStatement","src":"15453:19:18"},{"id":2614,"nodeType":"UncheckedBlock","src":"15487:46:18","statements":[{"expression":{"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"15515:3:18","subExpression":{"id":2611,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"15517:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2613,"nodeType":"ExpressionStatement","src":"15515:3:18"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2571,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"14652:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2572,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"14656:4:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14661:6:18","memberName":"length","nodeType":"MemberAccess","src":"14656:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14652:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2616,"initializationExpression":{"assignments":[2569],"declarations":[{"constant":false,"id":2569,"mutability":"mutable","name":"i","nameLocation":"14649:1:18","nodeType":"VariableDeclaration","scope":2616,"src":"14641:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2568,"name":"uint256","nodeType":"ElementaryTypeName","src":"14641:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2570,"nodeType":"VariableDeclarationStatement","src":"14641:9:18"},"nodeType":"ForStatement","src":"14636:907:18"}]},"documentation":{"id":2549,"nodeType":"StructuredDocumentation","src":"14285:178:18","text":" @inheritdoc ILSP8IdentifiableDigitalAsset\n @custom:info It's not possible to send value along the functions call due to the use of `delegatecall`."},"functionSelector":"6963d438","id":2618,"implemented":true,"kind":"function","modifiers":[],"name":"batchCalls","nameLocation":"14477:10:18","nodeType":"FunctionDefinition","overrides":{"id":2554,"nodeType":"OverrideSpecifier","overrides":[],"src":"14540:8:18"},"parameters":{"id":2553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2552,"mutability":"mutable","name":"data","nameLocation":"14514:4:18","nodeType":"VariableDeclaration","scope":2618,"src":"14497:21:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2550,"name":"bytes","nodeType":"ElementaryTypeName","src":"14497:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2551,"nodeType":"ArrayTypeName","src":"14497:7:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"14487:37:18"},"returnParameters":{"id":2558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2557,"mutability":"mutable","name":"results","nameLocation":"14573:7:18","nodeType":"VariableDeclaration","scope":2618,"src":"14558:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2555,"name":"bytes","nodeType":"ElementaryTypeName","src":"14558:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2556,"nodeType":"ArrayTypeName","src":"14558:7:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"14557:24:18"},"scope":3609,"src":"14468:1081:18","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1763],"body":{"id":2707,"nodeType":"Block","src":"15810:907:18","statements":[{"assignments":[2630],"declarations":[{"constant":false,"id":2630,"mutability":"mutable","name":"tokenOwner","nameLocation":"15828:10:18","nodeType":"VariableDeclaration","scope":2707,"src":"15820:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2629,"name":"address","nodeType":"ElementaryTypeName","src":"15820:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2634,"initialValue":{"arguments":[{"id":2632,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"15854:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2631,"name":"tokenOwnerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"15841:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15841:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15820:42:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2635,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"15877:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2636,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15891:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15895:6:18","memberName":"sender","nodeType":"MemberAccess","src":"15891:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15877:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2647,"nodeType":"IfStatement","src":"15873:112:18","trueBody":{"id":2646,"nodeType":"Block","src":"15903:82:18","statements":[{"errorCall":{"arguments":[{"id":2640,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"15942:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2641,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"15954:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2642,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15963:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15967:6:18","memberName":"sender","nodeType":"MemberAccess","src":"15963:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2639,"name":"LSP8NotTokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"15924:17:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$_t_address_$returns$__$","typeString":"function (address,bytes32,address) pure"}},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15924:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2645,"nodeType":"RevertStatement","src":"15917:57:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2648,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"15999:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16019:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16011:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2649,"name":"address","nodeType":"ElementaryTypeName","src":"16011:7:18","typeDescriptions":{}}},"id":2652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16011:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15999:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2658,"nodeType":"IfStatement","src":"15995:96:18","trueBody":{"id":2657,"nodeType":"Block","src":"16023:68:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2654,"name":"LSP8CannotUseAddressZeroAsOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"16044:34:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16044:36:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2656,"nodeType":"RevertStatement","src":"16037:43:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2659,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"16105:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2660,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"16119:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16105:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2666,"nodeType":"IfStatement","src":"16101:92:18","trueBody":{"id":2665,"nodeType":"Block","src":"16129:64:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2662,"name":"LSP8TokenOwnerCannotBeOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"16150:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16150:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2664,"nodeType":"RevertStatement","src":"16143:39:18"}]}},{"assignments":[2668],"declarations":[{"constant":false,"id":2668,"mutability":"mutable","name":"isAdded","nameLocation":"16208:7:18","nodeType":"VariableDeclaration","scope":2707,"src":"16203:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2667,"name":"bool","nodeType":"ElementaryTypeName","src":"16203:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2675,"initialValue":{"arguments":[{"id":2673,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"16242:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":2669,"name":"_operators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"16218:10:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$5620_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":2671,"indexExpression":{"id":2670,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"16229:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16218:19:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5620_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":2672,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16238:3:18","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":5647,"src":"16218:23:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$5620_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$5620_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16218:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"16203:48:18"},{"condition":{"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16265:8:18","subExpression":{"id":2676,"name":"isAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"16266:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2683,"nodeType":"IfStatement","src":"16261:69:18","trueBody":{"errorCall":{"arguments":[{"id":2679,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"16312:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2680,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"16322:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2678,"name":"LSP8OperatorAlreadyAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"16282:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16282:48:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2682,"nodeType":"RevertStatement","src":"16275:55:18"}},{"eventCall":{"arguments":[{"id":2685,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"16388:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2686,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"16410:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2687,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"16434:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2688,"name":"operatorNotificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"16455:24:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2684,"name":"OperatorAuthorizationChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"16346:28:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bytes memory)"}},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:143:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2690,"nodeType":"EmitStatement","src":"16341:148:18"},{"assignments":[2692],"declarations":[{"constant":false,"id":2692,"mutability":"mutable","name":"lsp1Data","nameLocation":"16513:8:18","nodeType":"VariableDeclaration","scope":2707,"src":"16500:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2691,"name":"bytes","nodeType":"ElementaryTypeName","src":"16500:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2701,"initialValue":{"arguments":[{"expression":{"id":2695,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16548:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16552:6:18","memberName":"sender","nodeType":"MemberAccess","src":"16548:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2697,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"16572:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"74727565","id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16593:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2699,"name":"operatorNotificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"16625:24:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2693,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16524:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16528:6:18","memberName":"encode","nodeType":"MemberAccess","src":"16524:10:18","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16524:135:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"16500:159:18"},{"expression":{"arguments":[{"id":2703,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"16691:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2704,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"16701:8:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2702,"name":"_notifyTokenOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"16670:20:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16670:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2706,"nodeType":"ExpressionStatement","src":"16670:40:18"}]},"documentation":{"id":2619,"nodeType":"StructuredDocumentation","src":"15590:60:18","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"86a10ddd","id":2708,"implemented":true,"kind":"function","modifiers":[],"name":"authorizeOperator","nameLocation":"15664:17:18","nodeType":"FunctionDefinition","overrides":{"id":2627,"nodeType":"OverrideSpecifier","overrides":[],"src":"15801:8:18"},"parameters":{"id":2626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2621,"mutability":"mutable","name":"operator","nameLocation":"15699:8:18","nodeType":"VariableDeclaration","scope":2708,"src":"15691:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2620,"name":"address","nodeType":"ElementaryTypeName","src":"15691:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2623,"mutability":"mutable","name":"tokenId","nameLocation":"15725:7:18","nodeType":"VariableDeclaration","scope":2708,"src":"15717:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15717:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2625,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"15755:24:18","nodeType":"VariableDeclaration","scope":2708,"src":"15742:37:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2624,"name":"bytes","nodeType":"ElementaryTypeName","src":"15742:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15681:104:18"},"returnParameters":{"id":2628,"nodeType":"ParameterList","parameters":[],"src":"15810:0:18"},"scope":3609,"src":"15655:1062:18","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1775],"body":{"id":2791,"nodeType":"Block","src":"16961:986:18","statements":[{"assignments":[2722],"declarations":[{"constant":false,"id":2722,"mutability":"mutable","name":"tokenOwner","nameLocation":"16979:10:18","nodeType":"VariableDeclaration","scope":2791,"src":"16971:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2721,"name":"address","nodeType":"ElementaryTypeName","src":"16971:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2726,"initialValue":{"arguments":[{"id":2724,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"17005:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2723,"name":"tokenOwnerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"16992:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16992:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16971:42:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2727,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17028:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17032:6:18","memberName":"sender","nodeType":"MemberAccess","src":"17028:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2729,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"17042:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17028:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2745,"nodeType":"IfStatement","src":"17024:264:18","trueBody":{"id":2744,"nodeType":"Block","src":"17054:234:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2731,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"17072:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2732,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17084:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17088:6:18","memberName":"sender","nodeType":"MemberAccess","src":"17084:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17072:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2743,"nodeType":"IfStatement","src":"17068:210:18","trueBody":{"id":2742,"nodeType":"Block","src":"17096:182:18","statements":[{"errorCall":{"arguments":[{"expression":{"id":2736,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17174:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17178:6:18","memberName":"sender","nodeType":"MemberAccess","src":"17174:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2738,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"17206:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2739,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"17238:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2735,"name":"LSP8RevokeOperatorNotAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"17121:31:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,address,bytes32) pure"}},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17121:142:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2741,"nodeType":"RevertStatement","src":"17114:149:18"}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2746,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"17302:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17322:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17314:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2747,"name":"address","nodeType":"ElementaryTypeName","src":"17314:7:18","typeDescriptions":{}}},"id":2750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17314:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17302:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2756,"nodeType":"IfStatement","src":"17298:96:18","trueBody":{"id":2755,"nodeType":"Block","src":"17326:68:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2752,"name":"LSP8CannotUseAddressZeroAsOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"17347:34:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17347:36:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2754,"nodeType":"RevertStatement","src":"17340:43:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2757,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"17408:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2758,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"17422:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17408:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2764,"nodeType":"IfStatement","src":"17404:92:18","trueBody":{"id":2763,"nodeType":"Block","src":"17432:64:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2760,"name":"LSP8TokenOwnerCannotBeOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"17453:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17453:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2762,"nodeType":"RevertStatement","src":"17446:39:18"}]}},{"expression":{"arguments":[{"id":2766,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"17535:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2767,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"17557:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2768,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"17581:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2769,"name":"notify","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"17602:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2770,"name":"operatorNotificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"17622:24:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2765,"name":"_revokeOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"17506:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17506:150:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2772,"nodeType":"ExpressionStatement","src":"17506:150:18"},{"condition":{"id":2773,"name":"notify","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"17671:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2790,"nodeType":"IfStatement","src":"17667:274:18","trueBody":{"id":2789,"nodeType":"Block","src":"17679:262:18","statements":[{"assignments":[2775],"declarations":[{"constant":false,"id":2775,"mutability":"mutable","name":"lsp1Data","nameLocation":"17706:8:18","nodeType":"VariableDeclaration","scope":2789,"src":"17693:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2774,"name":"bytes","nodeType":"ElementaryTypeName","src":"17693:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2783,"initialValue":{"arguments":[{"id":2778,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"17745:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2779,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"17773:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"66616c7365","id":2780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17798:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":2781,"name":"operatorNotificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"17837:24:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2776,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"17717:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17721:6:18","memberName":"encode","nodeType":"MemberAccess","src":"17717:10:18","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17717:158:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17693:182:18"},{"expression":{"arguments":[{"id":2785,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"17911:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2786,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"17921:8:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2784,"name":"_notifyTokenOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"17890:20:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17890:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2788,"nodeType":"ExpressionStatement","src":"17890:40:18"}]}}]},"documentation":{"id":2709,"nodeType":"StructuredDocumentation","src":"16723:60:18","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"db8c9663","id":2792,"implemented":true,"kind":"function","modifiers":[],"name":"revokeOperator","nameLocation":"16797:14:18","nodeType":"FunctionDefinition","overrides":{"id":2719,"nodeType":"OverrideSpecifier","overrides":[],"src":"16952:8:18"},"parameters":{"id":2718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2711,"mutability":"mutable","name":"operator","nameLocation":"16829:8:18","nodeType":"VariableDeclaration","scope":2792,"src":"16821:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2710,"name":"address","nodeType":"ElementaryTypeName","src":"16821:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2713,"mutability":"mutable","name":"tokenId","nameLocation":"16855:7:18","nodeType":"VariableDeclaration","scope":2792,"src":"16847:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2712,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16847:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2715,"mutability":"mutable","name":"notify","nameLocation":"16877:6:18","nodeType":"VariableDeclaration","scope":2792,"src":"16872:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2714,"name":"bool","nodeType":"ElementaryTypeName","src":"16872:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2717,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"16906:24:18","nodeType":"VariableDeclaration","scope":2792,"src":"16893:37:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2716,"name":"bytes","nodeType":"ElementaryTypeName","src":"16893:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16811:125:18"},"returnParameters":{"id":2720,"nodeType":"ParameterList","parameters":[],"src":"16961:0:18"},"scope":3609,"src":"16788:1159:18","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1785],"body":{"id":2808,"nodeType":"Block","src":"18142:61:18","statements":[{"expression":{"arguments":[{"id":2804,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"18178:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2805,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"18188:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2803,"name":"_isOperatorOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"18159:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$returns$_t_bool_$","typeString":"function (address,bytes32) view returns (bool)"}},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18159:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2802,"id":2807,"nodeType":"Return","src":"18152:44:18"}]},"documentation":{"id":2793,"nodeType":"StructuredDocumentation","src":"17953:60:18","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"2a3654a4","id":2809,"implemented":true,"kind":"function","modifiers":[],"name":"isOperatorFor","nameLocation":"18027:13:18","nodeType":"FunctionDefinition","overrides":{"id":2799,"nodeType":"OverrideSpecifier","overrides":[],"src":"18118:8:18"},"parameters":{"id":2798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2795,"mutability":"mutable","name":"operator","nameLocation":"18058:8:18","nodeType":"VariableDeclaration","scope":2809,"src":"18050:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2794,"name":"address","nodeType":"ElementaryTypeName","src":"18050:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2797,"mutability":"mutable","name":"tokenId","nameLocation":"18084:7:18","nodeType":"VariableDeclaration","scope":2809,"src":"18076:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2796,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18076:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18040:57:18"},"returnParameters":{"id":2802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2809,"src":"18136:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2800,"name":"bool","nodeType":"ElementaryTypeName","src":"18136:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18135:6:18"},"scope":3609,"src":"18018:185:18","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1794],"body":{"id":2829,"nodeType":"Block","src":"18385:86:18","statements":[{"expression":{"arguments":[{"id":2820,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"18410:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2819,"name":"_existsOrError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"18395:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18395:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2822,"nodeType":"ExpressionStatement","src":"18395:23:18"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":2823,"name":"_operators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"18436:10:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$5620_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":2825,"indexExpression":{"id":2824,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"18447:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18436:19:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5620_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":2826,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18456:6:18","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":5773,"src":"18436:26:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$5620_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$5620_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"}},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18436:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2818,"id":2828,"nodeType":"Return","src":"18429:35:18"}]},"documentation":{"id":2810,"nodeType":"StructuredDocumentation","src":"18209:60:18","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"49a6078d","id":2830,"implemented":true,"kind":"function","modifiers":[],"name":"getOperatorsOf","nameLocation":"18283:14:18","nodeType":"FunctionDefinition","overrides":{"id":2814,"nodeType":"OverrideSpecifier","overrides":[],"src":"18349:8:18"},"parameters":{"id":2813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2812,"mutability":"mutable","name":"tokenId","nameLocation":"18315:7:18","nodeType":"VariableDeclaration","scope":2830,"src":"18307:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2811,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18307:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18297:31:18"},"returnParameters":{"id":2818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2830,"src":"18367:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2815,"name":"address","nodeType":"ElementaryTypeName","src":"18367:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2816,"nodeType":"ArrayTypeName","src":"18367:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"18366:18:18"},"scope":3609,"src":"18274:197:18","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2854,"nodeType":"Block","src":"18749:109:18","statements":[{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2840,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"18767:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":2842,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"18790:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2841,"name":"tokenOwnerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"18777:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18767:31:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2849,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"18843:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":2845,"name":"_operators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"18814:10:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$5620_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":2847,"indexExpression":{"id":2846,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"18825:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18814:19:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5620_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":2848,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18834:8:18","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":5701,"src":"18814:28:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$5620_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$5620_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18814:36:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18767:83:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2852,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18766:85:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2839,"id":2853,"nodeType":"Return","src":"18759:92:18"}]},"documentation":{"id":2831,"nodeType":"StructuredDocumentation","src":"18477:147:18","text":" @dev verifies if the `caller` is operator or owner for the `tokenId`\n @return true if `caller` is either operator or owner"},"id":2855,"implemented":true,"kind":"function","modifiers":[],"name":"_isOperatorOrOwner","nameLocation":"18638:18:18","nodeType":"FunctionDefinition","parameters":{"id":2836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2833,"mutability":"mutable","name":"caller","nameLocation":"18674:6:18","nodeType":"VariableDeclaration","scope":2855,"src":"18666:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2832,"name":"address","nodeType":"ElementaryTypeName","src":"18666:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2835,"mutability":"mutable","name":"tokenId","nameLocation":"18698:7:18","nodeType":"VariableDeclaration","scope":2855,"src":"18690:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2834,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18690:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18656:55:18"},"returnParameters":{"id":2839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2855,"src":"18743:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2837,"name":"bool","nodeType":"ElementaryTypeName","src":"18743:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18742:6:18"},"scope":3609,"src":"18629:229:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1808],"body":{"id":2892,"nodeType":"Block","src":"19126:187:18","statements":[{"condition":{"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"19140:40:18","subExpression":{"arguments":[{"expression":{"id":2871,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19160:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19164:6:18","memberName":"sender","nodeType":"MemberAccess","src":"19160:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2873,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"19172:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2870,"name":"_isOperatorOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"19141:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$returns$_t_bool_$","typeString":"function (address,bytes32) view returns (bool)"}},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19141:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2883,"nodeType":"IfStatement","src":"19136:119:18","trueBody":{"id":2882,"nodeType":"Block","src":"19182:73:18","statements":[{"errorCall":{"arguments":[{"id":2877,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"19224:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2878,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19233:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19237:6:18","memberName":"sender","nodeType":"MemberAccess","src":"19233:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2876,"name":"LSP8NotTokenOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"19203:20:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) pure"}},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19203:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2881,"nodeType":"RevertStatement","src":"19196:48:18"}]}},{"expression":{"arguments":[{"id":2885,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"19275:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2886,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"19281:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2887,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"19285:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2888,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"19294:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2889,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"19301:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2884,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"19265:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19265:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2891,"nodeType":"ExpressionStatement","src":"19265:41:18"}]},"documentation":{"id":2856,"nodeType":"StructuredDocumentation","src":"18899:60:18","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"511b6952","id":2893,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"18973:8:18","nodeType":"FunctionDefinition","overrides":{"id":2868,"nodeType":"OverrideSpecifier","overrides":[],"src":"19117:8:18"},"parameters":{"id":2867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2858,"mutability":"mutable","name":"from","nameLocation":"18999:4:18","nodeType":"VariableDeclaration","scope":2893,"src":"18991:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2857,"name":"address","nodeType":"ElementaryTypeName","src":"18991:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2860,"mutability":"mutable","name":"to","nameLocation":"19021:2:18","nodeType":"VariableDeclaration","scope":2893,"src":"19013:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2859,"name":"address","nodeType":"ElementaryTypeName","src":"19013:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2862,"mutability":"mutable","name":"tokenId","nameLocation":"19041:7:18","nodeType":"VariableDeclaration","scope":2893,"src":"19033:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2861,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19033:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2864,"mutability":"mutable","name":"force","nameLocation":"19063:5:18","nodeType":"VariableDeclaration","scope":2893,"src":"19058:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2863,"name":"bool","nodeType":"ElementaryTypeName","src":"19058:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2866,"mutability":"mutable","name":"data","nameLocation":"19091:4:18","nodeType":"VariableDeclaration","scope":2893,"src":"19078:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2865,"name":"bytes","nodeType":"ElementaryTypeName","src":"19078:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18981:120:18"},"returnParameters":{"id":2869,"nodeType":"ParameterList","parameters":[],"src":"19126:0:18"},"scope":3609,"src":"18964:349:18","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1827],"body":{"id":2972,"nodeType":"Block","src":"19589:478:18","statements":[{"assignments":[2914],"declarations":[{"constant":false,"id":2914,"mutability":"mutable","name":"fromLength","nameLocation":"19607:10:18","nodeType":"VariableDeclaration","scope":2972,"src":"19599:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2913,"name":"uint256","nodeType":"ElementaryTypeName","src":"19599:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2917,"initialValue":{"expression":{"id":2915,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"19620:4:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19625:6:18","memberName":"length","nodeType":"MemberAccess","src":"19620:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19599:32:18"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2918,"name":"fromLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"19658:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2919,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"19672:2:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19675:6:18","memberName":"length","nodeType":"MemberAccess","src":"19672:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19658:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2922,"name":"fromLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"19697:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2923,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"19711:7:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19719:6:18","memberName":"length","nodeType":"MemberAccess","src":"19711:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19697:28:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19658:67:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2927,"name":"fromLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"19741:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2928,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"19755:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19761:6:18","memberName":"length","nodeType":"MemberAccess","src":"19755:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19741:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19658:109:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2932,"name":"fromLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"19783:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2933,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"19797:4:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19802:6:18","memberName":"length","nodeType":"MemberAccess","src":"19797:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19783:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19658:150:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2941,"nodeType":"IfStatement","src":"19641:236:18","trueBody":{"id":2940,"nodeType":"Block","src":"19819:58:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2937,"name":"LSP8InvalidTransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"19840:24:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19840:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2939,"nodeType":"RevertStatement","src":"19833:33:18"}]}},{"body":{"id":2970,"nodeType":"Block","src":"19921:140:18","statements":[{"expression":{"arguments":[{"baseExpression":{"id":2949,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"19944:4:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2951,"indexExpression":{"id":2950,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"19949:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19944:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2952,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"19953:2:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2954,"indexExpression":{"id":2953,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"19956:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19953:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2955,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"19960:7:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2957,"indexExpression":{"id":2956,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"19968:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19960:10:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":2958,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"19972:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":2960,"indexExpression":{"id":2959,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"19978:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19972:8:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"baseExpression":{"id":2961,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"19982:4:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2963,"indexExpression":{"id":2962,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"19987:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19982:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2948,"name":"transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"19935:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19935:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2965,"nodeType":"ExpressionStatement","src":"19935:55:18"},{"id":2969,"nodeType":"UncheckedBlock","src":"20005:46:18","statements":[{"expression":{"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20033:3:18","subExpression":{"id":2966,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"20035:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2968,"nodeType":"ExpressionStatement","src":"20033:3:18"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2945,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"19903:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2946,"name":"fromLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"19907:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19903:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2971,"initializationExpression":{"assignments":[2943],"declarations":[{"constant":false,"id":2943,"mutability":"mutable","name":"i","nameLocation":"19900:1:18","nodeType":"VariableDeclaration","scope":2971,"src":"19892:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2942,"name":"uint256","nodeType":"ElementaryTypeName","src":"19892:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2944,"nodeType":"VariableDeclarationStatement","src":"19892:9:18"},"nodeType":"ForStatement","src":"19887:174:18"}]},"documentation":{"id":2894,"nodeType":"StructuredDocumentation","src":"19319:60:18","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"7e87632c","id":2973,"implemented":true,"kind":"function","modifiers":[],"name":"transferBatch","nameLocation":"19393:13:18","nodeType":"FunctionDefinition","overrides":{"id":2911,"nodeType":"OverrideSpecifier","overrides":[],"src":"19580:8:18"},"parameters":{"id":2910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2897,"mutability":"mutable","name":"from","nameLocation":"19433:4:18","nodeType":"VariableDeclaration","scope":2973,"src":"19416:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2895,"name":"address","nodeType":"ElementaryTypeName","src":"19416:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2896,"nodeType":"ArrayTypeName","src":"19416:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2900,"mutability":"mutable","name":"to","nameLocation":"19464:2:18","nodeType":"VariableDeclaration","scope":2973,"src":"19447:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2898,"name":"address","nodeType":"ElementaryTypeName","src":"19447:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2899,"nodeType":"ArrayTypeName","src":"19447:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2903,"mutability":"mutable","name":"tokenId","nameLocation":"19493:7:18","nodeType":"VariableDeclaration","scope":2973,"src":"19476:24:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2901,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19476:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2902,"nodeType":"ArrayTypeName","src":"19476:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2906,"mutability":"mutable","name":"force","nameLocation":"19524:5:18","nodeType":"VariableDeclaration","scope":2973,"src":"19510:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":2904,"name":"bool","nodeType":"ElementaryTypeName","src":"19510:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2905,"nodeType":"ArrayTypeName","src":"19510:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":2909,"mutability":"mutable","name":"data","nameLocation":"19554:4:18","nodeType":"VariableDeclaration","scope":2973,"src":"19539:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2907,"name":"bytes","nodeType":"ElementaryTypeName","src":"19539:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2908,"nodeType":"ArrayTypeName","src":"19539:7:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"19406:158:18"},"returnParameters":{"id":2912,"nodeType":"ParameterList","parameters":[],"src":"19589:0:18"},"scope":3609,"src":"19384:683:18","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3012,"nodeType":"Block","src":"20362:313:18","statements":[{"assignments":[2988],"declarations":[{"constant":false,"id":2988,"mutability":"mutable","name":"isRemoved","nameLocation":"20377:9:18","nodeType":"VariableDeclaration","scope":3012,"src":"20372:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2987,"name":"bool","nodeType":"ElementaryTypeName","src":"20372:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2995,"initialValue":{"arguments":[{"id":2993,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"20416:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":2989,"name":"_operators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"20389:10:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$5620_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":2991,"indexExpression":{"id":2990,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"20400:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20389:19:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5620_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":2992,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20409:6:18","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":5674,"src":"20389:26:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$5620_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$5620_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20389:36:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"20372:53:18"},{"condition":{"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"20439:10:18","subExpression":{"id":2996,"name":"isRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"20440:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3003,"nodeType":"IfStatement","src":"20435:65:18","trueBody":{"errorCall":{"arguments":[{"id":2999,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"20482:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3000,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"20492:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2998,"name":"LSP8NonExistingOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"20458:23:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20458:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3002,"nodeType":"RevertStatement","src":"20451:49:18"}},{"eventCall":{"arguments":[{"id":3005,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"20545:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3006,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"20567:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3007,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"20591:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3008,"name":"notified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"20612:8:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3009,"name":"operatorNotificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"20634:24:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3004,"name":"OperatorRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"20516:15:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20516:152:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3011,"nodeType":"EmitStatement","src":"20511:157:18"}]},"documentation":{"id":2974,"nodeType":"StructuredDocumentation","src":"20073:87:18","text":" @dev removes `operator` from the list of operators for the `tokenId`"},"id":3013,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeOperator","nameLocation":"20174:15:18","nodeType":"FunctionDefinition","parameters":{"id":2985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2976,"mutability":"mutable","name":"operator","nameLocation":"20207:8:18","nodeType":"VariableDeclaration","scope":3013,"src":"20199:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2975,"name":"address","nodeType":"ElementaryTypeName","src":"20199:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2978,"mutability":"mutable","name":"tokenOwner","nameLocation":"20233:10:18","nodeType":"VariableDeclaration","scope":3013,"src":"20225:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2977,"name":"address","nodeType":"ElementaryTypeName","src":"20225:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2980,"mutability":"mutable","name":"tokenId","nameLocation":"20261:7:18","nodeType":"VariableDeclaration","scope":3013,"src":"20253:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2979,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20253:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2982,"mutability":"mutable","name":"notified","nameLocation":"20283:8:18","nodeType":"VariableDeclaration","scope":3013,"src":"20278:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2981,"name":"bool","nodeType":"ElementaryTypeName","src":"20278:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2984,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"20314:24:18","nodeType":"VariableDeclaration","scope":3013,"src":"20301:37:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2983,"name":"bytes","nodeType":"ElementaryTypeName","src":"20301:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20189:155:18"},"returnParameters":{"id":2986,"nodeType":"ParameterList","parameters":[],"src":"20362:0:18"},"scope":3609,"src":"20165:510:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3066,"nodeType":"Block","src":"21057:929:18","statements":[{"assignments":[3025],"declarations":[{"constant":false,"id":3025,"mutability":"mutable","name":"operatorsForTokenId","nameLocation":"21511:19:18","nodeType":"VariableDeclaration","scope":3066,"src":"21478:52:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5620_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3024,"nodeType":"UserDefinedTypeName","pathNode":{"id":3023,"name":"EnumerableSet.AddressSet","nameLocations":["21478:13:18","21492:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":5620,"src":"21478:24:18"},"referencedDeclaration":5620,"src":"21478:24:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5620_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"id":3029,"initialValue":{"baseExpression":{"id":3026,"name":"_operators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"21533:10:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$5620_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":3028,"indexExpression":{"id":3027,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"21557:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21533:41:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5620_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"nodeType":"VariableDeclarationStatement","src":"21478:96:18"},{"assignments":[3031],"declarations":[{"constant":false,"id":3031,"mutability":"mutable","name":"operatorListLength","nameLocation":"21593:18:18","nodeType":"VariableDeclaration","scope":3066,"src":"21585:26:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3030,"name":"uint256","nodeType":"ElementaryTypeName","src":"21585:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3035,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3032,"name":"operatorsForTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"21614:19:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5620_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3033,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21634:6:18","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":5716,"src":"21614:26:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$5620_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$5620_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21614:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21585:57:18"},{"assignments":[3037],"declarations":[{"constant":false,"id":3037,"mutability":"mutable","name":"operator","nameLocation":"21660:8:18","nodeType":"VariableDeclaration","scope":3066,"src":"21652:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3036,"name":"address","nodeType":"ElementaryTypeName","src":"21652:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3038,"nodeType":"VariableDeclarationStatement","src":"21652:16:18"},{"body":{"id":3064,"nodeType":"Block","src":"21720:260:18","statements":[{"expression":{"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3045,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"21802:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":3048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":3046,"name":"operatorsForTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"21813:19:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5620_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3047,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21833:2:18","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":5743,"src":"21813:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$5620_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$5620_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21813:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21802:36:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3051,"nodeType":"ExpressionStatement","src":"21802:36:18"},{"expression":{"arguments":[{"id":3053,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"21868:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3054,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"21878:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3055,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"21890:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"66616c7365","id":3056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21899:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"","id":3057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21906:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":3052,"name":"_revokeOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"21852:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21852:57:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3059,"nodeType":"ExpressionStatement","src":"21852:57:18"},{"id":3063,"nodeType":"UncheckedBlock","src":"21924:46:18","statements":[{"expression":{"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"21952:3:18","subExpression":{"id":3060,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"21954:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3062,"nodeType":"ExpressionStatement","src":"21952:3:18"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3042,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"21694:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3043,"name":"operatorListLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"21698:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21694:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3065,"initializationExpression":{"assignments":[3040],"declarations":[{"constant":false,"id":3040,"mutability":"mutable","name":"i","nameLocation":"21691:1:18","nodeType":"VariableDeclaration","scope":3065,"src":"21683:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3039,"name":"uint256","nodeType":"ElementaryTypeName","src":"21683:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3041,"nodeType":"VariableDeclarationStatement","src":"21683:9:18"},"nodeType":"ForStatement","src":"21678:302:18"}]},"documentation":{"id":3014,"nodeType":"StructuredDocumentation","src":"20681:270:18","text":" @dev revoke all the current operators for a specific `tokenId` token which belongs to `tokenOwner`.\n @param tokenOwner The address that is the owner of the `tokenId`.\n @param tokenId The token to remove the associated operators for."},"id":3067,"implemented":true,"kind":"function","modifiers":[],"name":"_clearOperators","nameLocation":"20965:15:18","nodeType":"FunctionDefinition","parameters":{"id":3019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3016,"mutability":"mutable","name":"tokenOwner","nameLocation":"20998:10:18","nodeType":"VariableDeclaration","scope":3067,"src":"20990:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3015,"name":"address","nodeType":"ElementaryTypeName","src":"20990:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3018,"mutability":"mutable","name":"tokenId","nameLocation":"21026:7:18","nodeType":"VariableDeclaration","scope":3067,"src":"21018:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3017,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21018:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20980:59:18"},"returnParameters":{"id":3020,"nodeType":"ParameterList","parameters":[],"src":"21057:0:18"},"scope":3609,"src":"20956:1030:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3084,"nodeType":"Block","src":"22243:59:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3075,"name":"_tokenOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"22260:12:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":3077,"indexExpression":{"id":3076,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"22273:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22260:21:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22293:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22285:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3078,"name":"address","nodeType":"ElementaryTypeName","src":"22285:7:18","typeDescriptions":{}}},"id":3081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22285:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"22260:35:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3074,"id":3083,"nodeType":"Return","src":"22253:42:18"}]},"documentation":{"id":3068,"nodeType":"StructuredDocumentation","src":"21992:175:18","text":" @dev Returns whether `tokenId` exists.\n Tokens start existing when they are minted ({_mint}), and stop existing when they are burned ({_burn})."},"id":3085,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"22181:7:18","nodeType":"FunctionDefinition","parameters":{"id":3071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3070,"mutability":"mutable","name":"tokenId","nameLocation":"22197:7:18","nodeType":"VariableDeclaration","scope":3085,"src":"22189:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3069,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22189:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22188:17:18"},"returnParameters":{"id":3074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3085,"src":"22237:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3072,"name":"bool","nodeType":"ElementaryTypeName","src":"22237:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"22236:6:18"},"scope":3609,"src":"22172:130:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3101,"nodeType":"Block","src":"22456:102:18","statements":[{"condition":{"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"22470:17:18","subExpression":{"arguments":[{"id":3092,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"22479:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3091,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"22471:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32) view returns (bool)"}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22471:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3100,"nodeType":"IfStatement","src":"22466:86:18","trueBody":{"id":3099,"nodeType":"Block","src":"22489:63:18","statements":[{"errorCall":{"arguments":[{"id":3096,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"22533:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3095,"name":"LSP8NonExistentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"22510:22:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22510:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3098,"nodeType":"RevertStatement","src":"22503:38:18"}]}}]},"documentation":{"id":3086,"nodeType":"StructuredDocumentation","src":"22308:80:18","text":" @dev When `tokenId` does not exist then revert with an error."},"id":3102,"implemented":true,"kind":"function","modifiers":[],"name":"_existsOrError","nameLocation":"22402:14:18","nodeType":"FunctionDefinition","parameters":{"id":3089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3088,"mutability":"mutable","name":"tokenId","nameLocation":"22425:7:18","nodeType":"VariableDeclaration","scope":3102,"src":"22417:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3087,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22417:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22416:17:18"},"returnParameters":{"id":3090,"nodeType":"ParameterList","parameters":[],"src":"22456:0:18"},"scope":3609,"src":"22393:165:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3215,"nodeType":"Block","src":"23712:987:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3114,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"23726:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23740:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23732:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3115,"name":"address","nodeType":"ElementaryTypeName","src":"23732:7:18","typeDescriptions":{}}},"id":3118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23732:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"23726:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3124,"nodeType":"IfStatement","src":"23722:83:18","trueBody":{"id":3123,"nodeType":"Block","src":"23744:61:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3120,"name":"LSP8CannotSendToAddressZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"23765:27:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23765:29:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3122,"nodeType":"RevertStatement","src":"23758:36:18"}]}},{"condition":{"arguments":[{"id":3126,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"23881:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3125,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"23873:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32) view returns (bool)"}},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23873:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3133,"nodeType":"IfStatement","src":"23869:87:18","trueBody":{"id":3132,"nodeType":"Block","src":"23891:65:18","statements":[{"errorCall":{"arguments":[{"id":3129,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"23937:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3128,"name":"LSP8TokenIdAlreadyMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"23912:24:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23912:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3131,"nodeType":"RevertStatement","src":"23905:40:18"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":3137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23995:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23987:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3135,"name":"address","nodeType":"ElementaryTypeName","src":"23987:7:18","typeDescriptions":{}}},"id":3138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23987:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3139,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"23999:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3140,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"24003:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3141,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"24012:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3142,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"24019:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3134,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"23966:20:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23966:58:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3144,"nodeType":"ExpressionStatement","src":"23966:58:18"},{"condition":{"arguments":[{"id":3146,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"24133:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3145,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"24125:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32) view returns (bool)"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24125:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3153,"nodeType":"IfStatement","src":"24121:87:18","trueBody":{"id":3152,"nodeType":"Block","src":"24143:65:18","statements":[{"errorCall":{"arguments":[{"id":3149,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"24189:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3148,"name":"LSP8TokenIdAlreadyMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"24164:24:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24164:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3151,"nodeType":"RevertStatement","src":"24157:40:18"}]}},{"expression":{"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"24248:17:18","subExpression":{"id":3154,"name":"_existingTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"24250:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3156,"nodeType":"ExpressionStatement","src":"24248:17:18"},{"expression":{"arguments":[{"id":3161,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"24297:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":3157,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"24276:12:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$5499_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set storage ref)"}},"id":3159,"indexExpression":{"id":3158,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"24289:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24276:16:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5499_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3160,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24293:3:18","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":5517,"src":"24276:20:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$5499_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$5499_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24276:29:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3163,"nodeType":"ExpressionStatement","src":"24276:29:18"},{"expression":{"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3164,"name":"_tokenOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"24315:12:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":3166,"indexExpression":{"id":3165,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"24328:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24315:21:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3167,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"24339:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"24315:26:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3169,"nodeType":"ExpressionStatement","src":"24315:26:18"},{"eventCall":{"arguments":[{"expression":{"id":3171,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24366:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24370:6:18","memberName":"sender","nodeType":"MemberAccess","src":"24366:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24386:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24378:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3173,"name":"address","nodeType":"ElementaryTypeName","src":"24378:7:18","typeDescriptions":{}}},"id":3176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24378:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3177,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"24390:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3178,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"24394:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3179,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"24403:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3180,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"24410:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3170,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"24357:8:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,bytes32,bool,bytes memory)"}},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24357:58:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3182,"nodeType":"EmitStatement","src":"24352:63:18"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":3186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24454:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24446:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3184,"name":"address","nodeType":"ElementaryTypeName","src":"24446:7:18","typeDescriptions":{}}},"id":3187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24446:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3188,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"24458:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3189,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"24462:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3190,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"24471:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3191,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"24478:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3183,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3528,"src":"24426:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24426:57:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3193,"nodeType":"ExpressionStatement","src":"24426:57:18"},{"assignments":[3195],"declarations":[{"constant":false,"id":3195,"mutability":"mutable","name":"lsp1Data","nameLocation":"24507:8:18","nodeType":"VariableDeclaration","scope":3215,"src":"24494:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3194,"name":"bytes","nodeType":"ElementaryTypeName","src":"24494:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3208,"initialValue":{"arguments":[{"expression":{"id":3198,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24542:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24546:6:18","memberName":"sender","nodeType":"MemberAccess","src":"24542:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24574:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24566:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3200,"name":"address","nodeType":"ElementaryTypeName","src":"24566:7:18","typeDescriptions":{}}},"id":3203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24566:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3204,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"24590:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3205,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"24606:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3206,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"24627:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3196,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"24518:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"24522:6:18","memberName":"encode","nodeType":"MemberAccess","src":"24518:10:18","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24518:123:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"24494:147:18"},{"expression":{"arguments":[{"id":3210,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"24672:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3211,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"24676:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3212,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"24683:8:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3209,"name":"_notifyTokenReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"24651:20:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bool,bytes memory)"}},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24651:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3214,"nodeType":"ExpressionStatement","src":"24651:41:18"}]},"documentation":{"id":3103,"nodeType":"StructuredDocumentation","src":"22564:1013:18","text":" @dev Create `tokenId` by minting it and transfers it to `to`.\n @custom:info Any logic in the:\n - {_beforeTokenTransfer} function will run before updating the balances and ownership of `tokenId`s.\n - {_afterTokenTransfer} function will run after updating the balances and ownership of `tokenId`s, **but before notifying the recipient via LSP1**.\n @param to The address that will receive the minted `tokenId`.\n @param tokenId The token ID to create (= mint).\n @param force When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard.\n @param data Any additional data the caller wants included in the emitted event, and sent in the hook of the `to` address.\n @custom:requirements\n - `tokenId` must not exist and not have been already minted.\n - `to` cannot be the zero address.\n @custom:events {Transfer} event with `address(0)` as `from` address."},"id":3216,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"23591:5:18","nodeType":"FunctionDefinition","parameters":{"id":3112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3105,"mutability":"mutable","name":"to","nameLocation":"23614:2:18","nodeType":"VariableDeclaration","scope":3216,"src":"23606:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3104,"name":"address","nodeType":"ElementaryTypeName","src":"23606:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3107,"mutability":"mutable","name":"tokenId","nameLocation":"23634:7:18","nodeType":"VariableDeclaration","scope":3216,"src":"23626:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3106,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23626:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3109,"mutability":"mutable","name":"force","nameLocation":"23656:5:18","nodeType":"VariableDeclaration","scope":3216,"src":"23651:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3108,"name":"bool","nodeType":"ElementaryTypeName","src":"23651:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3111,"mutability":"mutable","name":"data","nameLocation":"23684:4:18","nodeType":"VariableDeclaration","scope":3216,"src":"23671:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3110,"name":"bytes","nodeType":"ElementaryTypeName","src":"23671:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"23596:98:18"},"returnParameters":{"id":3113,"nodeType":"ParameterList","parameters":[],"src":"23712:0:18"},"scope":3609,"src":"23582:1117:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3311,"nodeType":"Block","src":"26123:878:18","statements":[{"assignments":[3225],"declarations":[{"constant":false,"id":3225,"mutability":"mutable","name":"tokenOwner","nameLocation":"26141:10:18","nodeType":"VariableDeclaration","scope":3311,"src":"26133:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3224,"name":"address","nodeType":"ElementaryTypeName","src":"26133:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3229,"initialValue":{"arguments":[{"id":3227,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"26167:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3226,"name":"tokenOwnerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"26154:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26154:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"26133:42:18"},{"expression":{"arguments":[{"id":3231,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"26207:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26227:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26219:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3232,"name":"address","nodeType":"ElementaryTypeName","src":"26219:7:18","typeDescriptions":{}}},"id":3235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26219:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3236,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"26231:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"66616c7365","id":3237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"26240:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":3238,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"26247:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3230,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"26186:20:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26186:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3240,"nodeType":"ExpressionStatement","src":"26186:66:18"},{"expression":{"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3241,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"26391:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3243,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"26417:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3242,"name":"tokenOwnerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"26404:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26404:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"26391:34:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3246,"nodeType":"ExpressionStatement","src":"26391:34:18"},{"expression":{"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"26466:17:18","subExpression":{"id":3247,"name":"_existingTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"26468:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3249,"nodeType":"ExpressionStatement","src":"26466:17:18"},{"expression":{"arguments":[{"id":3251,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"26510:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3252,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"26522:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3250,"name":"_clearOperators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3067,"src":"26494:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32)"}},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26494:36:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3254,"nodeType":"ExpressionStatement","src":"26494:36:18"},{"expression":{"arguments":[{"id":3259,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"26573:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":3255,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"26541:12:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$5499_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set storage ref)"}},"id":3257,"indexExpression":{"id":3256,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"26554:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26541:24:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5499_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3258,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26566:6:18","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":5535,"src":"26541:31:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$5499_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$5499_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26541:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3261,"nodeType":"ExpressionStatement","src":"26541:40:18"},{"expression":{"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"26591:28:18","subExpression":{"baseExpression":{"id":3262,"name":"_tokenOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"26598:12:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":3264,"indexExpression":{"id":3263,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"26611:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"26598:21:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3266,"nodeType":"ExpressionStatement","src":"26591:28:18"},{"eventCall":{"arguments":[{"expression":{"id":3268,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"26644:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:18","memberName":"sender","nodeType":"MemberAccess","src":"26644:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3270,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"26656:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26676:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26668:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3271,"name":"address","nodeType":"ElementaryTypeName","src":"26668:7:18","typeDescriptions":{}}},"id":3274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26668:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3275,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"26680:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"66616c7365","id":3276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"26689:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":3277,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"26696:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3267,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"26635:8:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,bytes32,bool,bytes memory)"}},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26635:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3279,"nodeType":"EmitStatement","src":"26630:71:18"},{"expression":{"arguments":[{"id":3281,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"26732:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26752:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26744:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3282,"name":"address","nodeType":"ElementaryTypeName","src":"26744:7:18","typeDescriptions":{}}},"id":3285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26744:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3286,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"26756:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"66616c7365","id":3287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"26765:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":3288,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"26772:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3280,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3528,"src":"26712:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26712:65:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3290,"nodeType":"ExpressionStatement","src":"26712:65:18"},{"assignments":[3292],"declarations":[{"constant":false,"id":3292,"mutability":"mutable","name":"lsp1Data","nameLocation":"26801:8:18","nodeType":"VariableDeclaration","scope":3311,"src":"26788:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3291,"name":"bytes","nodeType":"ElementaryTypeName","src":"26788:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3305,"initialValue":{"arguments":[{"expression":{"id":3295,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"26836:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26840:6:18","memberName":"sender","nodeType":"MemberAccess","src":"26836:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3297,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"26860:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26892:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26884:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3298,"name":"address","nodeType":"ElementaryTypeName","src":"26884:7:18","typeDescriptions":{}}},"id":3301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26884:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3302,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"26908:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3303,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"26929:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3293,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"26812:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"26816:6:18","memberName":"encode","nodeType":"MemberAccess","src":"26812:10:18","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26812:131:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"26788:155:18"},{"expression":{"arguments":[{"id":3307,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"26973:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3308,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"26985:8:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3306,"name":"_notifyTokenSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"26954:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26954:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3310,"nodeType":"ExpressionStatement","src":"26954:40:18"}]},"documentation":{"id":3217,"nodeType":"StructuredDocumentation","src":"24705:1345:18","text":" @dev Burn a specific `tokenId`, removing the `tokenId` from the {tokenIdsOf} the caller and decreasing its {balanceOf} by -1.\n This will also clear all the operators allowed to transfer the `tokenId`.\n The owner of the `tokenId` will be notified about the `tokenId` being transferred through its LSP1 {universalReceiver}\n function, if it is a contract that supports the LSP1 interface. Its {universalReceiver} function will receive\n all the parameters in the calldata packed encoded.\n @custom:info Any logic in the:\n - {_beforeTokenTransfer} function will run before updating the balances and ownership of `tokenId`s.\n - {_afterTokenTransfer} function will run after updating the balances and ownership of `tokenId`s, **but before notifying the sender via LSP1**.\n @param tokenId The token to burn.\n @param data Any additional data the caller wants included in the emitted event, and sent in the LSP1 hook on the token owner's address.\n @custom:hint In dApps, you can know which addresses are burning tokens by listening for the `Transfer` event and filter with the zero address as `to`.\n @custom:requirements\n - `tokenId` must exist.\n @custom:events {Transfer} event with `address(0)` as the `to` address."},"id":3312,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"26064:5:18","nodeType":"FunctionDefinition","parameters":{"id":3222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3219,"mutability":"mutable","name":"tokenId","nameLocation":"26078:7:18","nodeType":"VariableDeclaration","scope":3312,"src":"26070:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3218,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26070:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3221,"mutability":"mutable","name":"data","nameLocation":"26100:4:18","nodeType":"VariableDeclaration","scope":3312,"src":"26087:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3220,"name":"bytes","nodeType":"ElementaryTypeName","src":"26087:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"26069:36:18"},"returnParameters":{"id":3223,"nodeType":"ParameterList","parameters":[],"src":"26123:0:18"},"scope":3609,"src":"26055:946:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3445,"nodeType":"Block","src":"28588:1149:18","statements":[{"assignments":[3327],"declarations":[{"constant":false,"id":3327,"mutability":"mutable","name":"tokenOwner","nameLocation":"28606:10:18","nodeType":"VariableDeclaration","scope":3445,"src":"28598:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3326,"name":"address","nodeType":"ElementaryTypeName","src":"28598:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3331,"initialValue":{"arguments":[{"id":3329,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"28632:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3328,"name":"tokenOwnerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"28619:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28619:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"28598:42:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3332,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"28654:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3333,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"28668:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"28654:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3342,"nodeType":"IfStatement","src":"28650:100:18","trueBody":{"id":3341,"nodeType":"Block","src":"28674:76:18","statements":[{"errorCall":{"arguments":[{"id":3336,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"28713:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3337,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"28725:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3338,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"28734:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3335,"name":"LSP8NotTokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"28695:17:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$_t_address_$returns$__$","typeString":"function (address,bytes32,address) pure"}},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28695:44:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3340,"nodeType":"RevertStatement","src":"28688:51:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3343,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"28764:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28778:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28770:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3344,"name":"address","nodeType":"ElementaryTypeName","src":"28770:7:18","typeDescriptions":{}}},"id":3347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28770:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"28764:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3353,"nodeType":"IfStatement","src":"28760:83:18","trueBody":{"id":3352,"nodeType":"Block","src":"28782:61:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3349,"name":"LSP8CannotSendToAddressZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"28803:27:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28803:29:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3351,"nodeType":"RevertStatement","src":"28796:36:18"}]}},{"expression":{"arguments":[{"id":3355,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"28874:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3356,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"28880:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3357,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"28884:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3358,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"28893:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3359,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"28900:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3354,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"28853:20:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28853:52:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3361,"nodeType":"ExpressionStatement","src":"28853:52:18"},{"assignments":[3363],"declarations":[{"constant":false,"id":3363,"mutability":"mutable","name":"currentTokenOwner","nameLocation":"29019:17:18","nodeType":"VariableDeclaration","scope":3445,"src":"29011:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3362,"name":"address","nodeType":"ElementaryTypeName","src":"29011:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3367,"initialValue":{"arguments":[{"id":3365,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"29052:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3364,"name":"tokenOwnerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"29039:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29039:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"29011:49:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3368,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"29074:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3369,"name":"currentTokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"29088:17:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"29074:31:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3378,"nodeType":"IfStatement","src":"29070:192:18","trueBody":{"id":3377,"nodeType":"Block","src":"29107:155:18","statements":[{"errorCall":{"arguments":[{"id":3372,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"29167:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3373,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"29192:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3374,"name":"currentTokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"29220:17:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3371,"name":"LSP8TokenOwnerChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"29128:21:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address) pure"}},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29128:123:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3376,"nodeType":"RevertStatement","src":"29121:130:18"}]}},{"expression":{"arguments":[{"id":3380,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"29288:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3381,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"29294:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3379,"name":"_clearOperators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3067,"src":"29272:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32)"}},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29272:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3383,"nodeType":"ExpressionStatement","src":"29272:30:18"},{"expression":{"arguments":[{"id":3388,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"29339:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":3384,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"29313:12:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$5499_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set storage ref)"}},"id":3386,"indexExpression":{"id":3385,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"29326:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29313:18:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5499_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3387,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29332:6:18","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":5535,"src":"29313:25:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$5499_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$5499_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29313:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3390,"nodeType":"ExpressionStatement","src":"29313:34:18"},{"expression":{"arguments":[{"id":3395,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"29378:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":3391,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"29357:12:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$5499_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set storage ref)"}},"id":3393,"indexExpression":{"id":3392,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"29370:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29357:16:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5499_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3394,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29374:3:18","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":5517,"src":"29357:20:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$5499_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$5499_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29357:29:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3397,"nodeType":"ExpressionStatement","src":"29357:29:18"},{"expression":{"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3398,"name":"_tokenOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"29396:12:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":3400,"indexExpression":{"id":3399,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"29409:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"29396:21:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3401,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"29420:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"29396:26:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3403,"nodeType":"ExpressionStatement","src":"29396:26:18"},{"eventCall":{"arguments":[{"expression":{"id":3405,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"29447:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29451:6:18","memberName":"sender","nodeType":"MemberAccess","src":"29447:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3407,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"29459:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3408,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"29465:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3409,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"29469:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3410,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"29478:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3411,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"29485:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3404,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"29438:8:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,bytes32,bool,bytes memory)"}},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29438:52:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3413,"nodeType":"EmitStatement","src":"29433:57:18"},{"expression":{"arguments":[{"id":3415,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"29521:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3416,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"29527:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3417,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"29531:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3418,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"29540:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3419,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"29547:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3414,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3528,"src":"29501:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29501:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3421,"nodeType":"ExpressionStatement","src":"29501:51:18"},{"assignments":[3423],"declarations":[{"constant":false,"id":3423,"mutability":"mutable","name":"lsp1Data","nameLocation":"29576:8:18","nodeType":"VariableDeclaration","scope":3445,"src":"29563:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3422,"name":"bytes","nodeType":"ElementaryTypeName","src":"29563:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3433,"initialValue":{"arguments":[{"expression":{"id":3426,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"29598:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29602:6:18","memberName":"sender","nodeType":"MemberAccess","src":"29598:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3428,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"29610:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3429,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"29616:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3430,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"29620:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3431,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"29629:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3424,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"29587:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"29591:6:18","memberName":"encode","nodeType":"MemberAccess","src":"29587:10:18","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29587:47:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"29563:71:18"},{"expression":{"arguments":[{"id":3435,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"29664:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3436,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"29670:8:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3434,"name":"_notifyTokenSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"29645:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29645:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3438,"nodeType":"ExpressionStatement","src":"29645:34:18"},{"expression":{"arguments":[{"id":3440,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"29710:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3441,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"29714:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3442,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"29721:8:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3439,"name":"_notifyTokenReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"29689:20:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bool,bytes memory)"}},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29689:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3444,"nodeType":"ExpressionStatement","src":"29689:41:18"}]},"documentation":{"id":3313,"nodeType":"StructuredDocumentation","src":"27007:1420:18","text":" @dev Change the owner of the `tokenId` from `from` to `to`.\n Both the sender and recipient will be notified of the `tokenId` being transferred through their LSP1 {universalReceiver}\n function, if they are contracts that support the LSP1 interface. Their `universalReceiver` function will receive\n all the parameters in the calldata packed encoded.\n @custom:info Any logic in the:\n - {_beforeTokenTransfer} function will run before updating the balances and ownership of `tokenId`s.\n - {_afterTokenTransfer} function will run after updating the balances and ownership of `tokenId`s, **but before notifying the sender/recipient via LSP1**.\n @param from The sender address.\n @param to The recipient address.\n @param tokenId The token to transfer.\n @param force When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard.\n @param data Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\n @custom:requirements\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n @custom:events {Transfer} event.\n @custom:danger This internal function does not check if the sender is authorized or not to operate on the `tokenId`."},"id":3446,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"28441:9:18","nodeType":"FunctionDefinition","parameters":{"id":3324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3315,"mutability":"mutable","name":"from","nameLocation":"28468:4:18","nodeType":"VariableDeclaration","scope":3446,"src":"28460:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3314,"name":"address","nodeType":"ElementaryTypeName","src":"28460:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3317,"mutability":"mutable","name":"to","nameLocation":"28490:2:18","nodeType":"VariableDeclaration","scope":3446,"src":"28482:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3316,"name":"address","nodeType":"ElementaryTypeName","src":"28482:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3319,"mutability":"mutable","name":"tokenId","nameLocation":"28510:7:18","nodeType":"VariableDeclaration","scope":3446,"src":"28502:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3318,"name":"bytes32","nodeType":"ElementaryTypeName","src":"28502:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3321,"mutability":"mutable","name":"force","nameLocation":"28532:5:18","nodeType":"VariableDeclaration","scope":3446,"src":"28527:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3320,"name":"bool","nodeType":"ElementaryTypeName","src":"28527:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3323,"mutability":"mutable","name":"data","nameLocation":"28560:4:18","nodeType":"VariableDeclaration","scope":3446,"src":"28547:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3322,"name":"bytes","nodeType":"ElementaryTypeName","src":"28547:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"28450:120:18"},"returnParameters":{"id":3325,"nodeType":"ParameterList","parameters":[],"src":"28588:0:18"},"scope":3609,"src":"28432:1305:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3475,"nodeType":"Block","src":"30283:140:18","statements":[{"expression":{"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3456,"name":"_store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"30293:6:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":3465,"indexExpression":{"arguments":[{"arguments":[{"id":3461,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"30323:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3462,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"30332:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30310:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3458,"name":"bytes","nodeType":"ElementaryTypeName","src":"30310:5:18","typeDescriptions":{}}},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30316:6:18","memberName":"concat","nodeType":"MemberAccess","src":"30310:12:18","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30310:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3457,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"30300:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30300:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"30293:49:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3466,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"30345:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"30293:61:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":3468,"nodeType":"ExpressionStatement","src":"30293:61:18"},{"eventCall":{"arguments":[{"id":3470,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"30388:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3471,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"30397:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3472,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"30406:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3469,"name":"TokenIdDataChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"30369:18:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes32,bytes memory)"}},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30369:47:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3474,"nodeType":"EmitStatement","src":"30364:52:18"}]},"documentation":{"id":3447,"nodeType":"StructuredDocumentation","src":"29743:402:18","text":" @dev Sets data for a specific `tokenId` and `dataKey` in the ERC725Y storage\n The ERC725Y data key is the hash of the `tokenId` and `dataKey` concatenated\n @param tokenId The unique identifier for a token.\n @param dataKey The key for the data to set.\n @param dataValue The value to set for the given data key.\n @custom:events {TokenIdDataChanged} event."},"id":3476,"implemented":true,"kind":"function","modifiers":[],"name":"_setDataForTokenId","nameLocation":"30159:18:18","nodeType":"FunctionDefinition","parameters":{"id":3454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3449,"mutability":"mutable","name":"tokenId","nameLocation":"30195:7:18","nodeType":"VariableDeclaration","scope":3476,"src":"30187:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30187:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3451,"mutability":"mutable","name":"dataKey","nameLocation":"30220:7:18","nodeType":"VariableDeclaration","scope":3476,"src":"30212:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3450,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30212:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3453,"mutability":"mutable","name":"dataValue","nameLocation":"30250:9:18","nodeType":"VariableDeclaration","scope":3476,"src":"30237:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3452,"name":"bytes","nodeType":"ElementaryTypeName","src":"30237:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"30177:88:18"},"returnParameters":{"id":3455,"nodeType":"ParameterList","parameters":[],"src":"30283:0:18"},"scope":3609,"src":"30150:273:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3497,"nodeType":"Block","src":"30965:73:18","statements":[{"expression":{"baseExpression":{"id":3486,"name":"_store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"30982:6:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":3495,"indexExpression":{"arguments":[{"arguments":[{"id":3491,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"31012:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3492,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"31021:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30999:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3488,"name":"bytes","nodeType":"ElementaryTypeName","src":"30999:5:18","typeDescriptions":{}}},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31005:6:18","memberName":"concat","nodeType":"MemberAccess","src":"30999:12:18","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30999:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3487,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"30989:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30989:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30982:49:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"functionReturnParameters":3485,"id":3496,"nodeType":"Return","src":"30975:56:18"}]},"documentation":{"id":3477,"nodeType":"StructuredDocumentation","src":"30429:391:18","text":" @dev Retrieves data for a specific `tokenId` and `dataKey` from the ERC725Y storage\n The ERC725Y data key is the hash of the `tokenId` and `dataKey` concatenated\n @param tokenId The unique identifier for a token.\n @param dataKey The key for the data to retrieve.\n @return dataValues The data value associated with the given `tokenId` and `dataKey`."},"id":3498,"implemented":true,"kind":"function","modifiers":[],"name":"_getDataForTokenId","nameLocation":"30834:18:18","nodeType":"FunctionDefinition","parameters":{"id":3482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3479,"mutability":"mutable","name":"tokenId","nameLocation":"30870:7:18","nodeType":"VariableDeclaration","scope":3498,"src":"30862:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3478,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30862:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3481,"mutability":"mutable","name":"dataKey","nameLocation":"30895:7:18","nodeType":"VariableDeclaration","scope":3498,"src":"30887:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3480,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30887:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"30852:56:18"},"returnParameters":{"id":3485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3484,"mutability":"mutable","name":"dataValues","nameLocation":"30953:10:18","nodeType":"VariableDeclaration","scope":3498,"src":"30940:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3483,"name":"bytes","nodeType":"ElementaryTypeName","src":"30940:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"30939:25:18"},"scope":3609,"src":"30825:213:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3512,"nodeType":"Block","src":"31787:2:18","statements":[]},"documentation":{"id":3499,"nodeType":"StructuredDocumentation","src":"31044:526:18","text":" @dev Hook that is called before any token transfer, including minting and burning.\n Allows to run custom logic before updating balances and notifying sender/recipient by overriding this function.\n @param from The sender address\n @param to The recipient address\n @param tokenId The tokenId to transfer\n @param force A boolean that describe if transfer to a `to` address that does not support LSP1 is allowed or not.\n @param data The data sent alongside the transfer"},"id":3513,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"31584:20:18","nodeType":"FunctionDefinition","parameters":{"id":3510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3501,"mutability":"mutable","name":"from","nameLocation":"31622:4:18","nodeType":"VariableDeclaration","scope":3513,"src":"31614:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3500,"name":"address","nodeType":"ElementaryTypeName","src":"31614:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3503,"mutability":"mutable","name":"to","nameLocation":"31644:2:18","nodeType":"VariableDeclaration","scope":3513,"src":"31636:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3502,"name":"address","nodeType":"ElementaryTypeName","src":"31636:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3505,"mutability":"mutable","name":"tokenId","nameLocation":"31664:7:18","nodeType":"VariableDeclaration","scope":3513,"src":"31656:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3504,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31656:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3507,"mutability":"mutable","name":"force","nameLocation":"31686:5:18","nodeType":"VariableDeclaration","scope":3513,"src":"31681:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3506,"name":"bool","nodeType":"ElementaryTypeName","src":"31681:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3509,"mutability":"mutable","name":"data","nameLocation":"31714:4:18","nodeType":"VariableDeclaration","scope":3513,"src":"31701:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3508,"name":"bytes","nodeType":"ElementaryTypeName","src":"31701:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"31604:165:18"},"returnParameters":{"id":3511,"nodeType":"ParameterList","parameters":[],"src":"31787:0:18"},"scope":3609,"src":"31575:214:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3527,"nodeType":"Block","src":"32556:2:18","statements":[]},"documentation":{"id":3514,"nodeType":"StructuredDocumentation","src":"31795:545:18","text":" @dev Hook that is called after any token transfer, including minting and burning.\n Allows to run custom logic after updating balances, but **before notifying sender/recipient via LSP1** by overriding this function.\n @param from The sender address\n @param to The recipient address\n @param tokenId The tokenId to transfer\n @param force A boolean that describe if transfer to a `to` address that does not support LSP1 is allowed or not.\n @param data The data sent alongside the transfer"},"id":3528,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"32354:19:18","nodeType":"FunctionDefinition","parameters":{"id":3525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3516,"mutability":"mutable","name":"from","nameLocation":"32391:4:18","nodeType":"VariableDeclaration","scope":3528,"src":"32383:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3515,"name":"address","nodeType":"ElementaryTypeName","src":"32383:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3518,"mutability":"mutable","name":"to","nameLocation":"32413:2:18","nodeType":"VariableDeclaration","scope":3528,"src":"32405:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3517,"name":"address","nodeType":"ElementaryTypeName","src":"32405:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3520,"mutability":"mutable","name":"tokenId","nameLocation":"32433:7:18","nodeType":"VariableDeclaration","scope":3528,"src":"32425:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3519,"name":"bytes32","nodeType":"ElementaryTypeName","src":"32425:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3522,"mutability":"mutable","name":"force","nameLocation":"32455:5:18","nodeType":"VariableDeclaration","scope":3528,"src":"32450:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3521,"name":"bool","nodeType":"ElementaryTypeName","src":"32450:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3524,"mutability":"mutable","name":"data","nameLocation":"32483:4:18","nodeType":"VariableDeclaration","scope":3528,"src":"32470:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3523,"name":"bytes","nodeType":"ElementaryTypeName","src":"32470:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"32373:165:18"},"returnParameters":{"id":3526,"nodeType":"ParameterList","parameters":[],"src":"32556:0:18"},"scope":3609,"src":"32345:213:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3544,"nodeType":"Block","src":"33281:144:18","statements":[{"expression":{"arguments":[{"id":3539,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"33338:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3540,"name":"_TYPEID_LSP8_TOKENOPERATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"33360:26:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3541,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"33400:8:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3536,"name":"LSP1Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"33291:9:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP1Utils_$563_$","typeString":"type(library LSP1Utils)"}},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"33301:23:18","memberName":"notifyUniversalReceiver","nodeType":"MemberAccess","referencedDeclaration":519,"src":"33291:33:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes32,bytes memory)"}},"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33291:127:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3543,"nodeType":"ExpressionStatement","src":"33291:127:18"}]},"documentation":{"id":3529,"nodeType":"StructuredDocumentation","src":"32564:602:18","text":" @dev Attempt to notify the operator `operator` about the `tokenId` being authorized.\n This is done by calling its {universalReceiver} function with the `_TYPEID_LSP8_TOKENOPERATOR` as typeId, if `operator` is a contract that supports the LSP1 interface.\n If `operator` is an EOA or a contract that does not support the LSP1 interface, nothing will happen and no notification will be sent.\n @param operator The address to call the {universalReceiver} function on.\n @param lsp1Data the data to be sent to the `operator` address in the `universalReceiver` call."},"id":3545,"implemented":true,"kind":"function","modifiers":[],"name":"_notifyTokenOperator","nameLocation":"33180:20:18","nodeType":"FunctionDefinition","parameters":{"id":3534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3531,"mutability":"mutable","name":"operator","nameLocation":"33218:8:18","nodeType":"VariableDeclaration","scope":3545,"src":"33210:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3530,"name":"address","nodeType":"ElementaryTypeName","src":"33210:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3533,"mutability":"mutable","name":"lsp1Data","nameLocation":"33249:8:18","nodeType":"VariableDeclaration","scope":3545,"src":"33236:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3532,"name":"bytes","nodeType":"ElementaryTypeName","src":"33236:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"33200:63:18"},"returnParameters":{"id":3535,"nodeType":"ParameterList","parameters":[],"src":"33281:0:18"},"scope":3609,"src":"33171:254:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3561,"nodeType":"Block","src":"34126:139:18","statements":[{"expression":{"arguments":[{"id":3556,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"34183:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3557,"name":"_TYPEID_LSP8_TOKENSSENDER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"34201:25:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3558,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"34240:8:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3553,"name":"LSP1Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"34136:9:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP1Utils_$563_$","typeString":"type(library LSP1Utils)"}},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"34146:23:18","memberName":"notifyUniversalReceiver","nodeType":"MemberAccess","referencedDeclaration":519,"src":"34136:33:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes32,bytes memory)"}},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34136:122:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3560,"nodeType":"ExpressionStatement","src":"34136:122:18"}]},"documentation":{"id":3546,"nodeType":"StructuredDocumentation","src":"33431:586:18","text":" @dev Attempt to notify the token sender `from` about the `tokenId` being transferred.\n This is done by calling its {universalReceiver} function with the `_TYPEID_LSP8_TOKENSSENDER` as typeId, if `from` is a contract that supports the LSP1 interface.\n If `from` is an EOA or a contract that does not support the LSP1 interface, nothing will happen and no notification will be sent.\n @param from The address to call the {universalReceiver} function on.\n @param lsp1Data the data to be sent to the `from` address in the `universalReceiver` call."},"id":3562,"implemented":true,"kind":"function","modifiers":[],"name":"_notifyTokenSender","nameLocation":"34031:18:18","nodeType":"FunctionDefinition","parameters":{"id":3551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3548,"mutability":"mutable","name":"from","nameLocation":"34067:4:18","nodeType":"VariableDeclaration","scope":3562,"src":"34059:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3547,"name":"address","nodeType":"ElementaryTypeName","src":"34059:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3550,"mutability":"mutable","name":"lsp1Data","nameLocation":"34094:8:18","nodeType":"VariableDeclaration","scope":3562,"src":"34081:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3549,"name":"bytes","nodeType":"ElementaryTypeName","src":"34081:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34049:59:18"},"returnParameters":{"id":3552,"nodeType":"ParameterList","parameters":[],"src":"34126:0:18"},"scope":3609,"src":"34022:243:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3607,"nodeType":"Block","src":"35279:491:18","statements":[{"condition":{"arguments":[{"id":3574,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"35370:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3575,"name":"_INTERFACEID_LSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"35390:17:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":3572,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"35306:13:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC165Checker_$4311_$","typeString":"type(library ERC165Checker)"}},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"35320:32:18","memberName":"supportsERC165InterfaceUnchecked","nodeType":"MemberAccess","referencedDeclaration":4310,"src":"35306:46:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35306:115:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"35534:6:18","subExpression":{"id":3586,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"35535:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3605,"nodeType":"IfStatement","src":"35530:234:18","trueBody":{"id":3604,"nodeType":"Block","src":"35542:222:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3588,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"35560:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"35563:4:18","memberName":"code","nodeType":"MemberAccess","src":"35560:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"35568:6:18","memberName":"length","nodeType":"MemberAccess","src":"35560:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35578:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"35560:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3602,"nodeType":"Block","src":"35682:72:18","statements":[{"errorCall":{"arguments":[{"id":3599,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"35736:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3598,"name":"LSP8NotifyTokenReceiverIsEOA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"35707:28:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35707:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3601,"nodeType":"RevertStatement","src":"35700:39:18"}]},"id":3603,"nodeType":"IfStatement","src":"35556:198:18","trueBody":{"id":3597,"nodeType":"Block","src":"35581:95:18","statements":[{"errorCall":{"arguments":[{"id":3594,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"35658:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3593,"name":"LSP8NotifyTokenReceiverContractMissingLSP1Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"35606:51:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35606:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3596,"nodeType":"RevertStatement","src":"35599:62:18"}]}}]}},"id":3606,"nodeType":"IfStatement","src":"35289:475:18","trueBody":{"id":3585,"nodeType":"Block","src":"35432:92:18","statements":[{"expression":{"arguments":[{"id":3581,"name":"_TYPEID_LSP8_TOKENSRECIPIENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"35474:28:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3582,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"35504:8:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3578,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"35452:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3577,"name":"ILSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"35446:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILSP1UniversalReceiver_$464_$","typeString":"type(contract ILSP1UniversalReceiver)"}},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35446:9:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILSP1UniversalReceiver_$464","typeString":"contract ILSP1UniversalReceiver"}},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"35456:17:18","memberName":"universalReceiver","nodeType":"MemberAccess","referencedDeclaration":463,"src":"35446:27:18","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32,bytes memory) payable external returns (bytes memory)"}},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35446:67:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3584,"nodeType":"ExpressionStatement","src":"35446:67:18"}]}}]},"documentation":{"id":3563,"nodeType":"StructuredDocumentation","src":"34271:879:18","text":" @dev Attempt to notify the token receiver `to` about the `tokenId` being received.\n This is done by calling its {universalReceiver} function with the `_TYPEID_LSP8_TOKENSRECIPIENT` as typeId, if `to` is a contract that supports the LSP1 interface.\n If `to` is is an EOA or a contract that does not support the LSP1 interface, the behaviour will depend on the `force` boolean flag.\n - if `force` is set to `true`, nothing will happen and no notification will be sent.\n - if `force` is set to `false, the transaction will revert.\n @param to The address to call the {universalReceiver} function on.\n @param force A boolean that describe if transfer to a `to` address that does not support LSP1 is allowed or not.\n @param lsp1Data The data to be sent to the `to` address in the `universalReceiver(...)` call."},"id":3608,"implemented":true,"kind":"function","modifiers":[],"name":"_notifyTokenReceiver","nameLocation":"35164:20:18","nodeType":"FunctionDefinition","parameters":{"id":3570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3565,"mutability":"mutable","name":"to","nameLocation":"35202:2:18","nodeType":"VariableDeclaration","scope":3608,"src":"35194:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3564,"name":"address","nodeType":"ElementaryTypeName","src":"35194:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3567,"mutability":"mutable","name":"force","nameLocation":"35219:5:18","nodeType":"VariableDeclaration","scope":3608,"src":"35214:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3566,"name":"bool","nodeType":"ElementaryTypeName","src":"35214:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3569,"mutability":"mutable","name":"lsp1Data","nameLocation":"35247:8:18","nodeType":"VariableDeclaration","scope":3608,"src":"35234:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3568,"name":"bytes","nodeType":"ElementaryTypeName","src":"35234:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"35184:77:18"},"returnParameters":{"id":3571,"nodeType":"ParameterList","parameters":[],"src":"35279:0:18"},"scope":3609,"src":"35155:615:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3610,"src":"2621:33151:18","usedErrors":[330,333,336,339,581,586,591,1619,1622,1625,1904,1913,1920,1927,1930,1933,1940,1948,1953,1958,1961,1964,1967,1970,1973,1978,1987,1996],"usedEvents":[349,1643,1654,1667,1676,3623]}],"src":"39:35734:18"},"id":18},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[3864],"Ownable":[3722]},"id":3723,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3611,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:19"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3612,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3723,"sourceUnit":3865,"src":"127:30:19","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3614,"name":"Context","nameLocations":["683:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3864,"src":"683:7:19"},"id":3615,"nodeType":"InheritanceSpecifier","src":"683:7:19"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3613,"nodeType":"StructuredDocumentation","src":"159:494:19","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":3722,"linearizedBaseContracts":[3722,3864],"name":"Ownable","nameLocation":"672:7:19","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3617,"mutability":"mutable","name":"_owner","nameLocation":"713:6:19","nodeType":"VariableDeclaration","scope":3722,"src":"697:22:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3616,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":3623,"name":"OwnershipTransferred","nameLocation":"732:20:19","nodeType":"EventDefinition","parameters":{"id":3622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3619,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:19","nodeType":"VariableDeclaration","scope":3623,"src":"753:29:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3618,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3621,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:19","nodeType":"VariableDeclaration","scope":3623,"src":"784:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3620,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:19"},"src":"726:84:19"},{"body":{"id":3632,"nodeType":"Block","src":"926:49:19","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3628,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"955:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3627,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"936:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3631,"nodeType":"ExpressionStatement","src":"936:32:19"}]},"documentation":{"id":3624,"nodeType":"StructuredDocumentation","src":"816:91:19","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":3633,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3625,"nodeType":"ParameterList","parameters":[],"src":"923:2:19"},"returnParameters":{"id":3626,"nodeType":"ParameterList","parameters":[],"src":"926:0:19"},"scope":3722,"src":"912:63:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3640,"nodeType":"Block","src":"1084:41:19","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3636,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3664,"src":"1094:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3638,"nodeType":"ExpressionStatement","src":"1094:13:19"},{"id":3639,"nodeType":"PlaceholderStatement","src":"1117:1:19"}]},"documentation":{"id":3634,"nodeType":"StructuredDocumentation","src":"981:77:19","text":" @dev Throws if called by any account other than the owner."},"id":3641,"name":"onlyOwner","nameLocation":"1072:9:19","nodeType":"ModifierDefinition","parameters":{"id":3635,"nodeType":"ParameterList","parameters":[],"src":"1081:2:19"},"src":"1063:62:19","virtual":false,"visibility":"internal"},{"body":{"id":3649,"nodeType":"Block","src":"1256:30:19","statements":[{"expression":{"id":3647,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"1273:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3646,"id":3648,"nodeType":"Return","src":"1266:13:19"}]},"documentation":{"id":3642,"nodeType":"StructuredDocumentation","src":"1131:65:19","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":3650,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:19","nodeType":"FunctionDefinition","parameters":{"id":3643,"nodeType":"ParameterList","parameters":[],"src":"1215:2:19"},"returnParameters":{"id":3646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3650,"src":"1247:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3644,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:19"},"scope":3722,"src":"1201:85:19","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3663,"nodeType":"Block","src":"1404:85:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3655,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"1422:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3657,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"1433:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":3660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":3654,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3662,"nodeType":"ExpressionStatement","src":"1414:68:19"}]},"documentation":{"id":3651,"nodeType":"StructuredDocumentation","src":"1292:62:19","text":" @dev Throws if the sender is not the owner."},"id":3664,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:19","nodeType":"FunctionDefinition","parameters":{"id":3652,"nodeType":"ParameterList","parameters":[],"src":"1379:2:19"},"returnParameters":{"id":3653,"nodeType":"ParameterList","parameters":[],"src":"1404:0:19"},"scope":3722,"src":"1359:130:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3677,"nodeType":"Block","src":"1878:47:19","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":3673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3671,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:19","typeDescriptions":{}}},"id":3674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3670,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"1888:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3676,"nodeType":"ExpressionStatement","src":"1888:30:19"}]},"documentation":{"id":3665,"nodeType":"StructuredDocumentation","src":"1495:324:19","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":3678,"implemented":true,"kind":"function","modifiers":[{"id":3668,"kind":"modifierInvocation","modifierName":{"id":3667,"name":"onlyOwner","nameLocations":["1868:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":3641,"src":"1868:9:19"},"nodeType":"ModifierInvocation","src":"1868:9:19"}],"name":"renounceOwnership","nameLocation":"1833:17:19","nodeType":"FunctionDefinition","parameters":{"id":3666,"nodeType":"ParameterList","parameters":[],"src":"1850:2:19"},"returnParameters":{"id":3669,"nodeType":"ParameterList","parameters":[],"src":"1878:0:19"},"scope":3722,"src":"1824:101:19","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3700,"nodeType":"Block","src":"2144:128:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3687,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"2162:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3688,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:19","typeDescriptions":{}}},"id":3691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":3693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":3686,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3695,"nodeType":"ExpressionStatement","src":"2154:73:19"},{"expression":{"arguments":[{"id":3697,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"2256:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3696,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"2237:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3699,"nodeType":"ExpressionStatement","src":"2237:28:19"}]},"documentation":{"id":3679,"nodeType":"StructuredDocumentation","src":"1931:138:19","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":3701,"implemented":true,"kind":"function","modifiers":[{"id":3684,"kind":"modifierInvocation","modifierName":{"id":3683,"name":"onlyOwner","nameLocations":["2134:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":3641,"src":"2134:9:19"},"nodeType":"ModifierInvocation","src":"2134:9:19"}],"name":"transferOwnership","nameLocation":"2083:17:19","nodeType":"FunctionDefinition","parameters":{"id":3682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3681,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:19","nodeType":"VariableDeclaration","scope":3701,"src":"2101:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3680,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:19"},"returnParameters":{"id":3685,"nodeType":"ParameterList","parameters":[],"src":"2144:0:19"},"scope":3722,"src":"2074:198:19","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3720,"nodeType":"Block","src":"2489:124:19","statements":[{"assignments":[3708],"declarations":[{"constant":false,"id":3708,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:19","nodeType":"VariableDeclaration","scope":3720,"src":"2499:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3707,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3710,"initialValue":{"id":3709,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"2518:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:19"},{"expression":{"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3711,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"2534:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3712,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"2543:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3714,"nodeType":"ExpressionStatement","src":"2534:17:19"},{"eventCall":{"arguments":[{"id":3716,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"2587:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3717,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"2597:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3715,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"2566:20:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3719,"nodeType":"EmitStatement","src":"2561:45:19"}]},"documentation":{"id":3702,"nodeType":"StructuredDocumentation","src":"2278:143:19","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":3721,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:19","nodeType":"FunctionDefinition","parameters":{"id":3705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3704,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:19","nodeType":"VariableDeclaration","scope":3721,"src":"2454:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3703,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:19"},"returnParameters":{"id":3706,"nodeType":"ParameterList","parameters":[],"src":"2489:0:19"},"scope":3722,"src":"2426:187:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3723,"src":"654:1961:19","usedErrors":[],"usedEvents":[3623]}],"src":"102:2514:19"},"id":19},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[3787]},"id":3788,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3724,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:20"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":3725,"nodeType":"StructuredDocumentation","src":"137:750:20","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":3787,"linearizedBaseContracts":[3787],"name":"ReentrancyGuard","nameLocation":"906:15:20","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3728,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:20","nodeType":"VariableDeclaration","scope":3787,"src":"1676:41:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3726,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":3727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":3731,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:20","nodeType":"VariableDeclaration","scope":3787,"src":"1723:37:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3729,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":3730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":3733,"mutability":"mutable","name":"_status","nameLocation":"1783:7:20","nodeType":"VariableDeclaration","scope":3787,"src":"1767:23:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3732,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":3740,"nodeType":"Block","src":"1811:39:20","statements":[{"expression":{"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3736,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"1821:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3737,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"1831:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3739,"nodeType":"ExpressionStatement","src":"1821:22:20"}]},"id":3741,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3734,"nodeType":"ParameterList","parameters":[],"src":"1808:2:20"},"returnParameters":{"id":3735,"nodeType":"ParameterList","parameters":[],"src":"1811:0:20"},"scope":3787,"src":"1797:53:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3751,"nodeType":"Block","src":"2251:79:20","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3744,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"2261:19:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3746,"nodeType":"ExpressionStatement","src":"2261:21:20"},{"id":3747,"nodeType":"PlaceholderStatement","src":"2292:1:20"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3748,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"2303:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3750,"nodeType":"ExpressionStatement","src":"2303:20:20"}]},"documentation":{"id":3742,"nodeType":"StructuredDocumentation","src":"1856:366:20","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":3752,"name":"nonReentrant","nameLocation":"2236:12:20","nodeType":"ModifierDefinition","parameters":{"id":3743,"nodeType":"ParameterList","parameters":[],"src":"2248:2:20"},"src":"2227:103:20","virtual":false,"visibility":"internal"},{"body":{"id":3766,"nodeType":"Block","src":"2375:248:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3756,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"2468:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3757,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3731,"src":"2479:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":3759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":3755,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3761,"nodeType":"ExpressionStatement","src":"2460:63:20"},{"expression":{"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3762,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"2598:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3763,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3731,"src":"2608:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3765,"nodeType":"ExpressionStatement","src":"2598:18:20"}]},"id":3767,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:20","nodeType":"FunctionDefinition","parameters":{"id":3753,"nodeType":"ParameterList","parameters":[],"src":"2364:2:20"},"returnParameters":{"id":3754,"nodeType":"ParameterList","parameters":[],"src":"2375:0:20"},"scope":3787,"src":"2336:287:20","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3774,"nodeType":"Block","src":"2667:171:20","statements":[{"expression":{"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3770,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"2809:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3771,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"2819:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3773,"nodeType":"ExpressionStatement","src":"2809:22:20"}]},"id":3775,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:20","nodeType":"FunctionDefinition","parameters":{"id":3768,"nodeType":"ParameterList","parameters":[],"src":"2656:2:20"},"returnParameters":{"id":3769,"nodeType":"ParameterList","parameters":[],"src":"2667:0:20"},"scope":3787,"src":"2629:209:20","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3785,"nodeType":"Block","src":"3081:43:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3781,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"3098:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3782,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3731,"src":"3109:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3780,"id":3784,"nodeType":"Return","src":"3091:26:20"}]},"documentation":{"id":3776,"nodeType":"StructuredDocumentation","src":"2844:168:20","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":3786,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:20","nodeType":"FunctionDefinition","parameters":{"id":3777,"nodeType":"ParameterList","parameters":[],"src":"3049:2:20"},"returnParameters":{"id":3780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3786,"src":"3075:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3778,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:20"},"scope":3787,"src":"3017:107:20","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3788,"src":"888:2238:20","usedErrors":[],"usedEvents":[]}],"src":"112:3015:20"},"id":20},"@openzeppelin/contracts/utils/Base64.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Base64.sol","exportedSymbols":{"Base64":[3834]},"id":3835,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3789,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:21"},{"abstract":false,"baseContracts":[],"canonicalName":"Base64","contractDependencies":[],"contractKind":"library","documentation":{"id":3790,"nodeType":"StructuredDocumentation","src":"125:105:21","text":" @dev Provides a set of functions to operate with Base64 strings.\n _Available since v4.5._"},"fullyImplemented":true,"id":3834,"linearizedBaseContracts":[3834],"name":"Base64","nameLocation":"239:6:21","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":3791,"nodeType":"StructuredDocumentation","src":"252:54:21","text":" @dev Base64 Encoding/Decoding Table"},"id":3794,"mutability":"constant","name":"_TABLE","nameLocation":"336:6:21","nodeType":"VariableDeclaration","scope":3834,"src":"311:100:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3792,"name":"string","nodeType":"ElementaryTypeName","src":"311:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f","id":3793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"345:66:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce","typeString":"literal_string \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\""},"value":"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"},"visibility":"internal"},{"body":{"id":3832,"nodeType":"Block","src":"578:3309:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3802,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"795:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"800:6:21","memberName":"length","nodeType":"MemberAccess","src":"795:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"810:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"795:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":" Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol","id":3808,"nodeType":"IfStatement","src":"791:31:21","trueBody":{"expression":{"hexValue":"","id":3806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"820:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":3801,"id":3807,"nodeType":"Return","src":"813:9:21"}},{"assignments":[3810],"declarations":[{"constant":false,"id":3810,"mutability":"mutable","name":"table","nameLocation":"886:5:21","nodeType":"VariableDeclaration","scope":3832,"src":"872:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3809,"name":"string","nodeType":"ElementaryTypeName","src":"872:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3812,"initialValue":{"id":3811,"name":"_TABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"894:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"872:28:21"},{"assignments":[3814],"declarations":[{"constant":false,"id":3814,"mutability":"mutable","name":"result","nameLocation":"1317:6:21","nodeType":"VariableDeclaration","scope":3832,"src":"1303:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3813,"name":"string","nodeType":"ElementaryTypeName","src":"1303:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3828,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":3817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1337:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3818,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"1343:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1348:6:21","memberName":"length","nodeType":"MemberAccess","src":"1343:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1357:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1343:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3822,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1342:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"33","id":3823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"1342:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3825,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1341:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1337:27:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1326:10:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3815,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1326:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1303:62:21"},{"AST":{"nodeType":"YulBlock","src":"1428:2429:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1513:29:21","value":{"arguments":[{"name":"table","nodeType":"YulIdentifier","src":"1533:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1540:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1529:3:21"},"nodeType":"YulFunctionCall","src":"1529:13:21"},"variables":[{"name":"tablePtr","nodeType":"YulTypedName","src":"1517:8:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1612:34:21","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"1633:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1641:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1629:3:21"},"nodeType":"YulFunctionCall","src":"1629:17:21"},"variables":[{"name":"resultPtr","nodeType":"YulTypedName","src":"1616:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1659:19:21","value":{"name":"data","nodeType":"YulIdentifier","src":"1674:4:21"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"1663:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1691:36:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1709:4:21"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1721:4:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1715:5:21"},"nodeType":"YulFunctionCall","src":"1715:11:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1705:3:21"},"nodeType":"YulFunctionCall","src":"1705:22:21"},"variables":[{"name":"endPtr","nodeType":"YulTypedName","src":"1695:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1941:33:21","value":{"arguments":[{"name":"endPtr","nodeType":"YulIdentifier","src":"1961:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1969:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1957:3:21"},"nodeType":"YulFunctionCall","src":"1957:17:21"},"variables":[{"name":"afterPtr","nodeType":"YulTypedName","src":"1945:8:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1987:33:21","value":{"arguments":[{"name":"afterPtr","nodeType":"YulIdentifier","src":"2011:8:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2005:5:21"},"nodeType":"YulFunctionCall","src":"2005:15:21"},"variables":[{"name":"afterCache","nodeType":"YulTypedName","src":"1991:10:21","type":""}]},{"expression":{"arguments":[{"name":"afterPtr","nodeType":"YulIdentifier","src":"2040:8:21"},{"kind":"number","nodeType":"YulLiteral","src":"2050:4:21","type":"","value":"0x00"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2033:6:21"},"nodeType":"YulFunctionCall","src":"2033:22:21"},"nodeType":"YulExpressionStatement","src":"2033:22:21"},{"body":{"nodeType":"YulBlock","src":"2180:1201:21","statements":[{"nodeType":"YulAssignment","src":"2233:26:21","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"2248:7:21"},{"kind":"number","nodeType":"YulLiteral","src":"2257:1:21","type":"","value":"3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2244:3:21"},"nodeType":"YulFunctionCall","src":"2244:15:21"},"variableNames":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"2233:7:21"}]},{"nodeType":"YulVariableDeclaration","src":"2276:27:21","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"2295:7:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2289:5:21"},"nodeType":"YulFunctionCall","src":"2289:14:21"},"variables":[{"name":"input","nodeType":"YulTypedName","src":"2280:5:21","type":""}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2831:9:21"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"2852:8:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2870:2:21","type":"","value":"18"},{"name":"input","nodeType":"YulIdentifier","src":"2874:5:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2866:3:21"},"nodeType":"YulFunctionCall","src":"2866:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"2882:4:21","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2862:3:21"},"nodeType":"YulFunctionCall","src":"2862:25:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2848:3:21"},"nodeType":"YulFunctionCall","src":"2848:40:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2842:5:21"},"nodeType":"YulFunctionCall","src":"2842:47:21"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2823:7:21"},"nodeType":"YulFunctionCall","src":"2823:67:21"},"nodeType":"YulExpressionStatement","src":"2823:67:21"},{"nodeType":"YulAssignment","src":"2907:30:21","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2924:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2935:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2920:3:21"},"nodeType":"YulFunctionCall","src":"2920:17:21"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2907:9:21"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2974:9:21"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"2995:8:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3013:2:21","type":"","value":"12"},{"name":"input","nodeType":"YulIdentifier","src":"3017:5:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3009:3:21"},"nodeType":"YulFunctionCall","src":"3009:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"3025:4:21","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3005:3:21"},"nodeType":"YulFunctionCall","src":"3005:25:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2991:3:21"},"nodeType":"YulFunctionCall","src":"2991:40:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2985:5:21"},"nodeType":"YulFunctionCall","src":"2985:47:21"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2966:7:21"},"nodeType":"YulFunctionCall","src":"2966:67:21"},"nodeType":"YulExpressionStatement","src":"2966:67:21"},{"nodeType":"YulAssignment","src":"3050:30:21","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3067:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3078:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3063:3:21"},"nodeType":"YulFunctionCall","src":"3063:17:21"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3050:9:21"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3117:9:21"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"3138:8:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3156:1:21","type":"","value":"6"},{"name":"input","nodeType":"YulIdentifier","src":"3159:5:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3152:3:21"},"nodeType":"YulFunctionCall","src":"3152:13:21"},{"kind":"number","nodeType":"YulLiteral","src":"3167:4:21","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3148:3:21"},"nodeType":"YulFunctionCall","src":"3148:24:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3134:3:21"},"nodeType":"YulFunctionCall","src":"3134:39:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3128:5:21"},"nodeType":"YulFunctionCall","src":"3128:46:21"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3109:7:21"},"nodeType":"YulFunctionCall","src":"3109:66:21"},"nodeType":"YulExpressionStatement","src":"3109:66:21"},{"nodeType":"YulAssignment","src":"3192:30:21","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3209:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3220:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3205:3:21"},"nodeType":"YulFunctionCall","src":"3205:17:21"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3192:9:21"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3259:9:21"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"3280:8:21"},{"arguments":[{"name":"input","nodeType":"YulIdentifier","src":"3294:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3301:4:21","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3290:3:21"},"nodeType":"YulFunctionCall","src":"3290:16:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3276:3:21"},"nodeType":"YulFunctionCall","src":"3276:31:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3270:5:21"},"nodeType":"YulFunctionCall","src":"3270:38:21"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3251:7:21"},"nodeType":"YulFunctionCall","src":"3251:58:21"},"nodeType":"YulExpressionStatement","src":"3251:58:21"},{"nodeType":"YulAssignment","src":"3326:30:21","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3343:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3354:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3339:3:21"},"nodeType":"YulFunctionCall","src":"3339:17:21"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3326:9:21"}]}]},"condition":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"2146:7:21"},{"name":"endPtr","nodeType":"YulIdentifier","src":"2155:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2143:2:21"},"nodeType":"YulFunctionCall","src":"2143:19:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2163:16:21","statements":[]},"pre":{"nodeType":"YulBlock","src":"2126:16:21","statements":[]},"src":"2122:1259:21"},{"expression":{"arguments":[{"name":"afterPtr","nodeType":"YulIdentifier","src":"3449:8:21"},{"name":"afterCache","nodeType":"YulIdentifier","src":"3459:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3442:6:21"},"nodeType":"YulFunctionCall","src":"3442:28:21"},"nodeType":"YulExpressionStatement","src":"3442:28:21"},{"cases":[{"body":{"nodeType":"YulBlock","src":"3650:113:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3680:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3691:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3676:3:21"},"nodeType":"YulFunctionCall","src":"3676:17:21"},{"kind":"number","nodeType":"YulLiteral","src":"3695:4:21","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3668:7:21"},"nodeType":"YulFunctionCall","src":"3668:32:21"},"nodeType":"YulExpressionStatement","src":"3668:32:21"},{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3729:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3740:1:21","type":"","value":"2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3725:3:21"},"nodeType":"YulFunctionCall","src":"3725:17:21"},{"kind":"number","nodeType":"YulLiteral","src":"3744:4:21","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3717:7:21"},"nodeType":"YulFunctionCall","src":"3717:32:21"},"nodeType":"YulExpressionStatement","src":"3717:32:21"}]},"nodeType":"YulCase","src":"3643:120:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3648:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3783:64:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3813:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3824:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3809:3:21"},"nodeType":"YulFunctionCall","src":"3809:17:21"},{"kind":"number","nodeType":"YulLiteral","src":"3828:4:21","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3801:7:21"},"nodeType":"YulFunctionCall","src":"3801:32:21"},"nodeType":"YulExpressionStatement","src":"3801:32:21"}]},"nodeType":"YulCase","src":"3776:71:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3781:1:21","type":"","value":"2"}}],"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3621:4:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3615:5:21"},"nodeType":"YulFunctionCall","src":"3615:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"3628:1:21","type":"","value":"3"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3611:3:21"},"nodeType":"YulFunctionCall","src":"3611:19:21"},"nodeType":"YulSwitch","src":"3604:243:21"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3797,"isOffset":false,"isSlot":false,"src":"1674:4:21","valueSize":1},{"declaration":3797,"isOffset":false,"isSlot":false,"src":"1709:4:21","valueSize":1},{"declaration":3797,"isOffset":false,"isSlot":false,"src":"1721:4:21","valueSize":1},{"declaration":3797,"isOffset":false,"isSlot":false,"src":"3621:4:21","valueSize":1},{"declaration":3814,"isOffset":false,"isSlot":false,"src":"1633:6:21","valueSize":1},{"declaration":3810,"isOffset":false,"isSlot":false,"src":"1533:5:21","valueSize":1}],"id":3829,"nodeType":"InlineAssembly","src":"1419:2438:21"},{"expression":{"id":3830,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"3874:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3801,"id":3831,"nodeType":"Return","src":"3867:13:21"}]},"documentation":{"id":3795,"nodeType":"StructuredDocumentation","src":"418:82:21","text":" @dev Converts a `bytes` to its Bytes64 `string` representation."},"id":3833,"implemented":true,"kind":"function","modifiers":[],"name":"encode","nameLocation":"514:6:21","nodeType":"FunctionDefinition","parameters":{"id":3798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3797,"mutability":"mutable","name":"data","nameLocation":"534:4:21","nodeType":"VariableDeclaration","scope":3833,"src":"521:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3796,"name":"bytes","nodeType":"ElementaryTypeName","src":"521:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"520:19:21"},"returnParameters":{"id":3801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3833,"src":"563:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3799,"name":"string","nodeType":"ElementaryTypeName","src":"563:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"562:15:21"},"scope":3834,"src":"505:3382:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3835,"src":"231:3658:21","usedErrors":[],"usedEvents":[]}],"src":"100:3790:21"},"id":21},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[3864]},"id":3865,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3836,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:22"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":3837,"nodeType":"StructuredDocumentation","src":"126:496:22","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3864,"linearizedBaseContracts":[3864],"name":"Context","nameLocation":"641:7:22","nodeType":"ContractDefinition","nodes":[{"body":{"id":3845,"nodeType":"Block","src":"717:34:22","statements":[{"expression":{"expression":{"id":3842,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"738:6:22","memberName":"sender","nodeType":"MemberAccess","src":"734:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3841,"id":3844,"nodeType":"Return","src":"727:17:22"}]},"id":3846,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"664:10:22","nodeType":"FunctionDefinition","parameters":{"id":3838,"nodeType":"ParameterList","parameters":[],"src":"674:2:22"},"returnParameters":{"id":3841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3846,"src":"708:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3839,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:22"},"scope":3864,"src":"655:96:22","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3854,"nodeType":"Block","src":"824:32:22","statements":[{"expression":{"expression":{"id":3851,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"845:4:22","memberName":"data","nodeType":"MemberAccess","src":"841:8:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3850,"id":3853,"nodeType":"Return","src":"834:15:22"}]},"id":3855,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"766:8:22","nodeType":"FunctionDefinition","parameters":{"id":3847,"nodeType":"ParameterList","parameters":[],"src":"774:2:22"},"returnParameters":{"id":3850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3855,"src":"808:14:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3848,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:22"},"scope":3864,"src":"757:99:22","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3862,"nodeType":"Block","src":"934:25:22","statements":[{"expression":{"hexValue":"30","id":3860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3859,"id":3861,"nodeType":"Return","src":"944:8:22"}]},"id":3863,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"871:20:22","nodeType":"FunctionDefinition","parameters":{"id":3856,"nodeType":"ParameterList","parameters":[],"src":"891:2:22"},"returnParameters":{"id":3859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3863,"src":"925:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3857,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:22"},"scope":3864,"src":"862:97:22","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3865,"src":"623:338:22","usedErrors":[],"usedEvents":[]}],"src":"101:861:22"},"id":22},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5189],"SignedMath":[5294],"Strings":[4093]},"id":4094,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3866,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:23"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3867,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4094,"sourceUnit":5190,"src":"126:25:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":3868,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4094,"sourceUnit":5295,"src":"152:31:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":3869,"nodeType":"StructuredDocumentation","src":"185:34:23","text":" @dev String operations."},"fullyImplemented":true,"id":4093,"linearizedBaseContracts":[4093],"name":"Strings","nameLocation":"228:7:23","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3872,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:23","nodeType":"VariableDeclaration","scope":4093,"src":"242:54:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":3870,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:23","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":3871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":3875,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:23","nodeType":"VariableDeclaration","scope":4093,"src":"302:43:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3873,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":3874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:23","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":3922,"nodeType":"Block","src":"518:625:23","statements":[{"id":3921,"nodeType":"UncheckedBlock","src":"528:609:23","statements":[{"assignments":[3884],"declarations":[{"constant":false,"id":3884,"mutability":"mutable","name":"length","nameLocation":"560:6:23","nodeType":"VariableDeclaration","scope":3921,"src":"552:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3883,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3891,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"580:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3885,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"569:4:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5189_$","typeString":"type(library Math)"}},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:23","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5026,"src":"569:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:23"},{"assignments":[3893],"declarations":[{"constant":false,"id":3893,"mutability":"mutable","name":"buffer","nameLocation":"618:6:23","nodeType":"VariableDeclaration","scope":3921,"src":"604:20:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3892,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3898,"initialValue":{"arguments":[{"id":3896,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"638:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3894,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:23"},{"assignments":[3900],"declarations":[{"constant":false,"id":3900,"mutability":"mutable","name":"ptr","nameLocation":"667:3:23","nodeType":"VariableDeclaration","scope":3921,"src":"659:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3899,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3901,"nodeType":"VariableDeclarationStatement","src":"659:11:23"},{"AST":{"nodeType":"YulBlock","src":"740:67:23","statements":[{"nodeType":"YulAssignment","src":"758:35:23","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:23","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:23"},"nodeType":"YulFunctionCall","src":"777:15:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:23"},"nodeType":"YulFunctionCall","src":"765:28:23"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:23"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3893,"isOffset":false,"isSlot":false,"src":"769:6:23","valueSize":1},{"declaration":3884,"isOffset":false,"isSlot":false,"src":"785:6:23","valueSize":1},{"declaration":3900,"isOffset":false,"isSlot":false,"src":"758:3:23","valueSize":1}],"id":3902,"nodeType":"InlineAssembly","src":"731:76:23"},{"body":{"id":3917,"nodeType":"Block","src":"833:267:23","statements":[{"expression":{"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:23","subExpression":{"id":3904,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"851:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3906,"nodeType":"ExpressionStatement","src":"851:5:23"},{"AST":{"nodeType":"YulBlock","src":"934:84:23","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:23"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:23","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:23"},"nodeType":"YulFunctionCall","src":"974:14:23"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:23"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:23"},"nodeType":"YulFunctionCall","src":"969:30:23"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:23"},"nodeType":"YulFunctionCall","src":"956:44:23"},"nodeType":"YulExpressionStatement","src":"956:44:23"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3872,"isOffset":false,"isSlot":false,"src":"990:8:23","valueSize":1},{"declaration":3900,"isOffset":false,"isSlot":false,"src":"964:3:23","valueSize":1},{"declaration":3878,"isOffset":false,"isSlot":false,"src":"978:5:23","valueSize":1}],"id":3907,"nodeType":"InlineAssembly","src":"925:93:23"},{"expression":{"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"1035:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3911,"nodeType":"ExpressionStatement","src":"1035:11:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"1068:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3916,"nodeType":"IfStatement","src":"1064:21:23","trueBody":{"id":3915,"nodeType":"Break","src":"1080:5:23"}}]},"condition":{"hexValue":"74727565","id":3903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":3918,"nodeType":"WhileStatement","src":"820:280:23"},{"expression":{"id":3919,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"1120:6:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3882,"id":3920,"nodeType":"Return","src":"1113:13:23"}]}]},"documentation":{"id":3876,"nodeType":"StructuredDocumentation","src":"352:90:23","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3923,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:23","nodeType":"FunctionDefinition","parameters":{"id":3879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3878,"mutability":"mutable","name":"value","nameLocation":"473:5:23","nodeType":"VariableDeclaration","scope":3923,"src":"465:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3877,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:23"},"returnParameters":{"id":3882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3923,"src":"503:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3880,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:23"},"scope":4093,"src":"447:696:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3950,"nodeType":"Block","src":"1313:103:23","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"1354:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":3939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:23","trueExpression":{"hexValue":"2d","id":3938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":3944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"1400:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3942,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"1385:10:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$5294_$","typeString":"type(library SignedMath)"}},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:23","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":5293,"src":"1385:14:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3941,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[3923,3951],"referencedDeclaration":3923,"src":"1376:8:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3933,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:23","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:23","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3931,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:23","typeDescriptions":{}}},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3930,"id":3949,"nodeType":"Return","src":"1323:86:23"}]},"documentation":{"id":3924,"nodeType":"StructuredDocumentation","src":"1149:89:23","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":3951,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:23","nodeType":"FunctionDefinition","parameters":{"id":3927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3926,"mutability":"mutable","name":"value","nameLocation":"1268:5:23","nodeType":"VariableDeclaration","scope":3951,"src":"1261:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3925,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:23"},"returnParameters":{"id":3930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3951,"src":"1298:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3928,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:23"},"scope":4093,"src":"1243:173:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3970,"nodeType":"Block","src":"1595:100:23","statements":[{"id":3969,"nodeType":"UncheckedBlock","src":"1605:84:23","statements":[{"expression":{"arguments":[{"id":3960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"1648:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"1667:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3961,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"1655:4:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5189_$","typeString":"type(library Math)"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:23","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5149,"src":"1655:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3959,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3971,4047,4067],"referencedDeclaration":4047,"src":"1636:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3958,"id":3968,"nodeType":"Return","src":"1629:49:23"}]}]},"documentation":{"id":3952,"nodeType":"StructuredDocumentation","src":"1422:94:23","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3971,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:23","nodeType":"FunctionDefinition","parameters":{"id":3955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3954,"mutability":"mutable","name":"value","nameLocation":"1550:5:23","nodeType":"VariableDeclaration","scope":3971,"src":"1542:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3953,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:23"},"returnParameters":{"id":3958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3971,"src":"1580:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3956,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:23"},"scope":4093,"src":"1521:174:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4046,"nodeType":"Block","src":"1908:347:23","statements":[{"assignments":[3982],"declarations":[{"constant":false,"id":3982,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:23","nodeType":"VariableDeclaration","scope":4046,"src":"1918:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3981,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3991,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3986,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"1954:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3983,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:23"},{"expression":{"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3992,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"1975:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3994,"indexExpression":{"hexValue":"30","id":3993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3997,"nodeType":"ExpressionStatement","src":"1975:15:23"},{"expression":{"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3998,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"2000:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4000,"indexExpression":{"hexValue":"31","id":3999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":4001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4003,"nodeType":"ExpressionStatement","src":"2000:15:23"},{"body":{"id":4032,"nodeType":"Block","src":"2070:83:23","statements":[{"expression":{"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4018,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"2084:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4020,"indexExpression":{"id":4019,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"2091:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4021,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"2096:8:23","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":4025,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"2105:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:23","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4027,"nodeType":"ExpressionStatement","src":"2084:33:23"},{"expression":{"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"2131:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4031,"nodeType":"ExpressionStatement","src":"2131:11:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4012,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"2058:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4033,"initializationExpression":{"assignments":[4005],"declarations":[{"constant":false,"id":4005,"mutability":"mutable","name":"i","nameLocation":"2038:1:23","nodeType":"VariableDeclaration","scope":4033,"src":"2030:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4004,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4011,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4007,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"2046:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:23"},"loopExpression":{"expression":{"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:23","subExpression":{"id":4015,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"2067:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4017,"nodeType":"ExpressionStatement","src":"2065:3:23"},"nodeType":"ForStatement","src":"2025:128:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"2170:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":4038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":4034,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4040,"nodeType":"ExpressionStatement","src":"2162:55:23"},{"expression":{"arguments":[{"id":4043,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"2241:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4041,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:23","typeDescriptions":{}}},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3980,"id":4045,"nodeType":"Return","src":"2227:21:23"}]},"documentation":{"id":3972,"nodeType":"StructuredDocumentation","src":"1701:112:23","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":4047,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:23","nodeType":"FunctionDefinition","parameters":{"id":3977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3974,"mutability":"mutable","name":"value","nameLocation":"1847:5:23","nodeType":"VariableDeclaration","scope":4047,"src":"1839:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3973,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3976,"mutability":"mutable","name":"length","nameLocation":"1862:6:23","nodeType":"VariableDeclaration","scope":4047,"src":"1854:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3975,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:23"},"returnParameters":{"id":3980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4047,"src":"1893:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3978,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:23"},"scope":4093,"src":"1818:437:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4066,"nodeType":"Block","src":"2480:76:23","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4060,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"2525:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4058,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:23","typeDescriptions":{}}},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4056,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:23","typeDescriptions":{}}},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4063,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"2533:15:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4055,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3971,4047,4067],"referencedDeclaration":4047,"src":"2497:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4054,"id":4065,"nodeType":"Return","src":"2490:59:23"}]},"documentation":{"id":4048,"nodeType":"StructuredDocumentation","src":"2261:141:23","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":4067,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:23","nodeType":"FunctionDefinition","parameters":{"id":4051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4050,"mutability":"mutable","name":"addr","nameLocation":"2436:4:23","nodeType":"VariableDeclaration","scope":4067,"src":"2428:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4049,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:23"},"returnParameters":{"id":4054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4067,"src":"2465:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4052,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:23"},"scope":4093,"src":"2407:149:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4091,"nodeType":"Block","src":"2711:66:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4080,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"2744:1:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4078,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:23","typeDescriptions":{}}},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4077,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":4086,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"2767:1:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4084,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:23","typeDescriptions":{}}},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4083,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4076,"id":4090,"nodeType":"Return","src":"2721:49:23"}]},"documentation":{"id":4068,"nodeType":"StructuredDocumentation","src":"2562:66:23","text":" @dev Returns true if the two strings are equal."},"id":4092,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:23","nodeType":"FunctionDefinition","parameters":{"id":4073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4070,"mutability":"mutable","name":"a","nameLocation":"2662:1:23","nodeType":"VariableDeclaration","scope":4092,"src":"2648:15:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4069,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4072,"mutability":"mutable","name":"b","nameLocation":"2679:1:23","nodeType":"VariableDeclaration","scope":4092,"src":"2665:15:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4071,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:23"},"returnParameters":{"id":4076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4092,"src":"2705:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4074,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:23"},"scope":4093,"src":"2633:144:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4094,"src":"220:2559:23","usedErrors":[],"usedEvents":[]}],"src":"101:2679:23"},"id":23},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[4117],"IERC165":[4323]},"id":4118,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4095,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:24"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":4096,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4118,"sourceUnit":4324,"src":"124:23:24","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4098,"name":"IERC165","nameLocations":["754:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":4323,"src":"754:7:24"},"id":4099,"nodeType":"InheritanceSpecifier","src":"754:7:24"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":4097,"nodeType":"StructuredDocumentation","src":"149:576:24","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":4117,"linearizedBaseContracts":[4117,4323],"name":"ERC165","nameLocation":"744:6:24","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4322],"body":{"id":4115,"nodeType":"Block","src":"920:64:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4108,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"937:11:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4110,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"957:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4323_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4323_$","typeString":"type(contract IERC165)"}],"id":4109,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4323","typeString":"type(contract IERC165)"}},"id":4112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:24","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4107,"id":4114,"nodeType":"Return","src":"930:47:24"}]},"documentation":{"id":4100,"nodeType":"StructuredDocumentation","src":"768:56:24","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":4116,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:24","nodeType":"FunctionDefinition","overrides":{"id":4104,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:24"},"parameters":{"id":4103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4102,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:24","nodeType":"VariableDeclaration","scope":4116,"src":"856:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4101,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:24"},"returnParameters":{"id":4107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4116,"src":"914:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4105,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:24"},"scope":4117,"src":"829:155:24","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4118,"src":"726:260:24","usedErrors":[],"usedEvents":[]}],"src":"99:888:24"},"id":24},"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","exportedSymbols":{"ERC165Checker":[4311],"IERC165":[4323]},"id":4312,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4119,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"121:23:25"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":4120,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4312,"sourceUnit":4324,"src":"146:23:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC165Checker","contractDependencies":[],"contractKind":"library","documentation":{"id":4121,"nodeType":"StructuredDocumentation","src":"171:277:25","text":" @dev Library used to query support of an interface declared via {IERC165}.\n Note that these functions return the actual result of the query: they do not\n `revert` if an interface is not supported. It is up to the caller to decide\n what to do in these cases."},"fullyImplemented":true,"id":4311,"linearizedBaseContracts":[4311],"name":"ERC165Checker","nameLocation":"457:13:25","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":4124,"mutability":"constant","name":"_INTERFACE_ID_INVALID","nameLocation":"575:21:25","nodeType":"VariableDeclaration","scope":4311,"src":"551:58:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4122,"name":"bytes4","nodeType":"ElementaryTypeName","src":"551:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786666666666666666","id":4123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"599:10:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"visibility":"private"},{"body":{"id":4146,"nodeType":"Block","src":"774:357:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4133,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"1008:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":4135,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"1022:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4323_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4323_$","typeString":"type(contract IERC165)"}],"id":4134,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1017:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1017:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4323","typeString":"type(contract IERC165)"}},"id":4137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1031:11:25","memberName":"interfaceId","nodeType":"MemberAccess","src":"1017:25:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":4132,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"975:32:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"975:68:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1059:65:25","subExpression":{"arguments":[{"id":4140,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"1093:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4141,"name":"_INTERFACE_ID_INVALID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"1102:21:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":4139,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"1060:32:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1060:64:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"975:149:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4131,"id":4145,"nodeType":"Return","src":"956:168:25"}]},"documentation":{"id":4125,"nodeType":"StructuredDocumentation","src":"616:83:25","text":" @dev Returns true if `account` supports the {IERC165} interface."},"id":4147,"implemented":true,"kind":"function","modifiers":[],"name":"supportsERC165","nameLocation":"713:14:25","nodeType":"FunctionDefinition","parameters":{"id":4128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4127,"mutability":"mutable","name":"account","nameLocation":"736:7:25","nodeType":"VariableDeclaration","scope":4147,"src":"728:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4126,"name":"address","nodeType":"ElementaryTypeName","src":"728:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"727:17:25"},"returnParameters":{"id":4131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4147,"src":"768:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4129,"name":"bool","nodeType":"ElementaryTypeName","src":"768:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"767:6:25"},"scope":4311,"src":"704:427:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4166,"nodeType":"Block","src":"1442:189:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4158,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"1558:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4157,"name":"supportsERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4147,"src":"1543:14:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1543:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":4161,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"1603:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4162,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"1612:11:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":4160,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"1570:32:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1570:54:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1543:81:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4156,"id":4165,"nodeType":"Return","src":"1536:88:25"}]},"documentation":{"id":4148,"nodeType":"StructuredDocumentation","src":"1137:207:25","text":" @dev Returns true if `account` supports the interface defined by\n `interfaceId`. Support for {IERC165} itself is queried automatically.\n See {IERC165-supportsInterface}."},"id":4167,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1358:17:25","nodeType":"FunctionDefinition","parameters":{"id":4153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4150,"mutability":"mutable","name":"account","nameLocation":"1384:7:25","nodeType":"VariableDeclaration","scope":4167,"src":"1376:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4149,"name":"address","nodeType":"ElementaryTypeName","src":"1376:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4152,"mutability":"mutable","name":"interfaceId","nameLocation":"1400:11:25","nodeType":"VariableDeclaration","scope":4167,"src":"1393:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4151,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1393:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1375:37:25"},"returnParameters":{"id":4156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4167,"src":"1436:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4154,"name":"bool","nodeType":"ElementaryTypeName","src":"1436:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1435:6:25"},"scope":4311,"src":"1349:282:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4222,"nodeType":"Block","src":"2155:560:25","statements":[{"assignments":[4183],"declarations":[{"constant":false,"id":4183,"mutability":"mutable","name":"interfaceIdsSupported","nameLocation":"2278:21:25","nodeType":"VariableDeclaration","scope":4222,"src":"2264:35:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4181,"name":"bool","nodeType":"ElementaryTypeName","src":"2264:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4182,"nodeType":"ArrayTypeName","src":"2264:6:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"id":4190,"initialValue":{"arguments":[{"expression":{"id":4187,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"2313:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2326:6:25","memberName":"length","nodeType":"MemberAccess","src":"2313:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2302:10:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bool[] memory)"},"typeName":{"baseType":{"id":4184,"name":"bool","nodeType":"ElementaryTypeName","src":"2306:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4185,"nodeType":"ArrayTypeName","src":"2306:6:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}}},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2302:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2264:69:25"},{"condition":{"arguments":[{"id":4192,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"2405:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4191,"name":"supportsERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4147,"src":"2390:14:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2390:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4219,"nodeType":"IfStatement","src":"2386:284:25","trueBody":{"id":4218,"nodeType":"Block","src":"2415:255:25","statements":[{"body":{"id":4216,"nodeType":"Block","src":"2542:118:25","statements":[{"expression":{"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4205,"name":"interfaceIdsSupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"2560:21:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":4207,"indexExpression":{"id":4206,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"2582:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2560:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4209,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"2620:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":4210,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"2629:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":4212,"indexExpression":{"id":4211,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"2642:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2629:15:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":4208,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"2587:32:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2587:58:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2560:85:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4215,"nodeType":"ExpressionStatement","src":"2560:85:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4198,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"2512:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4199,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"2516:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2529:6:25","memberName":"length","nodeType":"MemberAccess","src":"2516:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2512:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4217,"initializationExpression":{"assignments":[4195],"declarations":[{"constant":false,"id":4195,"mutability":"mutable","name":"i","nameLocation":"2505:1:25","nodeType":"VariableDeclaration","scope":4217,"src":"2497:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4194,"name":"uint256","nodeType":"ElementaryTypeName","src":"2497:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4197,"initialValue":{"hexValue":"30","id":4196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2509:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2497:13:25"},"loopExpression":{"expression":{"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2537:3:25","subExpression":{"id":4202,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"2537:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4204,"nodeType":"ExpressionStatement","src":"2537:3:25"},"nodeType":"ForStatement","src":"2492:168:25"}]}},{"expression":{"id":4220,"name":"interfaceIdsSupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"2687:21:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"functionReturnParameters":4178,"id":4221,"nodeType":"Return","src":"2680:28:25"}]},"documentation":{"id":4168,"nodeType":"StructuredDocumentation","src":"1637:374:25","text":" @dev Returns a boolean array where each value corresponds to the\n interfaces passed in and whether they're supported or not. This allows\n you to batch check interfaces for a contract where your expectation\n is that some interfaces may not be supported.\n See {IERC165-supportsInterface}.\n _Available since v3.4._"},"id":4223,"implemented":true,"kind":"function","modifiers":[],"name":"getSupportedInterfaces","nameLocation":"2025:22:25","nodeType":"FunctionDefinition","parameters":{"id":4174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4170,"mutability":"mutable","name":"account","nameLocation":"2065:7:25","nodeType":"VariableDeclaration","scope":4223,"src":"2057:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4169,"name":"address","nodeType":"ElementaryTypeName","src":"2057:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4173,"mutability":"mutable","name":"interfaceIds","nameLocation":"2098:12:25","nodeType":"VariableDeclaration","scope":4223,"src":"2082:28:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":4171,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2082:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":4172,"nodeType":"ArrayTypeName","src":"2082:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"}],"src":"2047:69:25"},"returnParameters":{"id":4178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4223,"src":"2140:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4175,"name":"bool","nodeType":"ElementaryTypeName","src":"2140:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4176,"nodeType":"ArrayTypeName","src":"2140:6:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"2139:15:25"},"scope":4311,"src":"2016:699:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4268,"nodeType":"Block","src":"3157:436:25","statements":[{"condition":{"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3213:24:25","subExpression":{"arguments":[{"id":4235,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4226,"src":"3229:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4234,"name":"supportsERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4147,"src":"3214:14:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3214:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4241,"nodeType":"IfStatement","src":"3209:67:25","trueBody":{"id":4240,"nodeType":"Block","src":"3239:37:25","statements":[{"expression":{"hexValue":"66616c7365","id":4238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3260:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4233,"id":4239,"nodeType":"Return","src":"3253:12:25"}]}},{"body":{"id":4264,"nodeType":"Block","src":"3395:134:25","statements":[{"condition":{"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3413:59:25","subExpression":{"arguments":[{"id":4254,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4226,"src":"3447:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":4255,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"3456:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":4257,"indexExpression":{"id":4256,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"3469:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3456:15:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":4253,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"3414:32:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3414:58:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4263,"nodeType":"IfStatement","src":"3409:110:25","trueBody":{"id":4262,"nodeType":"Block","src":"3474:45:25","statements":[{"expression":{"hexValue":"66616c7365","id":4260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3499:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4233,"id":4261,"nodeType":"Return","src":"3492:12:25"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4246,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"3365:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4247,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"3369:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3382:6:25","memberName":"length","nodeType":"MemberAccess","src":"3369:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3365:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4265,"initializationExpression":{"assignments":[4243],"declarations":[{"constant":false,"id":4243,"mutability":"mutable","name":"i","nameLocation":"3358:1:25","nodeType":"VariableDeclaration","scope":4265,"src":"3350:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4242,"name":"uint256","nodeType":"ElementaryTypeName","src":"3350:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4245,"initialValue":{"hexValue":"30","id":4244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3362:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3350:13:25"},"loopExpression":{"expression":{"id":4251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3390:3:25","subExpression":{"id":4250,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"3390:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4252,"nodeType":"ExpressionStatement","src":"3390:3:25"},"nodeType":"ForStatement","src":"3345:184:25"},{"expression":{"hexValue":"74727565","id":4266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3582:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4233,"id":4267,"nodeType":"Return","src":"3575:11:25"}]},"documentation":{"id":4224,"nodeType":"StructuredDocumentation","src":"2721:324:25","text":" @dev Returns true if `account` supports all the interfaces defined in\n `interfaceIds`. Support for {IERC165} itself is queried automatically.\n Batch-querying can lead to gas savings by skipping repeated checks for\n {IERC165} support.\n See {IERC165-supportsInterface}."},"id":4269,"implemented":true,"kind":"function","modifiers":[],"name":"supportsAllInterfaces","nameLocation":"3059:21:25","nodeType":"FunctionDefinition","parameters":{"id":4230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4226,"mutability":"mutable","name":"account","nameLocation":"3089:7:25","nodeType":"VariableDeclaration","scope":4269,"src":"3081:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4225,"name":"address","nodeType":"ElementaryTypeName","src":"3081:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4229,"mutability":"mutable","name":"interfaceIds","nameLocation":"3114:12:25","nodeType":"VariableDeclaration","scope":4269,"src":"3098:28:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":4227,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3098:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":4228,"nodeType":"ArrayTypeName","src":"3098:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"}],"src":"3080:47:25"},"returnParameters":{"id":4233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4269,"src":"3151:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4231,"name":"bool","nodeType":"ElementaryTypeName","src":"3151:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3150:6:25"},"scope":4311,"src":"3050:543:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4309,"nodeType":"Block","src":"4529:539:25","statements":[{"assignments":[4280],"declarations":[{"constant":false,"id":4280,"mutability":"mutable","name":"encodedParams","nameLocation":"4576:13:25","nodeType":"VariableDeclaration","scope":4309,"src":"4563:26:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4279,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4288,"initialValue":{"arguments":[{"expression":{"expression":{"id":4283,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"4615:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4323_$","typeString":"type(contract IERC165)"}},"id":4284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4623:17:25","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4322,"src":"4615:25:25","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes4_$returns$_t_bool_$","typeString":"function IERC165.supportsInterface(bytes4) view returns (bool)"}},"id":4285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4641:8:25","memberName":"selector","nodeType":"MemberAccess","src":"4615:34:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4286,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"4651:11:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":4281,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4592:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4596:18:25","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4592:22:25","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4592:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4563:100:25"},{"assignments":[4290],"declarations":[{"constant":false,"id":4290,"mutability":"mutable","name":"success","nameLocation":"4710:7:25","nodeType":"VariableDeclaration","scope":4309,"src":"4705:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4289,"name":"bool","nodeType":"ElementaryTypeName","src":"4705:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4291,"nodeType":"VariableDeclarationStatement","src":"4705:12:25"},{"assignments":[4293],"declarations":[{"constant":false,"id":4293,"mutability":"mutable","name":"returnSize","nameLocation":"4735:10:25","nodeType":"VariableDeclaration","scope":4309,"src":"4727:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4292,"name":"uint256","nodeType":"ElementaryTypeName","src":"4727:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4294,"nodeType":"VariableDeclarationStatement","src":"4727:18:25"},{"assignments":[4296],"declarations":[{"constant":false,"id":4296,"mutability":"mutable","name":"returnValue","nameLocation":"4763:11:25","nodeType":"VariableDeclaration","scope":4309,"src":"4755:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4295,"name":"uint256","nodeType":"ElementaryTypeName","src":"4755:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4297,"nodeType":"VariableDeclarationStatement","src":"4755:19:25"},{"AST":{"nodeType":"YulBlock","src":"4793:203:25","statements":[{"nodeType":"YulAssignment","src":"4807:97:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4829:5:25","type":"","value":"30000"},{"name":"account","nodeType":"YulIdentifier","src":"4836:7:25"},{"arguments":[{"name":"encodedParams","nodeType":"YulIdentifier","src":"4849:13:25"},{"kind":"number","nodeType":"YulLiteral","src":"4864:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4845:3:25"},"nodeType":"YulFunctionCall","src":"4845:24:25"},{"arguments":[{"name":"encodedParams","nodeType":"YulIdentifier","src":"4877:13:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4871:5:25"},"nodeType":"YulFunctionCall","src":"4871:20:25"},{"kind":"number","nodeType":"YulLiteral","src":"4893:4:25","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"4899:4:25","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"4818:10:25"},"nodeType":"YulFunctionCall","src":"4818:86:25"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"4807:7:25"}]},{"nodeType":"YulAssignment","src":"4917:30:25","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"4931:14:25"},"nodeType":"YulFunctionCall","src":"4931:16:25"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"4917:10:25"}]},{"nodeType":"YulAssignment","src":"4960:26:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4981:4:25","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4975:5:25"},"nodeType":"YulFunctionCall","src":"4975:11:25"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"4960:11:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4272,"isOffset":false,"isSlot":false,"src":"4836:7:25","valueSize":1},{"declaration":4280,"isOffset":false,"isSlot":false,"src":"4849:13:25","valueSize":1},{"declaration":4280,"isOffset":false,"isSlot":false,"src":"4877:13:25","valueSize":1},{"declaration":4293,"isOffset":false,"isSlot":false,"src":"4917:10:25","valueSize":1},{"declaration":4296,"isOffset":false,"isSlot":false,"src":"4960:11:25","valueSize":1},{"declaration":4290,"isOffset":false,"isSlot":false,"src":"4807:7:25","valueSize":1}],"id":4298,"nodeType":"InlineAssembly","src":"4784:212:25"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4299,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"5013:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4300,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"5024:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783230","id":4301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5038:4:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5024:18:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5013:29:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4304,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"5046:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5060:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5046:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5013:48:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4278,"id":4308,"nodeType":"Return","src":"5006:55:25"}]},"documentation":{"id":4270,"nodeType":"StructuredDocumentation","src":"3599:817:25","text":" @notice Query if a contract implements an interface, does not check ERC165 support\n @param account The address of the contract to query for support of an interface\n @param interfaceId The interface identifier, as specified in ERC-165\n @return true if the contract at account indicates support of the interface with\n identifier interfaceId, false otherwise\n @dev Assumes that account contains a contract that supports ERC165, otherwise\n the behavior of this method is undefined. This precondition can be checked\n with {supportsERC165}.\n Some precompiled contracts will falsely indicate support for a given interface, so caution\n should be exercised when using this function.\n Interface identification is specified in ERC-165."},"id":4310,"implemented":true,"kind":"function","modifiers":[],"name":"supportsERC165InterfaceUnchecked","nameLocation":"4430:32:25","nodeType":"FunctionDefinition","parameters":{"id":4275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4272,"mutability":"mutable","name":"account","nameLocation":"4471:7:25","nodeType":"VariableDeclaration","scope":4310,"src":"4463:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4271,"name":"address","nodeType":"ElementaryTypeName","src":"4463:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4274,"mutability":"mutable","name":"interfaceId","nameLocation":"4487:11:25","nodeType":"VariableDeclaration","scope":4310,"src":"4480:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4273,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4480:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"4462:37:25"},"returnParameters":{"id":4278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4310,"src":"4523:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4276,"name":"bool","nodeType":"ElementaryTypeName","src":"4523:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4522:6:25"},"scope":4311,"src":"4421:647:25","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4312,"src":"449:4621:25","usedErrors":[],"usedEvents":[]}],"src":"121:4950:25"},"id":25},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4323]},"id":4324,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4313,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:26"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4314,"nodeType":"StructuredDocumentation","src":"125:279:26","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4323,"linearizedBaseContracts":[4323],"name":"IERC165","nameLocation":"415:7:26","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4315,"nodeType":"StructuredDocumentation","src":"429:340:26","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4322,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:26","nodeType":"FunctionDefinition","parameters":{"id":4318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4317,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:26","nodeType":"VariableDeclaration","scope":4322,"src":"801:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4316,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:26"},"returnParameters":{"id":4321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4322,"src":"844:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4319,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:26"},"scope":4323,"src":"774:76:26","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4324,"src":"405:447:26","usedErrors":[],"usedEvents":[]}],"src":"100:753:26"},"id":26},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5189]},"id":5190,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4325,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:27"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4326,"nodeType":"StructuredDocumentation","src":"128:73:27","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5189,"linearizedBaseContracts":[5189],"name":"Math","nameLocation":"210:4:27","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4330,"members":[{"id":4327,"name":"Down","nameLocation":"245:4:27","nodeType":"EnumValue","src":"245:4:27"},{"id":4328,"name":"Up","nameLocation":"287:2:27","nodeType":"EnumValue","src":"287:2:27"},{"id":4329,"name":"Zero","nameLocation":"318:4:27","nodeType":"EnumValue","src":"318:4:27"}],"name":"Rounding","nameLocation":"226:8:27","nodeType":"EnumDefinition","src":"221:122:27"},{"body":{"id":4347,"nodeType":"Block","src":"480:37:27","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4340,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4333,"src":"497:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4341,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"501:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4344,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"509:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:27","trueExpression":{"id":4343,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4333,"src":"505:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4339,"id":4346,"nodeType":"Return","src":"490:20:27"}]},"documentation":{"id":4331,"nodeType":"StructuredDocumentation","src":"349:59:27","text":" @dev Returns the largest of two numbers."},"id":4348,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:27","nodeType":"FunctionDefinition","parameters":{"id":4336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4333,"mutability":"mutable","name":"a","nameLocation":"434:1:27","nodeType":"VariableDeclaration","scope":4348,"src":"426:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4332,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4335,"mutability":"mutable","name":"b","nameLocation":"445:1:27","nodeType":"VariableDeclaration","scope":4348,"src":"437:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4334,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:27"},"returnParameters":{"id":4339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4348,"src":"471:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4337,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:27"},"scope":5189,"src":"413:104:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4365,"nodeType":"Block","src":"655:37:27","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4358,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"672:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4359,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"676:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4362,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"684:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:27","trueExpression":{"id":4361,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"680:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4357,"id":4364,"nodeType":"Return","src":"665:20:27"}]},"documentation":{"id":4349,"nodeType":"StructuredDocumentation","src":"523:60:27","text":" @dev Returns the smallest of two numbers."},"id":4366,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:27","nodeType":"FunctionDefinition","parameters":{"id":4354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4351,"mutability":"mutable","name":"a","nameLocation":"609:1:27","nodeType":"VariableDeclaration","scope":4366,"src":"601:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4350,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4353,"mutability":"mutable","name":"b","nameLocation":"620:1:27","nodeType":"VariableDeclaration","scope":4366,"src":"612:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4352,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:27"},"returnParameters":{"id":4357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4366,"src":"646:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4355,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:27"},"scope":5189,"src":"588:104:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4388,"nodeType":"Block","src":"876:82:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4376,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"931:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4377,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"935:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4379,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4380,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"941:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4381,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"945:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4383,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4375,"id":4387,"nodeType":"Return","src":"923:28:27"}]},"documentation":{"id":4367,"nodeType":"StructuredDocumentation","src":"698:102:27","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4389,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:27","nodeType":"FunctionDefinition","parameters":{"id":4372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4369,"mutability":"mutable","name":"a","nameLocation":"830:1:27","nodeType":"VariableDeclaration","scope":4389,"src":"822:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4368,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4371,"mutability":"mutable","name":"b","nameLocation":"841:1:27","nodeType":"VariableDeclaration","scope":4389,"src":"833:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4370,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:27"},"returnParameters":{"id":4375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4389,"src":"867:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4373,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:27"},"scope":5189,"src":"805:153:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4413,"nodeType":"Block","src":"1228:123:27","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4399,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"1316:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4403,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"1330:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4406,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4407,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"1339:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:27","trueExpression":{"hexValue":"30","id":4402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4398,"id":4412,"nodeType":"Return","src":"1309:35:27"}]},"documentation":{"id":4390,"nodeType":"StructuredDocumentation","src":"964:188:27","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":4414,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:27","nodeType":"FunctionDefinition","parameters":{"id":4395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4392,"mutability":"mutable","name":"a","nameLocation":"1182:1:27","nodeType":"VariableDeclaration","scope":4414,"src":"1174:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4391,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4394,"mutability":"mutable","name":"b","nameLocation":"1193:1:27","nodeType":"VariableDeclaration","scope":4414,"src":"1185:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4393,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:27"},"returnParameters":{"id":4398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4414,"src":"1219:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4396,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:27"},"scope":5189,"src":"1157:194:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4536,"nodeType":"Block","src":"1765:4115:27","statements":[{"id":4535,"nodeType":"UncheckedBlock","src":"1775:4099:27","statements":[{"assignments":[4427],"declarations":[{"constant":false,"id":4427,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:27","nodeType":"VariableDeclaration","scope":4535,"src":"2096:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4426,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4428,"nodeType":"VariableDeclarationStatement","src":"2096:13:27"},{"assignments":[4430],"declarations":[{"constant":false,"id":4430,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:27","nodeType":"VariableDeclaration","scope":4535,"src":"2168:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4429,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4431,"nodeType":"VariableDeclarationStatement","src":"2168:13:27"},{"AST":{"nodeType":"YulBlock","src":"2248:157:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:27"},"nodeType":"YulFunctionCall","src":"2289:6:27"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:27"},"nodeType":"YulFunctionCall","src":"2276:20:27"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:27","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:27"},"nodeType":"YulFunctionCall","src":"2322:9:27"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:27"}]},{"nodeType":"YulAssignment","src":"2348:43:27","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:27"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:27"},"nodeType":"YulFunctionCall","src":"2361:14:27"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:27"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:27"},"nodeType":"YulFunctionCall","src":"2377:13:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:27"},"nodeType":"YulFunctionCall","src":"2357:34:27"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4427,"isOffset":false,"isSlot":false,"src":"2313:5:27","valueSize":1},{"declaration":4427,"isOffset":false,"isSlot":false,"src":"2369:5:27","valueSize":1},{"declaration":4427,"isOffset":false,"isSlot":false,"src":"2384:5:27","valueSize":1},{"declaration":4430,"isOffset":false,"isSlot":false,"src":"2348:5:27","valueSize":1},{"declaration":4417,"isOffset":false,"isSlot":false,"src":"2283:1:27","valueSize":1},{"declaration":4417,"isOffset":false,"isSlot":false,"src":"2326:1:27","valueSize":1},{"declaration":4419,"isOffset":false,"isSlot":false,"src":"2286:1:27","valueSize":1},{"declaration":4419,"isOffset":false,"isSlot":false,"src":"2329:1:27","valueSize":1}],"id":4432,"nodeType":"InlineAssembly","src":"2239:166:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4433,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4430,"src":"2486:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4441,"nodeType":"IfStatement","src":"2482:368:27","trueBody":{"id":4440,"nodeType":"Block","src":"2498:352:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4436,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"2816:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4437,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"2824:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4425,"id":4439,"nodeType":"Return","src":"2809:26:27"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4443,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"2960:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4444,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4430,"src":"2974:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":4446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":4442,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4448,"nodeType":"ExpressionStatement","src":"2952:53:27"},{"assignments":[4450],"declarations":[{"constant":false,"id":4450,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:27","nodeType":"VariableDeclaration","scope":4535,"src":"3261:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4449,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4451,"nodeType":"VariableDeclarationStatement","src":"3261:17:27"},{"AST":{"nodeType":"YulBlock","src":"3301:291:27","statements":[{"nodeType":"YulAssignment","src":"3370:38:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:27"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:27"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:27"},"nodeType":"YulFunctionCall","src":"3383:25:27"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:27"}]},{"nodeType":"YulAssignment","src":"3490:41:27","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:27"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:27"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:27"},"nodeType":"YulFunctionCall","src":"3510:20:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:27"},"nodeType":"YulFunctionCall","src":"3499:32:27"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:27"}]},{"nodeType":"YulAssignment","src":"3548:30:27","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:27"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:27"},"nodeType":"YulFunctionCall","src":"3557:21:27"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4421,"isOffset":false,"isSlot":false,"src":"3396:11:27","valueSize":1},{"declaration":4427,"isOffset":false,"isSlot":false,"src":"3524:5:27","valueSize":1},{"declaration":4427,"isOffset":false,"isSlot":false,"src":"3548:5:27","valueSize":1},{"declaration":4427,"isOffset":false,"isSlot":false,"src":"3561:5:27","valueSize":1},{"declaration":4430,"isOffset":false,"isSlot":false,"src":"3490:5:27","valueSize":1},{"declaration":4430,"isOffset":false,"isSlot":false,"src":"3503:5:27","valueSize":1},{"declaration":4450,"isOffset":false,"isSlot":false,"src":"3370:9:27","valueSize":1},{"declaration":4450,"isOffset":false,"isSlot":false,"src":"3513:9:27","valueSize":1},{"declaration":4450,"isOffset":false,"isSlot":false,"src":"3568:9:27","valueSize":1},{"declaration":4417,"isOffset":false,"isSlot":false,"src":"3390:1:27","valueSize":1},{"declaration":4419,"isOffset":false,"isSlot":false,"src":"3393:1:27","valueSize":1}],"id":4452,"nodeType":"InlineAssembly","src":"3292:300:27"},{"assignments":[4454],"declarations":[{"constant":false,"id":4454,"mutability":"mutable","name":"twos","nameLocation":"3907:4:27","nodeType":"VariableDeclaration","scope":4535,"src":"3899:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4453,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4462,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4455,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"3914:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:27","subExpression":{"id":4456,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"3930:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4460,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:27"},{"AST":{"nodeType":"YulBlock","src":"3969:362:27","statements":[{"nodeType":"YulAssignment","src":"4034:37:27","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:27"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:27"},"nodeType":"YulFunctionCall","src":"4049:22:27"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:27"}]},{"nodeType":"YulAssignment","src":"4138:25:27","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:27"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:27"},"nodeType":"YulFunctionCall","src":"4147:16:27"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:27"}]},{"nodeType":"YulAssignment","src":"4278:39:27","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:27","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:27"},"nodeType":"YulFunctionCall","src":"4294:12:27"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:27"},"nodeType":"YulFunctionCall","src":"4290:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:27"},"nodeType":"YulFunctionCall","src":"4286:31:27"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4421,"isOffset":false,"isSlot":false,"src":"4034:11:27","valueSize":1},{"declaration":4421,"isOffset":false,"isSlot":false,"src":"4053:11:27","valueSize":1},{"declaration":4427,"isOffset":false,"isSlot":false,"src":"4138:5:27","valueSize":1},{"declaration":4427,"isOffset":false,"isSlot":false,"src":"4151:5:27","valueSize":1},{"declaration":4454,"isOffset":false,"isSlot":false,"src":"4066:4:27","valueSize":1},{"declaration":4454,"isOffset":false,"isSlot":false,"src":"4158:4:27","valueSize":1},{"declaration":4454,"isOffset":false,"isSlot":false,"src":"4278:4:27","valueSize":1},{"declaration":4454,"isOffset":false,"isSlot":false,"src":"4301:4:27","valueSize":1},{"declaration":4454,"isOffset":false,"isSlot":false,"src":"4308:4:27","valueSize":1}],"id":4463,"nodeType":"InlineAssembly","src":"3960:371:27"},{"expression":{"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4464,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"4397:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4465,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4430,"src":"4406:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4466,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"4414:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4469,"nodeType":"ExpressionStatement","src":"4397:21:27"},{"assignments":[4471],"declarations":[{"constant":false,"id":4471,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:27","nodeType":"VariableDeclaration","scope":4535,"src":"4736:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4470,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4478,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:27","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4473,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"4759:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4475,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:27"},{"expression":{"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4479,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"4992:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4481,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"5007:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4482,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"5021:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4486,"nodeType":"ExpressionStatement","src":"4992:36:27"},{"expression":{"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4487,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"5061:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4489,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"5076:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4490,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"5090:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4494,"nodeType":"ExpressionStatement","src":"5061:36:27"},{"expression":{"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4495,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"5131:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4497,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"5146:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4498,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"5160:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4502,"nodeType":"ExpressionStatement","src":"5131:36:27"},{"expression":{"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4503,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"5201:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4505,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"5216:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4506,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"5230:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4510,"nodeType":"ExpressionStatement","src":"5201:36:27"},{"expression":{"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4511,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"5271:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4513,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"5286:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4514,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"5300:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4518,"nodeType":"ExpressionStatement","src":"5271:36:27"},{"expression":{"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4519,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"5342:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4521,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"5357:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4522,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"5371:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4526,"nodeType":"ExpressionStatement","src":"5342:36:27"},{"expression":{"id":4531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4527,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"5812:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4528,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"5821:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4529,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"5829:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4532,"nodeType":"ExpressionStatement","src":"5812:24:27"},{"expression":{"id":4533,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"5857:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4425,"id":4534,"nodeType":"Return","src":"5850:13:27"}]}]},"documentation":{"id":4415,"nodeType":"StructuredDocumentation","src":"1357:305:27","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":4537,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:27","nodeType":"FunctionDefinition","parameters":{"id":4422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4417,"mutability":"mutable","name":"x","nameLocation":"1691:1:27","nodeType":"VariableDeclaration","scope":4537,"src":"1683:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4416,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4419,"mutability":"mutable","name":"y","nameLocation":"1702:1:27","nodeType":"VariableDeclaration","scope":4537,"src":"1694:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4418,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4421,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:27","nodeType":"VariableDeclaration","scope":4537,"src":"1705:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4420,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:27"},"returnParameters":{"id":4425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4424,"mutability":"mutable","name":"result","nameLocation":"1757:6:27","nodeType":"VariableDeclaration","scope":4537,"src":"1749:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4423,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:27"},"scope":5189,"src":"1667:4213:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4580,"nodeType":"Block","src":"6122:189:27","statements":[{"assignments":[4553],"declarations":[{"constant":false,"id":4553,"mutability":"mutable","name":"result","nameLocation":"6140:6:27","nodeType":"VariableDeclaration","scope":4580,"src":"6132:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4552,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4559,"initialValue":{"arguments":[{"id":4555,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"6156:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4556,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"6159:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4557,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4544,"src":"6162:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4554,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4537,4581],"referencedDeclaration":4537,"src":"6149:6:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:27"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4330","typeString":"enum Math.Rounding"},"id":4563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4560,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4547,"src":"6188:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4330","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4561,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"6200:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4330_$","typeString":"type(enum Math.Rounding)"}},"id":4562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:27","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4328,"src":"6200:11:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4330","typeString":"enum Math.Rounding"}},"src":"6188:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4565,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"6222:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4566,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"6225:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4567,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4544,"src":"6228:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4564,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:27","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4577,"nodeType":"IfStatement","src":"6184:98:27","trueBody":{"id":4576,"nodeType":"Block","src":"6246:36:27","statements":[{"expression":{"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4572,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"6260:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4575,"nodeType":"ExpressionStatement","src":"6260:11:27"}]}},{"expression":{"id":4578,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"6298:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4551,"id":4579,"nodeType":"Return","src":"6291:13:27"}]},"documentation":{"id":4538,"nodeType":"StructuredDocumentation","src":"5886:121:27","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4581,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:27","nodeType":"FunctionDefinition","parameters":{"id":4548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4540,"mutability":"mutable","name":"x","nameLocation":"6036:1:27","nodeType":"VariableDeclaration","scope":4581,"src":"6028:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4539,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4542,"mutability":"mutable","name":"y","nameLocation":"6047:1:27","nodeType":"VariableDeclaration","scope":4581,"src":"6039:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4541,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4544,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:27","nodeType":"VariableDeclaration","scope":4581,"src":"6050:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4543,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4547,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:27","nodeType":"VariableDeclaration","scope":4581,"src":"6071:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4330","typeString":"enum Math.Rounding"},"typeName":{"id":4546,"nodeType":"UserDefinedTypeName","pathNode":{"id":4545,"name":"Rounding","nameLocations":["6071:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":4330,"src":"6071:8:27"},"referencedDeclaration":4330,"src":"6071:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4330","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:27"},"returnParameters":{"id":4551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4581,"src":"6113:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4549,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:27"},"scope":5189,"src":"6012:299:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4692,"nodeType":"Block","src":"6587:1585:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4589,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"6601:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4595,"nodeType":"IfStatement","src":"6597:45:27","trueBody":{"id":4594,"nodeType":"Block","src":"6609:33:27","statements":[{"expression":{"hexValue":"30","id":4592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4588,"id":4593,"nodeType":"Return","src":"6623:8:27"}]}},{"assignments":[4597],"declarations":[{"constant":false,"id":4597,"mutability":"mutable","name":"result","nameLocation":"7329:6:27","nodeType":"VariableDeclaration","scope":4692,"src":"7321:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4596,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4606,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4600,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"7349:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4599,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4861,4897],"referencedDeclaration":4861,"src":"7344:4:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4604,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:27"},{"id":4691,"nodeType":"UncheckedBlock","src":"7758:408:27","statements":[{"expression":{"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4607,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"7782:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4608,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"7792:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4609,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"7801:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4610,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"7805:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4613,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4617,"nodeType":"ExpressionStatement","src":"7782:35:27"},{"expression":{"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4618,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"7831:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4619,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"7841:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4620,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"7850:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4621,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"7854:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4624,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4628,"nodeType":"ExpressionStatement","src":"7831:35:27"},{"expression":{"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4629,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"7880:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4630,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"7890:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4631,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"7899:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4632,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"7903:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4635,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4639,"nodeType":"ExpressionStatement","src":"7880:35:27"},{"expression":{"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4640,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"7929:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4641,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"7939:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4642,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"7948:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4643,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"7952:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4646,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4650,"nodeType":"ExpressionStatement","src":"7929:35:27"},{"expression":{"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4651,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"7978:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4652,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"7988:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4653,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"7997:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4654,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"8001:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4657,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4661,"nodeType":"ExpressionStatement","src":"7978:35:27"},{"expression":{"id":4671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4662,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"8027:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4663,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"8037:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4664,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"8046:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4665,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"8050:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4668,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4672,"nodeType":"ExpressionStatement","src":"8027:35:27"},{"expression":{"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4673,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"8076:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4674,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"8086:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4675,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"8095:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4676,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"8099:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4679,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4683,"nodeType":"ExpressionStatement","src":"8076:35:27"},{"expression":{"arguments":[{"id":4685,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"8136:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4686,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"8144:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4687,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"8148:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4684,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"8132:3:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4588,"id":4690,"nodeType":"Return","src":"8125:30:27"}]}]},"documentation":{"id":4582,"nodeType":"StructuredDocumentation","src":"6317:208:27","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":4693,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:27","nodeType":"FunctionDefinition","parameters":{"id":4585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4584,"mutability":"mutable","name":"a","nameLocation":"6552:1:27","nodeType":"VariableDeclaration","scope":4693,"src":"6544:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4583,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:27"},"returnParameters":{"id":4588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4693,"src":"6578:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4586,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:27"},"scope":5189,"src":"6530:1642:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4728,"nodeType":"Block","src":"8348:161:27","statements":[{"id":4727,"nodeType":"UncheckedBlock","src":"8358:145:27","statements":[{"assignments":[4705],"declarations":[{"constant":false,"id":4705,"mutability":"mutable","name":"result","nameLocation":"8390:6:27","nodeType":"VariableDeclaration","scope":4727,"src":"8382:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4704,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4709,"initialValue":{"arguments":[{"id":4707,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4696,"src":"8404:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4706,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4693,4729],"referencedDeclaration":4693,"src":"8399:4:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4710,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"8427:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4330","typeString":"enum Math.Rounding"},"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4711,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"8437:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4330","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4712,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"8449:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4330_$","typeString":"type(enum Math.Rounding)"}},"id":4713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:27","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4328,"src":"8449:11:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4330","typeString":"enum Math.Rounding"}},"src":"8437:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4715,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"8464:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4716,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"8473:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4718,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4696,"src":"8482:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:27","trueExpression":{"hexValue":"31","id":4721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4724,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4703,"id":4726,"nodeType":"Return","src":"8420:72:27"}]}]},"documentation":{"id":4694,"nodeType":"StructuredDocumentation","src":"8178:89:27","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":4729,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:27","nodeType":"FunctionDefinition","parameters":{"id":4700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4696,"mutability":"mutable","name":"a","nameLocation":"8294:1:27","nodeType":"VariableDeclaration","scope":4729,"src":"8286:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4695,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4699,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:27","nodeType":"VariableDeclaration","scope":4729,"src":"8297:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4330","typeString":"enum Math.Rounding"},"typeName":{"id":4698,"nodeType":"UserDefinedTypeName","pathNode":{"id":4697,"name":"Rounding","nameLocations":["8297:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":4330,"src":"8297:8:27"},"referencedDeclaration":4330,"src":"8297:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4330","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:27"},"returnParameters":{"id":4703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4729,"src":"8339:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4701,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:27"},"scope":5189,"src":"8272:237:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4860,"nodeType":"Block","src":"8694:922:27","statements":[{"assignments":[4738],"declarations":[{"constant":false,"id":4738,"mutability":"mutable","name":"result","nameLocation":"8712:6:27","nodeType":"VariableDeclaration","scope":4860,"src":"8704:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4737,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4740,"initialValue":{"hexValue":"30","id":4739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:27"},{"id":4857,"nodeType":"UncheckedBlock","src":"8732:855:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"8760:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4755,"nodeType":"IfStatement","src":"8756:99:27","trueBody":{"id":4754,"nodeType":"Block","src":"8778:77:27","statements":[{"expression":{"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"8796:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4749,"nodeType":"ExpressionStatement","src":"8796:13:27"},{"expression":{"id":4752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4750,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"8827:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":4751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4753,"nodeType":"ExpressionStatement","src":"8827:13:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"8872:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4770,"nodeType":"IfStatement","src":"8868:96:27","trueBody":{"id":4769,"nodeType":"Block","src":"8889:75:27","statements":[{"expression":{"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"8907:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4764,"nodeType":"ExpressionStatement","src":"8907:12:27"},{"expression":{"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4765,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"8937:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4768,"nodeType":"ExpressionStatement","src":"8937:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"8981:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4785,"nodeType":"IfStatement","src":"8977:96:27","trueBody":{"id":4784,"nodeType":"Block","src":"8998:75:27","statements":[{"expression":{"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"9016:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4779,"nodeType":"ExpressionStatement","src":"9016:12:27"},{"expression":{"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4780,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"9046:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4783,"nodeType":"ExpressionStatement","src":"9046:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"9090:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4800,"nodeType":"IfStatement","src":"9086:96:27","trueBody":{"id":4799,"nodeType":"Block","src":"9107:75:27","statements":[{"expression":{"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"9125:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4794,"nodeType":"ExpressionStatement","src":"9125:12:27"},{"expression":{"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4795,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"9155:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4798,"nodeType":"ExpressionStatement","src":"9155:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"9199:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4815,"nodeType":"IfStatement","src":"9195:93:27","trueBody":{"id":4814,"nodeType":"Block","src":"9215:73:27","statements":[{"expression":{"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"9233:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4809,"nodeType":"ExpressionStatement","src":"9233:11:27"},{"expression":{"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4810,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"9262:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4813,"nodeType":"ExpressionStatement","src":"9262:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"9305:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":4817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4830,"nodeType":"IfStatement","src":"9301:93:27","trueBody":{"id":4829,"nodeType":"Block","src":"9321:73:27","statements":[{"expression":{"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"9339:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4824,"nodeType":"ExpressionStatement","src":"9339:11:27"},{"expression":{"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4825,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"9368:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4828,"nodeType":"ExpressionStatement","src":"9368:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"9411:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":4832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4845,"nodeType":"IfStatement","src":"9407:93:27","trueBody":{"id":4844,"nodeType":"Block","src":"9427:73:27","statements":[{"expression":{"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"9445:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":4837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4839,"nodeType":"ExpressionStatement","src":"9445:11:27"},{"expression":{"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4840,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"9474:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4843,"nodeType":"ExpressionStatement","src":"9474:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"9517:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4856,"nodeType":"IfStatement","src":"9513:64:27","trueBody":{"id":4855,"nodeType":"Block","src":"9533:44:27","statements":[{"expression":{"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4851,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"9551:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4854,"nodeType":"ExpressionStatement","src":"9551:11:27"}]}}]},{"expression":{"id":4858,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"9603:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4736,"id":4859,"nodeType":"Return","src":"9596:13:27"}]},"documentation":{"id":4730,"nodeType":"StructuredDocumentation","src":"8515:113:27","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":4861,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:27","nodeType":"FunctionDefinition","parameters":{"id":4733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4732,"mutability":"mutable","name":"value","nameLocation":"8655:5:27","nodeType":"VariableDeclaration","scope":4861,"src":"8647:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4731,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:27"},"returnParameters":{"id":4736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4861,"src":"8685:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4734,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:27"},"scope":5189,"src":"8633:983:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4896,"nodeType":"Block","src":"9849:165:27","statements":[{"id":4895,"nodeType":"UncheckedBlock","src":"9859:149:27","statements":[{"assignments":[4873],"declarations":[{"constant":false,"id":4873,"mutability":"mutable","name":"result","nameLocation":"9891:6:27","nodeType":"VariableDeclaration","scope":4895,"src":"9883:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4872,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4877,"initialValue":{"arguments":[{"id":4875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"9905:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4874,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4861,4897],"referencedDeclaration":4861,"src":"9900:4:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4878,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"9932:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4330","typeString":"enum Math.Rounding"},"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4879,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"9942:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4330","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4880,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"9954:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4330_$","typeString":"type(enum Math.Rounding)"}},"id":4881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:27","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4328,"src":"9954:11:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4330","typeString":"enum Math.Rounding"}},"src":"9942:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4884,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"9974:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"9983:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:27","trueExpression":{"hexValue":"31","id":4889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4892,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4871,"id":4894,"nodeType":"Return","src":"9925:72:27"}]}]},"documentation":{"id":4862,"nodeType":"StructuredDocumentation","src":"9622:142:27","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4897,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:27","nodeType":"FunctionDefinition","parameters":{"id":4868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4864,"mutability":"mutable","name":"value","nameLocation":"9791:5:27","nodeType":"VariableDeclaration","scope":4897,"src":"9783:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4863,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4867,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:27","nodeType":"VariableDeclaration","scope":4897,"src":"9798:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4330","typeString":"enum Math.Rounding"},"typeName":{"id":4866,"nodeType":"UserDefinedTypeName","pathNode":{"id":4865,"name":"Rounding","nameLocations":["9798:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":4330,"src":"9798:8:27"},"referencedDeclaration":4330,"src":"9798:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4330","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:27"},"returnParameters":{"id":4871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4897,"src":"9840:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4869,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:27"},"scope":5189,"src":"9769:245:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5025,"nodeType":"Block","src":"10201:854:27","statements":[{"assignments":[4906],"declarations":[{"constant":false,"id":4906,"mutability":"mutable","name":"result","nameLocation":"10219:6:27","nodeType":"VariableDeclaration","scope":5025,"src":"10211:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4905,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4908,"initialValue":{"hexValue":"30","id":4907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:27"},{"id":5022,"nodeType":"UncheckedBlock","src":"10239:787:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"10267:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:27","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4925,"nodeType":"IfStatement","src":"10263:103:27","trueBody":{"id":4924,"nodeType":"Block","src":"10286:80:27","statements":[{"expression":{"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"10304:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:27","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4919,"nodeType":"ExpressionStatement","src":"10304:17:27"},{"expression":{"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4920,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"10339:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4923,"nodeType":"ExpressionStatement","src":"10339:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"10383:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4942,"nodeType":"IfStatement","src":"10379:103:27","trueBody":{"id":4941,"nodeType":"Block","src":"10402:80:27","statements":[{"expression":{"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"10420:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4936,"nodeType":"ExpressionStatement","src":"10420:17:27"},{"expression":{"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4937,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"10455:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4940,"nodeType":"ExpressionStatement","src":"10455:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"10499:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:27","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4959,"nodeType":"IfStatement","src":"10495:103:27","trueBody":{"id":4958,"nodeType":"Block","src":"10518:80:27","statements":[{"expression":{"id":4952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"10536:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:27","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4953,"nodeType":"ExpressionStatement","src":"10536:17:27"},{"expression":{"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4954,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"10571:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4957,"nodeType":"ExpressionStatement","src":"10571:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"10615:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4976,"nodeType":"IfStatement","src":"10611:100:27","trueBody":{"id":4975,"nodeType":"Block","src":"10633:78:27","statements":[{"expression":{"id":4969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"10651:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4970,"nodeType":"ExpressionStatement","src":"10651:16:27"},{"expression":{"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4971,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"10685:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4974,"nodeType":"ExpressionStatement","src":"10685:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"10728:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:27","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4993,"nodeType":"IfStatement","src":"10724:100:27","trueBody":{"id":4992,"nodeType":"Block","src":"10746:78:27","statements":[{"expression":{"id":4986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"10764:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:27","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4987,"nodeType":"ExpressionStatement","src":"10764:16:27"},{"expression":{"id":4990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4988,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"10798:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4991,"nodeType":"ExpressionStatement","src":"10798:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"10841:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:27","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5010,"nodeType":"IfStatement","src":"10837:100:27","trueBody":{"id":5009,"nodeType":"Block","src":"10859:78:27","statements":[{"expression":{"id":5003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"10877:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:27","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5004,"nodeType":"ExpressionStatement","src":"10877:16:27"},{"expression":{"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5005,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"10911:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5008,"nodeType":"ExpressionStatement","src":"10911:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"10954:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5021,"nodeType":"IfStatement","src":"10950:66:27","trueBody":{"id":5020,"nodeType":"Block","src":"10972:44:27","statements":[{"expression":{"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5016,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"10990:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5019,"nodeType":"ExpressionStatement","src":"10990:11:27"}]}}]},{"expression":{"id":5023,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"11042:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4904,"id":5024,"nodeType":"Return","src":"11035:13:27"}]},"documentation":{"id":4898,"nodeType":"StructuredDocumentation","src":"10020:114:27","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":5026,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:27","nodeType":"FunctionDefinition","parameters":{"id":4901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4900,"mutability":"mutable","name":"value","nameLocation":"10162:5:27","nodeType":"VariableDeclaration","scope":5026,"src":"10154:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4899,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:27"},"returnParameters":{"id":4904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5026,"src":"10192:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4902,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:27"},"scope":5189,"src":"10139:916:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5061,"nodeType":"Block","src":"11290:167:27","statements":[{"id":5060,"nodeType":"UncheckedBlock","src":"11300:151:27","statements":[{"assignments":[5038],"declarations":[{"constant":false,"id":5038,"mutability":"mutable","name":"result","nameLocation":"11332:6:27","nodeType":"VariableDeclaration","scope":5060,"src":"11324:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5037,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5042,"initialValue":{"arguments":[{"id":5040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"11347:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5039,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5026,5062],"referencedDeclaration":5026,"src":"11341:5:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5043,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"11374:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4330","typeString":"enum Math.Rounding"},"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5044,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"11384:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4330","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5045,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"11396:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4330_$","typeString":"type(enum Math.Rounding)"}},"id":5046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:27","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4328,"src":"11396:11:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4330","typeString":"enum Math.Rounding"}},"src":"11384:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5049,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"11417:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"11426:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:27","trueExpression":{"hexValue":"31","id":5054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5057,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5036,"id":5059,"nodeType":"Return","src":"11367:73:27"}]}]},"documentation":{"id":5027,"nodeType":"StructuredDocumentation","src":"11061:143:27","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5062,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:27","nodeType":"FunctionDefinition","parameters":{"id":5033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5029,"mutability":"mutable","name":"value","nameLocation":"11232:5:27","nodeType":"VariableDeclaration","scope":5062,"src":"11224:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5028,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5032,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:27","nodeType":"VariableDeclaration","scope":5062,"src":"11239:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4330","typeString":"enum Math.Rounding"},"typeName":{"id":5031,"nodeType":"UserDefinedTypeName","pathNode":{"id":5030,"name":"Rounding","nameLocations":["11239:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":4330,"src":"11239:8:27"},"referencedDeclaration":4330,"src":"11239:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4330","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:27"},"returnParameters":{"id":5036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5062,"src":"11281:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5034,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:27"},"scope":5189,"src":"11209:248:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5148,"nodeType":"Block","src":"11771:600:27","statements":[{"assignments":[5071],"declarations":[{"constant":false,"id":5071,"mutability":"mutable","name":"result","nameLocation":"11789:6:27","nodeType":"VariableDeclaration","scope":5148,"src":"11781:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5070,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5073,"initialValue":{"hexValue":"30","id":5072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:27"},{"id":5145,"nodeType":"UncheckedBlock","src":"11809:533:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5065,"src":"11837:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":5075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5088,"nodeType":"IfStatement","src":"11833:98:27","trueBody":{"id":5087,"nodeType":"Block","src":"11855:76:27","statements":[{"expression":{"id":5081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5065,"src":"11873:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5082,"nodeType":"ExpressionStatement","src":"11873:13:27"},{"expression":{"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5083,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5071,"src":"11904:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5086,"nodeType":"ExpressionStatement","src":"11904:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5065,"src":"11948:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":5090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5103,"nodeType":"IfStatement","src":"11944:95:27","trueBody":{"id":5102,"nodeType":"Block","src":"11965:74:27","statements":[{"expression":{"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5065,"src":"11983:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5097,"nodeType":"ExpressionStatement","src":"11983:12:27"},{"expression":{"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5098,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5071,"src":"12013:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5101,"nodeType":"ExpressionStatement","src":"12013:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5065,"src":"12056:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":5105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5118,"nodeType":"IfStatement","src":"12052:95:27","trueBody":{"id":5117,"nodeType":"Block","src":"12073:74:27","statements":[{"expression":{"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5065,"src":"12091:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5112,"nodeType":"ExpressionStatement","src":"12091:12:27"},{"expression":{"id":5115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5113,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5071,"src":"12121:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5116,"nodeType":"ExpressionStatement","src":"12121:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5065,"src":"12164:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":5120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5133,"nodeType":"IfStatement","src":"12160:95:27","trueBody":{"id":5132,"nodeType":"Block","src":"12181:74:27","statements":[{"expression":{"id":5126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5065,"src":"12199:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5127,"nodeType":"ExpressionStatement","src":"12199:12:27"},{"expression":{"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5128,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5071,"src":"12229:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5131,"nodeType":"ExpressionStatement","src":"12229:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5065,"src":"12272:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":5135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5144,"nodeType":"IfStatement","src":"12268:64:27","trueBody":{"id":5143,"nodeType":"Block","src":"12288:44:27","statements":[{"expression":{"id":5141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5139,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5071,"src":"12306:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5142,"nodeType":"ExpressionStatement","src":"12306:11:27"}]}}]},{"expression":{"id":5146,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5071,"src":"12358:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5069,"id":5147,"nodeType":"Return","src":"12351:13:27"}]},"documentation":{"id":5063,"nodeType":"StructuredDocumentation","src":"11463:240:27","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5149,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:27","nodeType":"FunctionDefinition","parameters":{"id":5066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5065,"mutability":"mutable","name":"value","nameLocation":"11732:5:27","nodeType":"VariableDeclaration","scope":5149,"src":"11724:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5064,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:27"},"returnParameters":{"id":5069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5149,"src":"11762:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5067,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:27"},"scope":5189,"src":"11708:663:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5187,"nodeType":"Block","src":"12608:174:27","statements":[{"id":5186,"nodeType":"UncheckedBlock","src":"12618:158:27","statements":[{"assignments":[5161],"declarations":[{"constant":false,"id":5161,"mutability":"mutable","name":"result","nameLocation":"12650:6:27","nodeType":"VariableDeclaration","scope":5186,"src":"12642:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5160,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5165,"initialValue":{"arguments":[{"id":5163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"12666:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5162,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5149,5188],"referencedDeclaration":5149,"src":"12659:6:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5166,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5161,"src":"12693:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4330","typeString":"enum Math.Rounding"},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5167,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"12703:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4330","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5168,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"12715:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4330_$","typeString":"type(enum Math.Rounding)"}},"id":5169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:27","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4328,"src":"12715:11:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4330","typeString":"enum Math.Rounding"}},"src":"12703:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5172,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5161,"src":"12736:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:27","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5175,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"12751:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:27","trueExpression":{"hexValue":"31","id":5180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5183,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5159,"id":5185,"nodeType":"Return","src":"12686:79:27"}]}]},"documentation":{"id":5150,"nodeType":"StructuredDocumentation","src":"12377:144:27","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5188,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:27","nodeType":"FunctionDefinition","parameters":{"id":5156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5152,"mutability":"mutable","name":"value","nameLocation":"12550:5:27","nodeType":"VariableDeclaration","scope":5188,"src":"12542:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5151,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5155,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:27","nodeType":"VariableDeclaration","scope":5188,"src":"12557:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4330","typeString":"enum Math.Rounding"},"typeName":{"id":5154,"nodeType":"UserDefinedTypeName","pathNode":{"id":5153,"name":"Rounding","nameLocations":["12557:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":4330,"src":"12557:8:27"},"referencedDeclaration":4330,"src":"12557:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4330","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:27"},"returnParameters":{"id":5159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5188,"src":"12599:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5157,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:27"},"scope":5189,"src":"12526:256:27","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5190,"src":"202:12582:27","usedErrors":[],"usedEvents":[]}],"src":"103:12682:27"},"id":27},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[5294]},"id":5295,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5191,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:28"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":5192,"nodeType":"StructuredDocumentation","src":"134:80:28","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5294,"linearizedBaseContracts":[5294],"name":"SignedMath","nameLocation":"223:10:28","nodeType":"ContractDefinition","nodes":[{"body":{"id":5209,"nodeType":"Block","src":"375:37:28","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5202,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5195,"src":"392:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5203,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"396:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5206,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"404:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:28","trueExpression":{"id":5205,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5195,"src":"400:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5201,"id":5208,"nodeType":"Return","src":"385:20:28"}]},"documentation":{"id":5193,"nodeType":"StructuredDocumentation","src":"240:66:28","text":" @dev Returns the largest of two signed numbers."},"id":5210,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:28","nodeType":"FunctionDefinition","parameters":{"id":5198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5195,"mutability":"mutable","name":"a","nameLocation":"331:1:28","nodeType":"VariableDeclaration","scope":5210,"src":"324:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5194,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5197,"mutability":"mutable","name":"b","nameLocation":"341:1:28","nodeType":"VariableDeclaration","scope":5210,"src":"334:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5196,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:28"},"returnParameters":{"id":5201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5210,"src":"367:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5199,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:28"},"scope":5294,"src":"311:101:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5227,"nodeType":"Block","src":"554:37:28","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5220,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5213,"src":"571:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5221,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"575:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5224,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"583:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:28","trueExpression":{"id":5223,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5213,"src":"579:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5219,"id":5226,"nodeType":"Return","src":"564:20:28"}]},"documentation":{"id":5211,"nodeType":"StructuredDocumentation","src":"418:67:28","text":" @dev Returns the smallest of two signed numbers."},"id":5228,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:28","nodeType":"FunctionDefinition","parameters":{"id":5216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5213,"mutability":"mutable","name":"a","nameLocation":"510:1:28","nodeType":"VariableDeclaration","scope":5228,"src":"503:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5212,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5215,"mutability":"mutable","name":"b","nameLocation":"520:1:28","nodeType":"VariableDeclaration","scope":5228,"src":"513:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5214,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:28"},"returnParameters":{"id":5219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5228,"src":"546:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5217,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:28"},"scope":5294,"src":"490:101:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5271,"nodeType":"Block","src":"796:162:28","statements":[{"assignments":[5239],"declarations":[{"constant":false,"id":5239,"mutability":"mutable","name":"x","nameLocation":"865:1:28","nodeType":"VariableDeclaration","scope":5271,"src":"858:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5238,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5252,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5240,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"870:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5241,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"874:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5243,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5244,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"881:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5245,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"885:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5247,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5250,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:28"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5253,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"910:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5258,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"930:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5256,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:28","typeDescriptions":{}}},"id":5259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5254,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:28","typeDescriptions":{}}},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5263,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"944:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5264,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"948:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5266,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5268,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5237,"id":5270,"nodeType":"Return","src":"903:48:28"}]},"documentation":{"id":5229,"nodeType":"StructuredDocumentation","src":"597:126:28","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":5272,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:28","nodeType":"FunctionDefinition","parameters":{"id":5234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5231,"mutability":"mutable","name":"a","nameLocation":"752:1:28","nodeType":"VariableDeclaration","scope":5272,"src":"745:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5230,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5233,"mutability":"mutable","name":"b","nameLocation":"762:1:28","nodeType":"VariableDeclaration","scope":5272,"src":"755:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5232,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:28"},"returnParameters":{"id":5237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5272,"src":"788:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5235,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:28"},"scope":5294,"src":"728:230:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5292,"nodeType":"Block","src":"1102:158:28","statements":[{"id":5291,"nodeType":"UncheckedBlock","src":"1112:142:28","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5282,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5275,"src":"1227:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":5283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:28","subExpression":{"id":5286,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5275,"src":"1241:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:28","trueExpression":{"id":5285,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5275,"src":"1236:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5280,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:28","typeDescriptions":{}}},"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5279,"id":5290,"nodeType":"Return","src":"1212:31:28"}]}]},"documentation":{"id":5273,"nodeType":"StructuredDocumentation","src":"964:78:28","text":" @dev Returns the absolute unsigned value of a signed value."},"id":5293,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:28","nodeType":"FunctionDefinition","parameters":{"id":5276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5275,"mutability":"mutable","name":"n","nameLocation":"1067:1:28","nodeType":"VariableDeclaration","scope":5293,"src":"1060:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5274,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:28"},"returnParameters":{"id":5279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5293,"src":"1093:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5277,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:28"},"scope":5294,"src":"1047:213:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5295,"src":"215:1047:28","usedErrors":[],"usedEvents":[]}],"src":"109:1154:28"},"id":28},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[5907]},"id":5908,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5296,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:29"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":5297,"nodeType":"StructuredDocumentation","src":"230:1098:29","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":5907,"linearizedBaseContracts":[5907],"name":"EnumerableSet","nameLocation":"1337:13:29","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":5305,"members":[{"constant":false,"id":5300,"mutability":"mutable","name":"_values","nameLocation":"1861:7:29","nodeType":"VariableDeclaration","scope":5305,"src":"1851:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1851:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5299,"nodeType":"ArrayTypeName","src":"1851:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5304,"mutability":"mutable","name":"_indexes","nameLocation":"2029:8:29","nodeType":"VariableDeclaration","scope":5305,"src":"2001:36:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":5303,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2009:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2001:27:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5302,"name":"uint256","nodeType":"ElementaryTypeName","src":"2020:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1804:3:29","nodeType":"StructDefinition","scope":5907,"src":"1797:247:29","visibility":"public"},{"body":{"id":5346,"nodeType":"Block","src":"2283:335:29","statements":[{"condition":{"id":5320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2297:22:29","subExpression":{"arguments":[{"id":5317,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"2308:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":5318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"2313:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5316,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"2298:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5305_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":5319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2298:21:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5344,"nodeType":"Block","src":"2575:37:29","statements":[{"expression":{"hexValue":"66616c7365","id":5342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2596:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5315,"id":5343,"nodeType":"Return","src":"2589:12:29"}]},"id":5345,"nodeType":"IfStatement","src":"2293:319:29","trueBody":{"id":5341,"nodeType":"Block","src":"2321:248:29","statements":[{"expression":{"arguments":[{"id":5326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"2352:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":5321,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"2335:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5324,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2339:7:29","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5300,"src":"2335:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2347:4:29","memberName":"push","nodeType":"MemberAccess","src":"2335:16:29","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":5327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5328,"nodeType":"ExpressionStatement","src":"2335:23:29"},{"expression":{"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":5329,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"2493:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5332,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2497:8:29","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":5304,"src":"2493:12:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5333,"indexExpression":{"id":5331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"2506:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2493:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":5334,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"2515:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5335,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2519:7:29","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5300,"src":"2515:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2527:6:29","memberName":"length","nodeType":"MemberAccess","src":"2515:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2493:40:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5338,"nodeType":"ExpressionStatement","src":"2493:40:29"},{"expression":{"hexValue":"74727565","id":5339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2554:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5315,"id":5340,"nodeType":"Return","src":"2547:11:29"}]}}]},"documentation":{"id":5306,"nodeType":"StructuredDocumentation","src":"2050:159:29","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":5347,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2223:4:29","nodeType":"FunctionDefinition","parameters":{"id":5312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5309,"mutability":"mutable","name":"set","nameLocation":"2240:3:29","nodeType":"VariableDeclaration","scope":5347,"src":"2228:15:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":5308,"nodeType":"UserDefinedTypeName","pathNode":{"id":5307,"name":"Set","nameLocations":["2228:3:29"],"nodeType":"IdentifierPath","referencedDeclaration":5305,"src":"2228:3:29"},"referencedDeclaration":5305,"src":"2228:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":5311,"mutability":"mutable","name":"value","nameLocation":"2253:5:29","nodeType":"VariableDeclaration","scope":5347,"src":"2245:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2245:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2227:32:29"},"returnParameters":{"id":5315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5347,"src":"2277:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5313,"name":"bool","nodeType":"ElementaryTypeName","src":"2277:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2276:6:29"},"scope":5907,"src":"2214:404:29","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5430,"nodeType":"Block","src":"2858:1316:29","statements":[{"assignments":[5359],"declarations":[{"constant":false,"id":5359,"mutability":"mutable","name":"valueIndex","nameLocation":"2976:10:29","nodeType":"VariableDeclaration","scope":5430,"src":"2968:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5358,"name":"uint256","nodeType":"ElementaryTypeName","src":"2968:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5364,"initialValue":{"baseExpression":{"expression":{"id":5360,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"2989:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5361,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2993:8:29","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":5304,"src":"2989:12:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5363,"indexExpression":{"id":5362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5353,"src":"3002:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2989:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2968:40:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5365,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"3023:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3037:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3023:15:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5428,"nodeType":"Block","src":"4131:37:29","statements":[{"expression":{"hexValue":"66616c7365","id":5426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4152:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5357,"id":5427,"nodeType":"Return","src":"4145:12:29"}]},"id":5429,"nodeType":"IfStatement","src":"3019:1149:29","trueBody":{"id":5425,"nodeType":"Block","src":"3040:1085:29","statements":[{"assignments":[5369],"declarations":[{"constant":false,"id":5369,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3400:13:29","nodeType":"VariableDeclaration","scope":5425,"src":"3392:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5368,"name":"uint256","nodeType":"ElementaryTypeName","src":"3392:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5373,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5370,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"3416:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3429:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3416:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3392:38:29"},{"assignments":[5375],"declarations":[{"constant":false,"id":5375,"mutability":"mutable","name":"lastIndex","nameLocation":"3452:9:29","nodeType":"VariableDeclaration","scope":5425,"src":"3444:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5374,"name":"uint256","nodeType":"ElementaryTypeName","src":"3444:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5381,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":5376,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"3464:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5377,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3468:7:29","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5300,"src":"3464:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3476:6:29","memberName":"length","nodeType":"MemberAccess","src":"3464:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3485:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3464:22:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3444:42:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5382,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5375,"src":"3505:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5383,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5369,"src":"3518:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3505:26:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5409,"nodeType":"IfStatement","src":"3501:398:29","trueBody":{"id":5408,"nodeType":"Block","src":"3533:366:29","statements":[{"assignments":[5386],"declarations":[{"constant":false,"id":5386,"mutability":"mutable","name":"lastValue","nameLocation":"3559:9:29","nodeType":"VariableDeclaration","scope":5408,"src":"3551:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3551:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5391,"initialValue":{"baseExpression":{"expression":{"id":5387,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"3571:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3575:7:29","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5300,"src":"3571:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5390,"indexExpression":{"id":5389,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5375,"src":"3583:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3571:22:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3551:42:29"},{"expression":{"id":5398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":5392,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"3693:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5395,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3697:7:29","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5300,"src":"3693:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5396,"indexExpression":{"id":5394,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5369,"src":"3705:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3693:26:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5397,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"3722:9:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3693:38:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5399,"nodeType":"ExpressionStatement","src":"3693:38:29"},{"expression":{"id":5406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":5400,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"3805:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5403,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3809:8:29","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":5304,"src":"3805:12:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5404,"indexExpression":{"id":5402,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"3818:9:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3805:23:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5405,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"3831:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3805:36:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5407,"nodeType":"ExpressionStatement","src":"3805:36:29"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":5410,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"3977:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5413,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3981:7:29","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5300,"src":"3977:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3989:3:29","memberName":"pop","nodeType":"MemberAccess","src":"3977:15:29","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":5415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3977:17:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5416,"nodeType":"ExpressionStatement","src":"3977:17:29"},{"expression":{"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4062:26:29","subExpression":{"baseExpression":{"expression":{"id":5417,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"4069:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5418,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4073:8:29","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":5304,"src":"4069:12:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5420,"indexExpression":{"id":5419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5353,"src":"4082:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4069:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5422,"nodeType":"ExpressionStatement","src":"4062:26:29"},{"expression":{"hexValue":"74727565","id":5423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4110:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5357,"id":5424,"nodeType":"Return","src":"4103:11:29"}]}}]},"documentation":{"id":5348,"nodeType":"StructuredDocumentation","src":"2624:157:29","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":5431,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2795:7:29","nodeType":"FunctionDefinition","parameters":{"id":5354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5351,"mutability":"mutable","name":"set","nameLocation":"2815:3:29","nodeType":"VariableDeclaration","scope":5431,"src":"2803:15:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":5350,"nodeType":"UserDefinedTypeName","pathNode":{"id":5349,"name":"Set","nameLocations":["2803:3:29"],"nodeType":"IdentifierPath","referencedDeclaration":5305,"src":"2803:3:29"},"referencedDeclaration":5305,"src":"2803:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":5353,"mutability":"mutable","name":"value","nameLocation":"2828:5:29","nodeType":"VariableDeclaration","scope":5431,"src":"2820:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5352,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2820:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2802:32:29"},"returnParameters":{"id":5357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5431,"src":"2852:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5355,"name":"bool","nodeType":"ElementaryTypeName","src":"2852:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2851:6:29"},"scope":5907,"src":"2786:1388:29","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5449,"nodeType":"Block","src":"4334:48:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":5442,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"4351:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5443,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4355:8:29","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":5304,"src":"4351:12:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5445,"indexExpression":{"id":5444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"4364:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4351:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4374:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4351:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5441,"id":5448,"nodeType":"Return","src":"4344:31:29"}]},"documentation":{"id":5432,"nodeType":"StructuredDocumentation","src":"4180:70:29","text":" @dev Returns true if the value is in the set. O(1)."},"id":5450,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4264:9:29","nodeType":"FunctionDefinition","parameters":{"id":5438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5435,"mutability":"mutable","name":"set","nameLocation":"4286:3:29","nodeType":"VariableDeclaration","scope":5450,"src":"4274:15:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":5434,"nodeType":"UserDefinedTypeName","pathNode":{"id":5433,"name":"Set","nameLocations":["4274:3:29"],"nodeType":"IdentifierPath","referencedDeclaration":5305,"src":"4274:3:29"},"referencedDeclaration":5305,"src":"4274:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":5437,"mutability":"mutable","name":"value","nameLocation":"4299:5:29","nodeType":"VariableDeclaration","scope":5450,"src":"4291:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4291:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4273:32:29"},"returnParameters":{"id":5441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5450,"src":"4328:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5439,"name":"bool","nodeType":"ElementaryTypeName","src":"4328:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4327:6:29"},"scope":5907,"src":"4255:127:29","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5463,"nodeType":"Block","src":"4528:42:29","statements":[{"expression":{"expression":{"expression":{"id":5459,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5454,"src":"4545:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5460,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4549:7:29","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5300,"src":"4545:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4557:6:29","memberName":"length","nodeType":"MemberAccess","src":"4545:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5458,"id":5462,"nodeType":"Return","src":"4538:25:29"}]},"documentation":{"id":5451,"nodeType":"StructuredDocumentation","src":"4388:70:29","text":" @dev Returns the number of values on the set. O(1)."},"id":5464,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4472:7:29","nodeType":"FunctionDefinition","parameters":{"id":5455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5454,"mutability":"mutable","name":"set","nameLocation":"4492:3:29","nodeType":"VariableDeclaration","scope":5464,"src":"4480:15:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":5453,"nodeType":"UserDefinedTypeName","pathNode":{"id":5452,"name":"Set","nameLocations":["4480:3:29"],"nodeType":"IdentifierPath","referencedDeclaration":5305,"src":"4480:3:29"},"referencedDeclaration":5305,"src":"4480:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4479:17:29"},"returnParameters":{"id":5458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5464,"src":"4519:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5456,"name":"uint256","nodeType":"ElementaryTypeName","src":"4519:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4518:9:29"},"scope":5907,"src":"4463:107:29","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5480,"nodeType":"Block","src":"4988:42:29","statements":[{"expression":{"baseExpression":{"expression":{"id":5475,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5468,"src":"5005:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5476,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5009:7:29","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5300,"src":"5005:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5478,"indexExpression":{"id":5477,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"5017:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5005:18:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5474,"id":5479,"nodeType":"Return","src":"4998:25:29"}]},"documentation":{"id":5465,"nodeType":"StructuredDocumentation","src":"4576:331:29","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":5481,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4921:3:29","nodeType":"FunctionDefinition","parameters":{"id":5471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5468,"mutability":"mutable","name":"set","nameLocation":"4937:3:29","nodeType":"VariableDeclaration","scope":5481,"src":"4925:15:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":5467,"nodeType":"UserDefinedTypeName","pathNode":{"id":5466,"name":"Set","nameLocations":["4925:3:29"],"nodeType":"IdentifierPath","referencedDeclaration":5305,"src":"4925:3:29"},"referencedDeclaration":5305,"src":"4925:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":5470,"mutability":"mutable","name":"index","nameLocation":"4950:5:29","nodeType":"VariableDeclaration","scope":5481,"src":"4942:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5469,"name":"uint256","nodeType":"ElementaryTypeName","src":"4942:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4924:32:29"},"returnParameters":{"id":5474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5481,"src":"4979:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4979:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4978:9:29"},"scope":5907,"src":"4912:118:29","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5494,"nodeType":"Block","src":"5644:35:29","statements":[{"expression":{"expression":{"id":5491,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"5661:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":5492,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5665:7:29","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5300,"src":"5661:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":5490,"id":5493,"nodeType":"Return","src":"5654:18:29"}]},"documentation":{"id":5482,"nodeType":"StructuredDocumentation","src":"5036:529:29","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":5495,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5579:7:29","nodeType":"FunctionDefinition","parameters":{"id":5486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5485,"mutability":"mutable","name":"set","nameLocation":"5599:3:29","nodeType":"VariableDeclaration","scope":5495,"src":"5587:15:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":5484,"nodeType":"UserDefinedTypeName","pathNode":{"id":5483,"name":"Set","nameLocations":["5587:3:29"],"nodeType":"IdentifierPath","referencedDeclaration":5305,"src":"5587:3:29"},"referencedDeclaration":5305,"src":"5587:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5586:17:29"},"returnParameters":{"id":5490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5495,"src":"5626:16:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5487,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5626:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5488,"nodeType":"ArrayTypeName","src":"5626:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5625:18:29"},"scope":5907,"src":"5570:109:29","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":5499,"members":[{"constant":false,"id":5498,"mutability":"mutable","name":"_inner","nameLocation":"5736:6:29","nodeType":"VariableDeclaration","scope":5499,"src":"5732:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":5497,"nodeType":"UserDefinedTypeName","pathNode":{"id":5496,"name":"Set","nameLocations":["5732:3:29"],"nodeType":"IdentifierPath","referencedDeclaration":5305,"src":"5732:3:29"},"referencedDeclaration":5305,"src":"5732:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5711:10:29","nodeType":"StructDefinition","scope":5907,"src":"5704:45:29","visibility":"public"},{"body":{"id":5516,"nodeType":"Block","src":"5995:47:29","statements":[{"expression":{"arguments":[{"expression":{"id":5511,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"6017:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5499_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":5512,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6021:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5498,"src":"6017:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":5513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"6029:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5510,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5347,"src":"6012:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$5305_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5509,"id":5515,"nodeType":"Return","src":"6005:30:29"}]},"documentation":{"id":5500,"nodeType":"StructuredDocumentation","src":"5755:159:29","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":5517,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5928:3:29","nodeType":"FunctionDefinition","parameters":{"id":5506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5503,"mutability":"mutable","name":"set","nameLocation":"5951:3:29","nodeType":"VariableDeclaration","scope":5517,"src":"5932:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5499_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":5502,"nodeType":"UserDefinedTypeName","pathNode":{"id":5501,"name":"Bytes32Set","nameLocations":["5932:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":5499,"src":"5932:10:29"},"referencedDeclaration":5499,"src":"5932:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5499_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":5505,"mutability":"mutable","name":"value","nameLocation":"5964:5:29","nodeType":"VariableDeclaration","scope":5517,"src":"5956:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5504,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5956:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5931:39:29"},"returnParameters":{"id":5509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5517,"src":"5989:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5507,"name":"bool","nodeType":"ElementaryTypeName","src":"5989:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5988:6:29"},"scope":5907,"src":"5919:123:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5534,"nodeType":"Block","src":"6289:50:29","statements":[{"expression":{"arguments":[{"expression":{"id":5529,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"6314:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5499_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":5530,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6318:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5498,"src":"6314:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":5531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5523,"src":"6326:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5528,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5431,"src":"6306:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$5305_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6306:26:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5527,"id":5533,"nodeType":"Return","src":"6299:33:29"}]},"documentation":{"id":5518,"nodeType":"StructuredDocumentation","src":"6048:157:29","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":5535,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6219:6:29","nodeType":"FunctionDefinition","parameters":{"id":5524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5521,"mutability":"mutable","name":"set","nameLocation":"6245:3:29","nodeType":"VariableDeclaration","scope":5535,"src":"6226:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5499_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":5520,"nodeType":"UserDefinedTypeName","pathNode":{"id":5519,"name":"Bytes32Set","nameLocations":["6226:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":5499,"src":"6226:10:29"},"referencedDeclaration":5499,"src":"6226:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5499_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":5523,"mutability":"mutable","name":"value","nameLocation":"6258:5:29","nodeType":"VariableDeclaration","scope":5535,"src":"6250:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6250:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6225:39:29"},"returnParameters":{"id":5527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5535,"src":"6283:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5525,"name":"bool","nodeType":"ElementaryTypeName","src":"6283:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6282:6:29"},"scope":5907,"src":"6210:129:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5552,"nodeType":"Block","src":"6506:52:29","statements":[{"expression":{"arguments":[{"expression":{"id":5547,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"6533:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5499_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":5548,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6537:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5498,"src":"6533:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":5549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"6545:5:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5546,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"6523:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5305_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6523:28:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5545,"id":5551,"nodeType":"Return","src":"6516:35:29"}]},"documentation":{"id":5536,"nodeType":"StructuredDocumentation","src":"6345:70:29","text":" @dev Returns true if the value is in the set. O(1)."},"id":5553,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6429:8:29","nodeType":"FunctionDefinition","parameters":{"id":5542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5539,"mutability":"mutable","name":"set","nameLocation":"6457:3:29","nodeType":"VariableDeclaration","scope":5553,"src":"6438:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5499_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":5538,"nodeType":"UserDefinedTypeName","pathNode":{"id":5537,"name":"Bytes32Set","nameLocations":["6438:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":5499,"src":"6438:10:29"},"referencedDeclaration":5499,"src":"6438:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5499_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":5541,"mutability":"mutable","name":"value","nameLocation":"6470:5:29","nodeType":"VariableDeclaration","scope":5553,"src":"6462:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5540,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6462:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6437:39:29"},"returnParameters":{"id":5545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5553,"src":"6500:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5543,"name":"bool","nodeType":"ElementaryTypeName","src":"6500:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6499:6:29"},"scope":5907,"src":"6420:138:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5567,"nodeType":"Block","src":"6711:43:29","statements":[{"expression":{"arguments":[{"expression":{"id":5563,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5557,"src":"6736:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5499_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":5564,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6740:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5498,"src":"6736:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":5562,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"6728:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5305_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6728:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5561,"id":5566,"nodeType":"Return","src":"6721:26:29"}]},"documentation":{"id":5554,"nodeType":"StructuredDocumentation","src":"6564:70:29","text":" @dev Returns the number of values in the set. O(1)."},"id":5568,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6648:6:29","nodeType":"FunctionDefinition","parameters":{"id":5558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5557,"mutability":"mutable","name":"set","nameLocation":"6674:3:29","nodeType":"VariableDeclaration","scope":5568,"src":"6655:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5499_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":5556,"nodeType":"UserDefinedTypeName","pathNode":{"id":5555,"name":"Bytes32Set","nameLocations":["6655:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":5499,"src":"6655:10:29"},"referencedDeclaration":5499,"src":"6655:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5499_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6654:24:29"},"returnParameters":{"id":5561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5568,"src":"6702:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5559,"name":"uint256","nodeType":"ElementaryTypeName","src":"6702:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6701:9:29"},"scope":5907,"src":"6639:115:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5585,"nodeType":"Block","src":"7179:46:29","statements":[{"expression":{"arguments":[{"expression":{"id":5580,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"7200:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5499_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":5581,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7204:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5498,"src":"7200:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":5582,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"7212:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5579,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5481,"src":"7196:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5305_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7196:22:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5578,"id":5584,"nodeType":"Return","src":"7189:29:29"}]},"documentation":{"id":5569,"nodeType":"StructuredDocumentation","src":"6760:331:29","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":5586,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7105:2:29","nodeType":"FunctionDefinition","parameters":{"id":5575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5572,"mutability":"mutable","name":"set","nameLocation":"7127:3:29","nodeType":"VariableDeclaration","scope":5586,"src":"7108:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5499_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":5571,"nodeType":"UserDefinedTypeName","pathNode":{"id":5570,"name":"Bytes32Set","nameLocations":["7108:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":5499,"src":"7108:10:29"},"referencedDeclaration":5499,"src":"7108:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5499_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":5574,"mutability":"mutable","name":"index","nameLocation":"7140:5:29","nodeType":"VariableDeclaration","scope":5586,"src":"7132:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5573,"name":"uint256","nodeType":"ElementaryTypeName","src":"7132:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7107:39:29"},"returnParameters":{"id":5578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5586,"src":"7170:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5576,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7170:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7169:9:29"},"scope":5907,"src":"7096:129:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5615,"nodeType":"Block","src":"7846:219:29","statements":[{"assignments":[5600],"declarations":[{"constant":false,"id":5600,"mutability":"mutable","name":"store","nameLocation":"7873:5:29","nodeType":"VariableDeclaration","scope":5615,"src":"7856:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5598,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7856:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5599,"nodeType":"ArrayTypeName","src":"7856:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5605,"initialValue":{"arguments":[{"expression":{"id":5602,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5590,"src":"7889:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5499_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":5603,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7893:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5498,"src":"7889:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":5601,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5495,"src":"7881:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5305_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7881:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7856:44:29"},{"assignments":[5610],"declarations":[{"constant":false,"id":5610,"mutability":"mutable","name":"result","nameLocation":"7927:6:29","nodeType":"VariableDeclaration","scope":5615,"src":"7910:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5608,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7910:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5609,"nodeType":"ArrayTypeName","src":"7910:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5611,"nodeType":"VariableDeclarationStatement","src":"7910:23:29"},{"AST":{"nodeType":"YulBlock","src":"7996:39:29","statements":[{"nodeType":"YulAssignment","src":"8010:15:29","value":{"name":"store","nodeType":"YulIdentifier","src":"8020:5:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8010:6:29"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":5610,"isOffset":false,"isSlot":false,"src":"8010:6:29","valueSize":1},{"declaration":5600,"isOffset":false,"isSlot":false,"src":"8020:5:29","valueSize":1}],"id":5612,"nodeType":"InlineAssembly","src":"7987:48:29"},{"expression":{"id":5613,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5610,"src":"8052:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":5595,"id":5614,"nodeType":"Return","src":"8045:13:29"}]},"documentation":{"id":5587,"nodeType":"StructuredDocumentation","src":"7231:529:29","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":5616,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7774:6:29","nodeType":"FunctionDefinition","parameters":{"id":5591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5590,"mutability":"mutable","name":"set","nameLocation":"7800:3:29","nodeType":"VariableDeclaration","scope":5616,"src":"7781:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5499_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":5589,"nodeType":"UserDefinedTypeName","pathNode":{"id":5588,"name":"Bytes32Set","nameLocations":["7781:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":5499,"src":"7781:10:29"},"referencedDeclaration":5499,"src":"7781:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$5499_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7780:24:29"},"returnParameters":{"id":5595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5616,"src":"7828:16:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5592,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7828:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5593,"nodeType":"ArrayTypeName","src":"7828:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7827:18:29"},"scope":5907,"src":"7765:300:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":5620,"members":[{"constant":false,"id":5619,"mutability":"mutable","name":"_inner","nameLocation":"8122:6:29","nodeType":"VariableDeclaration","scope":5620,"src":"8118:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":5618,"nodeType":"UserDefinedTypeName","pathNode":{"id":5617,"name":"Set","nameLocations":["8118:3:29"],"nodeType":"IdentifierPath","referencedDeclaration":5305,"src":"8118:3:29"},"referencedDeclaration":5305,"src":"8118:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8097:10:29","nodeType":"StructDefinition","scope":5907,"src":"8090:45:29","visibility":"public"},{"body":{"id":5646,"nodeType":"Block","src":"8381:74:29","statements":[{"expression":{"arguments":[{"expression":{"id":5632,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"8403:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5620_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":5633,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8407:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5619,"src":"8403:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":5640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"8439:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8431:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5638,"name":"uint160","nodeType":"ElementaryTypeName","src":"8431:7:29","typeDescriptions":{}}},"id":5641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8431:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8423:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5636,"name":"uint256","nodeType":"ElementaryTypeName","src":"8423:7:29","typeDescriptions":{}}},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8423:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8415:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5634,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8415:7:29","typeDescriptions":{}}},"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8415:32:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5631,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5347,"src":"8398:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$5305_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":5644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8398:50:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5630,"id":5645,"nodeType":"Return","src":"8391:57:29"}]},"documentation":{"id":5621,"nodeType":"StructuredDocumentation","src":"8141:159:29","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":5647,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8314:3:29","nodeType":"FunctionDefinition","parameters":{"id":5627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5624,"mutability":"mutable","name":"set","nameLocation":"8337:3:29","nodeType":"VariableDeclaration","scope":5647,"src":"8318:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5620_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":5623,"nodeType":"UserDefinedTypeName","pathNode":{"id":5622,"name":"AddressSet","nameLocations":["8318:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":5620,"src":"8318:10:29"},"referencedDeclaration":5620,"src":"8318:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5620_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":5626,"mutability":"mutable","name":"value","nameLocation":"8350:5:29","nodeType":"VariableDeclaration","scope":5647,"src":"8342:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5625,"name":"address","nodeType":"ElementaryTypeName","src":"8342:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8317:39:29"},"returnParameters":{"id":5630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5647,"src":"8375:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5628,"name":"bool","nodeType":"ElementaryTypeName","src":"8375:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8374:6:29"},"scope":5907,"src":"8305:150:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5673,"nodeType":"Block","src":"8702:77:29","statements":[{"expression":{"arguments":[{"expression":{"id":5659,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"8727:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5620_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":5660,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8731:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5619,"src":"8727:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":5667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"8763:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8755:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5665,"name":"uint160","nodeType":"ElementaryTypeName","src":"8755:7:29","typeDescriptions":{}}},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8755:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8747:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5663,"name":"uint256","nodeType":"ElementaryTypeName","src":"8747:7:29","typeDescriptions":{}}},"id":5669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8747:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5661,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8739:7:29","typeDescriptions":{}}},"id":5670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8739:32:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5658,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5431,"src":"8719:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$5305_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8719:53:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5657,"id":5672,"nodeType":"Return","src":"8712:60:29"}]},"documentation":{"id":5648,"nodeType":"StructuredDocumentation","src":"8461:157:29","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":5674,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8632:6:29","nodeType":"FunctionDefinition","parameters":{"id":5654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5651,"mutability":"mutable","name":"set","nameLocation":"8658:3:29","nodeType":"VariableDeclaration","scope":5674,"src":"8639:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5620_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":5650,"nodeType":"UserDefinedTypeName","pathNode":{"id":5649,"name":"AddressSet","nameLocations":["8639:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":5620,"src":"8639:10:29"},"referencedDeclaration":5620,"src":"8639:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5620_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":5653,"mutability":"mutable","name":"value","nameLocation":"8671:5:29","nodeType":"VariableDeclaration","scope":5674,"src":"8663:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5652,"name":"address","nodeType":"ElementaryTypeName","src":"8663:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8638:39:29"},"returnParameters":{"id":5657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5674,"src":"8696:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5655,"name":"bool","nodeType":"ElementaryTypeName","src":"8696:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8695:6:29"},"scope":5907,"src":"8623:156:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5700,"nodeType":"Block","src":"8946:79:29","statements":[{"expression":{"arguments":[{"expression":{"id":5686,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"8973:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5620_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":5687,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8977:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5619,"src":"8973:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":5694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"9009:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9001:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5692,"name":"uint160","nodeType":"ElementaryTypeName","src":"9001:7:29","typeDescriptions":{}}},"id":5695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9001:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8993:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5690,"name":"uint256","nodeType":"ElementaryTypeName","src":"8993:7:29","typeDescriptions":{}}},"id":5696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8993:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8985:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5688,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8985:7:29","typeDescriptions":{}}},"id":5697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8985:32:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5685,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"8963:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5305_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":5698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8963:55:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5684,"id":5699,"nodeType":"Return","src":"8956:62:29"}]},"documentation":{"id":5675,"nodeType":"StructuredDocumentation","src":"8785:70:29","text":" @dev Returns true if the value is in the set. O(1)."},"id":5701,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8869:8:29","nodeType":"FunctionDefinition","parameters":{"id":5681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5678,"mutability":"mutable","name":"set","nameLocation":"8897:3:29","nodeType":"VariableDeclaration","scope":5701,"src":"8878:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5620_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":5677,"nodeType":"UserDefinedTypeName","pathNode":{"id":5676,"name":"AddressSet","nameLocations":["8878:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":5620,"src":"8878:10:29"},"referencedDeclaration":5620,"src":"8878:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5620_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":5680,"mutability":"mutable","name":"value","nameLocation":"8910:5:29","nodeType":"VariableDeclaration","scope":5701,"src":"8902:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5679,"name":"address","nodeType":"ElementaryTypeName","src":"8902:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:39:29"},"returnParameters":{"id":5684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5701,"src":"8940:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5682,"name":"bool","nodeType":"ElementaryTypeName","src":"8940:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8939:6:29"},"scope":5907,"src":"8860:165:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5715,"nodeType":"Block","src":"9178:43:29","statements":[{"expression":{"arguments":[{"expression":{"id":5711,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5705,"src":"9203:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5620_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":5712,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9207:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5619,"src":"9203:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":5710,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"9195:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5305_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":5713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9195:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5709,"id":5714,"nodeType":"Return","src":"9188:26:29"}]},"documentation":{"id":5702,"nodeType":"StructuredDocumentation","src":"9031:70:29","text":" @dev Returns the number of values in the set. O(1)."},"id":5716,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9115:6:29","nodeType":"FunctionDefinition","parameters":{"id":5706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5705,"mutability":"mutable","name":"set","nameLocation":"9141:3:29","nodeType":"VariableDeclaration","scope":5716,"src":"9122:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5620_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":5704,"nodeType":"UserDefinedTypeName","pathNode":{"id":5703,"name":"AddressSet","nameLocations":["9122:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":5620,"src":"9122:10:29"},"referencedDeclaration":5620,"src":"9122:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5620_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9121:24:29"},"returnParameters":{"id":5709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5716,"src":"9169:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5707,"name":"uint256","nodeType":"ElementaryTypeName","src":"9169:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9168:9:29"},"scope":5907,"src":"9106:115:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5742,"nodeType":"Block","src":"9646:73:29","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":5734,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5720,"src":"9691:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5620_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":5735,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9695:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5619,"src":"9691:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":5736,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"9703:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5733,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5481,"src":"9687:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5305_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9687:22:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9679:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5731,"name":"uint256","nodeType":"ElementaryTypeName","src":"9679:7:29","typeDescriptions":{}}},"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9679:31:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9671:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5729,"name":"uint160","nodeType":"ElementaryTypeName","src":"9671:7:29","typeDescriptions":{}}},"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9671:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9663:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5727,"name":"address","nodeType":"ElementaryTypeName","src":"9663:7:29","typeDescriptions":{}}},"id":5740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9663:49:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5726,"id":5741,"nodeType":"Return","src":"9656:56:29"}]},"documentation":{"id":5717,"nodeType":"StructuredDocumentation","src":"9227:331:29","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":5743,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9572:2:29","nodeType":"FunctionDefinition","parameters":{"id":5723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5720,"mutability":"mutable","name":"set","nameLocation":"9594:3:29","nodeType":"VariableDeclaration","scope":5743,"src":"9575:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5620_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":5719,"nodeType":"UserDefinedTypeName","pathNode":{"id":5718,"name":"AddressSet","nameLocations":["9575:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":5620,"src":"9575:10:29"},"referencedDeclaration":5620,"src":"9575:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5620_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":5722,"mutability":"mutable","name":"index","nameLocation":"9607:5:29","nodeType":"VariableDeclaration","scope":5743,"src":"9599:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5721,"name":"uint256","nodeType":"ElementaryTypeName","src":"9599:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9574:39:29"},"returnParameters":{"id":5726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5743,"src":"9637:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5724,"name":"address","nodeType":"ElementaryTypeName","src":"9637:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9636:9:29"},"scope":5907,"src":"9563:156:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5772,"nodeType":"Block","src":"10340:219:29","statements":[{"assignments":[5757],"declarations":[{"constant":false,"id":5757,"mutability":"mutable","name":"store","nameLocation":"10367:5:29","nodeType":"VariableDeclaration","scope":5772,"src":"10350:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5755,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10350:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5756,"nodeType":"ArrayTypeName","src":"10350:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5762,"initialValue":{"arguments":[{"expression":{"id":5759,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"10383:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5620_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":5760,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10387:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5619,"src":"10383:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":5758,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5495,"src":"10375:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5305_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":5761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10375:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10350:44:29"},{"assignments":[5767],"declarations":[{"constant":false,"id":5767,"mutability":"mutable","name":"result","nameLocation":"10421:6:29","nodeType":"VariableDeclaration","scope":5772,"src":"10404:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5765,"name":"address","nodeType":"ElementaryTypeName","src":"10404:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5766,"nodeType":"ArrayTypeName","src":"10404:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5768,"nodeType":"VariableDeclarationStatement","src":"10404:23:29"},{"AST":{"nodeType":"YulBlock","src":"10490:39:29","statements":[{"nodeType":"YulAssignment","src":"10504:15:29","value":{"name":"store","nodeType":"YulIdentifier","src":"10514:5:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10504:6:29"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":5767,"isOffset":false,"isSlot":false,"src":"10504:6:29","valueSize":1},{"declaration":5757,"isOffset":false,"isSlot":false,"src":"10514:5:29","valueSize":1}],"id":5769,"nodeType":"InlineAssembly","src":"10481:48:29"},{"expression":{"id":5770,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"10546:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":5752,"id":5771,"nodeType":"Return","src":"10539:13:29"}]},"documentation":{"id":5744,"nodeType":"StructuredDocumentation","src":"9725:529:29","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":5773,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10268:6:29","nodeType":"FunctionDefinition","parameters":{"id":5748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5747,"mutability":"mutable","name":"set","nameLocation":"10294:3:29","nodeType":"VariableDeclaration","scope":5773,"src":"10275:22:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5620_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":5746,"nodeType":"UserDefinedTypeName","pathNode":{"id":5745,"name":"AddressSet","nameLocations":["10275:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":5620,"src":"10275:10:29"},"referencedDeclaration":5620,"src":"10275:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$5620_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10274:24:29"},"returnParameters":{"id":5752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5773,"src":"10322:16:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5749,"name":"address","nodeType":"ElementaryTypeName","src":"10322:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5750,"nodeType":"ArrayTypeName","src":"10322:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10321:18:29"},"scope":5907,"src":"10259:300:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":5777,"members":[{"constant":false,"id":5776,"mutability":"mutable","name":"_inner","nameLocation":"10610:6:29","nodeType":"VariableDeclaration","scope":5777,"src":"10606:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":5775,"nodeType":"UserDefinedTypeName","pathNode":{"id":5774,"name":"Set","nameLocations":["10606:3:29"],"nodeType":"IdentifierPath","referencedDeclaration":5305,"src":"10606:3:29"},"referencedDeclaration":5305,"src":"10606:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10588:7:29","nodeType":"StructDefinition","scope":5907,"src":"10581:42:29","visibility":"public"},{"body":{"id":5797,"nodeType":"Block","src":"10866:56:29","statements":[{"expression":{"arguments":[{"expression":{"id":5789,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5781,"src":"10888:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5777_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":5790,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10892:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5776,"src":"10888:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":5793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5783,"src":"10908:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10900:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5791,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10900:7:29","typeDescriptions":{}}},"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10900:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5788,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5347,"src":"10883:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$5305_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":5795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10883:32:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5787,"id":5796,"nodeType":"Return","src":"10876:39:29"}]},"documentation":{"id":5778,"nodeType":"StructuredDocumentation","src":"10629:159:29","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":5798,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10802:3:29","nodeType":"FunctionDefinition","parameters":{"id":5784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5781,"mutability":"mutable","name":"set","nameLocation":"10822:3:29","nodeType":"VariableDeclaration","scope":5798,"src":"10806:19:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5777_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":5780,"nodeType":"UserDefinedTypeName","pathNode":{"id":5779,"name":"UintSet","nameLocations":["10806:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":5777,"src":"10806:7:29"},"referencedDeclaration":5777,"src":"10806:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5777_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":5783,"mutability":"mutable","name":"value","nameLocation":"10835:5:29","nodeType":"VariableDeclaration","scope":5798,"src":"10827:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5782,"name":"uint256","nodeType":"ElementaryTypeName","src":"10827:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10805:36:29"},"returnParameters":{"id":5787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5798,"src":"10860:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5785,"name":"bool","nodeType":"ElementaryTypeName","src":"10860:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10859:6:29"},"scope":5907,"src":"10793:129:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5818,"nodeType":"Block","src":"11166:59:29","statements":[{"expression":{"arguments":[{"expression":{"id":5810,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"11191:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5777_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":5811,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11195:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5776,"src":"11191:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":5814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5804,"src":"11211:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11203:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5812,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11203:7:29","typeDescriptions":{}}},"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11203:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5809,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5431,"src":"11183:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$5305_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11183:35:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5808,"id":5817,"nodeType":"Return","src":"11176:42:29"}]},"documentation":{"id":5799,"nodeType":"StructuredDocumentation","src":"10928:157:29","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":5819,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11099:6:29","nodeType":"FunctionDefinition","parameters":{"id":5805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5802,"mutability":"mutable","name":"set","nameLocation":"11122:3:29","nodeType":"VariableDeclaration","scope":5819,"src":"11106:19:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5777_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":5801,"nodeType":"UserDefinedTypeName","pathNode":{"id":5800,"name":"UintSet","nameLocations":["11106:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":5777,"src":"11106:7:29"},"referencedDeclaration":5777,"src":"11106:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5777_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":5804,"mutability":"mutable","name":"value","nameLocation":"11135:5:29","nodeType":"VariableDeclaration","scope":5819,"src":"11127:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5803,"name":"uint256","nodeType":"ElementaryTypeName","src":"11127:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11105:36:29"},"returnParameters":{"id":5808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5819,"src":"11160:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5806,"name":"bool","nodeType":"ElementaryTypeName","src":"11160:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11159:6:29"},"scope":5907,"src":"11090:135:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5839,"nodeType":"Block","src":"11389:61:29","statements":[{"expression":{"arguments":[{"expression":{"id":5831,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"11416:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5777_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":5832,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11420:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5776,"src":"11416:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":5835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5825,"src":"11436:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11428:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5833,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11428:7:29","typeDescriptions":{}}},"id":5836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11428:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5830,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"11406:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5305_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":5837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11406:37:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5829,"id":5838,"nodeType":"Return","src":"11399:44:29"}]},"documentation":{"id":5820,"nodeType":"StructuredDocumentation","src":"11231:70:29","text":" @dev Returns true if the value is in the set. O(1)."},"id":5840,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11315:8:29","nodeType":"FunctionDefinition","parameters":{"id":5826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5823,"mutability":"mutable","name":"set","nameLocation":"11340:3:29","nodeType":"VariableDeclaration","scope":5840,"src":"11324:19:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5777_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":5822,"nodeType":"UserDefinedTypeName","pathNode":{"id":5821,"name":"UintSet","nameLocations":["11324:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":5777,"src":"11324:7:29"},"referencedDeclaration":5777,"src":"11324:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5777_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":5825,"mutability":"mutable","name":"value","nameLocation":"11353:5:29","nodeType":"VariableDeclaration","scope":5840,"src":"11345:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5824,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11323:36:29"},"returnParameters":{"id":5829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5840,"src":"11383:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5827,"name":"bool","nodeType":"ElementaryTypeName","src":"11383:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11382:6:29"},"scope":5907,"src":"11306:144:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5854,"nodeType":"Block","src":"11600:43:29","statements":[{"expression":{"arguments":[{"expression":{"id":5850,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"11625:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5777_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":5851,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11629:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5776,"src":"11625:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":5849,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"11617:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5305_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":5852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11617:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5848,"id":5853,"nodeType":"Return","src":"11610:26:29"}]},"documentation":{"id":5841,"nodeType":"StructuredDocumentation","src":"11456:70:29","text":" @dev Returns the number of values in the set. O(1)."},"id":5855,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11540:6:29","nodeType":"FunctionDefinition","parameters":{"id":5845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5844,"mutability":"mutable","name":"set","nameLocation":"11563:3:29","nodeType":"VariableDeclaration","scope":5855,"src":"11547:19:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5777_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":5843,"nodeType":"UserDefinedTypeName","pathNode":{"id":5842,"name":"UintSet","nameLocations":["11547:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":5777,"src":"11547:7:29"},"referencedDeclaration":5777,"src":"11547:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5777_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11546:21:29"},"returnParameters":{"id":5848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5855,"src":"11591:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5846,"name":"uint256","nodeType":"ElementaryTypeName","src":"11591:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11590:9:29"},"scope":5907,"src":"11531:112:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5875,"nodeType":"Block","src":"12065:55:29","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":5869,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5859,"src":"12094:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5777_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":5870,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12098:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5776,"src":"12094:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":5871,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5861,"src":"12106:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5868,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5481,"src":"12090:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5305_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12090:22:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12082:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5866,"name":"uint256","nodeType":"ElementaryTypeName","src":"12082:7:29","typeDescriptions":{}}},"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12082:31:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5865,"id":5874,"nodeType":"Return","src":"12075:38:29"}]},"documentation":{"id":5856,"nodeType":"StructuredDocumentation","src":"11649:331:29","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":5876,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11994:2:29","nodeType":"FunctionDefinition","parameters":{"id":5862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5859,"mutability":"mutable","name":"set","nameLocation":"12013:3:29","nodeType":"VariableDeclaration","scope":5876,"src":"11997:19:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5777_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":5858,"nodeType":"UserDefinedTypeName","pathNode":{"id":5857,"name":"UintSet","nameLocations":["11997:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":5777,"src":"11997:7:29"},"referencedDeclaration":5777,"src":"11997:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5777_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":5861,"mutability":"mutable","name":"index","nameLocation":"12026:5:29","nodeType":"VariableDeclaration","scope":5876,"src":"12018:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5860,"name":"uint256","nodeType":"ElementaryTypeName","src":"12018:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11996:36:29"},"returnParameters":{"id":5865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5876,"src":"12056:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5863,"name":"uint256","nodeType":"ElementaryTypeName","src":"12056:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12055:9:29"},"scope":5907,"src":"11985:135:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5905,"nodeType":"Block","src":"12738:219:29","statements":[{"assignments":[5890],"declarations":[{"constant":false,"id":5890,"mutability":"mutable","name":"store","nameLocation":"12765:5:29","nodeType":"VariableDeclaration","scope":5905,"src":"12748:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5888,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12748:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5889,"nodeType":"ArrayTypeName","src":"12748:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5895,"initialValue":{"arguments":[{"expression":{"id":5892,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5880,"src":"12781:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5777_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":5893,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12785:6:29","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5776,"src":"12781:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5305_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":5891,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5495,"src":"12773:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5305_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":5894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12773:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12748:44:29"},{"assignments":[5900],"declarations":[{"constant":false,"id":5900,"mutability":"mutable","name":"result","nameLocation":"12819:6:29","nodeType":"VariableDeclaration","scope":5905,"src":"12802:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5898,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5899,"nodeType":"ArrayTypeName","src":"12802:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":5901,"nodeType":"VariableDeclarationStatement","src":"12802:23:29"},{"AST":{"nodeType":"YulBlock","src":"12888:39:29","statements":[{"nodeType":"YulAssignment","src":"12902:15:29","value":{"name":"store","nodeType":"YulIdentifier","src":"12912:5:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12902:6:29"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":5900,"isOffset":false,"isSlot":false,"src":"12902:6:29","valueSize":1},{"declaration":5890,"isOffset":false,"isSlot":false,"src":"12912:5:29","valueSize":1}],"id":5902,"nodeType":"InlineAssembly","src":"12879:48:29"},{"expression":{"id":5903,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"12944:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":5885,"id":5904,"nodeType":"Return","src":"12937:13:29"}]},"documentation":{"id":5877,"nodeType":"StructuredDocumentation","src":"12126:529:29","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":5906,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12669:6:29","nodeType":"FunctionDefinition","parameters":{"id":5881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5880,"mutability":"mutable","name":"set","nameLocation":"12692:3:29","nodeType":"VariableDeclaration","scope":5906,"src":"12676:19:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5777_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":5879,"nodeType":"UserDefinedTypeName","pathNode":{"id":5878,"name":"UintSet","nameLocations":["12676:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":5777,"src":"12676:7:29"},"referencedDeclaration":5777,"src":"12676:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$5777_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12675:21:29"},"returnParameters":{"id":5885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5906,"src":"12720:16:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5882,"name":"uint256","nodeType":"ElementaryTypeName","src":"12720:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5883,"nodeType":"ArrayTypeName","src":"12720:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12719:18:29"},"scope":5907,"src":"12660:297:29","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":5908,"src":"1329:11630:29","usedErrors":[],"usedEvents":[]}],"src":"205:12755:29"},"id":29},"contracts/standalone/LSP8LoogiesEnhanced.sol":{"ast":{"absolutePath":"contracts/standalone/LSP8LoogiesEnhanced.sol","exportedSymbols":{"Base64":[3834],"ERC165Checker":[4311],"ERC725Y":[269],"EnumerableSet":[5907],"IERC165":[4323],"IERC725Y":[5924],"ILSP1":[464],"ILSP8IdentifiableDigitalAsset":[1838],"InvalidExtensionAddress":[591],"InvalidFunctionSelector":[586],"LSP17Extendable":[725],"LSP1Utils":[563],"LSP2Utils":[1462],"LSP4DigitalAssetMetadata":[1614],"LSP8BatchCallFailed":[1978],"LSP8CannotSendToAddressZero":[1933],"LSP8CannotUseAddressZeroAsOperator":[1930],"LSP8IdentifiableDigitalAsset":[3609],"LSP8InvalidTransferBatch":[1948],"LSP8LoogiesEnhanced":[8084],"LSP8NonExistentTokenId":[1904],"LSP8NonExistingOperator":[1940],"LSP8NotTokenOperator":[1920],"LSP8NotTokenOwner":[1913],"LSP8NotifyTokenReceiverContractMissingLSP1Interface":[1953],"LSP8NotifyTokenReceiverIsEOA":[1958],"LSP8OperatorAlreadyAuthorized":[1927],"LSP8RevokeOperatorNotAuthorized":[1996],"LSP8TokenContractCannotHoldValue":[1964],"LSP8TokenIdAlreadyMinted":[1945],"LSP8TokenIdFormatNotEditable":[1967],"LSP8TokenIdsDataEmptyArray":[1973],"LSP8TokenIdsDataLengthMismatch":[1970],"LSP8TokenOwnerCannotBeOperator":[1961],"LSP8TokenOwnerChanged":[1987],"Math":[5189],"NoExtensionFoundForFunctionSelector":[581],"OnChainMetadata":[7263],"ReentrancyGuard":[3787],"SignedMath":[5294],"Strings":[4093],"_INTERFACEID_LSP1":[469],"_INTERFACEID_LSP8":[1843],"_INTERFACEID_LSP8_V0_12_0":[1846],"_INTERFACEID_LSP8_V0_14_0":[1849],"_LSP17_EXTENSION_PREFIX":[574],"_LSP4_CREATORS_ARRAY_KEY":[1491],"_LSP4_CREATORS_MAP_KEY_PREFIX":[1494],"_LSP4_METADATA_KEY":[1497],"_LSP4_SUPPORTED_STANDARDS_KEY":[1476],"_LSP4_SUPPORTED_STANDARDS_VALUE":[1479],"_LSP4_TOKEN_NAME_KEY":[1482],"_LSP4_TOKEN_SYMBOL_KEY":[1485],"_LSP4_TOKEN_TYPE_COLLECTION":[1473],"_LSP4_TOKEN_TYPE_KEY":[1488],"_LSP4_TOKEN_TYPE_NFT":[1470],"_LSP4_TOKEN_TYPE_TOKEN":[1467],"_LSP8_REFERENCE_CONTRACT":[1858],"_LSP8_TOKENID_FORMAT_ADDRESS":[1876],"_LSP8_TOKENID_FORMAT_HASH":[1882],"_LSP8_TOKENID_FORMAT_KEY":[1852],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_ADDRESS":[1891],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_HASH":[1897],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_NUMBER":[1885],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_STRING":[1888],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_UNIQUE_ID":[1894],"_LSP8_TOKENID_FORMAT_NUMBER":[1870],"_LSP8_TOKENID_FORMAT_STRING":[1873],"_LSP8_TOKENID_FORMAT_UNIQUE_ID":[1879],"_LSP8_TOKEN_METADATA_BASE_URI":[1855],"_TYPEID_LSP8_TOKENOPERATOR":[1867],"_TYPEID_LSP8_TOKENSRECIPIENT":[1864],"_TYPEID_LSP8_TOKENSSENDER":[1861]},"id":8085,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5909,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:30"},{"absolutePath":"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol","file":"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol","id":5910,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8085,"sourceUnit":3610,"src":"57:74:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@lukso/lsp8-contracts/contracts/LSP8Constants.sol","file":"@lukso/lsp8-contracts/contracts/LSP8Constants.sol","id":5911,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8085,"sourceUnit":1898,"src":"132:59:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4Constants.sol","file":"@lukso/lsp4-contracts/contracts/LSP4Constants.sol","id":5912,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8085,"sourceUnit":1498,"src":"192:59:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":5913,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8085,"sourceUnit":4094,"src":"252:51:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Base64.sol","file":"@openzeppelin/contracts/utils/Base64.sol","id":5914,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8085,"sourceUnit":3835,"src":"304:50:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":5915,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8085,"sourceUnit":3788,"src":"355:62:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":5916,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8085,"sourceUnit":4324,"src":"418:65:30","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IERC725Y","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5924,"linearizedBaseContracts":[5924],"name":"IERC725Y","nameLocation":"534:8:30","nodeType":"ContractDefinition","nodes":[{"functionSelector":"54f6127f","id":5923,"implemented":false,"kind":"function","modifiers":[],"name":"getData","nameLocation":"558:7:30","nodeType":"FunctionDefinition","parameters":{"id":5919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5918,"mutability":"mutable","name":"dataKey","nameLocation":"574:7:30","nodeType":"VariableDeclaration","scope":5923,"src":"566:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5917,"name":"bytes32","nodeType":"ElementaryTypeName","src":"566:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"565:17:30"},"returnParameters":{"id":5922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5923,"src":"606:12:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5920,"name":"bytes","nodeType":"ElementaryTypeName","src":"606:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"605:14:30"},"scope":5924,"src":"549:71:30","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":8085,"src":"524:98:30","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"OnChainMetadata","contractDependencies":[],"contractKind":"contract","documentation":{"id":5925,"nodeType":"StructuredDocumentation","src":"624:185:30","text":" @title OnChainMetadata\n @notice Handles on-chain SVG generation and metadata formatting for LSP8Loogies\n @dev Provides SVG generation and properly formatted LSP4 metadata"},"fullyImplemented":true,"id":7263,"linearizedBaseContracts":[7263],"name":"OnChainMetadata","nameLocation":"819:15:30","nodeType":"ContractDefinition","nodes":[{"global":false,"id":5928,"libraryName":{"id":5926,"name":"Strings","nameLocations":["847:7:30"],"nodeType":"IdentifierPath","referencedDeclaration":4093,"src":"847:7:30"},"nodeType":"UsingForDirective","src":"841:26:30","typeName":{"id":5927,"name":"uint256","nodeType":"ElementaryTypeName","src":"859:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":5931,"mutability":"constant","name":"_INTERFACE_ID_ERC725Y","nameLocation":"924:21:30","nodeType":"VariableDeclaration","scope":7263,"src":"908:50:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5929,"name":"bytes4","nodeType":"ElementaryTypeName","src":"908:6:30","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783731346466373763","id":5930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"948:10:30","typeDescriptions":{"typeIdentifier":"t_rational_1900935036_by_1","typeString":"int_const 1900935036"},"value":"0x714df77c"},"visibility":"internal"},{"constant":true,"id":5934,"mutability":"constant","name":"_LSP3_DATAKEY_NAME","nameLocation":"981:18:30","nodeType":"VariableDeclaration","scope":7263,"src":"964:104:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5932,"name":"bytes32","nodeType":"ElementaryTypeName","src":"964:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861356632353730336338323863366433633436386661353534326332373965386339386631616363373833333138653466636436376561386664363162653032","id":5933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1002:66:30","typeDescriptions":{"typeIdentifier":"t_rational_75059797559806566752160910378875695901609469693548514118137663473700181229058_by_1","typeString":"int_const 7505...(69 digits omitted)...9058"},"value":"0xa5f25703c828c6d3c468fa5542c279e8c98f1acc783318e4fcd67ea8fd61be02"},"visibility":"internal"},{"constant":false,"id":5939,"mutability":"mutable","name":"_parts","nameLocation":"1150:6:30","nodeType":"VariableDeclaration","scope":7263,"src":"1114:42:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(string => string[])"},"typeName":{"id":5938,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5935,"name":"string","nodeType":"ElementaryTypeName","src":"1122:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1114:27:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(string => string[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":5936,"name":"string","nodeType":"ElementaryTypeName","src":"1132:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":5937,"nodeType":"ArrayTypeName","src":"1132:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"visibility":"private"},{"body":{"id":5964,"nodeType":"Block","src":"1264:182:30","statements":[{"clauses":[{"block":{"id":5957,"nodeType":"Block","src":"1358:38:30","statements":[{"expression":{"id":5955,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"1379:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5945,"id":5956,"nodeType":"Return","src":"1372:13:30"}]},"errorName":"","id":5958,"nodeType":"TryCatchClause","parameters":{"id":5954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5953,"mutability":"mutable","name":"result","nameLocation":"1350:6:30","nodeType":"VariableDeclaration","scope":5958,"src":"1345:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5952,"name":"bool","nodeType":"ElementaryTypeName","src":"1345:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1344:13:30"},"src":"1336:60:30"},{"block":{"id":5961,"nodeType":"Block","src":"1403:37:30","statements":[{"expression":{"hexValue":"66616c7365","id":5959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1424:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5945,"id":5960,"nodeType":"Return","src":"1417:12:30"}]},"errorName":"","id":5962,"nodeType":"TryCatchClause","src":"1397:43:30"}],"externalCall":{"arguments":[{"id":5950,"name":"_INTERFACE_ID_ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"1313:21:30","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"arguments":[{"id":5947,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"1286:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5946,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"1278:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4323_$","typeString":"type(contract IERC165)"}},"id":5948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1278:16:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC165_$4323","typeString":"contract IERC165"}},"id":5949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1295:17:30","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4322,"src":"1278:34:30","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view external returns (bool)"}},"id":5951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1278:57:30","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5963,"nodeType":"TryStatement","src":"1274:166:30"}]},"id":5965,"implemented":true,"kind":"function","modifiers":[],"name":"isUniversalProfile","nameLocation":"1199:18:30","nodeType":"FunctionDefinition","parameters":{"id":5942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5941,"mutability":"mutable","name":"account","nameLocation":"1226:7:30","nodeType":"VariableDeclaration","scope":5965,"src":"1218:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5940,"name":"address","nodeType":"ElementaryTypeName","src":"1218:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1217:17:30"},"returnParameters":{"id":5945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5965,"src":"1258:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5943,"name":"bool","nodeType":"ElementaryTypeName","src":"1258:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1257:6:30"},"scope":7263,"src":"1190:256:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6054,"nodeType":"Block","src":"1562:949:30","statements":[{"condition":{"id":5975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1576:28:30","subExpression":{"arguments":[{"id":5973,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"1596:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5972,"name":"isUniversalProfile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"1577:18:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":5974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1577:27:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5979,"nodeType":"IfStatement","src":"1572:68:30","trueBody":{"id":5978,"nodeType":"Block","src":"1606:34:30","statements":[{"expression":{"hexValue":"","id":5976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1627:2:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":5971,"id":5977,"nodeType":"Return","src":"1620:9:30"}]}},{"clauses":[{"block":{"id":6047,"nodeType":"Block","src":"1740:724:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5989,"name":"nameData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"1758:8:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1767:6:30","memberName":"length","nodeType":"MemberAccess","src":"1758:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1776:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1758:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6044,"nodeType":"IfStatement","src":"1754:677:30","trueBody":{"id":6043,"nodeType":"Block","src":"1779:652:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5993,"name":"nameData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"2025:8:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2034:6:30","memberName":"length","nodeType":"MemberAccess","src":"2025:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":5995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2043:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2025:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5997,"name":"nameData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"2048:8:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5999,"indexExpression":{"hexValue":"30","id":5998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2057:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2048:11:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2063:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2048:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2025:39:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6042,"nodeType":"IfStatement","src":"2021:396:30","trueBody":{"id":6041,"nodeType":"Block","src":"2066:351:30","statements":[{"assignments":[6004],"declarations":[{"constant":false,"id":6004,"mutability":"mutable","name":"strBytes","nameLocation":"2172:8:30","nodeType":"VariableDeclaration","scope":6041,"src":"2159:21:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6003,"name":"bytes","nodeType":"ElementaryTypeName","src":"2159:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6012,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6007,"name":"nameData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"2193:8:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2202:6:30","memberName":"length","nodeType":"MemberAccess","src":"2193:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2211:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2193:19:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2183:9:30","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":6005,"name":"bytes","nodeType":"ElementaryTypeName","src":"2187:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2183:30:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2159:54:30"},{"body":{"id":6034,"nodeType":"Block","src":"2278:76:30","statements":[{"expression":{"id":6032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6024,"name":"strBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"2304:8:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6028,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6025,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6014,"src":"2313:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2315:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2313:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2304:13:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":6029,"name":"nameData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"2320:8:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6031,"indexExpression":{"id":6030,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6014,"src":"2329:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2320:11:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2304:27:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6033,"nodeType":"ExpressionStatement","src":"2304:27:30"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6017,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6014,"src":"2252:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6018,"name":"nameData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"2256:8:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2265:6:30","memberName":"length","nodeType":"MemberAccess","src":"2256:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2252:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6035,"initializationExpression":{"assignments":[6014],"declarations":[{"constant":false,"id":6014,"mutability":"mutable","name":"i","nameLocation":"2245:1:30","nodeType":"VariableDeclaration","scope":6035,"src":"2240:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6013,"name":"uint","nodeType":"ElementaryTypeName","src":"2240:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6016,"initialValue":{"hexValue":"31","id":6015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2249:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"2240:10:30"},"loopExpression":{"expression":{"id":6022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2273:3:30","subExpression":{"id":6021,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6014,"src":"2273:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6023,"nodeType":"ExpressionStatement","src":"2273:3:30"},"nodeType":"ForStatement","src":"2235:119:30"},{"expression":{"arguments":[{"id":6038,"name":"strBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"2389:8:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2382:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6036,"name":"string","nodeType":"ElementaryTypeName","src":"2382:6:30","typeDescriptions":{}}},"id":6039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2382:16:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5971,"id":6040,"nodeType":"Return","src":"2375:23:30"}]}}]}},{"expression":{"hexValue":"","id":6045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2451:2:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":5971,"id":6046,"nodeType":"Return","src":"2444:9:30"}]},"errorName":"","id":6048,"nodeType":"TryCatchClause","parameters":{"id":5988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5987,"mutability":"mutable","name":"nameData","nameLocation":"1730:8:30","nodeType":"VariableDeclaration","scope":6048,"src":"1717:21:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5986,"name":"bytes","nodeType":"ElementaryTypeName","src":"1717:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1716:23:30"},"src":"1708:756:30"},{"block":{"id":6051,"nodeType":"Block","src":"2471:34:30","statements":[{"expression":{"hexValue":"","id":6049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2492:2:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":5971,"id":6050,"nodeType":"Return","src":"2485:9:30"}]},"errorName":"","id":6052,"nodeType":"TryCatchClause","src":"2465:40:30"}],"externalCall":{"arguments":[{"id":5984,"name":"_LSP3_DATAKEY_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"1688:18:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[{"id":5981,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"1671:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5980,"name":"IERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5924,"src":"1662:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC725Y_$5924_$","typeString":"type(contract IERC725Y)"}},"id":5982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1662:17:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC725Y_$5924","typeString":"contract IERC725Y"}},"id":5983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1680:7:30","memberName":"getData","nodeType":"MemberAccess","referencedDeclaration":5923,"src":"1662:25:30","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view external returns (bytes memory)"}},"id":5985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1662:45:30","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6053,"nodeType":"TryStatement","src":"1658:847:30"}]},"id":6055,"implemented":true,"kind":"function","modifiers":[],"name":"getUPName","nameLocation":"1497:9:30","nodeType":"FunctionDefinition","parameters":{"id":5968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5967,"mutability":"mutable","name":"account","nameLocation":"1515:7:30","nodeType":"VariableDeclaration","scope":6055,"src":"1507:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5966,"name":"address","nodeType":"ElementaryTypeName","src":"1507:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1506:17:30"},"returnParameters":{"id":5971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6055,"src":"1547:13:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5969,"name":"string","nodeType":"ElementaryTypeName","src":"1547:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1546:15:30"},"scope":7263,"src":"1488:1023:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6091,"nodeType":"Block","src":"2767:139:30","statements":[{"expression":{"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2777:21:30","subExpression":{"baseExpression":{"id":6064,"name":"_parts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5939,"src":"2784:6:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(string memory => string storage ref[] storage ref)"}},"id":6066,"indexExpression":{"id":6065,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"2791:6:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2784:14:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6068,"nodeType":"ExpressionStatement","src":"2777:21:30"},{"body":{"id":6089,"nodeType":"Block","src":"2847:53:30","statements":[{"expression":{"arguments":[{"baseExpression":{"id":6084,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6061,"src":"2881:4:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":6086,"indexExpression":{"id":6085,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"2886:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2881:7:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"baseExpression":{"id":6080,"name":"_parts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5939,"src":"2861:6:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(string memory => string storage ref[] storage ref)"}},"id":6082,"indexExpression":{"id":6081,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"2868:6:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2861:14:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":6083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2876:4:30","memberName":"push","nodeType":"MemberAccess","src":"2861:19:30","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$","typeString":"function (string storage ref[] storage pointer,string storage ref)"}},"id":6087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2861:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6088,"nodeType":"ExpressionStatement","src":"2861:28:30"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6073,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"2825:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6074,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6061,"src":"2829:4:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":6075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2834:6:30","memberName":"length","nodeType":"MemberAccess","src":"2829:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2825:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6090,"initializationExpression":{"assignments":[6070],"declarations":[{"constant":false,"id":6070,"mutability":"mutable","name":"i","nameLocation":"2818:1:30","nodeType":"VariableDeclaration","scope":6090,"src":"2813:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6069,"name":"uint","nodeType":"ElementaryTypeName","src":"2813:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6072,"initialValue":{"hexValue":"30","id":6071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2822:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2813:10:30"},"loopExpression":{"expression":{"id":6078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2842:3:30","subExpression":{"id":6077,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"2842:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6079,"nodeType":"ExpressionStatement","src":"2842:3:30"},"nodeType":"ForStatement","src":"2808:92:30"}]},"documentation":{"id":6056,"nodeType":"StructuredDocumentation","src":"2517:176:30","text":" @dev Set up metadata components\n @param _index The index/category of components (e.g., \"colors\", \"mouths\")\n @param data Array of component values"},"id":6092,"implemented":true,"kind":"function","modifiers":[],"name":"_setUp","nameLocation":"2707:6:30","nodeType":"FunctionDefinition","parameters":{"id":6062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6058,"mutability":"mutable","name":"_index","nameLocation":"2728:6:30","nodeType":"VariableDeclaration","scope":6092,"src":"2714:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6057,"name":"string","nodeType":"ElementaryTypeName","src":"2714:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6061,"mutability":"mutable","name":"data","nameLocation":"2752:4:30","nodeType":"VariableDeclaration","scope":6092,"src":"2736:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":6059,"name":"string","nodeType":"ElementaryTypeName","src":"2736:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6060,"nodeType":"ArrayTypeName","src":"2736:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"2713:44:30"},"returnParameters":{"id":6063,"nodeType":"ParameterList","parameters":[],"src":"2767:0:30"},"scope":7263,"src":"2698:208:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6126,"nodeType":"Block","src":"3077:178:30","statements":[{"assignments":[6099],"declarations":[{"constant":false,"id":6099,"mutability":"mutable","name":"rand","nameLocation":"3095:4:30","nodeType":"VariableDeclaration","scope":6126,"src":"3087:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6098,"name":"uint256","nodeType":"ElementaryTypeName","src":"3087:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6119,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":6105,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3137:5:30","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3143:9:30","memberName":"timestamp","nodeType":"MemberAccess","src":"3137:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6107,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3154:5:30","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3160:10:30","memberName":"prevrandao","nodeType":"MemberAccess","src":"3154:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6109,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3172:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3176:6:30","memberName":"sender","nodeType":"MemberAccess","src":"3172:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6103,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3120:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3124:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"3120:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3120:63:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6102,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3110:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3110:74:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3102:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6100,"name":"uint256","nodeType":"ElementaryTypeName","src":"3102:7:30","typeDescriptions":{}}},"id":6113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3102:83:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"expression":{"baseExpression":{"id":6114,"name":"_parts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5939,"src":"3188:6:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(string memory => string storage ref[] storage ref)"}},"id":6116,"indexExpression":{"hexValue":"7479706573","id":6115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3195:7:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_685966fe6401a91cc6816a1a97f378b989bcbd82067e5b9d1a181558c11ad846","typeString":"literal_string \"types\""},"value":"types"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3188:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":6117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3204:6:30","memberName":"length","nodeType":"MemberAccess","src":"3188:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3102:108:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3087:123:30"},{"expression":{"baseExpression":{"baseExpression":{"id":6120,"name":"_parts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5939,"src":"3227:6:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(string memory => string storage ref[] storage ref)"}},"id":6122,"indexExpression":{"hexValue":"7479706573","id":6121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3234:7:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_685966fe6401a91cc6816a1a97f378b989bcbd82067e5b9d1a181558c11ad846","typeString":"literal_string \"types\""},"value":"types"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3227:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":6124,"indexExpression":{"id":6123,"name":"rand","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6099,"src":"3243:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3227:21:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":6097,"id":6125,"nodeType":"Return","src":"3220:28:30"}]},"documentation":{"id":6093,"nodeType":"StructuredDocumentation","src":"2912:91:30","text":" @dev Get random loogie type\n @return string The random loogie type"},"id":6127,"implemented":true,"kind":"function","modifiers":[],"name":"getRandomLoogieType","nameLocation":"3017:19:30","nodeType":"FunctionDefinition","parameters":{"id":6094,"nodeType":"ParameterList","parameters":[],"src":"3036:2:30"},"returnParameters":{"id":6097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6127,"src":"3062:13:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6095,"name":"string","nodeType":"ElementaryTypeName","src":"3062:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3061:15:30"},"scope":7263,"src":"3008:247:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6204,"nodeType":"Block","src":"3469:376:30","statements":[{"assignments":[6136],"declarations":[{"constant":false,"id":6136,"mutability":"mutable","name":"hexChars","nameLocation":"3492:8:30","nodeType":"VariableDeclaration","scope":6204,"src":"3479:21:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6135,"name":"bytes","nodeType":"ElementaryTypeName","src":"3479:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6138,"initialValue":{"hexValue":"30313233343536373839616263646566","id":6137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3503:18:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"nodeType":"VariableDeclarationStatement","src":"3479:42:30"},{"assignments":[6140],"declarations":[{"constant":false,"id":6140,"mutability":"mutable","name":"result","nameLocation":"3544:6:30","nodeType":"VariableDeclaration","scope":6204,"src":"3531:19:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6139,"name":"bytes","nodeType":"ElementaryTypeName","src":"3531:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6145,"initialValue":{"arguments":[{"hexValue":"36","id":6143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3563:1:30","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"}],"id":6142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3553:9:30","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":6141,"name":"bytes","nodeType":"ElementaryTypeName","src":"3557:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":6144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3553:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3531:34:30"},{"body":{"id":6197,"nodeType":"Block","src":"3616:183:30","statements":[{"assignments":[6157],"declarations":[{"constant":false,"id":6157,"mutability":"mutable","name":"byteValue","nameLocation":"3636:9:30","nodeType":"VariableDeclaration","scope":6197,"src":"3630:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6156,"name":"uint8","nodeType":"ElementaryTypeName","src":"3630:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":6164,"initialValue":{"arguments":[{"baseExpression":{"id":6160,"name":"_color","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"3654:6:30","typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"}},"id":6162,"indexExpression":{"id":6161,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"3661:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3654:9:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":6159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3648:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6158,"name":"uint8","nodeType":"ElementaryTypeName","src":"3648:5:30","typeDescriptions":{}}},"id":6163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3648:16:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"3630:34:30"},{"expression":{"id":6178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6165,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"3678:6:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6169,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6166,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"3685:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":6167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3687:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3685:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3678:11:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":6170,"name":"hexChars","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"3692:8:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6177,"indexExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6173,"name":"byteValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6157,"src":"3707:9:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":6174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3720:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3707:14:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":6172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3701:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6171,"name":"uint8","nodeType":"ElementaryTypeName","src":"3701:5:30","typeDescriptions":{}}},"id":6176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3701:21:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3692:31:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"3678:45:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6179,"nodeType":"ExpressionStatement","src":"3678:45:30"},{"expression":{"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6180,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"3737:6:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6186,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6181,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"3744:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":6182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3746:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3744:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3750:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3744:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3737:15:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":6187,"name":"hexChars","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"3755:8:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6194,"indexExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6190,"name":"byteValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6157,"src":"3770:9:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783066","id":6191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3782:4:30","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0x0f"},"src":"3770:16:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":6189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3764:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6188,"name":"uint8","nodeType":"ElementaryTypeName","src":"3764:5:30","typeDescriptions":{}}},"id":6193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3764:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3755:33:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"3737:51:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6196,"nodeType":"ExpressionStatement","src":"3737:51:30"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6150,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"3604:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"33","id":6151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:30","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"3604:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6198,"initializationExpression":{"assignments":[6147],"declarations":[{"constant":false,"id":6147,"mutability":"mutable","name":"i","nameLocation":"3597:1:30","nodeType":"VariableDeclaration","scope":6198,"src":"3589:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6146,"name":"uint256","nodeType":"ElementaryTypeName","src":"3589:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6149,"initialValue":{"hexValue":"30","id":6148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3601:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3589:13:30"},"loopExpression":{"expression":{"id":6154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3611:3:30","subExpression":{"id":6153,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"3611:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6155,"nodeType":"ExpressionStatement","src":"3611:3:30"},"nodeType":"ForStatement","src":"3584:215:30"},{"expression":{"arguments":[{"id":6201,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"3831:6:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3824:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6199,"name":"string","nodeType":"ElementaryTypeName","src":"3824:6:30","typeDescriptions":{}}},"id":6202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3824:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6134,"id":6203,"nodeType":"Return","src":"3817:21:30"}]},"documentation":{"id":6128,"nodeType":"StructuredDocumentation","src":"3261:126:30","text":" @dev Convert bytes3 to hex string\n @param _color The color bytes\n @return string The hex string"},"functionSelector":"76799136","id":6205,"implemented":true,"kind":"function","modifiers":[],"name":"toColorHexString","nameLocation":"3401:16:30","nodeType":"FunctionDefinition","parameters":{"id":6131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6130,"mutability":"mutable","name":"_color","nameLocation":"3425:6:30","nodeType":"VariableDeclaration","scope":6205,"src":"3418:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"},"typeName":{"id":6129,"name":"bytes3","nodeType":"ElementaryTypeName","src":"3418:6:30","typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"}},"visibility":"internal"}],"src":"3417:15:30"},"returnParameters":{"id":6134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6205,"src":"3454:13:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6132,"name":"string","nodeType":"ElementaryTypeName","src":"3454:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3453:15:30"},"scope":7263,"src":"3392:453:30","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":6285,"nodeType":"Block","src":"4075:397:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6213,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6208,"src":"4089:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4095:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4089:7:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6219,"nodeType":"IfStatement","src":"4085:48:30","trueBody":{"id":6218,"nodeType":"Block","src":"4098:35:30","statements":[{"expression":{"hexValue":"30","id":6216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4119:3:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":6212,"id":6217,"nodeType":"Return","src":"4112:10:30"}]}},{"assignments":[6221],"declarations":[{"constant":false,"id":6221,"mutability":"mutable","name":"j","nameLocation":"4147:1:30","nodeType":"VariableDeclaration","scope":6285,"src":"4142:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6220,"name":"uint","nodeType":"ElementaryTypeName","src":"4142:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6223,"initialValue":{"id":6222,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6208,"src":"4151:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4142:11:30"},{"assignments":[6225],"declarations":[{"constant":false,"id":6225,"mutability":"mutable","name":"len","nameLocation":"4168:3:30","nodeType":"VariableDeclaration","scope":6285,"src":"4163:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6224,"name":"uint","nodeType":"ElementaryTypeName","src":"4163:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6226,"nodeType":"VariableDeclarationStatement","src":"4163:8:30"},{"body":{"id":6237,"nodeType":"Block","src":"4196:51:30","statements":[{"expression":{"id":6231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4210:5:30","subExpression":{"id":6230,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6225,"src":"4210:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6232,"nodeType":"ExpressionStatement","src":"4210:5:30"},{"expression":{"id":6235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6233,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"4229:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":6234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4234:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"4229:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6236,"nodeType":"ExpressionStatement","src":"4229:7:30"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6227,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"4188:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4193:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4188:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6238,"nodeType":"WhileStatement","src":"4181:66:30"},{"assignments":[6240],"declarations":[{"constant":false,"id":6240,"mutability":"mutable","name":"bstr","nameLocation":"4269:4:30","nodeType":"VariableDeclaration","scope":6285,"src":"4256:17:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6239,"name":"bytes","nodeType":"ElementaryTypeName","src":"4256:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6245,"initialValue":{"arguments":[{"id":6243,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6225,"src":"4286:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4276:9:30","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":6241,"name":"bytes","nodeType":"ElementaryTypeName","src":"4280:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":6244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4256:34:30"},{"assignments":[6247],"declarations":[{"constant":false,"id":6247,"mutability":"mutable","name":"k","nameLocation":"4305:1:30","nodeType":"VariableDeclaration","scope":6285,"src":"4300:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6246,"name":"uint","nodeType":"ElementaryTypeName","src":"4300:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6249,"initialValue":{"id":6248,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6225,"src":"4309:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4300:12:30"},{"expression":{"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6250,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"4322:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6251,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6208,"src":"4326:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4322:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6253,"nodeType":"ExpressionStatement","src":"4322:6:30"},{"body":{"id":6278,"nodeType":"Block","src":"4353:84:30","statements":[{"expression":{"id":6272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6257,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"4367:4:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6260,"indexExpression":{"id":6259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4372:3:30","subExpression":{"id":6258,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6247,"src":"4374:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4367:9:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":6265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4392:2:30","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6266,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"4397:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":6267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4401:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"4397:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4392:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4386:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6263,"name":"uint8","nodeType":"ElementaryTypeName","src":"4386:5:30","typeDescriptions":{}}},"id":6270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4386:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":6262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4379:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":6261,"name":"bytes1","nodeType":"ElementaryTypeName","src":"4379:6:30","typeDescriptions":{}}},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4379:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"4367:38:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6273,"nodeType":"ExpressionStatement","src":"4367:38:30"},{"expression":{"id":6276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6274,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"4419:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":6275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4424:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"4419:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6277,"nodeType":"ExpressionStatement","src":"4419:7:30"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6254,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"4345:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4350:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4345:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6279,"nodeType":"WhileStatement","src":"4338:99:30"},{"expression":{"arguments":[{"id":6282,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"4460:4:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4453:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6280,"name":"string","nodeType":"ElementaryTypeName","src":"4453:6:30","typeDescriptions":{}}},"id":6283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4453:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6212,"id":6284,"nodeType":"Return","src":"4446:19:30"}]},"documentation":{"id":6206,"nodeType":"StructuredDocumentation","src":"3855:138:30","text":" @dev Convert uint to string\n @param _i The uint to convert\n @return _uintAsString The string representation"},"functionSelector":"f76f950e","id":6286,"implemented":true,"kind":"function","modifiers":[],"name":"uint2str","nameLocation":"4007:8:30","nodeType":"FunctionDefinition","parameters":{"id":6209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6208,"mutability":"mutable","name":"_i","nameLocation":"4021:2:30","nodeType":"VariableDeclaration","scope":6286,"src":"4016:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6207,"name":"uint","nodeType":"ElementaryTypeName","src":"4016:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4015:9:30"},"returnParameters":{"id":6212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6211,"mutability":"mutable","name":"_uintAsString","nameLocation":"4060:13:30","nodeType":"VariableDeclaration","scope":6286,"src":"4046:27:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6210,"name":"string","nodeType":"ElementaryTypeName","src":"4046:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4045:29:30"},"scope":7263,"src":"3998:474:30","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":6358,"nodeType":"Block","src":"4691:328:30","statements":[{"assignments":[6295],"declarations":[{"constant":false,"id":6295,"mutability":"mutable","name":"hexChars","nameLocation":"4714:8:30","nodeType":"VariableDeclaration","scope":6358,"src":"4701:21:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6294,"name":"bytes","nodeType":"ElementaryTypeName","src":"4701:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6297,"initialValue":{"hexValue":"30313233343536373839616263646566","id":6296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4725:18:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"nodeType":"VariableDeclarationStatement","src":"4701:42:30"},{"assignments":[6299],"declarations":[{"constant":false,"id":6299,"mutability":"mutable","name":"buffer","nameLocation":"4766:6:30","nodeType":"VariableDeclaration","scope":6358,"src":"4753:19:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6298,"name":"bytes","nodeType":"ElementaryTypeName","src":"4753:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6304,"initialValue":{"arguments":[{"hexValue":"3634","id":6302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4785:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"}],"id":6301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4775:9:30","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":6300,"name":"bytes","nodeType":"ElementaryTypeName","src":"4779:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":6303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4775:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4753:35:30"},{"body":{"id":6351,"nodeType":"Block","src":"4840:133:30","statements":[{"expression":{"id":6330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6315,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"4854:6:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6319,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6316,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"4861:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":6317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4863:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4861:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4854:11:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":6320,"name":"hexChars","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6295,"src":"4868:8:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6329,"indexExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":6323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"4883:5:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6325,"indexExpression":{"id":6324,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"4889:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4883:8:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":6322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4877:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6321,"name":"uint8","nodeType":"ElementaryTypeName","src":"4877:5:30","typeDescriptions":{}}},"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4877:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":6327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4896:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4877:20:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4868:30:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"4854:44:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6331,"nodeType":"ExpressionStatement","src":"4854:44:30"},{"expression":{"id":6349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6332,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"4912:6:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6338,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6333,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"4919:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":6334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4921:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4919:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4925:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4919:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4912:15:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":6339,"name":"hexChars","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6295,"src":"4930:8:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6348,"indexExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":6342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"4945:5:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6344,"indexExpression":{"id":6343,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"4951:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4945:8:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":6341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4939:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6340,"name":"uint8","nodeType":"ElementaryTypeName","src":"4939:5:30","typeDescriptions":{}}},"id":6345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4939:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783066","id":6346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4957:4:30","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0x0f"},"src":"4939:22:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4930:32:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"4912:50:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6350,"nodeType":"ExpressionStatement","src":"4912:50:30"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6309,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"4827:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":6310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4831:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4827:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6352,"initializationExpression":{"assignments":[6306],"declarations":[{"constant":false,"id":6306,"mutability":"mutable","name":"i","nameLocation":"4820:1:30","nodeType":"VariableDeclaration","scope":6352,"src":"4812:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6305,"name":"uint256","nodeType":"ElementaryTypeName","src":"4812:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6308,"initialValue":{"hexValue":"30","id":6307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4824:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4812:13:30"},"loopExpression":{"expression":{"id":6313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4835:3:30","subExpression":{"id":6312,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"4835:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6314,"nodeType":"ExpressionStatement","src":"4835:3:30"},"nodeType":"ForStatement","src":"4807:166:30"},{"expression":{"arguments":[{"id":6355,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"5005:6:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4998:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6353,"name":"string","nodeType":"ElementaryTypeName","src":"4998:6:30","typeDescriptions":{}}},"id":6356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4998:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6293,"id":6357,"nodeType":"Return","src":"4991:21:30"}]},"documentation":{"id":6287,"nodeType":"StructuredDocumentation","src":"4478:129:30","text":" @dev Convert bytes32 to string\n @param value The bytes32 to convert\n @return string The hex string"},"functionSelector":"c68b3787","id":6359,"implemented":true,"kind":"function","modifiers":[],"name":"bytes32ToHexString","nameLocation":"4621:18:30","nodeType":"FunctionDefinition","parameters":{"id":6290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6289,"mutability":"mutable","name":"value","nameLocation":"4648:5:30","nodeType":"VariableDeclaration","scope":6359,"src":"4640:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6288,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4640:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4639:15:30"},"returnParameters":{"id":6293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6359,"src":"4676:13:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6291,"name":"string","nodeType":"ElementaryTypeName","src":"4676:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4675:15:30"},"scope":7263,"src":"4612:407:30","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":6756,"nodeType":"Block","src":"5752:5632:30","statements":[{"assignments":[6380],"declarations":[{"constant":false,"id":6380,"mutability":"mutable","name":"bodyColor","nameLocation":"5843:9:30","nodeType":"VariableDeclaration","scope":6756,"src":"5829:23:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6379,"name":"string","nodeType":"ElementaryTypeName","src":"5829:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":6381,"nodeType":"VariableDeclarationStatement","src":"5829:23:30"},{"condition":{"id":6382,"name":"isUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"5875:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6602,"nodeType":"Block","src":"6758:791:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":6496,"name":"loogieType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"6841:10:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6835:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6494,"name":"bytes","nodeType":"ElementaryTypeName","src":"6835:5:30","typeDescriptions":{}}},"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6835:17:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6493,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6825:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6825:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"677265656e","id":6502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6873:7:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_f99e8d094ee97e7be9a3d7269f09f9996041160cc5c134b6a863be5b0ce9b5bd","typeString":"literal_string \"green\""},"value":"green"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f99e8d094ee97e7be9a3d7269f09f9996041160cc5c134b6a863be5b0ce9b5bd","typeString":"literal_string \"green\""}],"id":6501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6867:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6500,"name":"bytes","nodeType":"ElementaryTypeName","src":"6867:5:30","typeDescriptions":{}}},"id":6503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6867:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6499,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6857:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6857:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6825:57:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":6514,"name":"loogieType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"6964:10:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6958:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6512,"name":"bytes","nodeType":"ElementaryTypeName","src":"6958:5:30","typeDescriptions":{}}},"id":6515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6958:17:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6511,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6948:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6948:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"626c7565","id":6520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6996:6:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_fa187c1e7b6b42ab8b2d9415ab7e6b1e71b551fcdc8151ebafe46e40a10d90ad","typeString":"literal_string \"blue\""},"value":"blue"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_fa187c1e7b6b42ab8b2d9415ab7e6b1e71b551fcdc8151ebafe46e40a10d90ad","typeString":"literal_string \"blue\""}],"id":6519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6990:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6518,"name":"bytes","nodeType":"ElementaryTypeName","src":"6990:5:30","typeDescriptions":{}}},"id":6521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6990:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6517,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6980:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6980:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6948:56:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":6532,"name":"loogieType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"7086:10:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7080:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6530,"name":"bytes","nodeType":"ElementaryTypeName","src":"7080:5:30","typeDescriptions":{}}},"id":6533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7080:17:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6529,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7070:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7070:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"726564","id":6538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7118:5:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_8eec9d5ae546887db6b6a3889e6591fe96f3c16bc9d921551a4aac3adce52996","typeString":"literal_string \"red\""},"value":"red"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8eec9d5ae546887db6b6a3889e6591fe96f3c16bc9d921551a4aac3adce52996","typeString":"literal_string \"red\""}],"id":6537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7112:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6536,"name":"bytes","nodeType":"ElementaryTypeName","src":"7112:5:30","typeDescriptions":{}}},"id":6539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7112:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6535,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7102:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7102:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7070:55:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":6550,"name":"loogieType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"7207:10:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7201:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6548,"name":"bytes","nodeType":"ElementaryTypeName","src":"7201:5:30","typeDescriptions":{}}},"id":6551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7201:17:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6547,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7191:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"707572706c65","id":6556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7239:8:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ceb74360896f85b39388579e9f44ea71ffeef099012760c53d69361c5916c4e","typeString":"literal_string \"purple\""},"value":"purple"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0ceb74360896f85b39388579e9f44ea71ffeef099012760c53d69361c5916c4e","typeString":"literal_string \"purple\""}],"id":6555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7233:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6554,"name":"bytes","nodeType":"ElementaryTypeName","src":"7233:5:30","typeDescriptions":{}}},"id":6557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7233:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6553,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7223:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7223:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7191:58:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":6568,"name":"loogieType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"7331:10:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7325:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6566,"name":"bytes","nodeType":"ElementaryTypeName","src":"7325:5:30","typeDescriptions":{}}},"id":6569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7325:17:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6565,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7315:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7315:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"79656c6c6f77","id":6574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7363:8:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_27617207effe6bfd81a3e2b21d8a20c4e622b23e5422d607771b4f8b8ba006fa","typeString":"literal_string \"yellow\""},"value":"yellow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_27617207effe6bfd81a3e2b21d8a20c4e622b23e5422d607771b4f8b8ba006fa","typeString":"literal_string \"yellow\""}],"id":6573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7357:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6572,"name":"bytes","nodeType":"ElementaryTypeName","src":"7357:5:30","typeDescriptions":{}}},"id":6575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7357:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6571,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7347:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7347:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7315:58:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6596,"nodeType":"Block","src":"7435:104:30","statements":[{"expression":{"id":6594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6583,"name":"bodyColor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"7453:9:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"23","id":6588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7489:3:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_ace738c68088218d015fbdce138f062893d86818ac98932f7ce2907c5976fbde","typeString":"literal_string \"#\""},"value":"#"},{"arguments":[{"id":6590,"name":"colorValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"7511:10:30","typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes3","typeString":"bytes3"}],"id":6589,"name":"toColorHexString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"7494:16:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes3_$returns$_t_string_memory_ptr_$","typeString":"function (bytes3) pure returns (string memory)"}},"id":6591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7494:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ace738c68088218d015fbdce138f062893d86818ac98932f7ce2907c5976fbde","typeString":"literal_string \"#\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":6586,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7472:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7476:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"7472:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7472:51:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7465:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6584,"name":"string","nodeType":"ElementaryTypeName","src":"7465:6:30","typeDescriptions":{}}},"id":6593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7465:59:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"7453:71:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6595,"nodeType":"ExpressionStatement","src":"7453:71:30"}]},"id":6597,"nodeType":"IfStatement","src":"7311:228:30","trueBody":{"id":6582,"nodeType":"Block","src":"7375:54:30","statements":[{"expression":{"id":6580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6578,"name":"bodyColor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"7393:9:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"23666163633135","id":6579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7405:9:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_5c429240eb80bae8c8233f81d399961fe5ff4d0d273717ea22d33a73c100fd4d","typeString":"literal_string \"#facc15\""},"value":"#facc15"},"src":"7393:21:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6581,"nodeType":"ExpressionStatement","src":"7393:21:30"}]}},"id":6598,"nodeType":"IfStatement","src":"7187:352:30","trueBody":{"id":6564,"nodeType":"Block","src":"7251:54:30","statements":[{"expression":{"id":6562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6560,"name":"bodyColor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"7269:9:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"23613835356637","id":6561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7281:9:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_f0ed949e70d2454f9167bba4ab6b8d0d146f826f1ce53c120d89502468a17f88","typeString":"literal_string \"#a855f7\""},"value":"#a855f7"},"src":"7269:21:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6563,"nodeType":"ExpressionStatement","src":"7269:21:30"}]}},"id":6599,"nodeType":"IfStatement","src":"7066:473:30","trueBody":{"id":6546,"nodeType":"Block","src":"7127:54:30","statements":[{"expression":{"id":6544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6542,"name":"bodyColor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"7145:9:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"23656634343434","id":6543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7157:9:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_50b397cde8fab5177b7c16709fea41a662b1d126155b88df5c6c0bc81eaff36b","typeString":"literal_string \"#ef4444\""},"value":"#ef4444"},"src":"7145:21:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6545,"nodeType":"ExpressionStatement","src":"7145:21:30"}]}},"id":6600,"nodeType":"IfStatement","src":"6944:595:30","trueBody":{"id":6528,"nodeType":"Block","src":"7006:54:30","statements":[{"expression":{"id":6526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6524,"name":"bodyColor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"7024:9:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"23336238326636","id":6525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7036:9:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6493fd6706204ca45bea01aa45ca1b7347c138a6e78ae6794fbd0f56f8e42c6","typeString":"literal_string \"#3b82f6\""},"value":"#3b82f6"},"src":"7024:21:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6527,"nodeType":"ExpressionStatement","src":"7024:21:30"}]}},"id":6601,"nodeType":"IfStatement","src":"6821:718:30","trueBody":{"id":6510,"nodeType":"Block","src":"6884:54:30","statements":[{"expression":{"id":6508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6506,"name":"bodyColor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"6902:9:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"23613365363335","id":6507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6914:9:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_8456dd4bb47e7f2a9d86e5d8ec089f0752a22bdd928c20b2aacb95eaca319215","typeString":"literal_string \"#a3e635\""},"value":"#a3e635"},"src":"6902:21:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6509,"nodeType":"ExpressionStatement","src":"6902:21:30"}]}}]},"id":6603,"nodeType":"IfStatement","src":"5871:1678:30","trueBody":{"id":6492,"nodeType":"Block","src":"5881:871:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":6386,"name":"loogieType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"5960:10:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5954:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6384,"name":"bytes","nodeType":"ElementaryTypeName","src":"5954:5:30","typeDescriptions":{}}},"id":6387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5954:17:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6383,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5944:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5944:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"677265656e","id":6392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5992:7:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_f99e8d094ee97e7be9a3d7269f09f9996041160cc5c134b6a863be5b0ce9b5bd","typeString":"literal_string \"green\""},"value":"green"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f99e8d094ee97e7be9a3d7269f09f9996041160cc5c134b6a863be5b0ce9b5bd","typeString":"literal_string \"green\""}],"id":6391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5986:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6390,"name":"bytes","nodeType":"ElementaryTypeName","src":"5986:5:30","typeDescriptions":{}}},"id":6393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5986:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6389,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5976:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5976:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5944:57:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":6404,"name":"loogieType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"6099:10:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6093:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6402,"name":"bytes","nodeType":"ElementaryTypeName","src":"6093:5:30","typeDescriptions":{}}},"id":6405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6093:17:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6401,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6083:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6083:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"626c7565","id":6410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6131:6:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_fa187c1e7b6b42ab8b2d9415ab7e6b1e71b551fcdc8151ebafe46e40a10d90ad","typeString":"literal_string \"blue\""},"value":"blue"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_fa187c1e7b6b42ab8b2d9415ab7e6b1e71b551fcdc8151ebafe46e40a10d90ad","typeString":"literal_string \"blue\""}],"id":6409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6125:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6408,"name":"bytes","nodeType":"ElementaryTypeName","src":"6125:5:30","typeDescriptions":{}}},"id":6411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6125:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6407,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6115:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6115:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6083:56:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":6422,"name":"loogieType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"6236:10:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6230:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6420,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:30","typeDescriptions":{}}},"id":6423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6230:17:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6419,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6220:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6220:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"726564","id":6428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6268:5:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_8eec9d5ae546887db6b6a3889e6591fe96f3c16bc9d921551a4aac3adce52996","typeString":"literal_string \"red\""},"value":"red"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8eec9d5ae546887db6b6a3889e6591fe96f3c16bc9d921551a4aac3adce52996","typeString":"literal_string \"red\""}],"id":6427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6262:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6426,"name":"bytes","nodeType":"ElementaryTypeName","src":"6262:5:30","typeDescriptions":{}}},"id":6429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6262:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6425,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6252:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6252:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6220:55:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":6440,"name":"loogieType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"6376:10:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6370:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6438,"name":"bytes","nodeType":"ElementaryTypeName","src":"6370:5:30","typeDescriptions":{}}},"id":6441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6370:17:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6437,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6360:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6360:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"707572706c65","id":6446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6408:8:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ceb74360896f85b39388579e9f44ea71ffeef099012760c53d69361c5916c4e","typeString":"literal_string \"purple\""},"value":"purple"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0ceb74360896f85b39388579e9f44ea71ffeef099012760c53d69361c5916c4e","typeString":"literal_string \"purple\""}],"id":6445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6402:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6444,"name":"bytes","nodeType":"ElementaryTypeName","src":"6402:5:30","typeDescriptions":{}}},"id":6447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6402:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6443,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6392:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6392:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6360:58:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":6458,"name":"loogieType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"6517:10:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6511:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6456,"name":"bytes","nodeType":"ElementaryTypeName","src":"6511:5:30","typeDescriptions":{}}},"id":6459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6511:17:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6455,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6501:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6501:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"79656c6c6f77","id":6464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6549:8:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_27617207effe6bfd81a3e2b21d8a20c4e622b23e5422d607771b4f8b8ba006fa","typeString":"literal_string \"yellow\""},"value":"yellow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_27617207effe6bfd81a3e2b21d8a20c4e622b23e5422d607771b4f8b8ba006fa","typeString":"literal_string \"yellow\""}],"id":6463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6543:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6462,"name":"bytes","nodeType":"ElementaryTypeName","src":"6543:5:30","typeDescriptions":{}}},"id":6465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6543:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6461,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6533:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6533:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6501:58:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6486,"nodeType":"Block","src":"6638:104:30","statements":[{"expression":{"id":6484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6473,"name":"bodyColor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"6656:9:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"23","id":6478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6692:3:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_ace738c68088218d015fbdce138f062893d86818ac98932f7ce2907c5976fbde","typeString":"literal_string \"#\""},"value":"#"},{"arguments":[{"id":6480,"name":"colorValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"6714:10:30","typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes3","typeString":"bytes3"}],"id":6479,"name":"toColorHexString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"6697:16:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes3_$returns$_t_string_memory_ptr_$","typeString":"function (bytes3) pure returns (string memory)"}},"id":6481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6697:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ace738c68088218d015fbdce138f062893d86818ac98932f7ce2907c5976fbde","typeString":"literal_string \"#\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":6476,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6675:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6679:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"6675:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6675:51:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6668:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6474,"name":"string","nodeType":"ElementaryTypeName","src":"6668:6:30","typeDescriptions":{}}},"id":6483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6668:59:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"6656:71:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6485,"nodeType":"ExpressionStatement","src":"6656:71:30"}]},"id":6487,"nodeType":"IfStatement","src":"6497:245:30","trueBody":{"id":6472,"nodeType":"Block","src":"6561:71:30","statements":[{"expression":{"id":6470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6468,"name":"bodyColor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"6579:9:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"23666663633030","id":6469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6591:9:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_4851ec83a1fcbdd43cb6dd8c7a42ae170c7be664862561b4120774fc91e8795e","typeString":"literal_string \"#ffcc00\""},"value":"#ffcc00"},"src":"6579:21:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6471,"nodeType":"ExpressionStatement","src":"6579:21:30"}]}},"id":6488,"nodeType":"IfStatement","src":"6356:386:30","trueBody":{"id":6454,"nodeType":"Block","src":"6420:71:30","statements":[{"expression":{"id":6452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6450,"name":"bodyColor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"6438:9:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"23636330306666","id":6451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6450:9:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_ac39c4016c25be69fabda4be5ef991beab985cf664648aa7ad249e789b051c79","typeString":"literal_string \"#cc00ff\""},"value":"#cc00ff"},"src":"6438:21:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6453,"nodeType":"ExpressionStatement","src":"6438:21:30"}]}},"id":6489,"nodeType":"IfStatement","src":"6216:526:30","trueBody":{"id":6436,"nodeType":"Block","src":"6277:73:30","statements":[{"expression":{"id":6434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6432,"name":"bodyColor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"6295:9:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"23666630303636","id":6433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6307:9:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_feea4b81a12df75bbafd6e2e42c16ffb6d9ea4dd1a26ac5458cb4efff203c897","typeString":"literal_string \"#ff0066\""},"value":"#ff0066"},"src":"6295:21:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6435,"nodeType":"ExpressionStatement","src":"6295:21:30"}]}},"id":6490,"nodeType":"IfStatement","src":"6079:663:30","trueBody":{"id":6418,"nodeType":"Block","src":"6141:69:30","statements":[{"expression":{"id":6416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6414,"name":"bodyColor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"6159:9:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"23303063636666","id":6415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6171:9:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_c33594c4f63c9d62e928eaeeb11b2ae0736245372a8ca39d027d3d45d8ba7d60","typeString":"literal_string \"#00ccff\""},"value":"#00ccff"},"src":"6159:21:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6417,"nodeType":"ExpressionStatement","src":"6159:21:30"}]}},"id":6491,"nodeType":"IfStatement","src":"5940:802:30","trueBody":{"id":6400,"nodeType":"Block","src":"6003:70:30","statements":[{"expression":{"id":6398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6396,"name":"bodyColor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"6021:9:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"23303066663030","id":6397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6033:9:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_c84abec21ba1fee09b64be2206d75e3d0bfa99fc7af73751b1fd348db78e9eb7","typeString":"literal_string \"#00ff00\""},"value":"#00ff00"},"src":"6021:21:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6399,"nodeType":"ExpressionStatement","src":"6021:21:30"}]}}]}},{"assignments":[6605],"declarations":[{"constant":false,"id":6605,"mutability":"mutable","name":"hasMatrixEffect","nameLocation":"7701:15:30","nodeType":"VariableDeclaration","scope":6756,"src":"7696:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6604,"name":"bool","nodeType":"ElementaryTypeName","src":"7696:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6607,"initialValue":{"hexValue":"66616c7365","id":6606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7719:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"7696:28:30"},{"assignments":[6609],"declarations":[{"constant":false,"id":6609,"mutability":"mutable","name":"matrixSeed","nameLocation":"7742:10:30","nodeType":"VariableDeclaration","scope":6756,"src":"7734:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6608,"name":"uint256","nodeType":"ElementaryTypeName","src":"7734:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6620,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":6615,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6362,"src":"7790:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"6d6174726978","id":6616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7799:8:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_9b152782b95c87ae876891401ceb0e5f314dc0b9df887794d859aa45676f8305","typeString":"literal_string \"matrix\""},"value":"matrix"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_stringliteral_9b152782b95c87ae876891401ceb0e5f314dc0b9df887794d859aa45676f8305","typeString":"literal_string \"matrix\""}],"expression":{"id":6613,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7773:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7777:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"7773:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7773:35:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6612,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7763:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:46:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7755:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6610,"name":"uint256","nodeType":"ElementaryTypeName","src":"7755:7:30","typeDescriptions":{}}},"id":6619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7755:55:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7734:76:30"},{"condition":{"id":6621,"name":"isUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"7824:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6639,"nodeType":"Block","src":"7911:76:30","statements":[{"expression":{"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6631,"name":"hasMatrixEffect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"7925:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6632,"name":"matrixSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6609,"src":"7943:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"34","id":6633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7956:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"7943:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7961:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7943:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7925:37:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6638,"nodeType":"ExpressionStatement","src":"7925:37:30"}]},"id":6640,"nodeType":"IfStatement","src":"7820:167:30","trueBody":{"id":6630,"nodeType":"Block","src":"7830:75:30","statements":[{"expression":{"id":6628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6622,"name":"hasMatrixEffect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"7844:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6623,"name":"matrixSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6609,"src":"7862:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"34","id":6624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7875:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"7862:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"33","id":6626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7879:1:30","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"7862:18:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7844:36:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6629,"nodeType":"ExpressionStatement","src":"7844:36:30"}]}},{"assignments":[6642],"declarations":[{"constant":false,"id":6642,"mutability":"mutable","name":"matrixColor","nameLocation":"8066:11:30","nodeType":"VariableDeclaration","scope":6756,"src":"8052:25:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6641,"name":"string","nodeType":"ElementaryTypeName","src":"8052:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":6647,"initialValue":{"condition":{"id":6643,"name":"isUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"8080:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"23303066663030","id":6645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8099:9:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_c84abec21ba1fee09b64be2206d75e3d0bfa99fc7af73751b1fd348db78e9eb7","typeString":"literal_string \"#00ff00\""},"value":"#00ff00"},"id":6646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8080:28:30","trueExpression":{"hexValue":"23666630306666","id":6644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8087:9:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6c7e729c3a6c86e4b17e2365164514096f10fa5fdab1587a39b007cafac43ad","typeString":"literal_string \"#ff00ff\""},"value":"#ff00ff"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"8052:56:30"},{"assignments":[6649],"declarations":[{"constant":false,"id":6649,"mutability":"mutable","name":"mouthTranslate","nameLocation":"8225:14:30","nodeType":"VariableDeclaration","scope":6756,"src":"8217:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6648,"name":"uint256","nodeType":"ElementaryTypeName","src":"8217:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6658,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"383130","id":6650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8243:3:30","typeDescriptions":{"typeIdentifier":"t_rational_810_by_1","typeString":"int_const 810"},"value":"810"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"39","id":6651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8249:1:30","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6652,"name":"chubbinessValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6368,"src":"8253:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8249:19:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8243:25:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6655,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8242:27:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3131","id":6656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8272:2:30","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"8242:32:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8217:57:30"},{"assignments":[6660],"declarations":[{"constant":false,"id":6660,"mutability":"mutable","name":"svg","nameLocation":"8373:3:30","nodeType":"VariableDeclaration","scope":6756,"src":"8359:17:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6659,"name":"string","nodeType":"ElementaryTypeName","src":"8359:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":6753,"initialValue":{"arguments":[{"arguments":[{"hexValue":"3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f737667222076696577426f783d223020302034303020343030222077696474683d2234303022206865696768743d22343030223e","id":6665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8433:89:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_1d852380b96887e97b3052f15f3704e99551a6e179af023e95b26edff6485220","typeString":"literal_string \"<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\" width=\"400\" height=\"400\">\""},"value":"<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\" width=\"400\" height=\"400\">"},{"hexValue":"3c646566733e","id":6666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8540:8:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_c9d6f35adafbd6db05cf66701a579ef4e1499ac0364b80726ad93d0f9855ba3a","typeString":"literal_string \"<defs>\""},"value":"<defs>"},{"hexValue":"3c7374796c653e","id":6667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8566:9:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_fd5a0d787cf347f628d3cc5a623045c0f7492117e2d86a8be4cd59eecfd578bf","typeString":"literal_string \"<style>\""},"value":"<style>"},{"hexValue":"40696d706f72742075726c282268747470733a2f2f666f6e74732e676f6f676c65617069732e636f6d2f637373323f66616d696c793d436f6d69632b53616e732b4d5326616d703b646973706c61793d7377617022293b","id":6668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8593:89:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_c66d8903fc03d97d844a57719e7973d08cc00dbf0dbb0f50e974c08008df134d","typeString":"literal_string \"@import url(\"https://fonts.googleapis.com/css2?family=Comic+Sans+MS&amp;display=swap\");\""},"value":"@import url(\"https://fonts.googleapis.com/css2?family=Comic+Sans+MS&amp;display=swap\");"},{"hexValue":"2e757365726e616d65207b20666f6e742d66616d696c793a2022436f6d69632053616e73204d53222c20637572736976653b20666f6e742d73697a653a20313670783b2066696c6c3a2077686974653b20746578742d616e63686f723a206d6964646c653b207d","id":6669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8700:105:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_2dd3b8053b9285b187050db77876e7c666f09e8189f80c8a63aa838161c243a8","typeString":"literal_string \".username { font-family: \"Comic Sans MS\", cursive; font-size: 16px; fill: white; text-anchor: middle; }\""},"value":".username { font-family: \"Comic Sans MS\", cursive; font-size: 16px; fill: white; text-anchor: middle; }"},{"hexValue":"2e6d61747269782d63686172207b20666f6e742d66616d696c793a206d6f6e6f73706163653b2066696c6c3a20","id":6670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8823:47:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_a4729afe2e1f00cdf67789303f706063abe6c965d8cc7b7a1c6d27be2e6e3ab3","typeString":"literal_string \".matrix-char { font-family: monospace; fill: \""},"value":".matrix-char { font-family: monospace; fill: "},{"id":6671,"name":"matrixColor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6642,"src":"8872:11:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"3b206f7061636974793a20302e333b20616e696d6174696f6e3a206661646520337320696e66696e6974652c2066616c6c203873206c696e65617220696e66696e6974653b207d","id":6672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8885:73:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_dbd5b3ef33eabcc534b5f39a54b5be5473a68a512e3dd037467cbf2de0178bec","typeString":"literal_string \"; opacity: 0.3; animation: fade 3s infinite, fall 8s linear infinite; }\""},"value":"; opacity: 0.3; animation: fade 3s infinite, fall 8s linear infinite; }"},{"hexValue":"406b65796672616d65732066616465207b203025207b206f7061636974793a20302e323b207d20333025207b206f7061636974793a20302e393b207d20373025207b206f7061636974793a20302e393b207d2031303025207b206f7061636974793a20302e323b207d207d","id":6673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8976:109:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_3a422121f67a7d891c8f75eb7f3818592526a248cf443ea1796ff6f7de8c9c85","typeString":"literal_string \"@keyframes fade { 0% { opacity: 0.2; } 30% { opacity: 0.9; } 70% { opacity: 0.9; } 100% { opacity: 0.2; } }\""},"value":"@keyframes fade { 0% { opacity: 0.2; } 30% { opacity: 0.9; } 70% { opacity: 0.9; } 100% { opacity: 0.2; } }"},{"hexValue":"406b65796672616d65732066616c6c207b2066726f6d207b207472616e73666f726d3a207472616e736c61746559282d32307078293b207d20746f207b207472616e73666f726d3a207472616e736c61746559283432307078293b207d207d","id":6674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9103:97:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_1772d2b70f72ceb48938fa2ef04656d8b604d004a760133e7f45a0089a39783c","typeString":"literal_string \"@keyframes fall { from { transform: translateY(-20px); } to { transform: translateY(420px); } }\""},"value":"@keyframes fall { from { transform: translateY(-20px); } to { transform: translateY(420px); } }"},{"hexValue":"3c2f7374796c653e","id":6675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9218:10:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6c43c5e022e7a8badca2c05b60ce72ed95da67bc2b3e1f2653d233d3d350e5","typeString":"literal_string \"</style>\""},"value":"</style>"},{"condition":{"id":6676,"name":"hasMatrixEffect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"9246:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":6680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9300:2:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":6681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9246:56:30","trueExpression":{"arguments":[{"id":6678,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6362,"src":"9289:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6677,"name":"generateMatrixRainEffect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6781,"src":"9264:24:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_string_memory_ptr_$","typeString":"function (bytes32) pure returns (string memory)"}},"id":6679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9264:33:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"3c2f646566733e","id":6682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9320:9:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_bed599d0025e0618137b41a2a30b05693d5ffd7547da6408dc30d1faba1b52ab","typeString":"literal_string \"</defs>\""},"value":"</defs>"},{"hexValue":"3c726563742077696474683d2234303022206865696768743d22343030222066696c6c3d22626c61636b222f3e","id":6683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9347:47:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_b14f23b30720fbe30e44160e0b6bd59adf4b10eb1e27986a9b765e2e0ea8891f","typeString":"literal_string \"<rect width=\"400\" height=\"400\" fill=\"black\"/>\""},"value":"<rect width=\"400\" height=\"400\" fill=\"black\"/>"},{"condition":{"id":6684,"name":"hasMatrixEffect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"9412:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":6688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9467:2:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9412:57:30","trueExpression":{"arguments":[{"id":6686,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6362,"src":"9456:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6685,"name":"generateRandomMatrixChars","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"9430:25:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_string_memory_ptr_$","typeString":"function (bytes32) pure returns (string memory)"}},"id":6687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9430:34:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"3c6720636c6173733d226c6f6f6769652d636f6e7461696e6572223e","id":6690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9487:30:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_c7e821e30b7d2d2509bc254692b558b86ecf84300cc6d3df405550e1f0ec7f57","typeString":"literal_string \"<g class=\"loogie-container\">\""},"value":"<g class=\"loogie-container\">"},{"hexValue":"3c672069643d2265796531223e","id":6691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9564:15:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_6c8219380cbf9fbdf0a9f12e08a72620c184c68040a5dee5cf099dd68270b5b3","typeString":"literal_string \"<g id=\"eye1\">\""},"value":"<g id=\"eye1\">"},{"hexValue":"3c656c6c69707365207374726f6b652d77696474683d2233222072793d2232392e35222072783d2232392e35222069643d227376675f31222063793d223135342e35222063783d223138312e3522207374726f6b653d2223303030222066696c6c3d2223666666222f3e","id":6692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9597:108:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f0e07dcb4048607e3b1ff4acd3802e16fbad6e49c164d9c18392a2542d5d8ed","typeString":"literal_string \"<ellipse stroke-width=\"3\" ry=\"29.5\" rx=\"29.5\" id=\"svg_1\" cy=\"154.5\" cx=\"181.5\" stroke=\"#000\" fill=\"#fff\"/>\""},"value":"<ellipse stroke-width=\"3\" ry=\"29.5\" rx=\"29.5\" id=\"svg_1\" cy=\"154.5\" cx=\"181.5\" stroke=\"#000\" fill=\"#fff\"/>"},{"hexValue":"3c656c6c697073652072793d22332e35222072783d22322e35222069643d227376675f33222063793d223135342e35222063783d223137332e3522207374726f6b652d77696474683d223322207374726f6b653d2223303030222066696c6c3d2223303030303030222f3e","id":6693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9723:109:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_1597ac6eaa03baaf27758aac357dc2698f28a5bdf3378d14f8204b7475afdd8b","typeString":"literal_string \"<ellipse ry=\"3.5\" rx=\"2.5\" id=\"svg_3\" cy=\"154.5\" cx=\"173.5\" stroke-width=\"3\" stroke=\"#000\" fill=\"#000000\"/>\""},"value":"<ellipse ry=\"3.5\" rx=\"2.5\" id=\"svg_3\" cy=\"154.5\" cx=\"173.5\" stroke-width=\"3\" stroke=\"#000\" fill=\"#000000\"/>"},{"hexValue":"3c2f673e","id":6694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9850:6:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_a645b115fdaf7bdcc5aba7397b588ade744101725f5d97f32b878171acf7259e","typeString":"literal_string \"</g>\""},"value":"</g>"},{"hexValue":"3c672069643d2268656164223e","id":6695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9898:15:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a0adcd41e1cc31fb6ab1a81d68041f4bcd38fb2ae9bf9aea6a24bb85dd4e9a8","typeString":"literal_string \"<g id=\"head\">\""},"value":"<g id=\"head\">"},{"hexValue":"3c656c6c697073652066696c6c3d22","id":6696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9931:17:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_b75e8222857ac934124f40744eba663634dad9bb7d5e2e148bb9f3f3af9ed23d","typeString":"literal_string \"<ellipse fill=\"\""},"value":"<ellipse fill=\""},{"id":6697,"name":"bodyColor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"9950:9:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"22207374726f6b652d77696474683d2233222063783d223230342e35222063793d223231312e3830303635222069643d227376675f35222072783d22","id":6698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9961:62:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_afe789a5ecc627a5e88bbeb58b257c61f3ba1dbf8654a624452acef1f843f7c9","typeString":"literal_string \"\" stroke-width=\"3\" cx=\"204.5\" cy=\"211.80065\" id=\"svg_5\" rx=\"\""},"value":"\" stroke-width=\"3\" cx=\"204.5\" cy=\"211.80065\" id=\"svg_5\" rx=\""},{"arguments":[{"id":6700,"name":"chubbinessValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6368,"src":"10051:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6699,"name":"uint2str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"10042:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10042:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222072793d2235312e383030363522207374726f6b653d2223303030222f3e","id":6702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10069:33:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_ed52ed1ff9a11406190c92b3e687c16caa129a6c29b9d17fbc82e02eb56aa9e0","typeString":"literal_string \"\" ry=\"51.80065\" stroke=\"#000\"/>\""},"value":"\" ry=\"51.80065\" stroke=\"#000\"/>"},{"hexValue":"3c2f673e","id":6703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10120:6:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_a645b115fdaf7bdcc5aba7397b588ade744101725f5d97f32b878171acf7259e","typeString":"literal_string \"</g>\""},"value":"</g>"},{"hexValue":"3c672069643d2265796532223e","id":6704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10174:15:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_584eeeb6105c5644f290dfe09c2fac71a2249768dab6b45888b0035b35850897","typeString":"literal_string \"<g id=\"eye2\">\""},"value":"<g id=\"eye2\">"},{"hexValue":"3c656c6c69707365207374726f6b652d77696474683d2233222072793d2232392e35222072783d2232392e35222069643d227376675f32222063793d223136382e35222063783d223230392e3522207374726f6b653d2223303030222066696c6c3d2223666666222f3e","id":6705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10207:108:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_91f5ebff0493d6d348dcfffdb53bfd1145d610782930ee67d0d9bc7d9d382cbb","typeString":"literal_string \"<ellipse stroke-width=\"3\" ry=\"29.5\" rx=\"29.5\" id=\"svg_2\" cy=\"168.5\" cx=\"209.5\" stroke=\"#000\" fill=\"#fff\"/>\""},"value":"<ellipse stroke-width=\"3\" ry=\"29.5\" rx=\"29.5\" id=\"svg_2\" cy=\"168.5\" cx=\"209.5\" stroke=\"#000\" fill=\"#fff\"/>"},{"hexValue":"3c656c6c697073652072793d22332e35222072783d2233222069643d227376675f34222063793d223136392e35222063783d2232303822207374726f6b652d77696474683d2233222066696c6c3d222330303030303022207374726f6b653d2223303030222f3e","id":6706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10333:105:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ee009078826646160bc0640b528c9896221487e2199a0f2818f1ce327917a77","typeString":"literal_string \"<ellipse ry=\"3.5\" rx=\"3\" id=\"svg_4\" cy=\"169.5\" cx=\"208\" stroke-width=\"3\" fill=\"#000000\" stroke=\"#000\"/>\""},"value":"<ellipse ry=\"3.5\" rx=\"3\" id=\"svg_4\" cy=\"169.5\" cx=\"208\" stroke-width=\"3\" fill=\"#000000\" stroke=\"#000\"/>"},{"hexValue":"3c2f673e","id":6707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10456:6:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_a645b115fdaf7bdcc5aba7397b588ade744101725f5d97f32b878171acf7259e","typeString":"literal_string \"</g>\""},"value":"</g>"},{"hexValue":"3c6720636c6173733d226d6f75746822207472616e73666f726d3d227472616e736c61746528","id":6708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10542:40:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c4be06cdc82ff0be3300a2a7de9082f46c0e458f6bef31061a7e312ed2ae731","typeString":"literal_string \"<g class=\"mouth\" transform=\"translate(\""},"value":"<g class=\"mouth\" transform=\"translate("},{"arguments":[{"id":6710,"name":"mouthTranslate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"10593:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6709,"name":"uint2str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"10584:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10584:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2c3029223e","id":6712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10610:7:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_23ee5c7702c879dffd0afc273294faee36a1fdcd33a77b72829151c02437449e","typeString":"literal_string \",0)\">\""},"value":",0)\">"},{"hexValue":"3c7061746820643d224d20313330203234302051203136352032353020","id":6713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10635:31:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef6bdb312b75b8988f42441f704acb7792544c0ac2456c7960302be682e95f9c","typeString":"literal_string \"<path d=\"M 130 240 Q 165 250 \""},"value":"<path d=\"M 130 240 Q 165 250 "},{"arguments":[{"id":6715,"name":"mouthLengthValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"10677:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6714,"name":"uint2str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"10668:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10668:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2032333522207374726f6b653d22626c61636b22207374726f6b652d77696474683d2233222066696c6c3d227472616e73706172656e74222f3e","id":6717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10696:60:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_48baa50ced31c4114ecc51d85d9e93a9a4c171b2f942296b9bf42f8d439b9665","typeString":"literal_string \" 235\" stroke=\"black\" stroke-width=\"3\" fill=\"transparent\"/>\""},"value":" 235\" stroke=\"black\" stroke-width=\"3\" fill=\"transparent\"/>"},{"hexValue":"3c2f673e","id":6718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10774:6:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_a645b115fdaf7bdcc5aba7397b588ade744101725f5d97f32b878171acf7259e","typeString":"literal_string \"</g>\""},"value":"</g>"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":6721,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"10863:8:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10857:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6719,"name":"bytes","nodeType":"ElementaryTypeName","src":"10857:5:30","typeDescriptions":{}}},"id":6722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10857:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10873:6:30","memberName":"length","nodeType":"MemberAccess","src":"10857:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10882:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10857:26:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":6747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11272:2:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":6748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10857:417:30","trueExpression":{"components":[{"condition":{"id":6726,"name":"isUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"10908:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"hexValue":"3c7465787420783d223230302220793d223330302220666f6e742d66616d696c793d22417269616c2220666f6e742d73697a653d223136222066696c6c3d22236666666666662220746578742d616e63686f723d226d6964646c65223e","id":6740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11129:95:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ecc36083f5fc64c33eb4788c9ab6461ca08ab63edda3ee979067b39152750f2","typeString":"literal_string \"<text x=\"200\" y=\"300\" font-family=\"Arial\" font-size=\"16\" fill=\"#ffffff\" text-anchor=\"middle\">\""},"value":"<text x=\"200\" y=\"300\" font-family=\"Arial\" font-size=\"16\" fill=\"#ffffff\" text-anchor=\"middle\">"},{"id":6741,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"11226:8:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"3c2f746578743e","id":6742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11236:9:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_85c126d4ff13939c5e4159ad4b7ad42f1c8aff9e195f156cf2ab5a8b3ed7c6b5","typeString":"literal_string \"</text>\""},"value":"</text>"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_2ecc36083f5fc64c33eb4788c9ab6461ca08ab63edda3ee979067b39152750f2","typeString":"literal_string \"<text x=\"200\" y=\"300\" font-family=\"Arial\" font-size=\"16\" fill=\"#ffffff\" text-anchor=\"middle\">\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_85c126d4ff13939c5e4159ad4b7ad42f1c8aff9e195f156cf2ab5a8b3ed7c6b5","typeString":"literal_string \"</text>\""}],"expression":{"id":6738,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11112:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11116:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"11112:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11112:134:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11105:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6736,"name":"string","nodeType":"ElementaryTypeName","src":"11105:6:30","typeDescriptions":{}}},"id":6744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11105:142:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10908:339:30","trueExpression":{"arguments":[{"arguments":[{"hexValue":"3c7465787420783d223230302220793d223330302220636c6173733d22757365726e616d6522207374796c653d22666f6e742d66616d696c793a2027436f6d69632053616e73204d53272c20637572736976653b223e","id":6731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10964:90:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_fd000e39a5165fc4fdb38af75851a162d47bb347b22138df34ca4dbc52376b7b","typeString":"literal_string \"<text x=\"200\" y=\"300\" class=\"username\" style=\"font-family: 'Comic Sans MS', cursive;\">\""},"value":"<text x=\"200\" y=\"300\" class=\"username\" style=\"font-family: 'Comic Sans MS', cursive;\">"},{"id":6732,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"11056:8:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"3c2f746578743e","id":6733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11066:9:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_85c126d4ff13939c5e4159ad4b7ad42f1c8aff9e195f156cf2ab5a8b3ed7c6b5","typeString":"literal_string \"</text>\""},"value":"</text>"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_fd000e39a5165fc4fdb38af75851a162d47bb347b22138df34ca4dbc52376b7b","typeString":"literal_string \"<text x=\"200\" y=\"300\" class=\"username\" style=\"font-family: 'Comic Sans MS', cursive;\">\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_85c126d4ff13939c5e4159ad4b7ad42f1c8aff9e195f156cf2ab5a8b3ed7c6b5","typeString":"literal_string \"</text>\""}],"expression":{"id":6729,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10947:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10951:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"10947:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10947:129:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10940:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6727,"name":"string","nodeType":"ElementaryTypeName","src":"10940:6:30","typeDescriptions":{}}},"id":6735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10940:137:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":6746,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10907:362:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"3c2f673e","id":6749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11292:6:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_a645b115fdaf7bdcc5aba7397b588ade744101725f5d97f32b878171acf7259e","typeString":"literal_string \"</g>\""},"value":"</g>"},{"hexValue":"3c2f7376673e","id":6750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11316:8:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_ed942a74eccce931b7661b37252dffca8561e3a8bdec86f6da31d97d858c9292","typeString":"literal_string \"</svg>\""},"value":"</svg>"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1d852380b96887e97b3052f15f3704e99551a6e179af023e95b26edff6485220","typeString":"literal_string \"<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\" width=\"400\" height=\"400\">\""},{"typeIdentifier":"t_stringliteral_c9d6f35adafbd6db05cf66701a579ef4e1499ac0364b80726ad93d0f9855ba3a","typeString":"literal_string \"<defs>\""},{"typeIdentifier":"t_stringliteral_fd5a0d787cf347f628d3cc5a623045c0f7492117e2d86a8be4cd59eecfd578bf","typeString":"literal_string \"<style>\""},{"typeIdentifier":"t_stringliteral_c66d8903fc03d97d844a57719e7973d08cc00dbf0dbb0f50e974c08008df134d","typeString":"literal_string \"@import url(\"https://fonts.googleapis.com/css2?family=Comic+Sans+MS&amp;display=swap\");\""},{"typeIdentifier":"t_stringliteral_2dd3b8053b9285b187050db77876e7c666f09e8189f80c8a63aa838161c243a8","typeString":"literal_string \".username { font-family: \"Comic Sans MS\", cursive; font-size: 16px; fill: white; text-anchor: middle; }\""},{"typeIdentifier":"t_stringliteral_a4729afe2e1f00cdf67789303f706063abe6c965d8cc7b7a1c6d27be2e6e3ab3","typeString":"literal_string \".matrix-char { font-family: monospace; fill: \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_dbd5b3ef33eabcc534b5f39a54b5be5473a68a512e3dd037467cbf2de0178bec","typeString":"literal_string \"; opacity: 0.3; animation: fade 3s infinite, fall 8s linear infinite; }\""},{"typeIdentifier":"t_stringliteral_3a422121f67a7d891c8f75eb7f3818592526a248cf443ea1796ff6f7de8c9c85","typeString":"literal_string \"@keyframes fade { 0% { opacity: 0.2; } 30% { opacity: 0.9; } 70% { opacity: 0.9; } 100% { opacity: 0.2; } }\""},{"typeIdentifier":"t_stringliteral_1772d2b70f72ceb48938fa2ef04656d8b604d004a760133e7f45a0089a39783c","typeString":"literal_string \"@keyframes fall { from { transform: translateY(-20px); } to { transform: translateY(420px); } }\""},{"typeIdentifier":"t_stringliteral_3b6c43c5e022e7a8badca2c05b60ce72ed95da67bc2b3e1f2653d233d3d350e5","typeString":"literal_string \"</style>\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_bed599d0025e0618137b41a2a30b05693d5ffd7547da6408dc30d1faba1b52ab","typeString":"literal_string \"</defs>\""},{"typeIdentifier":"t_stringliteral_b14f23b30720fbe30e44160e0b6bd59adf4b10eb1e27986a9b765e2e0ea8891f","typeString":"literal_string \"<rect width=\"400\" height=\"400\" fill=\"black\"/>\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_c7e821e30b7d2d2509bc254692b558b86ecf84300cc6d3df405550e1f0ec7f57","typeString":"literal_string \"<g class=\"loogie-container\">\""},{"typeIdentifier":"t_stringliteral_6c8219380cbf9fbdf0a9f12e08a72620c184c68040a5dee5cf099dd68270b5b3","typeString":"literal_string \"<g id=\"eye1\">\""},{"typeIdentifier":"t_stringliteral_9f0e07dcb4048607e3b1ff4acd3802e16fbad6e49c164d9c18392a2542d5d8ed","typeString":"literal_string \"<ellipse stroke-width=\"3\" ry=\"29.5\" rx=\"29.5\" id=\"svg_1\" cy=\"154.5\" cx=\"181.5\" stroke=\"#000\" fill=\"#fff\"/>\""},{"typeIdentifier":"t_stringliteral_1597ac6eaa03baaf27758aac357dc2698f28a5bdf3378d14f8204b7475afdd8b","typeString":"literal_string \"<ellipse ry=\"3.5\" rx=\"2.5\" id=\"svg_3\" cy=\"154.5\" cx=\"173.5\" stroke-width=\"3\" stroke=\"#000\" fill=\"#000000\"/>\""},{"typeIdentifier":"t_stringliteral_a645b115fdaf7bdcc5aba7397b588ade744101725f5d97f32b878171acf7259e","typeString":"literal_string \"</g>\""},{"typeIdentifier":"t_stringliteral_2a0adcd41e1cc31fb6ab1a81d68041f4bcd38fb2ae9bf9aea6a24bb85dd4e9a8","typeString":"literal_string \"<g id=\"head\">\""},{"typeIdentifier":"t_stringliteral_b75e8222857ac934124f40744eba663634dad9bb7d5e2e148bb9f3f3af9ed23d","typeString":"literal_string \"<ellipse fill=\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_afe789a5ecc627a5e88bbeb58b257c61f3ba1dbf8654a624452acef1f843f7c9","typeString":"literal_string \"\" stroke-width=\"3\" cx=\"204.5\" cy=\"211.80065\" id=\"svg_5\" rx=\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_ed52ed1ff9a11406190c92b3e687c16caa129a6c29b9d17fbc82e02eb56aa9e0","typeString":"literal_string \"\" ry=\"51.80065\" stroke=\"#000\"/>\""},{"typeIdentifier":"t_stringliteral_a645b115fdaf7bdcc5aba7397b588ade744101725f5d97f32b878171acf7259e","typeString":"literal_string \"</g>\""},{"typeIdentifier":"t_stringliteral_584eeeb6105c5644f290dfe09c2fac71a2249768dab6b45888b0035b35850897","typeString":"literal_string \"<g id=\"eye2\">\""},{"typeIdentifier":"t_stringliteral_91f5ebff0493d6d348dcfffdb53bfd1145d610782930ee67d0d9bc7d9d382cbb","typeString":"literal_string \"<ellipse stroke-width=\"3\" ry=\"29.5\" rx=\"29.5\" id=\"svg_2\" cy=\"168.5\" cx=\"209.5\" stroke=\"#000\" fill=\"#fff\"/>\""},{"typeIdentifier":"t_stringliteral_2ee009078826646160bc0640b528c9896221487e2199a0f2818f1ce327917a77","typeString":"literal_string \"<ellipse ry=\"3.5\" rx=\"3\" id=\"svg_4\" cy=\"169.5\" cx=\"208\" stroke-width=\"3\" fill=\"#000000\" stroke=\"#000\"/>\""},{"typeIdentifier":"t_stringliteral_a645b115fdaf7bdcc5aba7397b588ade744101725f5d97f32b878171acf7259e","typeString":"literal_string \"</g>\""},{"typeIdentifier":"t_stringliteral_2c4be06cdc82ff0be3300a2a7de9082f46c0e458f6bef31061a7e312ed2ae731","typeString":"literal_string \"<g class=\"mouth\" transform=\"translate(\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_23ee5c7702c879dffd0afc273294faee36a1fdcd33a77b72829151c02437449e","typeString":"literal_string \",0)\">\""},{"typeIdentifier":"t_stringliteral_ef6bdb312b75b8988f42441f704acb7792544c0ac2456c7960302be682e95f9c","typeString":"literal_string \"<path d=\"M 130 240 Q 165 250 \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_48baa50ced31c4114ecc51d85d9e93a9a4c171b2f942296b9bf42f8d439b9665","typeString":"literal_string \" 235\" stroke=\"black\" stroke-width=\"3\" fill=\"transparent\"/>\""},{"typeIdentifier":"t_stringliteral_a645b115fdaf7bdcc5aba7397b588ade744101725f5d97f32b878171acf7259e","typeString":"literal_string \"</g>\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_a645b115fdaf7bdcc5aba7397b588ade744101725f5d97f32b878171acf7259e","typeString":"literal_string \"</g>\""},{"typeIdentifier":"t_stringliteral_ed942a74eccce931b7661b37252dffca8561e3a8bdec86f6da31d97d858c9292","typeString":"literal_string \"</svg>\""}],"expression":{"id":6663,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8399:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8403:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"8399:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:2939:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8379:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6661,"name":"string","nodeType":"ElementaryTypeName","src":"8379:6:30","typeDescriptions":{}}},"id":6752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8379:2969:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"8359:2989:30"},{"expression":{"id":6754,"name":"svg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"11374:3:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6378,"id":6755,"nodeType":"Return","src":"11367:10:30"}]},"documentation":{"id":6360,"nodeType":"StructuredDocumentation","src":"5025:449:30","text":" @dev Generate Loogie SVG based on attributes\n @param tokenId The token ID for randomization\n @param loogieType The loogie type\n @param colorValue The color value\n @param chubbinessValue The chubbiness value\n @param mouthLengthValue The mouth length value\n @param username The username to display\n @param isUP Whether the owner is a Universal Profile\n @return string The complete SVG"},"functionSelector":"ad30ddbf","id":6757,"implemented":true,"kind":"function","modifiers":[],"name":"generateLoogieSVG","nameLocation":"5488:17:30","nodeType":"FunctionDefinition","parameters":{"id":6375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6362,"mutability":"mutable","name":"tokenId","nameLocation":"5523:7:30","nodeType":"VariableDeclaration","scope":6757,"src":"5515:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6361,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5515:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6364,"mutability":"mutable","name":"loogieType","nameLocation":"5554:10:30","nodeType":"VariableDeclaration","scope":6757,"src":"5540:24:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6363,"name":"string","nodeType":"ElementaryTypeName","src":"5540:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6366,"mutability":"mutable","name":"colorValue","nameLocation":"5581:10:30","nodeType":"VariableDeclaration","scope":6757,"src":"5574:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"},"typeName":{"id":6365,"name":"bytes3","nodeType":"ElementaryTypeName","src":"5574:6:30","typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"}},"visibility":"internal"},{"constant":false,"id":6368,"mutability":"mutable","name":"chubbinessValue","nameLocation":"5609:15:30","nodeType":"VariableDeclaration","scope":6757,"src":"5601:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6367,"name":"uint256","nodeType":"ElementaryTypeName","src":"5601:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6370,"mutability":"mutable","name":"mouthLengthValue","nameLocation":"5642:16:30","nodeType":"VariableDeclaration","scope":6757,"src":"5634:24:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6369,"name":"uint256","nodeType":"ElementaryTypeName","src":"5634:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6372,"mutability":"mutable","name":"username","nameLocation":"5682:8:30","nodeType":"VariableDeclaration","scope":6757,"src":"5668:22:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6371,"name":"string","nodeType":"ElementaryTypeName","src":"5668:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6374,"mutability":"mutable","name":"isUP","nameLocation":"5705:4:30","nodeType":"VariableDeclaration","scope":6757,"src":"5700:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6373,"name":"bool","nodeType":"ElementaryTypeName","src":"5700:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5505:210:30"},"returnParameters":{"id":6378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6757,"src":"5737:13:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6376,"name":"string","nodeType":"ElementaryTypeName","src":"5737:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5736:15:30"},"scope":7263,"src":"5479:5905:30","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6780,"nodeType":"Block","src":"11547:595:30","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"3c66696c7465722069643d226d61747269782d676c6f772220783d222d3230252220793d222d323025222077696474683d223134302522206865696768743d2231343025223e","id":6769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11618:72:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_10550002a4af8fc7cc378d6ae11dfefcfeaa81e55d38da0f918602777a7a1392","typeString":"literal_string \"<filter id=\"matrix-glow\" x=\"-20%\" y=\"-20%\" width=\"140%\" height=\"140%\">\""},"value":"<filter id=\"matrix-glow\" x=\"-20%\" y=\"-20%\" width=\"140%\" height=\"140%\">"},{"hexValue":"3c6665476175737369616e426c757220737464446576696174696f6e3d22332220726573756c743d22626c7572222f3e","id":6770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11708:50:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_e71a1064fc5fbba800088b4bc7f1106ea410ed9fb1b67f22cd9e55afa5119df2","typeString":"literal_string \"<feGaussianBlur stdDeviation=\"3\" result=\"blur\"/>\""},"value":"<feGaussianBlur stdDeviation=\"3\" result=\"blur\"/>"},{"hexValue":"3c6665436f6d706f7369746520696e3d22536f75726365477261706869632220696e323d22626c757222206f70657261746f723d226f766572222f3e","id":6771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11776:62:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_427b61d1eb1fb9c2a55a6c9b2f160874ac3819cad336729415c6befd1a673c45","typeString":"literal_string \"<feComposite in=\"SourceGraphic\" in2=\"blur\" operator=\"over\"/>\""},"value":"<feComposite in=\"SourceGraphic\" in2=\"blur\" operator=\"over\"/>"},{"hexValue":"3c2f66696c7465723e","id":6772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11856:11:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_eba4bf2eb8564a12829aba6493f2432e2e6dcd160308be7f94c26884b02ab933","typeString":"literal_string \"</filter>\""},"value":"</filter>"},{"hexValue":"3c6c696e6561724772616469656e742069643d226d61747269782d6267222078313d223025222079313d223025222078323d223025222079323d2231303025223e","id":6773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11885:67:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_e878468c7703e86b60b29bff3b6105121dd581c058397a625606b7121a221789","typeString":"literal_string \"<linearGradient id=\"matrix-bg\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\""},"value":"<linearGradient id=\"matrix-bg\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">"},{"hexValue":"3c73746f70206f66667365743d223025222073746f702d636f6c6f723d2223303030383030222f3e","id":6774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11970:42:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_42ee15a651593a890d54399f6f1ef2c0eed212cb579481693072537258735776","typeString":"literal_string \"<stop offset=\"0%\" stop-color=\"#000800\"/>\""},"value":"<stop offset=\"0%\" stop-color=\"#000800\"/>"},{"hexValue":"3c73746f70206f66667365743d2231303025222073746f702d636f6c6f723d2223303031303030222f3e","id":6775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12030:44:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_5e526e1cfd6b68bd0e3be7c01d0adaee6f6511fdef3706af9a4d6c1abbd554bd","typeString":"literal_string \"<stop offset=\"100%\" stop-color=\"#001000\"/>\""},"value":"<stop offset=\"100%\" stop-color=\"#001000\"/>"},{"hexValue":"3c2f6c696e6561724772616469656e743e","id":6776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12092:19:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_653201dcb91cb57ac7a643c526a178580318c83b3a526adb18a6193794cca242","typeString":"literal_string \"</linearGradient>\""},"value":"</linearGradient>"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_10550002a4af8fc7cc378d6ae11dfefcfeaa81e55d38da0f918602777a7a1392","typeString":"literal_string \"<filter id=\"matrix-glow\" x=\"-20%\" y=\"-20%\" width=\"140%\" height=\"140%\">\""},{"typeIdentifier":"t_stringliteral_e71a1064fc5fbba800088b4bc7f1106ea410ed9fb1b67f22cd9e55afa5119df2","typeString":"literal_string \"<feGaussianBlur stdDeviation=\"3\" result=\"blur\"/>\""},{"typeIdentifier":"t_stringliteral_427b61d1eb1fb9c2a55a6c9b2f160874ac3819cad336729415c6befd1a673c45","typeString":"literal_string \"<feComposite in=\"SourceGraphic\" in2=\"blur\" operator=\"over\"/>\""},{"typeIdentifier":"t_stringliteral_eba4bf2eb8564a12829aba6493f2432e2e6dcd160308be7f94c26884b02ab933","typeString":"literal_string \"</filter>\""},{"typeIdentifier":"t_stringliteral_e878468c7703e86b60b29bff3b6105121dd581c058397a625606b7121a221789","typeString":"literal_string \"<linearGradient id=\"matrix-bg\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\""},{"typeIdentifier":"t_stringliteral_42ee15a651593a890d54399f6f1ef2c0eed212cb579481693072537258735776","typeString":"literal_string \"<stop offset=\"0%\" stop-color=\"#000800\"/>\""},{"typeIdentifier":"t_stringliteral_5e526e1cfd6b68bd0e3be7c01d0adaee6f6511fdef3706af9a4d6c1abbd554bd","typeString":"literal_string \"<stop offset=\"100%\" stop-color=\"#001000\"/>\""},{"typeIdentifier":"t_stringliteral_653201dcb91cb57ac7a643c526a178580318c83b3a526adb18a6193794cca242","typeString":"literal_string \"</linearGradient>\""}],"expression":{"id":6767,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11584:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11588:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"11584:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11584:541:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11564:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6765,"name":"string","nodeType":"ElementaryTypeName","src":"11564:6:30","typeDescriptions":{}}},"id":6778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:571:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6764,"id":6779,"nodeType":"Return","src":"11557:578:30"}]},"documentation":{"id":6758,"nodeType":"StructuredDocumentation","src":"11394:59:30","text":" @dev Generate Matrix rain effect for SVG"},"id":6781,"implemented":true,"kind":"function","modifiers":[],"name":"generateMatrixRainEffect","nameLocation":"11467:24:30","nodeType":"FunctionDefinition","parameters":{"id":6761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6760,"mutability":"mutable","name":"tokenId","nameLocation":"11500:7:30","nodeType":"VariableDeclaration","scope":6781,"src":"11492:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6759,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11492:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11491:17:30"},"returnParameters":{"id":6764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6781,"src":"11532:13:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6762,"name":"string","nodeType":"ElementaryTypeName","src":"11532:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11531:15:30"},"scope":7263,"src":"11458:684:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6975,"nodeType":"Block","src":"12316:1373:30","statements":[{"assignments":[6790],"declarations":[{"constant":false,"id":6790,"mutability":"mutable","name":"chars","nameLocation":"12340:5:30","nodeType":"VariableDeclaration","scope":6975,"src":"12326:19:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6789,"name":"string","nodeType":"ElementaryTypeName","src":"12326:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":6792,"initialValue":{"hexValue":"3c6720636c6173733d226d61747269782d6368617273223e","id":6791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12348:26:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_890429bcd0f89b71a466808f6c342bf52046cd09ff93aba35cc2cf3bc5ee6b41","typeString":"literal_string \"<g class=\"matrix-chars\">\""},"value":"<g class=\"matrix-chars\">"},"nodeType":"VariableDeclarationStatement","src":"12326:48:30"},{"assignments":[6798],"declarations":[{"constant":false,"id":6798,"mutability":"mutable","name":"xPositions","nameLocation":"12401:10:30","nodeType":"VariableDeclaration","scope":6975,"src":"12384:27:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$15_memory_ptr","typeString":"uint8[15]"},"typeName":{"baseType":{"id":6796,"name":"uint8","nodeType":"ElementaryTypeName","src":"12384:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":6797,"length":{"hexValue":"3135","id":6795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12390:2:30","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"nodeType":"ArrayTypeName","src":"12384:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$15_storage_ptr","typeString":"uint8[15]"}},"visibility":"internal"}],"id":6799,"nodeType":"VariableDeclarationStatement","src":"12384:27:30"},{"body":{"id":6832,"nodeType":"Block","src":"12519:104:30","statements":[{"expression":{"id":6830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6810,"name":"xPositions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"12533:10:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$15_memory_ptr","typeString":"uint8[15] memory"}},"id":6812,"indexExpression":{"id":6811,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6801,"src":"12544:1:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12533:13:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":6820,"name":"seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6784,"src":"12590:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6821,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6801,"src":"12596:1:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":6818,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12573:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12577:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"12573:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12573:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6817,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"12563:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12563:36:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12555:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6815,"name":"uint256","nodeType":"ElementaryTypeName","src":"12555:7:30","typeDescriptions":{}}},"id":6824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12555:45:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"333830","id":6825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12603:3:30","typeDescriptions":{"typeIdentifier":"t_rational_380_by_1","typeString":"int_const 380"},"value":"380"},"src":"12555:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3130","id":6827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12609:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"12555:56:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12549:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6813,"name":"uint8","nodeType":"ElementaryTypeName","src":"12549:5:30","typeDescriptions":{}}},"id":6829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12549:63:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12533:79:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":6831,"nodeType":"ExpressionStatement","src":"12533:79:30"}]},"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6804,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6801,"src":"12506:1:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3135","id":6805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:30","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"12506:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6833,"initializationExpression":{"assignments":[6801],"declarations":[{"constant":false,"id":6801,"mutability":"mutable","name":"i","nameLocation":"12499:1:30","nodeType":"VariableDeclaration","scope":6833,"src":"12493:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6800,"name":"uint8","nodeType":"ElementaryTypeName","src":"12493:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":6803,"initialValue":{"hexValue":"30","id":6802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12503:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12493:11:30"},"loopExpression":{"expression":{"id":6808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12514:3:30","subExpression":{"id":6807,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6801,"src":"12514:1:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":6809,"nodeType":"ExpressionStatement","src":"12514:3:30"},"nodeType":"ForStatement","src":"12488:135:30"},{"body":{"id":6964,"nodeType":"Block","src":"12710:908:30","statements":[{"body":{"id":6962,"nodeType":"Block","src":"12754:854:30","statements":[{"assignments":[6855],"declarations":[{"constant":false,"id":6855,"mutability":"mutable","name":"yPos","nameLocation":"12778:4:30","nodeType":"VariableDeclaration","scope":6962,"src":"12772:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6854,"name":"uint8","nodeType":"ElementaryTypeName","src":"12772:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":6874,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":6863,"name":"seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6784,"src":"12826:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6864,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6835,"src":"12832:1:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":6865,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6845,"src":"12835:1:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":6861,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12809:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12813:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"12809:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12809:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6860,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"12799:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12799:39:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12791:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6858,"name":"uint256","nodeType":"ElementaryTypeName","src":"12791:7:30","typeDescriptions":{}}},"id":6868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12791:48:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"333830","id":6869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12842:3:30","typeDescriptions":{"typeIdentifier":"t_rational_380_by_1","typeString":"int_const 380"},"value":"380"},"src":"12791:54:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3130","id":6871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"12791:59:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12785:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6856,"name":"uint8","nodeType":"ElementaryTypeName","src":"12785:5:30","typeDescriptions":{}}},"id":6873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12785:66:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"12772:79:30"},{"assignments":[6876],"declarations":[{"constant":false,"id":6876,"mutability":"mutable","name":"charCode","nameLocation":"12875:8:30","nodeType":"VariableDeclaration","scope":6962,"src":"12869:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6875,"name":"uint8","nodeType":"ElementaryTypeName","src":"12869:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":6896,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":6884,"name":"seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6784,"src":"12927:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6885,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6835,"src":"12933:1:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":6886,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6845,"src":"12936:1:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"hexValue":"63686172","id":6887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12939:6:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d09ec5b27332363bf3b170d8a78049f666981e50cda80fbc3136795cf1d7552","typeString":"literal_string \"char\""},"value":"char"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_stringliteral_9d09ec5b27332363bf3b170d8a78049f666981e50cda80fbc3136795cf1d7552","typeString":"literal_string \"char\""}],"expression":{"id":6882,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12910:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12914:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"12910:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12910:36:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6881,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"12900:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12900:47:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12892:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6879,"name":"uint256","nodeType":"ElementaryTypeName","src":"12892:7:30","typeDescriptions":{}}},"id":6890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12892:56:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":6891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12951:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"12892:61:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":6893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12956:2:30","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"12892:66:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12886:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6877,"name":"uint8","nodeType":"ElementaryTypeName","src":"12886:5:30","typeDescriptions":{}}},"id":6895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12886:73:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"12869:90:30"},{"assignments":[6898],"declarations":[{"constant":false,"id":6898,"mutability":"mutable","name":"delay","nameLocation":"13042:5:30","nodeType":"VariableDeclaration","scope":6962,"src":"13036:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6897,"name":"uint8","nodeType":"ElementaryTypeName","src":"13036:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":6916,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":6906,"name":"seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6784,"src":"13091:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6907,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6835,"src":"13097:1:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":6908,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6845,"src":"13100:1:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"hexValue":"64656c6179","id":6909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13103:7:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_c44f5c4824d6fe4ecb5e00033e433ffbfd69fc213c4f1e41b731944f129687e5","typeString":"literal_string \"delay\""},"value":"delay"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_stringliteral_c44f5c4824d6fe4ecb5e00033e433ffbfd69fc213c4f1e41b731944f129687e5","typeString":"literal_string \"delay\""}],"expression":{"id":6904,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13074:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13078:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"13074:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13074:37:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6903,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"13064:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13064:48:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13056:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6901,"name":"uint256","nodeType":"ElementaryTypeName","src":"13056:7:30","typeDescriptions":{}}},"id":6912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13056:57:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"35","id":6913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13116:1:30","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"13056:61:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13050:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6899,"name":"uint8","nodeType":"ElementaryTypeName","src":"13050:5:30","typeDescriptions":{}}},"id":6915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13050:68:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13036:82:30"},{"expression":{"id":6960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6917,"name":"chars","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"13153:5:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":6922,"name":"chars","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"13231:5:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"3c7465787420783d22","id":6923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13262:11:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a745088ff585810f12df1fc94aa032c1cf81f6b610df570d071ce151c6b1bd","typeString":"literal_string \"<text x=\"\""},"value":"<text x=\""},{"arguments":[{"arguments":[{"baseExpression":{"id":6927,"name":"xPositions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"13292:10:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$15_memory_ptr","typeString":"uint8[15] memory"}},"id":6929,"indexExpression":{"id":6928,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6835,"src":"13303:1:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13292:13:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":6926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13284:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6925,"name":"uint256","nodeType":"ElementaryTypeName","src":"13284:7:30","typeDescriptions":{}}},"id":6930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13284:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6924,"name":"uint2str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"13275:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13275:32:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2220793d22","id":6932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13309:7:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_bee93ae890c04ae24f4144a85b6853b4ef4d2ad3965378a5589e4c64e34c3700","typeString":"literal_string \"\" y=\"\""},"value":"\" y=\""},{"arguments":[{"arguments":[{"id":6936,"name":"yPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"13335:4:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":6935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13327:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6934,"name":"uint256","nodeType":"ElementaryTypeName","src":"13327:7:30","typeDescriptions":{}}},"id":6937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13327:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6933,"name":"uint2str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"13318:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13318:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2220636c6173733d226d61747269782d6368617222207374796c653d22616e696d6174696f6e2d64656c61793a20","id":6939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13368:48:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_f3b9e1a4ff83d3479fc02a9233ef04ab30c8612e1ee911dca070807ac40cc469","typeString":"literal_string \"\" class=\"matrix-char\" style=\"animation-delay: \""},"value":"\" class=\"matrix-char\" style=\"animation-delay: "},{"arguments":[{"arguments":[{"id":6943,"name":"delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"13435:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":6942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13427:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6941,"name":"uint256","nodeType":"ElementaryTypeName","src":"13427:7:30","typeDescriptions":{}}},"id":6944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13427:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6940,"name":"uint2str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"13418:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13418:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"733b223e","id":6946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13444:6:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_5570aa5fba1f56a5ba4403c4c3445867f88295d55021cb3c2d70b94288086bb1","typeString":"literal_string \"s;\">\""},"value":"s;\">"},{"arguments":[{"arguments":[{"arguments":[{"id":6953,"name":"charCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6876,"src":"13507:8:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":6952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13500:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":6951,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13500:6:30","typeDescriptions":{}}},"id":6954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13500:16:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"expression":{"id":6949,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13483:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13487:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"13483:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13483:34:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13476:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6947,"name":"string","nodeType":"ElementaryTypeName","src":"13476:6:30","typeDescriptions":{}}},"id":6956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13476:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"3c2f746578743e","id":6957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13544:9:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_85c126d4ff13939c5e4159ad4b7ad42f1c8aff9e195f156cf2ab5a8b3ed7c6b5","typeString":"literal_string \"</text>\""},"value":"</text>"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_47a745088ff585810f12df1fc94aa032c1cf81f6b610df570d071ce151c6b1bd","typeString":"literal_string \"<text x=\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_bee93ae890c04ae24f4144a85b6853b4ef4d2ad3965378a5589e4c64e34c3700","typeString":"literal_string \"\" y=\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f3b9e1a4ff83d3479fc02a9233ef04ab30c8612e1ee911dca070807ac40cc469","typeString":"literal_string \"\" class=\"matrix-char\" style=\"animation-delay: \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_5570aa5fba1f56a5ba4403c4c3445867f88295d55021cb3c2d70b94288086bb1","typeString":"literal_string \"s;\">\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_85c126d4ff13939c5e4159ad4b7ad42f1c8aff9e195f156cf2ab5a8b3ed7c6b5","typeString":"literal_string \"</text>\""}],"expression":{"id":6920,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13189:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13193:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"13189:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13189:386:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13161:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6918,"name":"string","nodeType":"ElementaryTypeName","src":"13161:6:30","typeDescriptions":{}}},"id":6959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13161:432:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"13153:440:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6961,"nodeType":"ExpressionStatement","src":"13153:440:30"}]},"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6848,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6845,"src":"12742:1:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"38","id":6849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12742:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6963,"initializationExpression":{"assignments":[6845],"declarations":[{"constant":false,"id":6845,"mutability":"mutable","name":"j","nameLocation":"12735:1:30","nodeType":"VariableDeclaration","scope":6963,"src":"12729:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6844,"name":"uint8","nodeType":"ElementaryTypeName","src":"12729:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":6847,"initialValue":{"hexValue":"30","id":6846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12739:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12729:11:30"},"loopExpression":{"expression":{"id":6852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12749:3:30","subExpression":{"id":6851,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6845,"src":"12749:1:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":6853,"nodeType":"ExpressionStatement","src":"12749:3:30"},"nodeType":"ForStatement","src":"12724:884:30"}]},"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6838,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6835,"src":"12697:1:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3135","id":6839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12701:2:30","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"12697:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6965,"initializationExpression":{"assignments":[6835],"declarations":[{"constant":false,"id":6835,"mutability":"mutable","name":"i","nameLocation":"12690:1:30","nodeType":"VariableDeclaration","scope":6965,"src":"12684:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6834,"name":"uint8","nodeType":"ElementaryTypeName","src":"12684:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":6837,"initialValue":{"hexValue":"30","id":6836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12694:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12684:11:30"},"loopExpression":{"expression":{"id":6842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12705:3:30","subExpression":{"id":6841,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6835,"src":"12705:1:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":6843,"nodeType":"ExpressionStatement","src":"12705:3:30"},"nodeType":"ForStatement","src":"12679:939:30"},{"expression":{"arguments":[{"arguments":[{"id":6970,"name":"chars","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"13667:5:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"3c2f673e","id":6971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13674:6:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_a645b115fdaf7bdcc5aba7397b588ade744101725f5d97f32b878171acf7259e","typeString":"literal_string \"</g>\""},"value":"</g>"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_a645b115fdaf7bdcc5aba7397b588ade744101725f5d97f32b878171acf7259e","typeString":"literal_string \"</g>\""}],"expression":{"id":6968,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13650:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13654:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"13650:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13650:31:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13643:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6966,"name":"string","nodeType":"ElementaryTypeName","src":"13643:6:30","typeDescriptions":{}}},"id":6973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13643:39:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6788,"id":6974,"nodeType":"Return","src":"13636:46:30"}]},"documentation":{"id":6782,"nodeType":"StructuredDocumentation","src":"12152:72:30","text":" @dev Generate random Matrix characters for background"},"id":6976,"implemented":true,"kind":"function","modifiers":[],"name":"generateRandomMatrixChars","nameLocation":"12238:25:30","nodeType":"FunctionDefinition","parameters":{"id":6785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6784,"mutability":"mutable","name":"seed","nameLocation":"12272:4:30","nodeType":"VariableDeclaration","scope":6976,"src":"12264:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12264:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12263:14:30"},"returnParameters":{"id":6788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6976,"src":"12301:13:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6786,"name":"string","nodeType":"ElementaryTypeName","src":"12301:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12300:15:30"},"scope":7263,"src":"12229:1460:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7023,"nodeType":"Block","src":"13943:1021:30","statements":[{"expression":{"id":7000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6984,"name":"svg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6980,"src":"13953:3:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f737667222077696474683d2234303022206865696768743d22343030222076696577426f783d223020302034303020343030223e","id":6989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14013:89:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d3712936b091f0e303ef9aee8dcc2709c117ef2a47dde115d6d3a039f7422ab","typeString":"literal_string \"<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400\" height=\"400\" viewBox=\"0 0 400 400\">\""},"value":"<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400\" height=\"400\" viewBox=\"0 0 400 400\">"},{"hexValue":"3c726563742077696474683d2234303022206865696768743d22343030222066696c6c3d2223303030222f3e","id":6990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14120:46:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_0781cf27e3165d00c396501fd77b63d993d9aff009244e19ccc8caae2f7917e2","typeString":"literal_string \"<rect width=\"400\" height=\"400\" fill=\"#000\"/>\""},"value":"<rect width=\"400\" height=\"400\" fill=\"#000\"/>"},{"hexValue":"3c66696c7465722069643d22676c6f77223e","id":6991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14184:20:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_004a4893e86c35db287627af7080ed16c48e524b9c85777d8a911b9b877dcb7e","typeString":"literal_string \"<filter id=\"glow\">\""},"value":"<filter id=\"glow\">"},{"hexValue":"3c6665476175737369616e426c757220737464446576696174696f6e3d22332e352220726573756c743d22626c7572222f3e","id":6992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14222:52:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_2f9928c85a6dfc20c505c484aa044b102c5ec07aeaaa9739552ba578dd506a56","typeString":"literal_string \"<feGaussianBlur stdDeviation=\"3.5\" result=\"blur\"/>\""},"value":"<feGaussianBlur stdDeviation=\"3.5\" result=\"blur\"/>"},{"hexValue":"3c6665436f6d706f7369746520696e3d22536f75726365477261706869632220696e323d22626c757222206f70657261746f723d226f766572222f3e","id":6993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14292:62:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_427b61d1eb1fb9c2a55a6c9b2f160874ac3819cad336729415c6befd1a673c45","typeString":"literal_string \"<feComposite in=\"SourceGraphic\" in2=\"blur\" operator=\"over\"/>\""},"value":"<feComposite in=\"SourceGraphic\" in2=\"blur\" operator=\"over\"/>"},{"hexValue":"3c2f66696c7465723e","id":6994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14372:11:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_eba4bf2eb8564a12829aba6493f2432e2e6dcd160308be7f94c26884b02ab933","typeString":"literal_string \"</filter>\""},"value":"</filter>"},{"hexValue":"3c7465787420783d223230302220793d223138302220666f6e742d66616d696c793d22417269616c2220666f6e742d73697a653d223430222066696c6c3d22236666662220746578742d616e63686f723d226d6964646c65222066696c7465723d2275726c2823676c6f7729223e4c756b736f4c6f6f676965733c2f746578743e","id":6995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14401:131:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8938d34f2d0d61db157dd41bbc6913f0c02f91555f988de6772ae838fb92bba","typeString":"literal_string \"<text x=\"200\" y=\"180\" font-family=\"Arial\" font-size=\"40\" fill=\"#fff\" text-anchor=\"middle\" filter=\"url(#glow)\">LuksoLoogies</text>\""},"value":"<text x=\"200\" y=\"180\" font-family=\"Arial\" font-size=\"40\" fill=\"#fff\" text-anchor=\"middle\" filter=\"url(#glow)\">LuksoLoogies</text>"},{"hexValue":"3c7465787420783d223230302220793d223233302220666f6e742d66616d696c793d22417269616c2220666f6e742d73697a653d223230222066696c6c3d22233066302220746578742d616e63686f723d226d6964646c65222066696c7465723d2275726c2823676c6f7729223e4d61747269782045646974696f6e3c2f746578743e","id":6996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14550:133:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_ab28b6cb1f22ab9080adad236d99c622d485c4e2e8ed968ef2b77c3e01f319d4","typeString":"literal_string \"<text x=\"200\" y=\"230\" font-family=\"Arial\" font-size=\"20\" fill=\"#0f0\" text-anchor=\"middle\" filter=\"url(#glow)\">Matrix Edition</text>\""},"value":"<text x=\"200\" y=\"230\" font-family=\"Arial\" font-size=\"20\" fill=\"#0f0\" text-anchor=\"middle\" filter=\"url(#glow)\">Matrix Edition</text>"},{"hexValue":"3c2f7376673e","id":6997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14701:8:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_ed942a74eccce931b7661b37252dffca8561e3a8bdec86f6da31d97d858c9292","typeString":"literal_string \"</svg>\""},"value":"</svg>"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0d3712936b091f0e303ef9aee8dcc2709c117ef2a47dde115d6d3a039f7422ab","typeString":"literal_string \"<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400\" height=\"400\" viewBox=\"0 0 400 400\">\""},{"typeIdentifier":"t_stringliteral_0781cf27e3165d00c396501fd77b63d993d9aff009244e19ccc8caae2f7917e2","typeString":"literal_string \"<rect width=\"400\" height=\"400\" fill=\"#000\"/>\""},{"typeIdentifier":"t_stringliteral_004a4893e86c35db287627af7080ed16c48e524b9c85777d8a911b9b877dcb7e","typeString":"literal_string \"<filter id=\"glow\">\""},{"typeIdentifier":"t_stringliteral_2f9928c85a6dfc20c505c484aa044b102c5ec07aeaaa9739552ba578dd506a56","typeString":"literal_string \"<feGaussianBlur stdDeviation=\"3.5\" result=\"blur\"/>\""},{"typeIdentifier":"t_stringliteral_427b61d1eb1fb9c2a55a6c9b2f160874ac3819cad336729415c6befd1a673c45","typeString":"literal_string \"<feComposite in=\"SourceGraphic\" in2=\"blur\" operator=\"over\"/>\""},{"typeIdentifier":"t_stringliteral_eba4bf2eb8564a12829aba6493f2432e2e6dcd160308be7f94c26884b02ab933","typeString":"literal_string \"</filter>\""},{"typeIdentifier":"t_stringliteral_c8938d34f2d0d61db157dd41bbc6913f0c02f91555f988de6772ae838fb92bba","typeString":"literal_string \"<text x=\"200\" y=\"180\" font-family=\"Arial\" font-size=\"40\" fill=\"#fff\" text-anchor=\"middle\" filter=\"url(#glow)\">LuksoLoogies</text>\""},{"typeIdentifier":"t_stringliteral_ab28b6cb1f22ab9080adad236d99c622d485c4e2e8ed968ef2b77c3e01f319d4","typeString":"literal_string \"<text x=\"200\" y=\"230\" font-family=\"Arial\" font-size=\"20\" fill=\"#0f0\" text-anchor=\"middle\" filter=\"url(#glow)\">Matrix Edition</text>\""},{"typeIdentifier":"t_stringliteral_ed942a74eccce931b7661b37252dffca8561e3a8bdec86f6da31d97d858c9292","typeString":"literal_string \"</svg>\""}],"expression":{"id":6987,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13979:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13983:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"13979:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13979:744:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13959:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6985,"name":"string","nodeType":"ElementaryTypeName","src":"13959:6:30","typeDescriptions":{}}},"id":6999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13959:774:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"13953:780:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":7001,"nodeType":"ExpressionStatement","src":"13953:780:30"},{"expression":{"id":7017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7002,"name":"encodedSvg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6982,"src":"14752:10:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"646174613a696d6167652f7376672b786d6c3b6261736536342c","id":7007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14819:28:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_f90ae014c41cb48231e1f02c314087ff9c479133697911d25c5fe231e237dd14","typeString":"literal_string \"data:image/svg+xml;base64,\""},"value":"data:image/svg+xml;base64,"},{"arguments":[{"arguments":[{"id":7012,"name":"svg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6980,"src":"14885:3:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14879:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7010,"name":"bytes","nodeType":"ElementaryTypeName","src":"14879:5:30","typeDescriptions":{}}},"id":7013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14879:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7008,"name":"Base64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"14865:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Base64_$3834_$","typeString":"type(library Base64)"}},"id":7009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14872:6:30","memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":3833,"src":"14865:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":7014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14865:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f90ae014c41cb48231e1f02c314087ff9c479133697911d25c5fe231e237dd14","typeString":"literal_string \"data:image/svg+xml;base64,\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7005,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14785:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14789:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"14785:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14785:119:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14765:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7003,"name":"string","nodeType":"ElementaryTypeName","src":"14765:6:30","typeDescriptions":{}}},"id":7016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14765:149:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"14752:162:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":7018,"nodeType":"ExpressionStatement","src":"14752:162:30"},{"expression":{"components":[{"id":7019,"name":"svg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6980,"src":"14941:3:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7020,"name":"encodedSvg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6982,"src":"14946:10:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7021,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14940:17:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$","typeString":"tuple(string memory,string memory)"}},"functionReturnParameters":6983,"id":7022,"nodeType":"Return","src":"14933:24:30"}]},"documentation":{"id":6977,"nodeType":"StructuredDocumentation","src":"13699:140:30","text":" @dev Generate collection SVG\n @return svg The SVG string\n @return encodedSvg Base64 encoded SVG with data URI"},"functionSelector":"3be699f9","id":7024,"implemented":true,"kind":"function","modifiers":[],"name":"generateCollectionSVG","nameLocation":"13853:21:30","nodeType":"FunctionDefinition","parameters":{"id":6978,"nodeType":"ParameterList","parameters":[],"src":"13874:2:30"},"returnParameters":{"id":6983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6980,"mutability":"mutable","name":"svg","nameLocation":"13912:3:30","nodeType":"VariableDeclaration","scope":7024,"src":"13898:17:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6979,"name":"string","nodeType":"ElementaryTypeName","src":"13898:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6982,"mutability":"mutable","name":"encodedSvg","nameLocation":"13931:10:30","nodeType":"VariableDeclaration","scope":7024,"src":"13917:24:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6981,"name":"string","nodeType":"ElementaryTypeName","src":"13917:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13897:45:30"},"scope":7263,"src":"13844:1120:30","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":7185,"nodeType":"Block","src":"15731:2272:30","statements":[{"assignments":[7047],"declarations":[{"constant":false,"id":7047,"mutability":"mutable","name":"svg","nameLocation":"15789:3:30","nodeType":"VariableDeclaration","scope":7185,"src":"15775:17:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7046,"name":"string","nodeType":"ElementaryTypeName","src":"15775:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":7057,"initialValue":{"arguments":[{"id":7049,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7027,"src":"15826:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7050,"name":"loogieTypeValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7029,"src":"15848:15:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7051,"name":"colorBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"15878:10:30","typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"}},{"id":7052,"name":"chubbiness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7033,"src":"15903:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7053,"name":"mouthLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7035,"src":"15928:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7054,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"15954:8:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7055,"name":"isUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"15976:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes3","typeString":"bytes3"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7048,"name":"generateLoogieSVG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"15795:17:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_string_memory_ptr_$_t_bytes3_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_bool_$returns$_t_string_memory_ptr_$","typeString":"function (bytes32,string memory,bytes3,uint256,uint256,string memory,bool) view returns (string memory)"}},"id":7056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15795:195:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"15775:215:30"},{"assignments":[7059],"declarations":[{"constant":false,"id":7059,"mutability":"mutable","name":"colorHex","nameLocation":"16048:8:30","nodeType":"VariableDeclaration","scope":7185,"src":"16034:22:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7058,"name":"string","nodeType":"ElementaryTypeName","src":"16034:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":7063,"initialValue":{"arguments":[{"id":7061,"name":"colorBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"16076:10:30","typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes3","typeString":"bytes3"}],"id":7060,"name":"toColorHexString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"16059:16:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes3_$returns$_t_string_memory_ptr_$","typeString":"function (bytes3) pure returns (string memory)"}},"id":7062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16059:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"16034:53:30"},{"assignments":[7065],"declarations":[{"constant":false,"id":7065,"mutability":"mutable","name":"tokenName","nameLocation":"16165:9:30","nodeType":"VariableDeclaration","scope":7185,"src":"16151:23:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7064,"name":"string","nodeType":"ElementaryTypeName","src":"16151:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":7082,"initialValue":{"arguments":[{"arguments":[{"hexValue":"4c6f6f6769652023","id":7070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16201:10:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_858d126306450627b04df746c7441189d4f4624adf67d42d5822cd2c58d5c2f3","typeString":"literal_string \"Loogie #\""},"value":"Loogie #"},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"arguments":[{"id":7075,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7027,"src":"16229:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16221:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7073,"name":"uint256","nodeType":"ElementaryTypeName","src":"16221:7:30","typeDescriptions":{}}},"id":7076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16221:16:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16213:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7071,"name":"uint256","nodeType":"ElementaryTypeName","src":"16213:7:30","typeDescriptions":{}}},"id":7077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16213:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16239:8:30","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3923,"src":"16213:34:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":7079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16213:36:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_858d126306450627b04df746c7441189d4f4624adf67d42d5822cd2c58d5c2f3","typeString":"literal_string \"Loogie #\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7068,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16184:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16188:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"16184:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16184:66:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16177:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7066,"name":"string","nodeType":"ElementaryTypeName","src":"16177:6:30","typeDescriptions":{}}},"id":7081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16177:74:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"16151:100:30"},{"assignments":[7084],"declarations":[{"constant":false,"id":7084,"mutability":"mutable","name":"description","nameLocation":"16275:11:30","nodeType":"VariableDeclaration","scope":7185,"src":"16261:25:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7083,"name":"string","nodeType":"ElementaryTypeName","src":"16261:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":7105,"initialValue":{"arguments":[{"arguments":[{"hexValue":"54686973204d6174726978204c6f6f6769652069732074686520636f6c6f722023","id":7089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16343:35:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_d7346f9a044136bbde2dd503bf5e9299f1778d0c63d4f31e4a01ed12c1516b06","typeString":"literal_string \"This Matrix Loogie is the color #\""},"value":"This Matrix Loogie is the color #"},{"id":7090,"name":"colorHex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"16396:8:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"20776974682061206368756262696e657373206f6620","id":7091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16422:24:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_e203592ae281080ab0b9eed08a0b77dcbecb2868545bd6bd3e896d47f33192a9","typeString":"literal_string \" with a chubbiness of \""},"value":" with a chubbiness of "},{"arguments":[{"id":7093,"name":"chubbiness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7033,"src":"16473:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7092,"name":"uint2str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"16464:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":7094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16464:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"20616e64206d6f757468206c656e677468206f6620","id":7095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16502:23:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_10835a44af4c00e26e69387b638bf31b92ea9366088ac3a894faaef7331d4d67","typeString":"literal_string \" and mouth length of \""},"value":" and mouth length of "},{"arguments":[{"id":7097,"name":"mouthLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7035,"src":"16552:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7096,"name":"uint2str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"16543:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":7098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16543:21:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"condition":{"id":7099,"name":"isUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"16582:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"2e","id":7101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16625:3:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf","typeString":"literal_string \".\""},"value":"."},"id":7102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"16582:46:30","trueExpression":{"hexValue":"2e204f776e6564206279206120556e6976657273616c2050726f66696c6521","id":7100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16589:33:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_204cdd99aa55bc4f600d5720dbce0336dfda480a09d14a388dc27e8f8ab6ef98","typeString":"literal_string \". Owned by a Universal Profile!\""},"value":". Owned by a Universal Profile!"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d7346f9a044136bbde2dd503bf5e9299f1778d0c63d4f31e4a01ed12c1516b06","typeString":"literal_string \"This Matrix Loogie is the color #\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_e203592ae281080ab0b9eed08a0b77dcbecb2868545bd6bd3e896d47f33192a9","typeString":"literal_string \" with a chubbiness of \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_10835a44af4c00e26e69387b638bf31b92ea9366088ac3a894faaef7331d4d67","typeString":"literal_string \" and mouth length of \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7087,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16309:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16313:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"16309:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16309:333:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16289:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7085,"name":"string","nodeType":"ElementaryTypeName","src":"16289:6:30","typeDescriptions":{}}},"id":7104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16289:363:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"16261:391:30"},{"assignments":[7107],"declarations":[{"constant":false,"id":7107,"mutability":"mutable","name":"metadata","nameLocation":"16717:8:30","nodeType":"VariableDeclaration","scope":7185,"src":"16703:22:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7106,"name":"string","nodeType":"ElementaryTypeName","src":"16703:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":7156,"initialValue":{"arguments":[{"arguments":[{"hexValue":"7b224c5350344d65746164617461223a207b226e616d65223a2022","id":7112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16765:29:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_44bdec57cf4b83082bc8b3d50a6d08b8ce1579a7a3bdf7ef95add1ca4c8c2a34","typeString":"literal_string \"{\"LSP4Metadata\": {\"name\": \"\""},"value":"{\"LSP4Metadata\": {\"name\": \""},{"id":7113,"name":"tokenName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7065,"src":"16796:9:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c226465736372697074696f6e223a2022","id":7114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16820:20:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_074599ec5483a3af0b62e564a5c4333ca71820c842b98254c57e182a5e09897d","typeString":"literal_string \"\",\"description\": \"\""},"value":"\",\"description\": \""},{"id":7115,"name":"description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7084,"src":"16842:11:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c226c696e6b73223a205b7b227469746c65223a2257656273697465222c2275726c223a2268747470733a2f2f6c756b736f6c6f6f676965732e76657263656c2e617070227d5d2c2269636f6e223a5b5d2c","id":7116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16868:85:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_f10eef1656d896de5fe1825f0342206a7393c54c7ff4bcc9051cff0b78571cfb","typeString":"literal_string \"\",\"links\": [{\"title\":\"Website\",\"url\":\"https://luksoloogies.vercel.app\"}],\"icon\":[],\""},"value":"\",\"links\": [{\"title\":\"Website\",\"url\":\"https://luksoloogies.vercel.app\"}],\"icon\":[],"},{"hexValue":"22696d61676573223a205b5b7b227769647468223a203430302c22686569676874223a203430302c2275726c223a2022","id":7117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16967:50:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_1795706b974f5d38bc249b2ca5281b8d7539af11e7a88b58d2834d1383e48f45","typeString":"literal_string \"\"images\": [[{\"width\": 400,\"height\": 400,\"url\": \"\""},"value":"\"images\": [[{\"width\": 400,\"height\": 400,\"url\": \""},{"hexValue":"646174613a696d6167652f7376672b786d6c3b6261736536342c","id":7118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17031:28:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_f90ae014c41cb48231e1f02c314087ff9c479133697911d25c5fe231e237dd14","typeString":"literal_string \"data:image/svg+xml;base64,\""},"value":"data:image/svg+xml;base64,"},{"arguments":[{"arguments":[{"id":7123,"name":"svg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7047,"src":"17081:3:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17075:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7121,"name":"bytes","nodeType":"ElementaryTypeName","src":"17075:5:30","typeDescriptions":{}}},"id":7124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17075:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7119,"name":"Base64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"17061:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Base64_$3834_$","typeString":"type(library Base64)"}},"id":7120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17068:6:30","memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":3833,"src":"17061:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":7125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17061:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"227d5d5d2c","id":7126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17100:7:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_c4d6a681ad8643ef0086542058dd9343263d6ca9a9433c0869c3658d2fc83506","typeString":"literal_string \"\"}]],\""},"value":"\"}]],"},{"hexValue":"2261747472696275746573223a5b","id":7127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17121:16:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_fae5f698d2c3462fc5dd818af0f930c00a691ac3968407e92c6f5d64f16b49da","typeString":"literal_string \"\"attributes\":[\""},"value":"\"attributes\":["},{"hexValue":"7b226b6579223a22636f6c6f72222c2276616c7565223a2223","id":7128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17151:27:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_bccb42950b292086300cb0c367624838b471d0eb6108ec927f3e7985b847619e","typeString":"literal_string \"{\"key\":\"color\",\"value\":\"#\""},"value":"{\"key\":\"color\",\"value\":\"#"},{"id":7129,"name":"colorHex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"17180:8:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c2274797065223a22737472696e67227d2c","id":7130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17190:21:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_311cbef768e7c8e73e322544f8c0df9c704120a0ef9e492dc23e4a7f7379a735","typeString":"literal_string \"\",\"type\":\"string\"},\""},"value":"\",\"type\":\"string\"},"},{"hexValue":"7b226b6579223a226368756262696e657373222c2276616c7565223a","id":7131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17225:30:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_ce0bf176c5e80c73ce77e6b31fc07c90d88a4d28a2390124c04d4874962a7abe","typeString":"literal_string \"{\"key\":\"chubbiness\",\"value\":\""},"value":"{\"key\":\"chubbiness\",\"value\":"},{"arguments":[{"id":7133,"name":"chubbiness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7033,"src":"17266:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7132,"name":"uint2str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"17257:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":7134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17257:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2c2274797065223a226e756d626572227d2c","id":7135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17279:20:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_48dca5fb3644d8c92c5b41e1f16b2117b0ec8c4142108bca8ebabc71eb428975","typeString":"literal_string \",\"type\":\"number\"},\""},"value":",\"type\":\"number\"},"},{"hexValue":"7b226b6579223a226d6f7574684c656e677468222c2276616c7565223a","id":7136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17313:31:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_74aa2b4f9ed84a3727f167062848572e1df37cda90fc131bd7b59b06c646928d","typeString":"literal_string \"{\"key\":\"mouthLength\",\"value\":\""},"value":"{\"key\":\"mouthLength\",\"value\":"},{"arguments":[{"id":7138,"name":"mouthLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7035,"src":"17355:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7137,"name":"uint2str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"17346:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":7139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17346:21:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2c2274797065223a226e756d626572227d2c","id":7140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17369:20:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_48dca5fb3644d8c92c5b41e1f16b2117b0ec8c4142108bca8ebabc71eb428975","typeString":"literal_string \",\"type\":\"number\"},\""},"value":",\"type\":\"number\"},"},{"hexValue":"7b226b6579223a22757365726e616d65222c2276616c7565223a22","id":7141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17403:29:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_ee85d717ff13fd66294aa649a236a38d29635fe37552de9289f440fa75e5d170","typeString":"literal_string \"{\"key\":\"username\",\"value\":\"\""},"value":"{\"key\":\"username\",\"value\":\""},{"id":7142,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"17434:8:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c2274797065223a22737472696e67227d2c","id":7143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17444:21:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_311cbef768e7c8e73e322544f8c0df9c704120a0ef9e492dc23e4a7f7379a735","typeString":"literal_string \"\",\"type\":\"string\"},\""},"value":"\",\"type\":\"string\"},"},{"hexValue":"7b226b6579223a2269735550222c2276616c7565223a","id":7144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17479:24:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_7d186ffae656937308121e95be1e85c2919ce45fffdb5e7508178d8049b399a7","typeString":"literal_string \"{\"key\":\"isUP\",\"value\":\""},"value":"{\"key\":\"isUP\",\"value\":"},{"condition":{"id":7145,"name":"isUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"17505:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"66616c7365","id":7147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17521:7:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba9154e0baa69c78e0ca563b867df81bae9d177c4ea1452c35c84386a70f0f7a","typeString":"literal_string \"false\""},"value":"false"},"id":7148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"17505:23:30","trueExpression":{"hexValue":"74727565","id":7146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17512:6:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034","typeString":"literal_string \"true\""},"value":"true"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2c2274797065223a22626f6f6c65616e227d2c","id":7149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17530:21:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_daee8b5fbaf48f51231f6ca84875ca704b0eedc1cf30aa241b4cc22829a1fb48","typeString":"literal_string \",\"type\":\"boolean\"},\""},"value":",\"type\":\"boolean\"},"},{"hexValue":"7b226b6579223a2274797065222c2276616c7565223a22","id":7150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17565:25:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_956a20f05b16ed74742d0730253a6e49a62d732e6b6ea61182713d98c04c0cd8","typeString":"literal_string \"{\"key\":\"type\",\"value\":\"\""},"value":"{\"key\":\"type\",\"value\":\""},{"id":7151,"name":"loogieTypeValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7029,"src":"17592:15:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c2274797065223a22737472696e67227d","id":7152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17609:20:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_8aa742c106cf3e8027cf62e719efb005db00b6ab102616cdddd7bcaace668067","typeString":"literal_string \"\",\"type\":\"string\"}\""},"value":"\",\"type\":\"string\"}"},{"hexValue":"5d7d7d","id":7153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17643:5:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_2089c60e389c04f4696869c364884ef9146a5f636fcade33d91dc9645e4061a4","typeString":"literal_string \"]}}\""},"value":"]}}"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_44bdec57cf4b83082bc8b3d50a6d08b8ce1579a7a3bdf7ef95add1ca4c8c2a34","typeString":"literal_string \"{\"LSP4Metadata\": {\"name\": \"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_074599ec5483a3af0b62e564a5c4333ca71820c842b98254c57e182a5e09897d","typeString":"literal_string \"\",\"description\": \"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f10eef1656d896de5fe1825f0342206a7393c54c7ff4bcc9051cff0b78571cfb","typeString":"literal_string \"\",\"links\": [{\"title\":\"Website\",\"url\":\"https://luksoloogies.vercel.app\"}],\"icon\":[],\""},{"typeIdentifier":"t_stringliteral_1795706b974f5d38bc249b2ca5281b8d7539af11e7a88b58d2834d1383e48f45","typeString":"literal_string \"\"images\": [[{\"width\": 400,\"height\": 400,\"url\": \"\""},{"typeIdentifier":"t_stringliteral_f90ae014c41cb48231e1f02c314087ff9c479133697911d25c5fe231e237dd14","typeString":"literal_string \"data:image/svg+xml;base64,\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_c4d6a681ad8643ef0086542058dd9343263d6ca9a9433c0869c3658d2fc83506","typeString":"literal_string \"\"}]],\""},{"typeIdentifier":"t_stringliteral_fae5f698d2c3462fc5dd818af0f930c00a691ac3968407e92c6f5d64f16b49da","typeString":"literal_string \"\"attributes\":[\""},{"typeIdentifier":"t_stringliteral_bccb42950b292086300cb0c367624838b471d0eb6108ec927f3e7985b847619e","typeString":"literal_string \"{\"key\":\"color\",\"value\":\"#\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_311cbef768e7c8e73e322544f8c0df9c704120a0ef9e492dc23e4a7f7379a735","typeString":"literal_string \"\",\"type\":\"string\"},\""},{"typeIdentifier":"t_stringliteral_ce0bf176c5e80c73ce77e6b31fc07c90d88a4d28a2390124c04d4874962a7abe","typeString":"literal_string \"{\"key\":\"chubbiness\",\"value\":\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_48dca5fb3644d8c92c5b41e1f16b2117b0ec8c4142108bca8ebabc71eb428975","typeString":"literal_string \",\"type\":\"number\"},\""},{"typeIdentifier":"t_stringliteral_74aa2b4f9ed84a3727f167062848572e1df37cda90fc131bd7b59b06c646928d","typeString":"literal_string \"{\"key\":\"mouthLength\",\"value\":\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_48dca5fb3644d8c92c5b41e1f16b2117b0ec8c4142108bca8ebabc71eb428975","typeString":"literal_string \",\"type\":\"number\"},\""},{"typeIdentifier":"t_stringliteral_ee85d717ff13fd66294aa649a236a38d29635fe37552de9289f440fa75e5d170","typeString":"literal_string \"{\"key\":\"username\",\"value\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_311cbef768e7c8e73e322544f8c0df9c704120a0ef9e492dc23e4a7f7379a735","typeString":"literal_string \"\",\"type\":\"string\"},\""},{"typeIdentifier":"t_stringliteral_7d186ffae656937308121e95be1e85c2919ce45fffdb5e7508178d8049b399a7","typeString":"literal_string \"{\"key\":\"isUP\",\"value\":\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_daee8b5fbaf48f51231f6ca84875ca704b0eedc1cf30aa241b4cc22829a1fb48","typeString":"literal_string \",\"type\":\"boolean\"},\""},{"typeIdentifier":"t_stringliteral_956a20f05b16ed74742d0730253a6e49a62d732e6b6ea61182713d98c04c0cd8","typeString":"literal_string \"{\"key\":\"type\",\"value\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_8aa742c106cf3e8027cf62e719efb005db00b6ab102616cdddd7bcaace668067","typeString":"literal_string \"\",\"type\":\"string\"}\""},{"typeIdentifier":"t_stringliteral_2089c60e389c04f4696869c364884ef9146a5f636fcade33d91dc9645e4061a4","typeString":"literal_string \"]}}\""}],"expression":{"id":7110,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16735:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16739:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"16735:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16735:923:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16728:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7108,"name":"string","nodeType":"ElementaryTypeName","src":"16728:6:30","typeDescriptions":{}}},"id":7155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16728:931:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"16703:956:30"},{"expression":{"id":7162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7157,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7042,"src":"17709:3:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7160,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7107,"src":"17721:8:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17715:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7158,"name":"bytes","nodeType":"ElementaryTypeName","src":"17715:5:30","typeDescriptions":{}}},"id":7161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17715:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"17709:21:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7163,"nodeType":"ExpressionStatement","src":"17709:21:30"},{"expression":{"id":7179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7164,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7044,"src":"17794:7:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c","id":7171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:31:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},"value":"data:application/json;base64,"},{"arguments":[{"id":7174,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7042,"src":"17927:3:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7172,"name":"Base64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"17913:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Base64_$3834_$","typeString":"type(library Base64)"}},"id":7173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17920:6:30","memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":3833,"src":"17913:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":7175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17913:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7169,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"17830:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17834:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"17830:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17830:115:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17810:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7167,"name":"string","nodeType":"ElementaryTypeName","src":"17810:6:30","typeDescriptions":{}}},"id":7177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17810:145:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17804:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7165,"name":"bytes","nodeType":"ElementaryTypeName","src":"17804:5:30","typeDescriptions":{}}},"id":7178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17804:152:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"17794:162:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7180,"nodeType":"ExpressionStatement","src":"17794:162:30"},{"expression":{"components":[{"id":7181,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7042,"src":"17983:3:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7182,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7044,"src":"17988:7:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":7183,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17982:14:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes memory,bytes memory)"}},"functionReturnParameters":7045,"id":7184,"nodeType":"Return","src":"17975:21:30"}]},"documentation":{"id":7025,"nodeType":"StructuredDocumentation","src":"14974:460:30","text":" @dev Get token metadata in LUKSO LSP4 format\n @param tokenId The token ID\n @param loogieTypeValue The loogie type\n @param colorBytes The color bytes\n @param chubbiness The chubbiness value\n @param mouthLength The mouth length value\n @param username The username\n @param isUP Whether the owner is a Universal Profile\n @return raw Raw metadata bytes\n @return encoded Encoded metadata bytes"},"functionSelector":"8528247f","id":7186,"implemented":true,"kind":"function","modifiers":[],"name":"getMetadataBytes","nameLocation":"15448:16:30","nodeType":"FunctionDefinition","parameters":{"id":7040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7027,"mutability":"mutable","name":"tokenId","nameLocation":"15482:7:30","nodeType":"VariableDeclaration","scope":7186,"src":"15474:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7026,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15474:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7029,"mutability":"mutable","name":"loogieTypeValue","nameLocation":"15513:15:30","nodeType":"VariableDeclaration","scope":7186,"src":"15499:29:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7028,"name":"string","nodeType":"ElementaryTypeName","src":"15499:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7031,"mutability":"mutable","name":"colorBytes","nameLocation":"15545:10:30","nodeType":"VariableDeclaration","scope":7186,"src":"15538:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"},"typeName":{"id":7030,"name":"bytes3","nodeType":"ElementaryTypeName","src":"15538:6:30","typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"}},"visibility":"internal"},{"constant":false,"id":7033,"mutability":"mutable","name":"chubbiness","nameLocation":"15573:10:30","nodeType":"VariableDeclaration","scope":7186,"src":"15565:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7032,"name":"uint256","nodeType":"ElementaryTypeName","src":"15565:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7035,"mutability":"mutable","name":"mouthLength","nameLocation":"15601:11:30","nodeType":"VariableDeclaration","scope":7186,"src":"15593:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7034,"name":"uint256","nodeType":"ElementaryTypeName","src":"15593:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7037,"mutability":"mutable","name":"username","nameLocation":"15636:8:30","nodeType":"VariableDeclaration","scope":7186,"src":"15622:22:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7036,"name":"string","nodeType":"ElementaryTypeName","src":"15622:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7039,"mutability":"mutable","name":"isUP","nameLocation":"15659:4:30","nodeType":"VariableDeclaration","scope":7186,"src":"15654:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7038,"name":"bool","nodeType":"ElementaryTypeName","src":"15654:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15464:205:30"},"returnParameters":{"id":7045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7042,"mutability":"mutable","name":"raw","nameLocation":"15704:3:30","nodeType":"VariableDeclaration","scope":7186,"src":"15691:16:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7041,"name":"bytes","nodeType":"ElementaryTypeName","src":"15691:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7044,"mutability":"mutable","name":"encoded","nameLocation":"15722:7:30","nodeType":"VariableDeclaration","scope":7186,"src":"15709:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7043,"name":"bytes","nodeType":"ElementaryTypeName","src":"15709:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15690:40:30"},"scope":7263,"src":"15439:2564:30","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7261,"nodeType":"Block","src":"18325:1466:30","statements":[{"assignments":[7197,7199],"declarations":[{"constant":false,"id":7197,"mutability":"mutable","name":"collectionSvg","nameLocation":"18385:13:30","nodeType":"VariableDeclaration","scope":7261,"src":"18371:27:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7196,"name":"string","nodeType":"ElementaryTypeName","src":"18371:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7199,"mutability":"mutable","name":"encodedSvg","nameLocation":"18414:10:30","nodeType":"VariableDeclaration","scope":7261,"src":"18400:24:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7198,"name":"string","nodeType":"ElementaryTypeName","src":"18400:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":7202,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":7200,"name":"generateCollectionSVG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7024,"src":"18428:21:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_string_memory_ptr_$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory,string memory)"}},"id":7201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18428:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$","typeString":"tuple(string memory,string memory)"}},"nodeType":"VariableDeclarationStatement","src":"18370:81:30"},{"assignments":[7204],"declarations":[{"constant":false,"id":7204,"mutability":"mutable","name":"metadata","nameLocation":"18516:8:30","nodeType":"VariableDeclaration","scope":7261,"src":"18502:22:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7203,"name":"string","nodeType":"ElementaryTypeName","src":"18502:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":7232,"initialValue":{"arguments":[{"arguments":[{"hexValue":"7b224c5350344d65746164617461223a7b","id":7209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18564:19:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_217aa0a4839238e932e51c9a7a5e111645879a8876f2c2154563aedd50c3be5c","typeString":"literal_string \"{\"LSP4Metadata\":{\""},"value":"{\"LSP4Metadata\":{"},{"hexValue":"226e616d65223a224c756b736f4c6f6f67696573222c","id":7210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18597:24:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_4df4f80ccbd086c6d1566ad4d118d27dc001685b9e26f97896858f0f752d4603","typeString":"literal_string \"\"name\":\"LuksoLoogies\",\""},"value":"\"name\":\"LuksoLoogies\","},{"hexValue":"226465736372697074696f6e223a224c756b736f4c6f6f6769657320617265204c554b534f205374616e64617264204c535038204e4654732077697468206120736d696c65203a29204f6e6c7920","id":7211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18635:80:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_0eefd37934f052561183f0f0e1fdfeae6e558a70e9a301e4ae09b754225a2c1b","typeString":"literal_string \"\"description\":\"LuksoLoogies are LUKSO Standard LSP8 NFTs with a smile :) Only \""},"value":"\"description\":\"LuksoLoogies are LUKSO Standard LSP8 NFTs with a smile :) Only "},{"arguments":[{"id":7213,"name":"limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"18726:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7212,"name":"uint2str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"18717:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":7214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18717:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"204c756b736f4c6f6f6769657320617661696c61626c65206f6e206120707269636520637572766520696e6372656173696e6720302e322520776974682065616368206e6577206d696e742e2054686973204d61747269782045646974696f6e20666561747572657320616e696d61746564204d61747269782d7374796c652064657369676e7320666f722065616368204c6f6f6769652e222c","id":7215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18734:156:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_cf97eae75e8a928fa208e86547c42140ebc3d4a05059e47ddaa9f8c907a92cc0","typeString":"literal_string \" LuksoLoogies available on a price curve increasing 0.2% with each new mint. This Matrix Edition features animated Matrix-style designs for each Loogie.\",\""},"value":" LuksoLoogies available on a price curve increasing 0.2% with each new mint. This Matrix Edition features animated Matrix-style designs for each Loogie.\","},{"hexValue":"226c696e6b73223a5b7b227469746c65223a2257656273697465222c2275726c223a2268747470733a2f2f6c756b736f6c6f6f676965732e76657263656c2e617070227d2c7b227469746c65223a2254776974746572222c2275726c223a2268747470733a2f2f747769747465722e636f6d2f6c756b736f4c6f6f67696573227d5d2c","id":7216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18904:133:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_76efa35feb39eb59632a693121e1533c5bb30ae2c31c5bf998a84b2548921971","typeString":"literal_string \"\"links\":[{\"title\":\"Website\",\"url\":\"https://luksoloogies.vercel.app\"},{\"title\":\"Twitter\",\"url\":\"https://twitter.com/luksoLoogies\"}],\""},"value":"\"links\":[{\"title\":\"Website\",\"url\":\"https://luksoloogies.vercel.app\"},{\"title\":\"Twitter\",\"url\":\"https://twitter.com/luksoLoogies\"}],"},{"hexValue":"22696d61676573223a5b5b7b227769647468223a3430302c22686569676874223a3430302c2275726c223a22","id":7217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19051:46:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_a4ba6f38be896ab07771727b40fb712c8ce871b9fd09f4a3fac3dad163449afd","typeString":"literal_string \"\"images\":[[{\"width\":400,\"height\":400,\"url\":\"\""},"value":"\"images\":[[{\"width\":400,\"height\":400,\"url\":\""},{"id":7218,"name":"encodedSvg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7199,"src":"19099:10:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"227d5d5d2c","id":7219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19111:7:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_c4d6a681ad8643ef0086542058dd9343263d6ca9a9433c0869c3658d2fc83506","typeString":"literal_string \"\"}]],\""},"value":"\"}]],"},{"hexValue":"2261747472696275746573223a5b","id":7220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19178:16:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_fae5f698d2c3462fc5dd818af0f930c00a691ac3968407e92c6f5d64f16b49da","typeString":"literal_string \"\"attributes\":[\""},"value":"\"attributes\":["},{"hexValue":"7b226b6579223a2274797065222c2276616c7565223a22636f6c6c656374696f6e222c2274797065223a22737472696e67227d2c","id":7221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19208:54:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_f969758690b22060c78201b9df5b0fb299d4c32fbf71f55ef8b51317f0504c7c","typeString":"literal_string \"{\"key\":\"type\",\"value\":\"collection\",\"type\":\"string\"},\""},"value":"{\"key\":\"type\",\"value\":\"collection\",\"type\":\"string\"},"},{"hexValue":"7b226b6579223a226c696d6974222c2276616c7565223a","id":7222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19276:25:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_00effea24fd54f6d207d175823b7a186cdc79c79d397b15e6bdc7c0af1617bdf","typeString":"literal_string \"{\"key\":\"limit\",\"value\":\""},"value":"{\"key\":\"limit\",\"value\":"},{"arguments":[{"id":7224,"name":"limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"19312:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7223,"name":"uint2str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"19303:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19303:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2c2274797065223a226e756d626572227d2c","id":7226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19320:20:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_48dca5fb3644d8c92c5b41e1f16b2117b0ec8c4142108bca8ebabc71eb428975","typeString":"literal_string \",\"type\":\"number\"},\""},"value":",\"type\":\"number\"},"},{"hexValue":"7b226b6579223a226375727665222c2276616c7565223a3130302e322c2274797065223a226e756d626572227d","id":7227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19354:47:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_281642a3593b0539701a75ebd67e5cdab24ded31ae7eafb9ce723ddc03a1103c","typeString":"literal_string \"{\"key\":\"curve\",\"value\":100.2,\"type\":\"number\"}\""},"value":"{\"key\":\"curve\",\"value\":100.2,\"type\":\"number\"}"},{"hexValue":"5d","id":7228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19415:3:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29","typeString":"literal_string \"]\""},"value":"]"},{"hexValue":"7d7d","id":7229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19432:4:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_32f971f72ea685992ecf4272dc0616816bf318aa74b22d259e914d22aca053c3","typeString":"literal_string \"}}\""},"value":"}}"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_217aa0a4839238e932e51c9a7a5e111645879a8876f2c2154563aedd50c3be5c","typeString":"literal_string \"{\"LSP4Metadata\":{\""},{"typeIdentifier":"t_stringliteral_4df4f80ccbd086c6d1566ad4d118d27dc001685b9e26f97896858f0f752d4603","typeString":"literal_string \"\"name\":\"LuksoLoogies\",\""},{"typeIdentifier":"t_stringliteral_0eefd37934f052561183f0f0e1fdfeae6e558a70e9a301e4ae09b754225a2c1b","typeString":"literal_string \"\"description\":\"LuksoLoogies are LUKSO Standard LSP8 NFTs with a smile :) Only \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_cf97eae75e8a928fa208e86547c42140ebc3d4a05059e47ddaa9f8c907a92cc0","typeString":"literal_string \" LuksoLoogies available on a price curve increasing 0.2% with each new mint. This Matrix Edition features animated Matrix-style designs for each Loogie.\",\""},{"typeIdentifier":"t_stringliteral_76efa35feb39eb59632a693121e1533c5bb30ae2c31c5bf998a84b2548921971","typeString":"literal_string \"\"links\":[{\"title\":\"Website\",\"url\":\"https://luksoloogies.vercel.app\"},{\"title\":\"Twitter\",\"url\":\"https://twitter.com/luksoLoogies\"}],\""},{"typeIdentifier":"t_stringliteral_a4ba6f38be896ab07771727b40fb712c8ce871b9fd09f4a3fac3dad163449afd","typeString":"literal_string \"\"images\":[[{\"width\":400,\"height\":400,\"url\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_c4d6a681ad8643ef0086542058dd9343263d6ca9a9433c0869c3658d2fc83506","typeString":"literal_string \"\"}]],\""},{"typeIdentifier":"t_stringliteral_fae5f698d2c3462fc5dd818af0f930c00a691ac3968407e92c6f5d64f16b49da","typeString":"literal_string \"\"attributes\":[\""},{"typeIdentifier":"t_stringliteral_f969758690b22060c78201b9df5b0fb299d4c32fbf71f55ef8b51317f0504c7c","typeString":"literal_string \"{\"key\":\"type\",\"value\":\"collection\",\"type\":\"string\"},\""},{"typeIdentifier":"t_stringliteral_00effea24fd54f6d207d175823b7a186cdc79c79d397b15e6bdc7c0af1617bdf","typeString":"literal_string \"{\"key\":\"limit\",\"value\":\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_48dca5fb3644d8c92c5b41e1f16b2117b0ec8c4142108bca8ebabc71eb428975","typeString":"literal_string \",\"type\":\"number\"},\""},{"typeIdentifier":"t_stringliteral_281642a3593b0539701a75ebd67e5cdab24ded31ae7eafb9ce723ddc03a1103c","typeString":"literal_string \"{\"key\":\"curve\",\"value\":100.2,\"type\":\"number\"}\""},{"typeIdentifier":"t_stringliteral_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29","typeString":"literal_string \"]\""},{"typeIdentifier":"t_stringliteral_32f971f72ea685992ecf4272dc0616816bf318aa74b22d259e914d22aca053c3","typeString":"literal_string \"}}\""}],"expression":{"id":7207,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"18534:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18538:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"18534:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18534:912:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18527:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7205,"name":"string","nodeType":"ElementaryTypeName","src":"18527:6:30","typeDescriptions":{}}},"id":7231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18527:920:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"18502:945:30"},{"expression":{"id":7238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7233,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7192,"src":"19497:3:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7236,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"19509:8:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19503:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7234,"name":"bytes","nodeType":"ElementaryTypeName","src":"19503:5:30","typeDescriptions":{}}},"id":7237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19503:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19497:21:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7239,"nodeType":"ExpressionStatement","src":"19497:21:30"},{"expression":{"id":7255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7240,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7194,"src":"19582:7:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c","id":7247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19652:31:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},"value":"data:application/json;base64,"},{"arguments":[{"id":7250,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7192,"src":"19715:3:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7248,"name":"Base64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"19701:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Base64_$3834_$","typeString":"type(library Base64)"}},"id":7249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19708:6:30","memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":3833,"src":"19701:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":7251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19701:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7245,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19618:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19622:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"19618:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19618:115:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19598:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7243,"name":"string","nodeType":"ElementaryTypeName","src":"19598:6:30","typeDescriptions":{}}},"id":7253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19598:145:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19592:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7241,"name":"bytes","nodeType":"ElementaryTypeName","src":"19592:5:30","typeDescriptions":{}}},"id":7254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19592:152:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19582:162:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7256,"nodeType":"ExpressionStatement","src":"19582:162:30"},{"expression":{"components":[{"id":7257,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7192,"src":"19771:3:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7258,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7194,"src":"19776:7:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":7259,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19770:14:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes memory,bytes memory)"}},"functionReturnParameters":7195,"id":7260,"nodeType":"Return","src":"19763:21:30"}]},"documentation":{"id":7187,"nodeType":"StructuredDocumentation","src":"18013:195:30","text":" @dev Get collection metadata in LUKSO LSP4 format\n @param limit The token supply limit\n @return raw Raw metadata bytes\n @return encoded Encoded metadata bytes"},"functionSelector":"8cda5103","id":7262,"implemented":true,"kind":"function","modifiers":[],"name":"getCollectionMetadataBytes","nameLocation":"18222:26:30","nodeType":"FunctionDefinition","parameters":{"id":7190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7189,"mutability":"mutable","name":"limit","nameLocation":"18257:5:30","nodeType":"VariableDeclaration","scope":7262,"src":"18249:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7188,"name":"uint256","nodeType":"ElementaryTypeName","src":"18249:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18248:15:30"},"returnParameters":{"id":7195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7192,"mutability":"mutable","name":"raw","nameLocation":"18298:3:30","nodeType":"VariableDeclaration","scope":7262,"src":"18285:16:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7191,"name":"bytes","nodeType":"ElementaryTypeName","src":"18285:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7194,"mutability":"mutable","name":"encoded","nameLocation":"18316:7:30","nodeType":"VariableDeclaration","scope":7262,"src":"18303:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7193,"name":"bytes","nodeType":"ElementaryTypeName","src":"18303:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18284:40:30"},"scope":7263,"src":"18213:1578:30","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":8085,"src":"810:18983:30","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":7265,"name":"LSP8IdentifiableDigitalAsset","nameLocations":["19955:28:30"],"nodeType":"IdentifierPath","referencedDeclaration":3609,"src":"19955:28:30"},"id":7266,"nodeType":"InheritanceSpecifier","src":"19955:28:30"},{"baseName":{"id":7267,"name":"OnChainMetadata","nameLocations":["19985:15:30"],"nodeType":"IdentifierPath","referencedDeclaration":7263,"src":"19985:15:30"},"id":7268,"nodeType":"InheritanceSpecifier","src":"19985:15:30"},{"baseName":{"id":7269,"name":"ReentrancyGuard","nameLocations":["20002:15:30"],"nodeType":"IdentifierPath","referencedDeclaration":3787,"src":"20002:15:30"},"id":7270,"nodeType":"InheritanceSpecifier","src":"20002:15:30"}],"canonicalName":"LSP8LoogiesEnhanced","contractDependencies":[],"contractKind":"contract","documentation":{"id":7264,"nodeType":"StructuredDocumentation","src":"19795:127:30","text":" @title LSP8LoogiesEnhanced\n @notice An LSP8 NFT contract for LuksoLoogies with improved SVG rendering and metadata"},"fullyImplemented":true,"id":8084,"internalFunctionIDs":{"4116":1},"linearizedBaseContracts":[8084,3787,7263,3609,725,1614,269,386,4117,4323,3722,3864,1838],"name":"LSP8LoogiesEnhanced","nameLocation":"19932:19:30","nodeType":"ContractDefinition","nodes":[{"global":false,"id":7273,"libraryName":{"id":7271,"name":"Strings","nameLocations":["20030:7:30"],"nodeType":"IdentifierPath","referencedDeclaration":4093,"src":"20030:7:30"},"nodeType":"UsingForDirective","src":"20024:26:30","typeName":{"id":7272,"name":"uint256","nodeType":"ElementaryTypeName","src":"20042:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":7275,"mutability":"mutable","name":"_tokenIds","nameLocation":"20100:9:30","nodeType":"VariableDeclaration","scope":8084,"src":"20084:25:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7274,"name":"uint256","nodeType":"ElementaryTypeName","src":"20084:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"1ead90b0","id":7279,"mutability":"mutable","name":"color","nameLocation":"20149:5:30","nodeType":"VariableDeclaration","scope":8084,"src":"20115:39:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes3_$","typeString":"mapping(bytes32 => bytes3)"},"typeName":{"id":7278,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7276,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20123:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"20115:26:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes3_$","typeString":"mapping(bytes32 => bytes3)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7277,"name":"bytes3","nodeType":"ElementaryTypeName","src":"20134:6:30","typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"}}},"visibility":"public"},{"constant":false,"functionSelector":"6643a686","id":7283,"mutability":"mutable","name":"chubbiness","nameLocation":"20195:10:30","nodeType":"VariableDeclaration","scope":8084,"src":"20160:45:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":7282,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7280,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20168:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"20160:27:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7281,"name":"uint256","nodeType":"ElementaryTypeName","src":"20179:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"017c96b8","id":7287,"mutability":"mutable","name":"mouthLength","nameLocation":"20246:11:30","nodeType":"VariableDeclaration","scope":8084,"src":"20211:46:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":7286,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7284,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20219:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"20211:27:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7285,"name":"uint256","nodeType":"ElementaryTypeName","src":"20230:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"c65eb180","id":7291,"mutability":"mutable","name":"loogieTypes","nameLocation":"20297:11:30","nodeType":"VariableDeclaration","scope":8084,"src":"20263:45:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_string_storage_$","typeString":"mapping(bytes32 => string)"},"typeName":{"id":7290,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7288,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20271:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"20263:26:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_string_storage_$","typeString":"mapping(bytes32 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7289,"name":"string","nodeType":"ElementaryTypeName","src":"20282:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"public"},{"constant":false,"functionSelector":"472dfcfb","id":7295,"mutability":"mutable","name":"upUsernames","nameLocation":"20348:11:30","nodeType":"VariableDeclaration","scope":8084,"src":"20314:45:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_string_storage_$","typeString":"mapping(bytes32 => string)"},"typeName":{"id":7294,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7292,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20322:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"20314:26:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_string_storage_$","typeString":"mapping(bytes32 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7293,"name":"string","nodeType":"ElementaryTypeName","src":"20333:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"public"},{"constant":true,"functionSelector":"32cb6b0c","id":7298,"mutability":"constant","name":"MAX_SUPPLY","nameLocation":"20422:10:30","nodeType":"VariableDeclaration","scope":8084,"src":"20398:41:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7296,"name":"uint256","nodeType":"ElementaryTypeName","src":"20398:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33373238","id":7297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20435:4:30","typeDescriptions":{"typeIdentifier":"t_rational_3728_by_1","typeString":"int_const 3728"},"value":"3728"},"visibility":"public"},{"constant":true,"functionSelector":"3f879faf","id":7301,"mutability":"constant","name":"MAX_MINTABLE","nameLocation":"20469:12:30","nodeType":"VariableDeclaration","scope":8084,"src":"20445:41:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7299,"name":"uint256","nodeType":"ElementaryTypeName","src":"20445:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130","id":7300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20484:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"visibility":"public"},{"constant":true,"functionSelector":"8d859f3e","id":7304,"mutability":"constant","name":"PRICE","nameLocation":"20516:5:30","nodeType":"VariableDeclaration","scope":8084,"src":"20492:41:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7302,"name":"uint256","nodeType":"ElementaryTypeName","src":"20492:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"302e31","id":7303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20524:9:30","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000_by_1","typeString":"int_const 100000000000000000"},"value":"0.1"},"visibility":"public"},{"constant":true,"functionSelector":"66d003ac","id":7310,"mutability":"constant","name":"recipient","nameLocation":"20599:9:30","nodeType":"VariableDeclaration","scope":8084,"src":"20567:95:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":7305,"name":"address","nodeType":"ElementaryTypeName","src":"20567:15:30","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"value":{"arguments":[{"hexValue":"307861383161366139313046654432303337343336314233354334353161346134344638364365443436","id":7308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20619:42:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xa81a6a910FeD20374361B35C451a4a44F86CeD46"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20611:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":7306,"name":"address","nodeType":"ElementaryTypeName","src":"20611:8:30","stateMutability":"payable","typeDescriptions":{}}},"id":7309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20611:51:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"public"},{"constant":false,"functionSelector":"5a9c2b1c","id":7313,"mutability":"mutable","name":"publicMintSet","nameLocation":"20707:13:30","nodeType":"VariableDeclaration","scope":8084,"src":"20695:33:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7311,"name":"bool","nodeType":"ElementaryTypeName","src":"20695:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"hexValue":"66616c7365","id":7312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20723:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"visibility":"public"},{"constant":false,"functionSelector":"d445b978","id":7317,"mutability":"mutable","name":"mintedPerAddress","nameLocation":"20824:16:30","nodeType":"VariableDeclaration","scope":8084,"src":"20792:48:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":7316,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7314,"name":"address","nodeType":"ElementaryTypeName","src":"20800:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"20792:24:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7315,"name":"uint","nodeType":"ElementaryTypeName","src":"20811:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"0bab5fbabbf1262857155d5133d7829bd5739a99eb04ee435fe0e160483b1e8a","id":7323,"name":"UsernameUpdated","nameLocation":"20871:15:30","nodeType":"EventDefinition","parameters":{"id":7322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7319,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"20903:7:30","nodeType":"VariableDeclaration","scope":7323,"src":"20887:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7318,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20887:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7321,"indexed":false,"mutability":"mutable","name":"username","nameLocation":"20919:8:30","nodeType":"VariableDeclaration","scope":7323,"src":"20912:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7320,"name":"string","nodeType":"ElementaryTypeName","src":"20912:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20886:42:30"},"src":"20865:64:30"},{"body":{"id":7445,"nodeType":"Block","src":"21191:1126:30","statements":[{"assignments":[7340],"declarations":[{"constant":false,"id":7340,"mutability":"mutable","name":"types","nameLocation":"21256:5:30","nodeType":"VariableDeclaration","scope":7445,"src":"21240:21:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":7338,"name":"string","nodeType":"ElementaryTypeName","src":"21240:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7339,"nodeType":"ArrayTypeName","src":"21240:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":7346,"initialValue":{"arguments":[{"hexValue":"35","id":7344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21277:1:30","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"}],"id":7343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"21264:12:30","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":7341,"name":"string","nodeType":"ElementaryTypeName","src":"21268:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7342,"nodeType":"ArrayTypeName","src":"21268:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":7345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21264:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"21240:39:30"},{"expression":{"id":7351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7347,"name":"types","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"21289:5:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":7349,"indexExpression":{"hexValue":"30","id":7348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21295:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"21289:8:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"677265656e","id":7350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21300:7:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_f99e8d094ee97e7be9a3d7269f09f9996041160cc5c134b6a863be5b0ce9b5bd","typeString":"literal_string \"green\""},"value":"green"},"src":"21289:18:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":7352,"nodeType":"ExpressionStatement","src":"21289:18:30"},{"expression":{"id":7357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7353,"name":"types","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"21317:5:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":7355,"indexExpression":{"hexValue":"31","id":7354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21323:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"21317:8:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"626c7565","id":7356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21328:6:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_fa187c1e7b6b42ab8b2d9415ab7e6b1e71b551fcdc8151ebafe46e40a10d90ad","typeString":"literal_string \"blue\""},"value":"blue"},"src":"21317:17:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":7358,"nodeType":"ExpressionStatement","src":"21317:17:30"},{"expression":{"id":7363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7359,"name":"types","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"21344:5:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":7361,"indexExpression":{"hexValue":"32","id":7360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21350:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"21344:8:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"726564","id":7362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21355:5:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_8eec9d5ae546887db6b6a3889e6591fe96f3c16bc9d921551a4aac3adce52996","typeString":"literal_string \"red\""},"value":"red"},"src":"21344:16:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":7364,"nodeType":"ExpressionStatement","src":"21344:16:30"},{"expression":{"id":7369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7365,"name":"types","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"21370:5:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":7367,"indexExpression":{"hexValue":"33","id":7366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21376:1:30","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"21370:8:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"707572706c65","id":7368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21381:8:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ceb74360896f85b39388579e9f44ea71ffeef099012760c53d69361c5916c4e","typeString":"literal_string \"purple\""},"value":"purple"},"src":"21370:19:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":7370,"nodeType":"ExpressionStatement","src":"21370:19:30"},{"expression":{"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7371,"name":"types","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"21399:5:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":7373,"indexExpression":{"hexValue":"34","id":7372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21405:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"21399:8:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"79656c6c6f77","id":7374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21410:8:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_27617207effe6bfd81a3e2b21d8a20c4e622b23e5422d607771b4f8b8ba006fa","typeString":"literal_string \"yellow\""},"value":"yellow"},"src":"21399:19:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":7376,"nodeType":"ExpressionStatement","src":"21399:19:30"},{"expression":{"arguments":[{"hexValue":"7479706573","id":7378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21435:7:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_685966fe6401a91cc6816a1a97f378b989bcbd82067e5b9d1a181558c11ad846","typeString":"literal_string \"types\""},"value":"types"},{"id":7379,"name":"types","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"21444:5:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_685966fe6401a91cc6816a1a97f378b989bcbd82067e5b9d1a181558c11ad846","typeString":"literal_string \"types\""},{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}],"id":7377,"name":"_setUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6092,"src":"21428:6:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$__$","typeString":"function (string memory,string memory[] memory)"}},"id":7380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21428:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7381,"nodeType":"ExpressionStatement","src":"21428:22:30"},{"assignments":[7383,7385],"declarations":[{"constant":false,"id":7383,"mutability":"mutable","name":"rawMetadata","nameLocation":"21555:11:30","nodeType":"VariableDeclaration","scope":7445,"src":"21542:24:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7382,"name":"bytes","nodeType":"ElementaryTypeName","src":"21542:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7385,"mutability":"mutable","name":"encodedMetadata","nameLocation":"21581:15:30","nodeType":"VariableDeclaration","scope":7445,"src":"21568:28:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7384,"name":"bytes","nodeType":"ElementaryTypeName","src":"21568:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":7389,"initialValue":{"arguments":[{"id":7387,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7298,"src":"21627:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7386,"name":"getCollectionMetadataBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7262,"src":"21600:26:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory,bytes memory)"}},"id":7388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21600:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes memory,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"21541:97:30"},{"assignments":[7391],"declarations":[{"constant":false,"id":7391,"mutability":"mutable","name":"verifiableURI","nameLocation":"21661:13:30","nodeType":"VariableDeclaration","scope":7445,"src":"21648:26:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7390,"name":"bytes","nodeType":"ElementaryTypeName","src":"21648:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":7401,"initialValue":{"arguments":[{"hexValue":"00006f357c6a0020","id":7395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"21703:21:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_58e2d872f7cafb14e9f1ff6d37e5cd949a851cbb06d42d14ad6a0e6fef0c87ba","typeString":"literal_string hex\"00006f357c6a0020\""},"value":"\u0000\u0000o5|j\u0000 "},{"arguments":[{"id":7397,"name":"rawMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7383,"src":"21748:11:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7396,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"21738:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21738:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7399,"name":"encodedMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7385,"src":"21774:15:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_58e2d872f7cafb14e9f1ff6d37e5cd949a851cbb06d42d14ad6a0e6fef0c87ba","typeString":"literal_string hex\"00006f357c6a0020\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21677:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7392,"name":"bytes","nodeType":"ElementaryTypeName","src":"21677:5:30","typeDescriptions":{}}},"id":7394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21683:6:30","memberName":"concat","nodeType":"MemberAccess","src":"21677:12:30","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21677:122:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"21648:151:30"},{"expression":{"arguments":[{"id":7403,"name":"_LSP4_METADATA_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"21818:18:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7404,"name":"verifiableURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7391,"src":"21838:13:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7402,"name":"_setData","nodeType":"Identifier","overloadedDeclarations":[2309],"referencedDeclaration":2309,"src":"21809:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":7405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21809:43:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7406,"nodeType":"ExpressionStatement","src":"21809:43:30"},{"assignments":[7408],"declarations":[{"constant":false,"id":7408,"mutability":"mutable","name":"LSP4_METADATA_TOTAL_SUPPLY","nameLocation":"21917:26:30","nodeType":"VariableDeclaration","scope":7445,"src":"21909:34:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7407,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21909:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7410,"initialValue":{"hexValue":"307861323365613739633730366265343634316266643937633961666235623731613535326335626333323039333064626530396233353330656437366465653066","id":7409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21946:66:30","typeDescriptions":{"typeIdentifier":"t_rational_73385382797736369768622327178351349343394431879127983234536187282112574778895_by_1","typeString":"int_const 7338...(69 digits omitted)...8895"},"value":"0xa23ea79c706be4641bfd97c9afb5b71a552c5bc320930dbe09b3530ed76dee0f"},"nodeType":"VariableDeclarationStatement","src":"21909:103:30"},{"expression":{"arguments":[{"id":7412,"name":"LSP4_METADATA_TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7408,"src":"22031:26:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"arguments":[{"id":7420,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7298,"src":"22088:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22080:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7418,"name":"uint256","nodeType":"ElementaryTypeName","src":"22080:7:30","typeDescriptions":{}}},"id":7421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22080:19:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22072:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7416,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22072:7:30","typeDescriptions":{}}},"id":7422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22072:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22059:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7413,"name":"bytes","nodeType":"ElementaryTypeName","src":"22059:5:30","typeDescriptions":{}}},"id":7415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22065:6:30","memberName":"concat","nodeType":"MemberAccess","src":"22059:12:30","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22059:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7411,"name":"_setData","nodeType":"Identifier","overloadedDeclarations":[2309],"referencedDeclaration":2309,"src":"22022:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":7424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22022:80:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7425,"nodeType":"ExpressionStatement","src":"22022:80:30"},{"assignments":[7427],"declarations":[{"constant":false,"id":7427,"mutability":"mutable","name":"LSP4_METADATA_MAX_SUPPLY","nameLocation":"22129:24:30","nodeType":"VariableDeclaration","scope":7445,"src":"22121:32:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22121:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7429,"initialValue":{"hexValue":"307864323863393533353763663463393464363338613466353732643564336466386437653134313563386236353065373437613231396335353964313433356338","id":7428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22156:66:30","typeDescriptions":{"typeIdentifier":"t_rational_95234086593797183942750106982541954218110793749665749512113073139090508232136_by_1","typeString":"int_const 9523...(69 digits omitted)...2136"},"value":"0xd28c95357cf4c94d638a4f572d5d3df8d7e1415c8b650e747a219c559d1435c8"},"nodeType":"VariableDeclarationStatement","src":"22121:101:30"},{"expression":{"arguments":[{"id":7431,"name":"LSP4_METADATA_MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7427,"src":"22241:24:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"arguments":[{"id":7439,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7298,"src":"22296:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22288:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7437,"name":"uint256","nodeType":"ElementaryTypeName","src":"22288:7:30","typeDescriptions":{}}},"id":7440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22288:19:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22280:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7435,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22280:7:30","typeDescriptions":{}}},"id":7441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22280:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22267:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7432,"name":"bytes","nodeType":"ElementaryTypeName","src":"22267:5:30","typeDescriptions":{}}},"id":7434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22273:6:30","memberName":"concat","nodeType":"MemberAccess","src":"22267:12:30","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22267:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7430,"name":"_setData","nodeType":"Identifier","overloadedDeclarations":[2309],"referencedDeclaration":2309,"src":"22232:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":7443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22232:78:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7444,"nodeType":"ExpressionStatement","src":"22232:78:30"}]},"documentation":{"id":7324,"nodeType":"StructuredDocumentation","src":"20939:35:30","text":" @dev Constructor"},"id":7446,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4c756b736f4c6f6f67696573","id":7329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21057:14:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_1c4db6127d6811a94acc5b5f0e9f48af698e4d874ad5b91ebfd436ee73ce1710","typeString":"literal_string \"LuksoLoogies\""},"value":"LuksoLoogies"},{"hexValue":"4c554b4c4f4f47","id":7330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21082:9:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec47d6c9e8e39439c7f56fa87eb1ea91a2a2f43e96b0096ca822a851e9ffda2a","typeString":"literal_string \"LUKLOOG\""},"value":"LUKLOOG"},{"id":7331,"name":"contractOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7326,"src":"21102:13:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"32","id":7332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21126:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},{"hexValue":"30","id":7333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21160:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":7334,"kind":"baseConstructorSpecifier","modifierName":{"id":7328,"name":"LSP8IdentifiableDigitalAsset","nameLocations":["21019:28:30"],"nodeType":"IdentifierPath","referencedDeclaration":3609,"src":"21019:28:30"},"nodeType":"ModifierInvocation","src":"21019:171:30"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7326,"mutability":"mutable","name":"contractOwner","nameLocation":"20999:13:30","nodeType":"VariableDeclaration","scope":7446,"src":"20991:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7325,"name":"address","nodeType":"ElementaryTypeName","src":"20991:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20990:23:30"},"returnParameters":{"id":7335,"nodeType":"ParameterList","parameters":[],"src":"21191:0:30"},"scope":8084,"src":"20979:1338:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2319],"body":{"id":7455,"nodeType":"Block","src":"22442:33:30","statements":[{"expression":{"id":7453,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7275,"src":"22459:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7452,"id":7454,"nodeType":"Return","src":"22452:16:30"}]},"documentation":{"id":7447,"nodeType":"StructuredDocumentation","src":"22327:40:30","text":" @dev Get total supply"},"functionSelector":"18160ddd","id":7456,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"22381:11:30","nodeType":"FunctionDefinition","overrides":{"id":7449,"nodeType":"OverrideSpecifier","overrides":[],"src":"22415:8:30"},"parameters":{"id":7448,"nodeType":"ParameterList","parameters":[],"src":"22392:2:30"},"returnParameters":{"id":7452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7456,"src":"22433:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7450,"name":"uint256","nodeType":"ElementaryTypeName","src":"22433:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22432:9:30"},"scope":8084,"src":"22372:103:30","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":7464,"nodeType":"Block","src":"22598:34:30","statements":[{"expression":{"id":7462,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7298,"src":"22615:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7461,"id":7463,"nodeType":"Return","src":"22608:17:30"}]},"documentation":{"id":7457,"nodeType":"StructuredDocumentation","src":"22485:44:30","text":" @dev Get token supply cap"},"functionSelector":"52058d8a","id":7465,"implemented":true,"kind":"function","modifiers":[],"name":"tokenSupplyCap","nameLocation":"22543:14:30","nodeType":"FunctionDefinition","parameters":{"id":7458,"nodeType":"ParameterList","parameters":[],"src":"22557:2:30"},"returnParameters":{"id":7461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7465,"src":"22589:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7459,"name":"uint256","nodeType":"ElementaryTypeName","src":"22589:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22588:9:30"},"scope":8084,"src":"22534:98:30","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":7477,"nodeType":"Block","src":"22752:47:30","statements":[{"expression":{"id":7475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7473,"name":"publicMintSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"22762:13:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7474,"name":"_publicMintSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"22778:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22762:30:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7476,"nodeType":"ExpressionStatement","src":"22762:30:30"}]},"documentation":{"id":7466,"nodeType":"StructuredDocumentation","src":"22642:42:30","text":" @dev Set minting status"},"functionSelector":"1f85e3ca","id":7478,"implemented":true,"kind":"function","modifiers":[{"id":7471,"kind":"modifierInvocation","modifierName":{"id":7470,"name":"onlyOwner","nameLocations":["22742:9:30"],"nodeType":"IdentifierPath","referencedDeclaration":3641,"src":"22742:9:30"},"nodeType":"ModifierInvocation","src":"22742:9:30"}],"name":"setMintStatus","nameLocation":"22698:13:30","nodeType":"FunctionDefinition","parameters":{"id":7469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7468,"mutability":"mutable","name":"_publicMintSet","nameLocation":"22717:14:30","nodeType":"VariableDeclaration","scope":7478,"src":"22712:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7467,"name":"bool","nodeType":"ElementaryTypeName","src":"22712:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"22711:21:30"},"returnParameters":{"id":7472,"nodeType":"ParameterList","parameters":[],"src":"22752:0:30"},"scope":8084,"src":"22689:110:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7583,"nodeType":"Block","src":"22964:1105:30","statements":[{"expression":{"arguments":[{"id":7489,"name":"publicMintSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"22982:13:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5075626c6963206d696e74696e6720697320636c6f736564","id":7490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22997:26:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_50adebc51f6dd37fa5c1de1a5aeba56345531190be1db52fd71c5093c1ec87d7","typeString":"literal_string \"Public minting is closed\""},"value":"Public minting is closed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_50adebc51f6dd37fa5c1de1a5aeba56345531190be1db52fd71c5093c1ec87d7","typeString":"literal_string \"Public minting is closed\""}],"id":7488,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22974:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22974:50:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7492,"nodeType":"ExpressionStatement","src":"22974:50:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7494,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7275,"src":"23042:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7495,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7298,"src":"23054:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23042:22:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"444f4e45204d494e54494e47","id":7497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23066:14:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ecf77a6c62233af3be24f163c69bb8c9eee65cd90544a4c6ef7fa26bdea6f8e","typeString":"literal_string \"DONE MINTING\""},"value":"DONE MINTING"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2ecf77a6c62233af3be24f163c69bb8c9eee65cd90544a4c6ef7fa26bdea6f8e","typeString":"literal_string \"DONE MINTING\""}],"id":7493,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23034:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23034:47:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7499,"nodeType":"ExpressionStatement","src":"23034:47:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7501,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"23099:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23103:5:30","memberName":"value","nodeType":"MemberAccess","src":"23099:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7503,"name":"PRICE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"23112:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23099:18:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e4f5420454e4f554748","id":7505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23119:12:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_a5983c4bf3b1266af41f32fa78dfb27359fe30a25245805329e7e1129504d382","typeString":"literal_string \"NOT ENOUGH\""},"value":"NOT ENOUGH"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a5983c4bf3b1266af41f32fa78dfb27359fe30a25245805329e7e1129504d382","typeString":"literal_string \"NOT ENOUGH\""}],"id":7500,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23091:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23091:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7507,"nodeType":"ExpressionStatement","src":"23091:41:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7509,"name":"mintedPerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"23150:16:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7512,"indexExpression":{"expression":{"id":7510,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"23167:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23171:6:30","memberName":"sender","nodeType":"MemberAccess","src":"23167:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23150:28:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7513,"name":"MAX_MINTABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7301,"src":"23181:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23150:43:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d494e54204c494d49542052454143484544","id":7515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23195:20:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_ddc530eb56a135b3f69251a4d353f9e003dae3d730ac6db7d66eb23c5b8f4fcc","typeString":"literal_string \"MINT LIMIT REACHED\""},"value":"MINT LIMIT REACHED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ddc530eb56a135b3f69251a4d353f9e003dae3d730ac6db7d66eb23c5b8f4fcc","typeString":"literal_string \"MINT LIMIT REACHED\""}],"id":7508,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23142:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23142:74:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7517,"nodeType":"ExpressionStatement","src":"23142:74:30"},{"expression":{"id":7522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23286:30:30","subExpression":{"baseExpression":{"id":7518,"name":"mintedPerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"23286:16:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7521,"indexExpression":{"expression":{"id":7519,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"23303:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23307:6:30","memberName":"sender","nodeType":"MemberAccess","src":"23303:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23286:28:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7523,"nodeType":"ExpressionStatement","src":"23286:30:30"},{"expression":{"id":7525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23357:11:30","subExpression":{"id":7524,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7275,"src":"23357:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7526,"nodeType":"ExpressionStatement","src":"23357:11:30"},{"assignments":[7528],"declarations":[{"constant":false,"id":7528,"mutability":"mutable","name":"tokenId","nameLocation":"23386:7:30","nodeType":"VariableDeclaration","scope":7583,"src":"23378:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7527,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23378:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7536,"initialValue":{"arguments":[{"arguments":[{"id":7533,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7275,"src":"23412:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23404:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7531,"name":"uint256","nodeType":"ElementaryTypeName","src":"23404:7:30","typeDescriptions":{}}},"id":7534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23404:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23396:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7529,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23396:7:30","typeDescriptions":{}}},"id":7535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23396:27:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"23378:45:30"},{"assignments":[7538],"declarations":[{"constant":false,"id":7538,"mutability":"mutable","name":"predictableRandom","nameLocation":"23488:17:30","nodeType":"VariableDeclaration","scope":7583,"src":"23480:25:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7537,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23480:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7557,"initialValue":{"arguments":[{"arguments":[{"id":7542,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7528,"src":"23565:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7544,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"23600:5:30","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23606:6:30","memberName":"number","nodeType":"MemberAccess","src":"23600:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23615:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23600:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7543,"name":"blockhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-5,"src":"23590:9:30","typeDescriptions":{"typeIdentifier":"t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view returns (bytes32)"}},"id":7548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23590:27:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7549,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"23635:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23639:6:30","memberName":"sender","nodeType":"MemberAccess","src":"23635:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7553,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"23671:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_LSP8LoogiesEnhanced_$8084","typeString":"contract LSP8LoogiesEnhanced"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LSP8LoogiesEnhanced_$8084","typeString":"contract LSP8LoogiesEnhanced"}],"id":7552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23663:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7551,"name":"address","nodeType":"ElementaryTypeName","src":"23663:7:30","typeDescriptions":{}}},"id":7554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23663:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7540,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"23531:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"23535:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"23531:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23531:159:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7539,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"23508:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23508:192:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"23480:220:30"},{"expression":{"arguments":[{"expression":{"id":7559,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"23824:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23828:6:30","memberName":"sender","nodeType":"MemberAccess","src":"23824:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7561,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7528,"src":"23836:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7562,"name":"predictableRandom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"23845:17:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7563,"name":"_username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7481,"src":"23864:9:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7558,"name":"mintAndGenerateWithUsername","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7891,"src":"23796:27:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,bytes32,bytes32,string memory)"}},"id":7564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23796:78:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7565,"nodeType":"ExpressionStatement","src":"23796:78:30"},{"assignments":[7567,null],"declarations":[{"constant":false,"id":7567,"mutability":"mutable","name":"success","nameLocation":"23934:7:30","nodeType":"VariableDeclaration","scope":7583,"src":"23929:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7566,"name":"bool","nodeType":"ElementaryTypeName","src":"23929:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":7575,"initialValue":{"arguments":[{"hexValue":"","id":7573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23982:2:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":7568,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7310,"src":"23947:9:30","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":7569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23957:4:30","memberName":"call","nodeType":"MemberAccess","src":"23947:14:30","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":7570,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"23970:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23974:5:30","memberName":"value","nodeType":"MemberAccess","src":"23970:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"23947:34:30","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23947:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"23928:57:30"},{"expression":{"arguments":[{"id":7577,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"24003:7:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"636f756c64206e6f742073656e64","id":7578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24012:16:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dd0906e1f878bbb557c3d899588afc51ff31d856706cd84c5af46cb92214c57","typeString":"literal_string \"could not send\""},"value":"could not send"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dd0906e1f878bbb557c3d899588afc51ff31d856706cd84c5af46cb92214c57","typeString":"literal_string \"could not send\""}],"id":7576,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23995:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23995:34:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7580,"nodeType":"ExpressionStatement","src":"23995:34:30"},{"expression":{"id":7581,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7528,"src":"24055:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7487,"id":7582,"nodeType":"Return","src":"24048:14:30"}]},"documentation":{"id":7479,"nodeType":"StructuredDocumentation","src":"22809:49:30","text":" @dev Mint with custom username"},"functionSelector":"1ef0352d","id":7584,"implemented":true,"kind":"function","modifiers":[{"id":7484,"kind":"modifierInvocation","modifierName":{"id":7483,"name":"nonReentrant","nameLocations":["22933:12:30"],"nodeType":"IdentifierPath","referencedDeclaration":3752,"src":"22933:12:30"},"nodeType":"ModifierInvocation","src":"22933:12:30"}],"name":"mintItemWithUsername","nameLocation":"22872:20:30","nodeType":"FunctionDefinition","parameters":{"id":7482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7481,"mutability":"mutable","name":"_username","nameLocation":"22907:9:30","nodeType":"VariableDeclaration","scope":7584,"src":"22893:23:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7480,"name":"string","nodeType":"ElementaryTypeName","src":"22893:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22892:25:30"},"returnParameters":{"id":7487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7584,"src":"22955:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7485,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22955:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22954:9:30"},"scope":8084,"src":"22863:1206:30","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":7722,"nodeType":"Block","src":"24213:1435:30","statements":[{"expression":{"arguments":[{"id":7593,"name":"publicMintSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"24231:13:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5075626c6963206d696e74696e6720697320636c6f736564","id":7594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24246:26:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_50adebc51f6dd37fa5c1de1a5aeba56345531190be1db52fd71c5093c1ec87d7","typeString":"literal_string \"Public minting is closed\""},"value":"Public minting is closed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_50adebc51f6dd37fa5c1de1a5aeba56345531190be1db52fd71c5093c1ec87d7","typeString":"literal_string \"Public minting is closed\""}],"id":7592,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24223:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24223:50:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7596,"nodeType":"ExpressionStatement","src":"24223:50:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7598,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7275,"src":"24291:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7599,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7298,"src":"24303:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24291:22:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"444f4e45204d494e54494e47","id":7601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24315:14:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ecf77a6c62233af3be24f163c69bb8c9eee65cd90544a4c6ef7fa26bdea6f8e","typeString":"literal_string \"DONE MINTING\""},"value":"DONE MINTING"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2ecf77a6c62233af3be24f163c69bb8c9eee65cd90544a4c6ef7fa26bdea6f8e","typeString":"literal_string \"DONE MINTING\""}],"id":7597,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24283:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24283:47:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7603,"nodeType":"ExpressionStatement","src":"24283:47:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7605,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24348:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24352:5:30","memberName":"value","nodeType":"MemberAccess","src":"24348:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7607,"name":"PRICE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"24361:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24348:18:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e4f5420454e4f554748","id":7609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24368:12:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_a5983c4bf3b1266af41f32fa78dfb27359fe30a25245805329e7e1129504d382","typeString":"literal_string \"NOT ENOUGH\""},"value":"NOT ENOUGH"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a5983c4bf3b1266af41f32fa78dfb27359fe30a25245805329e7e1129504d382","typeString":"literal_string \"NOT ENOUGH\""}],"id":7604,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24340:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24340:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7611,"nodeType":"ExpressionStatement","src":"24340:41:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7613,"name":"mintedPerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"24399:16:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7616,"indexExpression":{"expression":{"id":7614,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24416:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24420:6:30","memberName":"sender","nodeType":"MemberAccess","src":"24416:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24399:28:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7617,"name":"MAX_MINTABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7301,"src":"24430:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24399:43:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d494e54204c494d49542052454143484544","id":7619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24444:20:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_ddc530eb56a135b3f69251a4d353f9e003dae3d730ac6db7d66eb23c5b8f4fcc","typeString":"literal_string \"MINT LIMIT REACHED\""},"value":"MINT LIMIT REACHED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ddc530eb56a135b3f69251a4d353f9e003dae3d730ac6db7d66eb23c5b8f4fcc","typeString":"literal_string \"MINT LIMIT REACHED\""}],"id":7612,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24391:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24391:74:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7621,"nodeType":"ExpressionStatement","src":"24391:74:30"},{"expression":{"id":7626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"24535:30:30","subExpression":{"baseExpression":{"id":7622,"name":"mintedPerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"24535:16:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7625,"indexExpression":{"expression":{"id":7623,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24552:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24556:6:30","memberName":"sender","nodeType":"MemberAccess","src":"24552:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24535:28:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7627,"nodeType":"ExpressionStatement","src":"24535:30:30"},{"expression":{"id":7629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"24606:11:30","subExpression":{"id":7628,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7275,"src":"24606:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7630,"nodeType":"ExpressionStatement","src":"24606:11:30"},{"assignments":[7632],"declarations":[{"constant":false,"id":7632,"mutability":"mutable","name":"tokenId","nameLocation":"24635:7:30","nodeType":"VariableDeclaration","scope":7722,"src":"24627:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7631,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24627:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7640,"initialValue":{"arguments":[{"arguments":[{"id":7637,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7275,"src":"24661:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24653:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7635,"name":"uint256","nodeType":"ElementaryTypeName","src":"24653:7:30","typeDescriptions":{}}},"id":7638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24653:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24645:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7633,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24645:7:30","typeDescriptions":{}}},"id":7639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24645:27:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"24627:45:30"},{"assignments":[7642],"declarations":[{"constant":false,"id":7642,"mutability":"mutable","name":"predictableRandom","nameLocation":"24737:17:30","nodeType":"VariableDeclaration","scope":7722,"src":"24729:25:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7641,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24729:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7661,"initialValue":{"arguments":[{"arguments":[{"id":7646,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7632,"src":"24814:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7648,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"24849:5:30","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24855:6:30","memberName":"number","nodeType":"MemberAccess","src":"24849:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24864:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24849:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7647,"name":"blockhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-5,"src":"24839:9:30","typeDescriptions":{"typeIdentifier":"t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view returns (bytes32)"}},"id":7652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24839:27:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7653,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24884:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24888:6:30","memberName":"sender","nodeType":"MemberAccess","src":"24884:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7657,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"24920:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_LSP8LoogiesEnhanced_$8084","typeString":"contract LSP8LoogiesEnhanced"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LSP8LoogiesEnhanced_$8084","typeString":"contract LSP8LoogiesEnhanced"}],"id":7656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24912:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7655,"name":"address","nodeType":"ElementaryTypeName","src":"24912:7:30","typeDescriptions":{}}},"id":7658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24912:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7644,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"24780:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"24784:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"24780:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24780:159:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7643,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"24757:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24757:192:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"24729:220:30"},{"assignments":[7663],"declarations":[{"constant":false,"id":7663,"mutability":"mutable","name":"upName","nameLocation":"25045:6:30","nodeType":"VariableDeclaration","scope":7722,"src":"25031:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7662,"name":"string","nodeType":"ElementaryTypeName","src":"25031:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":7665,"initialValue":{"hexValue":"","id":7664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25054:2:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"nodeType":"VariableDeclarationStatement","src":"25031:25:30"},{"condition":{"arguments":[{"expression":{"id":7667,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"25089:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25093:6:30","memberName":"sender","nodeType":"MemberAccess","src":"25089:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7666,"name":"isUniversalProfile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"25070:18:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":7669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25070:30:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7695,"nodeType":"Block","src":"25259:45:30","statements":[{"expression":{"id":7693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7691,"name":"upName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7663,"src":"25273:6:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6c756b736f6e617574","id":7692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25282:11:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_84edd11dbf0dafdf7f19c50c2bb4ec78adcdead0272747b466274282a49b8e5d","typeString":"literal_string \"luksonaut\""},"value":"luksonaut"},"src":"25273:20:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":7694,"nodeType":"ExpressionStatement","src":"25273:20:30"}]},"id":7696,"nodeType":"IfStatement","src":"25066:238:30","trueBody":{"id":7690,"nodeType":"Block","src":"25102:151:30","statements":[{"expression":{"id":7675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7670,"name":"upName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7663,"src":"25116:6:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":7672,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"25135:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25139:6:30","memberName":"sender","nodeType":"MemberAccess","src":"25135:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7671,"name":"getUPName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"25125:9:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) view returns (string memory)"}},"id":7674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25125:21:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"25116:30:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":7676,"nodeType":"ExpressionStatement","src":"25116:30:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7679,"name":"upName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7663,"src":"25170:6:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25164:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7677,"name":"bytes","nodeType":"ElementaryTypeName","src":"25164:5:30","typeDescriptions":{}}},"id":7680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25164:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25178:6:30","memberName":"length","nodeType":"MemberAccess","src":"25164:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25188:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"25164:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7689,"nodeType":"IfStatement","src":"25160:83:30","trueBody":{"id":7688,"nodeType":"Block","src":"25191:52:30","statements":[{"expression":{"id":7686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7684,"name":"upName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7663,"src":"25209:6:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5550204f776e6572","id":7685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25218:10:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_79bcb7b1836cad37261b84389a47747a27872a6d42b800dd67a18207258a7aad","typeString":"literal_string \"UP Owner\""},"value":"UP Owner"},"src":"25209:19:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":7687,"nodeType":"ExpressionStatement","src":"25209:19:30"}]}}]}},{"expression":{"arguments":[{"expression":{"id":7698,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"25406:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25410:6:30","memberName":"sender","nodeType":"MemberAccess","src":"25406:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7700,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7632,"src":"25418:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7701,"name":"predictableRandom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7642,"src":"25427:17:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7702,"name":"upName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7663,"src":"25446:6:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7697,"name":"mintAndGenerateWithUsername","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7891,"src":"25378:27:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,bytes32,bytes32,string memory)"}},"id":7703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25378:75:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7704,"nodeType":"ExpressionStatement","src":"25378:75:30"},{"assignments":[7706,null],"declarations":[{"constant":false,"id":7706,"mutability":"mutable","name":"success","nameLocation":"25513:7:30","nodeType":"VariableDeclaration","scope":7722,"src":"25508:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7705,"name":"bool","nodeType":"ElementaryTypeName","src":"25508:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":7714,"initialValue":{"arguments":[{"hexValue":"","id":7712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25561:2:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":7707,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7310,"src":"25526:9:30","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":7708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25536:4:30","memberName":"call","nodeType":"MemberAccess","src":"25526:14:30","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":7709,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"25549:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25553:5:30","memberName":"value","nodeType":"MemberAccess","src":"25549:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"25526:34:30","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25526:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"25507:57:30"},{"expression":{"arguments":[{"id":7716,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7706,"src":"25582:7:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"636f756c64206e6f742073656e64","id":7717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25591:16:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dd0906e1f878bbb557c3d899588afc51ff31d856706cd84c5af46cb92214c57","typeString":"literal_string \"could not send\""},"value":"could not send"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dd0906e1f878bbb557c3d899588afc51ff31d856706cd84c5af46cb92214c57","typeString":"literal_string \"could not send\""}],"id":7715,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25574:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25574:34:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7719,"nodeType":"ExpressionStatement","src":"25574:34:30"},{"expression":{"id":7720,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7632,"src":"25634:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7591,"id":7721,"nodeType":"Return","src":"25627:14:30"}]},"documentation":{"id":7585,"nodeType":"StructuredDocumentation","src":"24079:63:30","text":" @dev Mint with auto-detected username for UP"},"functionSelector":"eb93406b","id":7723,"implemented":true,"kind":"function","modifiers":[{"id":7588,"kind":"modifierInvocation","modifierName":{"id":7587,"name":"nonReentrant","nameLocations":["24182:12:30"],"nodeType":"IdentifierPath","referencedDeclaration":3752,"src":"24182:12:30"},"nodeType":"ModifierInvocation","src":"24182:12:30"}],"name":"mintItem","nameLocation":"24156:8:30","nodeType":"FunctionDefinition","parameters":{"id":7586,"nodeType":"ParameterList","parameters":[],"src":"24164:2:30"},"returnParameters":{"id":7591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7723,"src":"24204:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7589,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24204:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"24203:9:30"},"scope":8084,"src":"24147:1501:30","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":7890,"nodeType":"Block","src":"25858:966:30","statements":[{"expression":{"id":7764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7735,"name":"color","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7279,"src":"25900:5:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes3_$","typeString":"mapping(bytes32 => bytes3)"}},"id":7737,"indexExpression":{"id":7736,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7728,"src":"25906:8:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"25900:15:30","typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bytes3","typeString":"bytes3"},"id":7763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":7753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":7740,"name":"_randomSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7730,"src":"25925:11:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7742,"indexExpression":{"hexValue":"30","id":7741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25937:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25925:14:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":7739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25918:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":7738,"name":"bytes2","nodeType":"ElementaryTypeName","src":"25918:6:30","typeDescriptions":{}}},"id":7743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25918:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":7751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":7746,"name":"_randomSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7730,"src":"25963:11:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7748,"indexExpression":{"hexValue":"31","id":7747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25975:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25963:14:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":7745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25956:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":7744,"name":"bytes2","nodeType":"ElementaryTypeName","src":"25956:6:30","typeDescriptions":{}}},"id":7749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25956:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":7750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25982:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25956:27:30","typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}}],"id":7752,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25955:29:30","typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"25918:66:30","typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bytes3","typeString":"bytes3"},"id":7761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":7756,"name":"_randomSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7730,"src":"26007:11:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7758,"indexExpression":{"hexValue":"32","id":7757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26019:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26007:14:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":7755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26000:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes3_$","typeString":"type(bytes3)"},"typeName":{"id":7754,"name":"bytes3","nodeType":"ElementaryTypeName","src":"26000:6:30","typeDescriptions":{}}},"id":7759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26000:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":7760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26026:2:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"26000:28:30","typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"}}],"id":7762,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25999:30:30","typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"}},"src":"25918:111:30","typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"}},"src":"25900:129:30","typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"}},"id":7765,"nodeType":"ExpressionStatement","src":"25900:129:30"},{"expression":{"id":7786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7766,"name":"chubbiness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7283,"src":"26052:10:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":7768,"indexExpression":{"id":7767,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7728,"src":"26063:8:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"26052:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3335","id":7769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26075:2:30","typeDescriptions":{"typeIdentifier":"t_rational_35_by_1","typeString":"int_const 35"},"value":"35"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3535","id":7770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26082:2:30","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"baseExpression":{"id":7775,"name":"_randomSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7730,"src":"26101:11:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7777,"indexExpression":{"hexValue":"33","id":7776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26113:1:30","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26101:14:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":7774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26095:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7773,"name":"uint8","nodeType":"ElementaryTypeName","src":"26095:5:30","typeDescriptions":{}}},"id":7778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26095:21:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":7772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26087:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7771,"name":"uint256","nodeType":"ElementaryTypeName","src":"26087:7:30","typeDescriptions":{}}},"id":7779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26087:30:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26082:35:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7781,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26081:37:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"323535","id":7782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26121:3:30","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"26081:43:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7784,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26080:45:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26075:50:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26052:73:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7787,"nodeType":"ExpressionStatement","src":"26052:73:30"},{"expression":{"id":7815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7788,"name":"mouthLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7287,"src":"26144:11:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":7790,"indexExpression":{"id":7789,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7728,"src":"26156:8:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"26144:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313830","id":7791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26168:3:30","typeDescriptions":{"typeIdentifier":"t_rational_180_by_1","typeString":"int_const 180"},"value":"180"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7794,"name":"chubbiness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7283,"src":"26184:10:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":7796,"indexExpression":{"id":7795,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7728,"src":"26195:8:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26184:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"34","id":7797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26207:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26184:24:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26176:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7792,"name":"uint256","nodeType":"ElementaryTypeName","src":"26176:7:30","typeDescriptions":{}}},"id":7799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26176:33:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"baseExpression":{"id":7804,"name":"_randomSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7730,"src":"26226:11:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7806,"indexExpression":{"hexValue":"34","id":7805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26238:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26226:14:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":7803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26220:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7802,"name":"uint8","nodeType":"ElementaryTypeName","src":"26220:5:30","typeDescriptions":{}}},"id":7807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26220:21:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":7801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26212:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7800,"name":"uint256","nodeType":"ElementaryTypeName","src":"26212:7:30","typeDescriptions":{}}},"id":7808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26212:30:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26176:66:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7810,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26175:68:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"323535","id":7811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26246:3:30","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"26175:74:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7813,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26174:76:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26168:82:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26144:106:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7816,"nodeType":"ExpressionStatement","src":"26144:106:30"},{"assignments":[7818],"declarations":[{"constant":false,"id":7818,"mutability":"mutable","name":"typeIndex","nameLocation":"26316:9:30","nodeType":"VariableDeclaration","scope":7890,"src":"26308:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7817,"name":"uint256","nodeType":"ElementaryTypeName","src":"26308:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7830,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"baseExpression":{"id":7823,"name":"_randomSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7730,"src":"26342:11:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7825,"indexExpression":{"hexValue":"35","id":7824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26354:1:30","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26342:14:30","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":7822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26336:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7821,"name":"uint8","nodeType":"ElementaryTypeName","src":"26336:5:30","typeDescriptions":{}}},"id":7826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26336:21:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":7820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26328:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7819,"name":"uint256","nodeType":"ElementaryTypeName","src":"26328:7:30","typeDescriptions":{}}},"id":7827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26328:30:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"35","id":7828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26361:1:30","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26328:34:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26308:54:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7831,"name":"typeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7818,"src":"26376:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26389:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26376:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7840,"name":"typeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7818,"src":"26442:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":7841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26455:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26442:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7849,"name":"typeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7818,"src":"26507:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":7850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26520:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26507:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7858,"name":"typeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7818,"src":"26571:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"33","id":7859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26584:1:30","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26571:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"id":7871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7867,"name":"loogieTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7291,"src":"26634:11:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_string_storage_$","typeString":"mapping(bytes32 => string storage ref)"}},"id":7869,"indexExpression":{"id":7868,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7728,"src":"26646:8:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"26634:21:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"79656c6c6f77","id":7870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26658:8:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_27617207effe6bfd81a3e2b21d8a20c4e622b23e5422d607771b4f8b8ba006fa","typeString":"literal_string \"yellow\""},"value":"yellow"},"src":"26634:32:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7872,"nodeType":"ExpressionStatement","src":"26634:32:30"},"id":7873,"nodeType":"IfStatement","src":"26567:99:30","trueBody":{"expression":{"id":7865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7861,"name":"loogieTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7291,"src":"26587:11:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_string_storage_$","typeString":"mapping(bytes32 => string storage ref)"}},"id":7863,"indexExpression":{"id":7862,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7728,"src":"26599:8:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"26587:21:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"707572706c65","id":7864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26611:8:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ceb74360896f85b39388579e9f44ea71ffeef099012760c53d69361c5916c4e","typeString":"literal_string \"purple\""},"value":"purple"},"src":"26587:32:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7866,"nodeType":"ExpressionStatement","src":"26587:32:30"}},"id":7874,"nodeType":"IfStatement","src":"26503:163:30","trueBody":{"expression":{"id":7856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7852,"name":"loogieTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7291,"src":"26523:11:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_string_storage_$","typeString":"mapping(bytes32 => string storage ref)"}},"id":7854,"indexExpression":{"id":7853,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7728,"src":"26535:8:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"26523:21:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"726564","id":7855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26547:5:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_8eec9d5ae546887db6b6a3889e6591fe96f3c16bc9d921551a4aac3adce52996","typeString":"literal_string \"red\""},"value":"red"},"src":"26523:29:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7857,"nodeType":"ExpressionStatement","src":"26523:29:30"}},"id":7875,"nodeType":"IfStatement","src":"26438:228:30","trueBody":{"expression":{"id":7847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7843,"name":"loogieTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7291,"src":"26458:11:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_string_storage_$","typeString":"mapping(bytes32 => string storage ref)"}},"id":7845,"indexExpression":{"id":7844,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7728,"src":"26470:8:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"26458:21:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"626c7565","id":7846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26482:6:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_fa187c1e7b6b42ab8b2d9415ab7e6b1e71b551fcdc8151ebafe46e40a10d90ad","typeString":"literal_string \"blue\""},"value":"blue"},"src":"26458:30:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7848,"nodeType":"ExpressionStatement","src":"26458:30:30"}},"id":7876,"nodeType":"IfStatement","src":"26372:294:30","trueBody":{"expression":{"id":7838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7834,"name":"loogieTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7291,"src":"26392:11:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_string_storage_$","typeString":"mapping(bytes32 => string storage ref)"}},"id":7836,"indexExpression":{"id":7835,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7728,"src":"26404:8:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"26392:21:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"677265656e","id":7837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26416:7:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_f99e8d094ee97e7be9a3d7269f09f9996041160cc5c134b6a863be5b0ce9b5bd","typeString":"literal_string \"green\""},"value":"green"},"src":"26392:31:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7839,"nodeType":"ExpressionStatement","src":"26392:31:30"}},{"expression":{"id":7881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7877,"name":"upUsernames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7295,"src":"26709:11:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_string_storage_$","typeString":"mapping(bytes32 => string storage ref)"}},"id":7879,"indexExpression":{"id":7878,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7728,"src":"26721:8:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"26709:21:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7880,"name":"_username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7732,"src":"26733:9:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"26709:33:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7882,"nodeType":"ExpressionStatement","src":"26709:33:30"},{"expression":{"arguments":[{"id":7884,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"26793:3:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7885,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7728,"src":"26798:8:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"74727565","id":7886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"26808:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"","id":7887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26814:2:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":7883,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"26787:5:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes32,bool,bytes memory)"}},"id":7888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26787:30:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7889,"nodeType":"ExpressionStatement","src":"26787:30:30"}]},"documentation":{"id":7724,"nodeType":"StructuredDocumentation","src":"25658:72:30","text":" @dev Mint token and generate attributes with username"},"id":7891,"implemented":true,"kind":"function","modifiers":[],"name":"mintAndGenerateWithUsername","nameLocation":"25744:27:30","nodeType":"FunctionDefinition","parameters":{"id":7733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7726,"mutability":"mutable","name":"_to","nameLocation":"25780:3:30","nodeType":"VariableDeclaration","scope":7891,"src":"25772:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7725,"name":"address","nodeType":"ElementaryTypeName","src":"25772:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7728,"mutability":"mutable","name":"_tokenId","nameLocation":"25793:8:30","nodeType":"VariableDeclaration","scope":7891,"src":"25785:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7727,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25785:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7730,"mutability":"mutable","name":"_randomSeed","nameLocation":"25811:11:30","nodeType":"VariableDeclaration","scope":7891,"src":"25803:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7729,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25803:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7732,"mutability":"mutable","name":"_username","nameLocation":"25838:9:30","nodeType":"VariableDeclaration","scope":7891,"src":"25824:23:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7731,"name":"string","nodeType":"ElementaryTypeName","src":"25824:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25771:77:30"},"returnParameters":{"id":7734,"nodeType":"ParameterList","parameters":[],"src":"25858:0:30"},"scope":8084,"src":"25735:1089:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7940,"nodeType":"Block","src":"26954:392:30","statements":[{"assignments":[7901],"declarations":[{"constant":false,"id":7901,"mutability":"mutable","name":"upName","nameLocation":"27013:6:30","nodeType":"VariableDeclaration","scope":7940,"src":"26999:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7900,"name":"string","nodeType":"ElementaryTypeName","src":"26999:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":7903,"initialValue":{"hexValue":"","id":7902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27022:2:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"nodeType":"VariableDeclarationStatement","src":"26999:25:30"},{"condition":{"arguments":[{"id":7905,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7893,"src":"27057:3:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7904,"name":"isUniversalProfile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"27038:18:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":7906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27038:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7931,"nodeType":"Block","src":"27213:45:30","statements":[{"expression":{"id":7929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7927,"name":"upName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7901,"src":"27227:6:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6c756b736f6e617574","id":7928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27236:11:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_84edd11dbf0dafdf7f19c50c2bb4ec78adcdead0272747b466274282a49b8e5d","typeString":"literal_string \"luksonaut\""},"value":"luksonaut"},"src":"27227:20:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":7930,"nodeType":"ExpressionStatement","src":"27227:20:30"}]},"id":7932,"nodeType":"IfStatement","src":"27034:224:30","trueBody":{"id":7926,"nodeType":"Block","src":"27063:144:30","statements":[{"expression":{"id":7911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7907,"name":"upName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7901,"src":"27077:6:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7909,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7893,"src":"27096:3:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7908,"name":"getUPName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"27086:9:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) view returns (string memory)"}},"id":7910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27086:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"27077:23:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":7912,"nodeType":"ExpressionStatement","src":"27077:23:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7915,"name":"upName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7901,"src":"27124:6:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27118:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7913,"name":"bytes","nodeType":"ElementaryTypeName","src":"27118:5:30","typeDescriptions":{}}},"id":7916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27118:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27132:6:30","memberName":"length","nodeType":"MemberAccess","src":"27118:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27142:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"27118:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7925,"nodeType":"IfStatement","src":"27114:83:30","trueBody":{"id":7924,"nodeType":"Block","src":"27145:52:30","statements":[{"expression":{"id":7922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7920,"name":"upName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7901,"src":"27163:6:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5550204f776e6572","id":7921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27172:10:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_79bcb7b1836cad37261b84389a47747a27872a6d42b800dd67a18207258a7aad","typeString":"literal_string \"UP Owner\""},"value":"UP Owner"},"src":"27163:19:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":7923,"nodeType":"ExpressionStatement","src":"27163:19:30"}]}}]}},{"expression":{"arguments":[{"id":7934,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7893,"src":"27304:3:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7935,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7895,"src":"27309:8:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7936,"name":"_randomSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7897,"src":"27319:11:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7937,"name":"upName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7901,"src":"27332:6:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7933,"name":"mintAndGenerateWithUsername","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7891,"src":"27276:27:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,bytes32,bytes32,string memory)"}},"id":7938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27276:63:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7939,"nodeType":"ExpressionStatement","src":"27276:63:30"}]},"id":7941,"implemented":true,"kind":"function","modifiers":[],"name":"mintAndGenerate","nameLocation":"26877:15:30","nodeType":"FunctionDefinition","parameters":{"id":7898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7893,"mutability":"mutable","name":"_to","nameLocation":"26901:3:30","nodeType":"VariableDeclaration","scope":7941,"src":"26893:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7892,"name":"address","nodeType":"ElementaryTypeName","src":"26893:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7895,"mutability":"mutable","name":"_tokenId","nameLocation":"26914:8:30","nodeType":"VariableDeclaration","scope":7941,"src":"26906:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7894,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26906:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7897,"mutability":"mutable","name":"_randomSeed","nameLocation":"26932:11:30","nodeType":"VariableDeclaration","scope":7941,"src":"26924:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7896,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26924:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"26892:52:30"},"returnParameters":{"id":7899,"nodeType":"ParameterList","parameters":[],"src":"26954:0:30"},"scope":8084,"src":"26868:478:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7970,"nodeType":"Block","src":"27476:170:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7951,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7944,"src":"27507:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7950,"name":"tokenOwnerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"27494:12:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":7952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27494:21:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7953,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"27519:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27523:6:30","memberName":"sender","nodeType":"MemberAccess","src":"27519:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"27494:35:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420746f6b656e206f776e6572","id":7956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27531:17:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","typeString":"literal_string \"Not token owner\""},"value":"Not token owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","typeString":"literal_string \"Not token owner\""}],"id":7949,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27486:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27486:63:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7958,"nodeType":"ExpressionStatement","src":"27486:63:30"},{"expression":{"id":7963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7959,"name":"upUsernames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7295,"src":"27559:11:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_string_storage_$","typeString":"mapping(bytes32 => string storage ref)"}},"id":7961,"indexExpression":{"id":7960,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7944,"src":"27571:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"27559:20:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7962,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7946,"src":"27582:8:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"27559:31:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7964,"nodeType":"ExpressionStatement","src":"27559:31:30"},{"eventCall":{"arguments":[{"id":7966,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7944,"src":"27621:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7967,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7946,"src":"27630:8:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7965,"name":"UsernameUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7323,"src":"27605:15:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes32,string memory)"}},"id":7968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27605:34:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7969,"nodeType":"EmitStatement","src":"27600:39:30"}]},"documentation":{"id":7942,"nodeType":"StructuredDocumentation","src":"27356:46:30","text":" @dev Set username for token"},"functionSelector":"f3ba2059","id":7971,"implemented":true,"kind":"function","modifiers":[],"name":"setUsername","nameLocation":"27416:11:30","nodeType":"FunctionDefinition","parameters":{"id":7947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7944,"mutability":"mutable","name":"tokenId","nameLocation":"27436:7:30","nodeType":"VariableDeclaration","scope":7971,"src":"27428:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7943,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27428:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7946,"mutability":"mutable","name":"username","nameLocation":"27459:8:30","nodeType":"VariableDeclaration","scope":7971,"src":"27445:22:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7945,"name":"string","nodeType":"ElementaryTypeName","src":"27445:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27427:41:30"},"returnParameters":{"id":7948,"nodeType":"ParameterList","parameters":[],"src":"27476:0:30"},"scope":8084,"src":"27407:239:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7989,"nodeType":"Block","src":"27757:52:30","statements":[{"expression":{"arguments":[{"expression":{"arguments":[{"id":7984,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"27788:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_LSP8LoogiesEnhanced_$8084","typeString":"contract LSP8LoogiesEnhanced"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LSP8LoogiesEnhanced_$8084","typeString":"contract LSP8LoogiesEnhanced"}],"id":7983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27780:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7982,"name":"address","nodeType":"ElementaryTypeName","src":"27780:7:30","typeDescriptions":{}}},"id":7985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27780:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27794:7:30","memberName":"balance","nodeType":"MemberAccess","src":"27780:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7979,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7974,"src":"27767:3:30","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":7981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27771:8:30","memberName":"transfer","nodeType":"MemberAccess","src":"27767:12:30","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27767:35:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7988,"nodeType":"ExpressionStatement","src":"27767:35:30"}]},"documentation":{"id":7972,"nodeType":"StructuredDocumentation","src":"27656:38:30","text":" @dev Withdraw funds"},"functionSelector":"51cff8d9","id":7990,"implemented":true,"kind":"function","modifiers":[{"id":7977,"kind":"modifierInvocation","modifierName":{"id":7976,"name":"onlyOwner","nameLocations":["27747:9:30"],"nodeType":"IdentifierPath","referencedDeclaration":3641,"src":"27747:9:30"},"nodeType":"ModifierInvocation","src":"27747:9:30"}],"name":"withdraw","nameLocation":"27708:8:30","nodeType":"FunctionDefinition","parameters":{"id":7975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7974,"mutability":"mutable","name":"_to","nameLocation":"27733:3:30","nodeType":"VariableDeclaration","scope":7990,"src":"27717:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":7973,"name":"address","nodeType":"ElementaryTypeName","src":"27717:15:30","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"27716:21:30"},"returnParameters":{"id":7978,"nodeType":"ParameterList","parameters":[],"src":"27757:0:30"},"scope":8084,"src":"27699:110:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3498],"body":{"id":8082,"nodeType":"Block","src":"28058:1190:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8001,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7995,"src":"28119:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8002,"name":"_LSP4_METADATA_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"28130:18:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"28119:29:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8011,"nodeType":"IfStatement","src":"28115:109:30","trueBody":{"id":8010,"nodeType":"Block","src":"28150:74:30","statements":[{"expression":{"arguments":[{"id":8006,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7993,"src":"28196:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8007,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7995,"src":"28205:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":8004,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"28171:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_LSP8LoogiesEnhanced_$8084_$","typeString":"type(contract super LSP8LoogiesEnhanced)"}},"id":8005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28177:18:30","memberName":"_getDataForTokenId","nodeType":"MemberAccess","referencedDeclaration":3498,"src":"28171:24:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32,bytes32) view returns (bytes memory)"}},"id":8008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28171:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":8000,"id":8009,"nodeType":"Return","src":"28164:49:30"}]}},{"assignments":[8013],"declarations":[{"constant":false,"id":8013,"mutability":"mutable","name":"_loogieType","nameLocation":"28288:11:30","nodeType":"VariableDeclaration","scope":8082,"src":"28274:25:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8012,"name":"string","nodeType":"ElementaryTypeName","src":"28274:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":8017,"initialValue":{"baseExpression":{"id":8014,"name":"loogieTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7291,"src":"28302:11:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_string_storage_$","typeString":"mapping(bytes32 => string storage ref)"}},"id":8016,"indexExpression":{"id":8015,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7993,"src":"28314:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28302:20:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"28274:48:30"},{"assignments":[8019],"declarations":[{"constant":false,"id":8019,"mutability":"mutable","name":"colorValue","nameLocation":"28339:10:30","nodeType":"VariableDeclaration","scope":8082,"src":"28332:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"},"typeName":{"id":8018,"name":"bytes3","nodeType":"ElementaryTypeName","src":"28332:6:30","typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"}},"visibility":"internal"}],"id":8023,"initialValue":{"baseExpression":{"id":8020,"name":"color","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7279,"src":"28352:5:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes3_$","typeString":"mapping(bytes32 => bytes3)"}},"id":8022,"indexExpression":{"id":8021,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7993,"src":"28358:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28352:14:30","typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"}},"nodeType":"VariableDeclarationStatement","src":"28332:34:30"},{"assignments":[8025],"declarations":[{"constant":false,"id":8025,"mutability":"mutable","name":"chubbinessValue","nameLocation":"28384:15:30","nodeType":"VariableDeclaration","scope":8082,"src":"28376:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8024,"name":"uint256","nodeType":"ElementaryTypeName","src":"28376:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8029,"initialValue":{"baseExpression":{"id":8026,"name":"chubbiness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7283,"src":"28402:10:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":8028,"indexExpression":{"id":8027,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7993,"src":"28413:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28402:19:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28376:45:30"},{"assignments":[8031],"declarations":[{"constant":false,"id":8031,"mutability":"mutable","name":"mouthLengthValue","nameLocation":"28439:16:30","nodeType":"VariableDeclaration","scope":8082,"src":"28431:24:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8030,"name":"uint256","nodeType":"ElementaryTypeName","src":"28431:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8035,"initialValue":{"baseExpression":{"id":8032,"name":"mouthLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7287,"src":"28458:11:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":8034,"indexExpression":{"id":8033,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7993,"src":"28470:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28458:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28431:47:30"},{"assignments":[8037],"declarations":[{"constant":false,"id":8037,"mutability":"mutable","name":"username","nameLocation":"28502:8:30","nodeType":"VariableDeclaration","scope":8082,"src":"28488:22:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8036,"name":"string","nodeType":"ElementaryTypeName","src":"28488:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":8041,"initialValue":{"baseExpression":{"id":8038,"name":"upUsernames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7295,"src":"28513:11:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_string_storage_$","typeString":"mapping(bytes32 => string storage ref)"}},"id":8040,"indexExpression":{"id":8039,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7993,"src":"28525:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28513:20:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"28488:45:30"},{"assignments":[8043],"declarations":[{"constant":false,"id":8043,"mutability":"mutable","name":"owner","nameLocation":"28609:5:30","nodeType":"VariableDeclaration","scope":8082,"src":"28601:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8042,"name":"address","nodeType":"ElementaryTypeName","src":"28601:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8047,"initialValue":{"arguments":[{"id":8045,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7993,"src":"28630:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8044,"name":"tokenOwnerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"28617:12:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":8046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28617:21:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"28601:37:30"},{"assignments":[8049],"declarations":[{"constant":false,"id":8049,"mutability":"mutable","name":"isUP","nameLocation":"28653:4:30","nodeType":"VariableDeclaration","scope":8082,"src":"28648:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8048,"name":"bool","nodeType":"ElementaryTypeName","src":"28648:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":8053,"initialValue":{"arguments":[{"id":8051,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8043,"src":"28679:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8050,"name":"isUniversalProfile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"28660:18:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":8052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28660:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"28648:37:30"},{"assignments":[8055,8057],"declarations":[{"constant":false,"id":8055,"mutability":"mutable","name":"_metadata","nameLocation":"28758:9:30","nodeType":"VariableDeclaration","scope":8082,"src":"28745:22:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8054,"name":"bytes","nodeType":"ElementaryTypeName","src":"28745:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8057,"mutability":"mutable","name":"_encoded","nameLocation":"28782:8:30","nodeType":"VariableDeclaration","scope":8082,"src":"28769:21:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8056,"name":"bytes","nodeType":"ElementaryTypeName","src":"28769:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":8067,"initialValue":{"arguments":[{"id":8059,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7993,"src":"28824:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8060,"name":"_loogieType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8013,"src":"28845:11:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8061,"name":"colorValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8019,"src":"28870:10:30","typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"}},{"id":8062,"name":"chubbinessValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8025,"src":"28894:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8063,"name":"mouthLengthValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8031,"src":"28923:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8064,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"28953:8:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8065,"name":"isUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8049,"src":"28975:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes3","typeString":"bytes3"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":8058,"name":"getMetadataBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7186,"src":"28794:16:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_string_memory_ptr_$_t_bytes3_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_bool_$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"function (bytes32,string memory,bytes3,uint256,uint256,string memory,bool) view returns (bytes memory,bytes memory)"}},"id":8066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28794:195:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes memory,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"28744:245:30"},{"assignments":[8069],"declarations":[{"constant":false,"id":8069,"mutability":"mutable","name":"verifiableURI","nameLocation":"29073:13:30","nodeType":"VariableDeclaration","scope":8082,"src":"29060:26:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8068,"name":"bytes","nodeType":"ElementaryTypeName","src":"29060:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":8079,"initialValue":{"arguments":[{"hexValue":"00006f357c6a0020","id":8073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"29115:21:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_58e2d872f7cafb14e9f1ff6d37e5cd949a851cbb06d42d14ad6a0e6fef0c87ba","typeString":"literal_string hex\"00006f357c6a0020\""},"value":"\u0000\u0000o5|j\u0000 "},{"arguments":[{"id":8075,"name":"_metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8055,"src":"29160:9:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8074,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"29150:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29150:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8077,"name":"_encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8057,"src":"29184:8:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_58e2d872f7cafb14e9f1ff6d37e5cd949a851cbb06d42d14ad6a0e6fef0c87ba","typeString":"literal_string hex\"00006f357c6a0020\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":8071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29089:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8070,"name":"bytes","nodeType":"ElementaryTypeName","src":"29089:5:30","typeDescriptions":{}}},"id":8072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29095:6:30","memberName":"concat","nodeType":"MemberAccess","src":"29089:12:30","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29089:113:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"29060:142:30"},{"expression":{"id":8080,"name":"verifiableURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8069,"src":"29228:13:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":8000,"id":8081,"nodeType":"Return","src":"29221:20:30"}]},"documentation":{"id":7991,"nodeType":"StructuredDocumentation","src":"27819:85:30","text":" @dev Override _getDataForTokenId to return token-specific metadata"},"id":8083,"implemented":true,"kind":"function","modifiers":[],"name":"_getDataForTokenId","nameLocation":"27918:18:30","nodeType":"FunctionDefinition","overrides":{"id":7997,"nodeType":"OverrideSpecifier","overrides":[],"src":"28015:8:30"},"parameters":{"id":7996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7993,"mutability":"mutable","name":"tokenId","nameLocation":"27954:7:30","nodeType":"VariableDeclaration","scope":8083,"src":"27946:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7992,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27946:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7995,"mutability":"mutable","name":"dataKey","nameLocation":"27979:7:30","nodeType":"VariableDeclaration","scope":8083,"src":"27971:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7994,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27971:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"27936:56:30"},"returnParameters":{"id":8000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7999,"mutability":"mutable","name":"dataValues","nameLocation":"28046:10:30","nodeType":"VariableDeclaration","scope":8083,"src":"28033:23:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7998,"name":"bytes","nodeType":"ElementaryTypeName","src":"28033:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"28032:25:30"},"scope":8084,"src":"27909:1339:30","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":8085,"src":"19923:9327:30","usedErrors":[330,333,336,339,581,586,591,1619,1622,1625,1904,1913,1920,1927,1930,1933,1940,1945,1948,1953,1958,1961,1964,1967,1970,1973,1978,1987,1996],"usedEvents":[349,1643,1654,1667,1676,3623,7323]}],"src":"32:29219:30"},"id":30}},"contracts":{"@erc725/smart-contracts-v8/contracts/ERC725Y.sol":{"ERC725Y":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"payable","type":"constructor"},{"inputs":[],"name":"ERC725Y_DataKeysValuesEmptyArray","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesLengthMismatch","type":"error"},{"inputs":[],"name":"ERC725Y_MsgValueDisallowed","type":"error"},{"inputs":[],"name":"OwnableCannotSetZeroAddressAsOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"fun_transferOwnership":{"entryPoint":158,"id":3721,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"6080601f610a6038819003918201601f19168301916001600160401b038311848410176100885780849260209460405283398101031261008357516001600160a01b038116808203610083576100543361009e565b15610071576100629061009e565b60405161097a90816100e68239f35b6040516306b620db60e21b8152600490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe608060408181526004908136101561001657600080fd5b600092833560e01c90816301ffc9a7146104b45750806354f6127f1461047c578063715018a61461041f5780637f23690c146103c65780638da5cb5b1461039e5780639790242114610263578063dedff9c6146101485763f2fde38b1461007c57600080fd5b34610144576020366003190112610144576001600160a01b03823581811693919290849003610140576100ad6108ec565b83156100ee57505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8480fd5b8280fd5b5091903461025f576020908160031936011261014457803567ffffffffffffffff811161025b5761017b913691016105f4565b92835191610188836105dc565b9261019583519485610548565b8084526101a4601f19916105dc565b0181855b82811061024b57505050835b85518110156101ef57806101d36101cd60019389610702565b51610652565b6101dd8287610702565b526101e88186610702565b50016101b4565b50828483519280840190808552835180925280868601968360051b870101940192955b82871061021f5785850386f35b90919293828061023b600193603f198a82030186528851610508565b9601920196019592919092610212565b60608282880101520182906101a8565b8380fd5b5080fd5b5080839160031936011261025f5767ffffffffffffffff92803584811161025b5761029190369083016105f4565b91602480359580871161039a573660238801121561039a57868401356102b6816105dc565b976102c38551998a610548565b81895260209380858b019360051b8301019336851161039657818301935b85851061036c57505050505050506102f76108ec565b3461035f57825185510361035257825115610345575050815b8151811015610341578061033b61032960019385610702565b516103348388610702565b5190610766565b01610310565b8280f35b516397da5f9560e01b8152fd5b51633bcc897960e01b8152fd5b5163f36ba73760e01b8152fd5b84358281116103925787916103878392863691890101610580565b8152019401936102e1565b8b80fd5b8980fd5b8580fd5b83823461025f578160031936011261025f57905490516001600160a01b039091168152602090f35b5080839160031936011261025f5760243567ffffffffffffffff8111610144576103f39036908501610580565b906103fc6108ec565b34610410575061040d919235610766565b80f35b5163f36ba73760e01b81528390fd5b83346104795780600319360112610479576104386108ec565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b508234610479576020366003190112610479575061049d6104b09235610652565b9051918291602083526020830190610508565b0390f35b84908434610144576020366003190112610144573563ffffffff60e01b811680910361014457602092506318a6a9a560e21b81149081156104f7575b5015158152f35b6301ffc9a760e01b149050836104f0565b919082519283825260005b848110610534575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610513565b90601f8019910116810190811067ffffffffffffffff82111761056a57604052565b634e487b7160e01b600052604160045260246000fd5b81601f820112156105d75780359067ffffffffffffffff821161056a57604051926105b5601f8401601f191660200185610548565b828452602083830101116105d757816000926020809301838601378301015290565b600080fd5b67ffffffffffffffff811161056a5760051b60200190565b81601f820112156105d75780359161060b836105dc565b926106196040519485610548565b808452602092838086019260051b8201019283116105d7578301905b828210610643575050505090565b81358152908301908301610635565b600090815260016020908082526040832092604051938492828254926106778461072c565b808752938381169081156106de57506001146106a1575b5050505061069e92500382610548565b90565b815285812095935091905b8183106106c657505061069e93508201013880808061068e565b855487840185015294850194869450918301916106ac565b935050505061069e94925060ff191682840152151560051b8201013880808061068e565b80518210156107165760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b90600182811c9216801561075c575b602083101461074657565b634e487b7160e01b600052602260045260246000fd5b91607f169161073b565b9190916000928184526001602090808252604086209083519067ffffffffffffffff82116108d857610798835461072c565b601f8111610892575b508397601f83116001146108125782917fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2979899839293610807575b501b916000199060031b1c19161790555b610802604051928284938452830190610508565b0390a2565b8701519250386107dd565b97601f929192198216848a52858a20995b81811061087d575090827fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b298999a9210610864575b5050811b0190556107ee565b86015160001960f88460031b161c191690553880610858565b878301518b5599840199918601918601610823565b838952848920601f840160051c8101918685106108ce575b601f0160051c019082905b8281106108c35750506107a1565b8a81550182906108b5565b90915081906108aa565b634e487b7160e01b88526041600452602488fd5b6000546001600160a01b0316330361090057565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea26469706673582212204a9484d40d0bb8adcf447d365fe2568c05961437313cc1512568918559a1324e64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x1F PUSH2 0xA60 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x88 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x83 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x83 JUMPI PUSH2 0x54 CALLER PUSH2 0x9E JUMP JUMPDEST ISZERO PUSH2 0x71 JUMPI PUSH2 0x62 SWAP1 PUSH2 0x9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97A SWAP1 DUP2 PUSH2 0xE6 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6B620DB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x4B4 JUMPI POP DUP1 PUSH4 0x54F6127F EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x7F23690C EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x97902421 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xDEDFF9C6 EQ PUSH2 0x148 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x144 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x144 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 DUP2 AND SWAP4 SWAP2 SWAP3 SWAP1 DUP5 SWAP1 SUB PUSH2 0x140 JUMPI PUSH2 0xAD PUSH2 0x8EC JUMP JUMPDEST DUP4 ISZERO PUSH2 0xEE JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x25F JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x144 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x25B JUMPI PUSH2 0x17B SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x5F4 JUMP JUMPDEST SWAP3 DUP4 MLOAD SWAP2 PUSH2 0x188 DUP4 PUSH2 0x5DC JUMP JUMPDEST SWAP3 PUSH2 0x195 DUP4 MLOAD SWAP5 DUP6 PUSH2 0x548 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x1A4 PUSH1 0x1F NOT SWAP2 PUSH2 0x5DC JUMP JUMPDEST ADD DUP2 DUP6 JUMPDEST DUP3 DUP2 LT PUSH2 0x24B JUMPI POP POP POP DUP4 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x1EF JUMPI DUP1 PUSH2 0x1D3 PUSH2 0x1CD PUSH1 0x1 SWAP4 DUP10 PUSH2 0x702 JUMP JUMPDEST MLOAD PUSH2 0x652 JUMP JUMPDEST PUSH2 0x1DD DUP3 DUP8 PUSH2 0x702 JUMP JUMPDEST MSTORE PUSH2 0x1E8 DUP2 DUP7 PUSH2 0x702 JUMP JUMPDEST POP ADD PUSH2 0x1B4 JUMP JUMPDEST POP DUP3 DUP5 DUP4 MLOAD SWAP3 DUP1 DUP5 ADD SWAP1 DUP1 DUP6 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE DUP1 DUP7 DUP7 ADD SWAP7 DUP4 PUSH1 0x5 SHL DUP8 ADD ADD SWAP5 ADD SWAP3 SWAP6 JUMPDEST DUP3 DUP8 LT PUSH2 0x21F JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 DUP1 PUSH2 0x23B PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x508 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP7 ADD SWAP6 SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x212 JUMP JUMPDEST PUSH1 0x60 DUP3 DUP3 DUP9 ADD ADD MSTORE ADD DUP3 SWAP1 PUSH2 0x1A8 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP DUP1 DUP4 SWAP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25F JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP1 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x25B JUMPI PUSH2 0x291 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x5F4 JUMP JUMPDEST SWAP2 PUSH1 0x24 DUP1 CALLDATALOAD SWAP6 DUP1 DUP8 GT PUSH2 0x39A JUMPI CALLDATASIZE PUSH1 0x23 DUP9 ADD SLT ISZERO PUSH2 0x39A JUMPI DUP7 DUP5 ADD CALLDATALOAD PUSH2 0x2B6 DUP2 PUSH2 0x5DC JUMP JUMPDEST SWAP8 PUSH2 0x2C3 DUP6 MLOAD SWAP10 DUP11 PUSH2 0x548 JUMP JUMPDEST DUP2 DUP10 MSTORE PUSH1 0x20 SWAP4 DUP1 DUP6 DUP12 ADD SWAP4 PUSH1 0x5 SHL DUP4 ADD ADD SWAP4 CALLDATASIZE DUP6 GT PUSH2 0x396 JUMPI DUP2 DUP4 ADD SWAP4 JUMPDEST DUP6 DUP6 LT PUSH2 0x36C JUMPI POP POP POP POP POP POP POP PUSH2 0x2F7 PUSH2 0x8EC JUMP JUMPDEST CALLVALUE PUSH2 0x35F JUMPI DUP3 MLOAD DUP6 MLOAD SUB PUSH2 0x352 JUMPI DUP3 MLOAD ISZERO PUSH2 0x345 JUMPI POP POP DUP2 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x341 JUMPI DUP1 PUSH2 0x33B PUSH2 0x329 PUSH1 0x1 SWAP4 DUP6 PUSH2 0x702 JUMP JUMPDEST MLOAD PUSH2 0x334 DUP4 DUP9 PUSH2 0x702 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x766 JUMP JUMPDEST ADD PUSH2 0x310 JUMP JUMPDEST DUP3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x97DA5F95 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST MLOAD PUSH4 0x3BCC8979 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST MLOAD PUSH4 0xF36BA737 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP5 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x392 JUMPI DUP8 SWAP2 PUSH2 0x387 DUP4 SWAP3 DUP7 CALLDATASIZE SWAP2 DUP10 ADD ADD PUSH2 0x580 JUMP JUMPDEST DUP2 MSTORE ADD SWAP5 ADD SWAP4 PUSH2 0x2E1 JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x25F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25F JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 DUP4 SWAP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25F JUMPI PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x144 JUMPI PUSH2 0x3F3 SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0x580 JUMP JUMPDEST SWAP1 PUSH2 0x3FC PUSH2 0x8EC JUMP JUMPDEST CALLVALUE PUSH2 0x410 JUMPI POP PUSH2 0x40D SWAP2 SWAP3 CALLDATALOAD PUSH2 0x766 JUMP JUMPDEST DUP1 RETURN JUMPDEST MLOAD PUSH4 0xF36BA737 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x479 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x479 JUMPI PUSH2 0x438 PUSH2 0x8EC JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x479 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x479 JUMPI POP PUSH2 0x49D PUSH2 0x4B0 SWAP3 CALLDATALOAD PUSH2 0x652 JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x508 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP5 SWAP1 DUP5 CALLVALUE PUSH2 0x144 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x144 JUMPI CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x144 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x18A6A9A5 PUSH1 0xE2 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x4F7 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x4F0 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x534 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x513 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x56A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x5D7 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x56A JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x5B5 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x548 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x5D7 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x56A JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x5D7 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0x60B DUP4 PUSH2 0x5DC JUMP JUMPDEST SWAP3 PUSH2 0x619 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x548 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x5D7 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x643 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x635 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP3 DUP3 SLOAD SWAP3 PUSH2 0x677 DUP5 PUSH2 0x72C JUMP JUMPDEST DUP1 DUP8 MSTORE SWAP4 DUP4 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x6DE JUMPI POP PUSH1 0x1 EQ PUSH2 0x6A1 JUMPI JUMPDEST POP POP POP POP PUSH2 0x69E SWAP3 POP SUB DUP3 PUSH2 0x548 JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP2 MSTORE DUP6 DUP2 KECCAK256 SWAP6 SWAP4 POP SWAP2 SWAP1 JUMPDEST DUP2 DUP4 LT PUSH2 0x6C6 JUMPI POP POP PUSH2 0x69E SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 DUP1 DUP1 PUSH2 0x68E JUMP JUMPDEST DUP6 SLOAD DUP8 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x6AC JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x69E SWAP5 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 DUP1 DUP1 PUSH2 0x68E JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x716 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x75C JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x746 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x73B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x0 SWAP3 DUP2 DUP5 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x40 DUP7 KECCAK256 SWAP1 DUP4 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x8D8 JUMPI PUSH2 0x798 DUP4 SLOAD PUSH2 0x72C JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x892 JUMPI JUMPDEST POP DUP4 SWAP8 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x812 JUMPI DUP3 SWAP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 SWAP8 SWAP9 SWAP10 DUP4 SWAP3 SWAP4 PUSH2 0x807 JUMPI JUMPDEST POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH2 0x802 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x508 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST DUP8 ADD MLOAD SWAP3 POP CODESIZE PUSH2 0x7DD JUMP JUMPDEST SWAP8 PUSH1 0x1F SWAP3 SWAP2 SWAP3 NOT DUP3 AND DUP5 DUP11 MSTORE DUP6 DUP11 KECCAK256 SWAP10 JUMPDEST DUP2 DUP2 LT PUSH2 0x87D JUMPI POP SWAP1 DUP3 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 SWAP9 SWAP10 SWAP11 SWAP3 LT PUSH2 0x864 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x7EE JUMP JUMPDEST DUP7 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x858 JUMP JUMPDEST DUP8 DUP4 ADD MLOAD DUP12 SSTORE SWAP10 DUP5 ADD SWAP10 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x823 JUMP JUMPDEST DUP4 DUP10 MSTORE DUP5 DUP10 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP7 DUP6 LT PUSH2 0x8CE JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 DUP3 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x8C3 JUMPI POP POP PUSH2 0x7A1 JUMP JUMPDEST DUP11 DUP2 SSTORE ADD DUP3 SWAP1 PUSH2 0x8B5 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x8AA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x900 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A SWAP5 DUP5 0xD4 0xD SIGNEXTEND 0xB8 0xAD 0xCF PREVRANDAO PUSH30 0x365FE2568C05961437313CC1512568918559A1324E64736F6C6343000814 STOP CALLER ","sourceMap":"1009:6184:0:-:0;;;;;;;;;;-1:-1:-1;;1009:6184:0;;;;-1:-1:-1;;;;;1009:6184:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1009:6184:0;;;;;;;955:12:19;734:10:22;955:12:19;:::i;:::-;1613:26:0;1609:100;;1745:12;;;:::i;:::-;1009:6184;;;;;;;;;1609:100;1009:6184;;-1:-1:-1;;;1662:36:0;;;;;1009:6184;-1:-1:-1;1009:6184:0;;;;;;-1:-1:-1;1009:6184:0;;;;;-1:-1:-1;1009:6184:0;2426:187:19;2518:6;1009:6184:0;;-1:-1:-1;;;;;1009:6184:0;;;-1:-1:-1;;;;;;1009:6184:0;;;;;;;;;2566:40:19;;2518:6;2566:40;2426:187::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_array_bytes32_dyn":{"entryPoint":1524,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":1408,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes":{"entryPoint":1288,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_array_bytes32_dyn":{"entryPoint":1500,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1836,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":1352,"id":null,"parameterSlots":2,"returnSlots":0},"fun_checkOwner":{"entryPoint":2284,"id":3664,"parameterSlots":0,"returnSlots":0},"fun_getData":{"entryPoint":1618,"id":64,"parameterSlots":1,"returnSlots":1},"fun_setData":{"entryPoint":1894,"id":196,"parameterSlots":2,"returnSlots":0},"memory_array_index_access_bytes32_dyn":{"entryPoint":1794,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608060408181526004908136101561001657600080fd5b600092833560e01c90816301ffc9a7146104b45750806354f6127f1461047c578063715018a61461041f5780637f23690c146103c65780638da5cb5b1461039e5780639790242114610263578063dedff9c6146101485763f2fde38b1461007c57600080fd5b34610144576020366003190112610144576001600160a01b03823581811693919290849003610140576100ad6108ec565b83156100ee57505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8480fd5b8280fd5b5091903461025f576020908160031936011261014457803567ffffffffffffffff811161025b5761017b913691016105f4565b92835191610188836105dc565b9261019583519485610548565b8084526101a4601f19916105dc565b0181855b82811061024b57505050835b85518110156101ef57806101d36101cd60019389610702565b51610652565b6101dd8287610702565b526101e88186610702565b50016101b4565b50828483519280840190808552835180925280868601968360051b870101940192955b82871061021f5785850386f35b90919293828061023b600193603f198a82030186528851610508565b9601920196019592919092610212565b60608282880101520182906101a8565b8380fd5b5080fd5b5080839160031936011261025f5767ffffffffffffffff92803584811161025b5761029190369083016105f4565b91602480359580871161039a573660238801121561039a57868401356102b6816105dc565b976102c38551998a610548565b81895260209380858b019360051b8301019336851161039657818301935b85851061036c57505050505050506102f76108ec565b3461035f57825185510361035257825115610345575050815b8151811015610341578061033b61032960019385610702565b516103348388610702565b5190610766565b01610310565b8280f35b516397da5f9560e01b8152fd5b51633bcc897960e01b8152fd5b5163f36ba73760e01b8152fd5b84358281116103925787916103878392863691890101610580565b8152019401936102e1565b8b80fd5b8980fd5b8580fd5b83823461025f578160031936011261025f57905490516001600160a01b039091168152602090f35b5080839160031936011261025f5760243567ffffffffffffffff8111610144576103f39036908501610580565b906103fc6108ec565b34610410575061040d919235610766565b80f35b5163f36ba73760e01b81528390fd5b83346104795780600319360112610479576104386108ec565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b508234610479576020366003190112610479575061049d6104b09235610652565b9051918291602083526020830190610508565b0390f35b84908434610144576020366003190112610144573563ffffffff60e01b811680910361014457602092506318a6a9a560e21b81149081156104f7575b5015158152f35b6301ffc9a760e01b149050836104f0565b919082519283825260005b848110610534575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610513565b90601f8019910116810190811067ffffffffffffffff82111761056a57604052565b634e487b7160e01b600052604160045260246000fd5b81601f820112156105d75780359067ffffffffffffffff821161056a57604051926105b5601f8401601f191660200185610548565b828452602083830101116105d757816000926020809301838601378301015290565b600080fd5b67ffffffffffffffff811161056a5760051b60200190565b81601f820112156105d75780359161060b836105dc565b926106196040519485610548565b808452602092838086019260051b8201019283116105d7578301905b828210610643575050505090565b81358152908301908301610635565b600090815260016020908082526040832092604051938492828254926106778461072c565b808752938381169081156106de57506001146106a1575b5050505061069e92500382610548565b90565b815285812095935091905b8183106106c657505061069e93508201013880808061068e565b855487840185015294850194869450918301916106ac565b935050505061069e94925060ff191682840152151560051b8201013880808061068e565b80518210156107165760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b90600182811c9216801561075c575b602083101461074657565b634e487b7160e01b600052602260045260246000fd5b91607f169161073b565b9190916000928184526001602090808252604086209083519067ffffffffffffffff82116108d857610798835461072c565b601f8111610892575b508397601f83116001146108125782917fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2979899839293610807575b501b916000199060031b1c19161790555b610802604051928284938452830190610508565b0390a2565b8701519250386107dd565b97601f929192198216848a52858a20995b81811061087d575090827fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b298999a9210610864575b5050811b0190556107ee565b86015160001960f88460031b161c191690553880610858565b878301518b5599840199918601918601610823565b838952848920601f840160051c8101918685106108ce575b601f0160051c019082905b8281106108c35750506107a1565b8a81550182906108b5565b90915081906108aa565b634e487b7160e01b88526041600452602488fd5b6000546001600160a01b0316330361090057565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea26469706673582212204a9484d40d0bb8adcf447d365fe2568c05961437313cc1512568918559a1324e64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x4B4 JUMPI POP DUP1 PUSH4 0x54F6127F EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x7F23690C EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x97902421 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xDEDFF9C6 EQ PUSH2 0x148 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x144 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x144 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 DUP2 AND SWAP4 SWAP2 SWAP3 SWAP1 DUP5 SWAP1 SUB PUSH2 0x140 JUMPI PUSH2 0xAD PUSH2 0x8EC JUMP JUMPDEST DUP4 ISZERO PUSH2 0xEE JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x25F JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x144 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x25B JUMPI PUSH2 0x17B SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x5F4 JUMP JUMPDEST SWAP3 DUP4 MLOAD SWAP2 PUSH2 0x188 DUP4 PUSH2 0x5DC JUMP JUMPDEST SWAP3 PUSH2 0x195 DUP4 MLOAD SWAP5 DUP6 PUSH2 0x548 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x1A4 PUSH1 0x1F NOT SWAP2 PUSH2 0x5DC JUMP JUMPDEST ADD DUP2 DUP6 JUMPDEST DUP3 DUP2 LT PUSH2 0x24B JUMPI POP POP POP DUP4 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x1EF JUMPI DUP1 PUSH2 0x1D3 PUSH2 0x1CD PUSH1 0x1 SWAP4 DUP10 PUSH2 0x702 JUMP JUMPDEST MLOAD PUSH2 0x652 JUMP JUMPDEST PUSH2 0x1DD DUP3 DUP8 PUSH2 0x702 JUMP JUMPDEST MSTORE PUSH2 0x1E8 DUP2 DUP7 PUSH2 0x702 JUMP JUMPDEST POP ADD PUSH2 0x1B4 JUMP JUMPDEST POP DUP3 DUP5 DUP4 MLOAD SWAP3 DUP1 DUP5 ADD SWAP1 DUP1 DUP6 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE DUP1 DUP7 DUP7 ADD SWAP7 DUP4 PUSH1 0x5 SHL DUP8 ADD ADD SWAP5 ADD SWAP3 SWAP6 JUMPDEST DUP3 DUP8 LT PUSH2 0x21F JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 DUP1 PUSH2 0x23B PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x508 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP7 ADD SWAP6 SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x212 JUMP JUMPDEST PUSH1 0x60 DUP3 DUP3 DUP9 ADD ADD MSTORE ADD DUP3 SWAP1 PUSH2 0x1A8 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP DUP1 DUP4 SWAP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25F JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP1 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x25B JUMPI PUSH2 0x291 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x5F4 JUMP JUMPDEST SWAP2 PUSH1 0x24 DUP1 CALLDATALOAD SWAP6 DUP1 DUP8 GT PUSH2 0x39A JUMPI CALLDATASIZE PUSH1 0x23 DUP9 ADD SLT ISZERO PUSH2 0x39A JUMPI DUP7 DUP5 ADD CALLDATALOAD PUSH2 0x2B6 DUP2 PUSH2 0x5DC JUMP JUMPDEST SWAP8 PUSH2 0x2C3 DUP6 MLOAD SWAP10 DUP11 PUSH2 0x548 JUMP JUMPDEST DUP2 DUP10 MSTORE PUSH1 0x20 SWAP4 DUP1 DUP6 DUP12 ADD SWAP4 PUSH1 0x5 SHL DUP4 ADD ADD SWAP4 CALLDATASIZE DUP6 GT PUSH2 0x396 JUMPI DUP2 DUP4 ADD SWAP4 JUMPDEST DUP6 DUP6 LT PUSH2 0x36C JUMPI POP POP POP POP POP POP POP PUSH2 0x2F7 PUSH2 0x8EC JUMP JUMPDEST CALLVALUE PUSH2 0x35F JUMPI DUP3 MLOAD DUP6 MLOAD SUB PUSH2 0x352 JUMPI DUP3 MLOAD ISZERO PUSH2 0x345 JUMPI POP POP DUP2 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x341 JUMPI DUP1 PUSH2 0x33B PUSH2 0x329 PUSH1 0x1 SWAP4 DUP6 PUSH2 0x702 JUMP JUMPDEST MLOAD PUSH2 0x334 DUP4 DUP9 PUSH2 0x702 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x766 JUMP JUMPDEST ADD PUSH2 0x310 JUMP JUMPDEST DUP3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x97DA5F95 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST MLOAD PUSH4 0x3BCC8979 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST MLOAD PUSH4 0xF36BA737 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP5 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x392 JUMPI DUP8 SWAP2 PUSH2 0x387 DUP4 SWAP3 DUP7 CALLDATASIZE SWAP2 DUP10 ADD ADD PUSH2 0x580 JUMP JUMPDEST DUP2 MSTORE ADD SWAP5 ADD SWAP4 PUSH2 0x2E1 JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x25F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25F JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 DUP4 SWAP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x25F JUMPI PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x144 JUMPI PUSH2 0x3F3 SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0x580 JUMP JUMPDEST SWAP1 PUSH2 0x3FC PUSH2 0x8EC JUMP JUMPDEST CALLVALUE PUSH2 0x410 JUMPI POP PUSH2 0x40D SWAP2 SWAP3 CALLDATALOAD PUSH2 0x766 JUMP JUMPDEST DUP1 RETURN JUMPDEST MLOAD PUSH4 0xF36BA737 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x479 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x479 JUMPI PUSH2 0x438 PUSH2 0x8EC JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x479 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x479 JUMPI POP PUSH2 0x49D PUSH2 0x4B0 SWAP3 CALLDATALOAD PUSH2 0x652 JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x508 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP5 SWAP1 DUP5 CALLVALUE PUSH2 0x144 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x144 JUMPI CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x144 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x18A6A9A5 PUSH1 0xE2 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x4F7 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x4F0 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x534 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x513 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x56A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x5D7 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x56A JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x5B5 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x548 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x5D7 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x56A JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x5D7 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0x60B DUP4 PUSH2 0x5DC JUMP JUMPDEST SWAP3 PUSH2 0x619 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x548 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x5D7 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x643 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x635 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP3 DUP3 SLOAD SWAP3 PUSH2 0x677 DUP5 PUSH2 0x72C JUMP JUMPDEST DUP1 DUP8 MSTORE SWAP4 DUP4 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x6DE JUMPI POP PUSH1 0x1 EQ PUSH2 0x6A1 JUMPI JUMPDEST POP POP POP POP PUSH2 0x69E SWAP3 POP SUB DUP3 PUSH2 0x548 JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP2 MSTORE DUP6 DUP2 KECCAK256 SWAP6 SWAP4 POP SWAP2 SWAP1 JUMPDEST DUP2 DUP4 LT PUSH2 0x6C6 JUMPI POP POP PUSH2 0x69E SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 DUP1 DUP1 PUSH2 0x68E JUMP JUMPDEST DUP6 SLOAD DUP8 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x6AC JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x69E SWAP5 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 DUP1 DUP1 PUSH2 0x68E JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x716 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x75C JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x746 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x73B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x0 SWAP3 DUP2 DUP5 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x40 DUP7 KECCAK256 SWAP1 DUP4 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x8D8 JUMPI PUSH2 0x798 DUP4 SLOAD PUSH2 0x72C JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x892 JUMPI JUMPDEST POP DUP4 SWAP8 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x812 JUMPI DUP3 SWAP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 SWAP8 SWAP9 SWAP10 DUP4 SWAP3 SWAP4 PUSH2 0x807 JUMPI JUMPDEST POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH2 0x802 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x508 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST DUP8 ADD MLOAD SWAP3 POP CODESIZE PUSH2 0x7DD JUMP JUMPDEST SWAP8 PUSH1 0x1F SWAP3 SWAP2 SWAP3 NOT DUP3 AND DUP5 DUP11 MSTORE DUP6 DUP11 KECCAK256 SWAP10 JUMPDEST DUP2 DUP2 LT PUSH2 0x87D JUMPI POP SWAP1 DUP3 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 SWAP9 SWAP10 SWAP11 SWAP3 LT PUSH2 0x864 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x7EE JUMP JUMPDEST DUP7 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x858 JUMP JUMPDEST DUP8 DUP4 ADD MLOAD DUP12 SSTORE SWAP10 DUP5 ADD SWAP10 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x823 JUMP JUMPDEST DUP4 DUP10 MSTORE DUP5 DUP10 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP7 DUP6 LT PUSH2 0x8CE JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 DUP3 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x8C3 JUMPI POP POP PUSH2 0x7A1 JUMP JUMPDEST DUP11 DUP2 SSTORE ADD DUP3 SWAP1 PUSH2 0x8B5 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x8AA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x900 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A SWAP5 DUP5 0xD4 0xD SIGNEXTEND 0xB8 0xAD 0xCF PREVRANDAO PUSH30 0x365FE2568C05961437313CC1512568918559A1324E64736F6C6343000814 STOP CALLER ","sourceMap":"1009:6184:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1009:6184:0;;;;-1:-1:-1;;;;;1009:6184:0;;;;;;;;;;;;;;1063:62:19;;:::i;:::-;2162:22;;1009:6184:0;;-1:-1:-1;;1009:6184:0;;-1:-1:-1;;;;;;1009:6184:0;;;;;;;2566:40:19;1009:6184:0;;2566:40:19;1009:6184:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1009:6184:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;2211:13;;;;;1009:6184;;2226:19;;;;;2288:11;2279:21;2288:11;1009:6184;2288:11;;;:::i;:::-;1009:6184;2279:21;:::i;:::-;2263:37;;;;:::i;:::-;;;;;;:::i;:::-;;1009:6184;2211:13;;2226:19;;;;1009:6184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1063:62:19;;;;;;;;;:::i;:::-;4201:9:0;4197:55;;1009:6184;;;;6456:36;6452:112;;1009:6184;;6578:20;6574:92;;6681:13;;;;1009:6184;;6696:19;;;;;6742:11;6755:13;6742:11;1009:6184;6742:11;;;:::i;:::-;1009:6184;6755:13;;;;:::i;:::-;;;;:::i;:::-;1009:6184;6681:13;;6696:19;;1009:6184;;6574:92;1009:6184;-1:-1:-1;;;6621:34:0;;;6452:112;1009:6184;-1:-1:-1;;;6515:38:0;;;4197:55;1009:6184;-1:-1:-1;;;4224:28:0;;;1009:6184;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1009:6184:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1063:62:19;;;:::i;:::-;3212:9:0;3208:55;;1009:6184;3291:9;1009:6184;;;3291:9;:::i;:::-;1009:6184;;3208:55;1009:6184;-1:-1:-1;;;3235:28:0;;1009:6184;;3235:28;1009:6184;;;;;;;;;;;;;1063:62:19;;:::i;:::-;1009:6184:0;;-1:-1:-1;;;;;;1009:6184:0;;;;;;-1:-1:-1;;;;;1009:6184:0;2566:40:19;1009:6184:0;;2566:40:19;1009:6184:0;;;;;;;;;;;;;-1:-1:-1;;1009:6184:0;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;1009:6184:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;;7097:35:0;;;:87;;;;1009:6184;;;;;;;7097:87;-1:-1:-1;;;937:40:24;;-1:-1:-1;7097:87:0;;;1009:6184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1009:6184:0;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;1009:6184:0;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;1009:6184:0;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;1815:151;-1:-1:-1;1009:6184:0;;;4920:6;1009:6184;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;4920:6;;;;1009:6184;;;;;;;;;;;;;;;;:::i;:::-;1815:151;:::o;1009:6184::-;;;;;;;;-1:-1:-1;1009:6184:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1009:6184:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;5496:188;;;;-1:-1:-1;1009:6184:0;;;;5604:6;1009:6184;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;5496:188;1009:6184;;;;;;;;;;;;5646:31;1009:6184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5646:31;;;5496:188::o;1009:6184::-;;;;;-1:-1:-1;1009:6184:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;5646:31;1009:6184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1009:6184:0;;;;;-1:-1:-1;;;1009:6184:0;;;;;;;;1359:130:19;1273:6;1009:6184:0;-1:-1:-1;;;;;1009:6184:0;734:10:22;1422:23:19;1009:6184:0;;1359:130:19:o;1009:6184:0:-;;;;;;;;;;;;;;;;;;;;;;;;"},"methodIdentifiers":{"getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_MsgValueDisallowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableCannotSetZeroAddressAsOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Fabian Vogelsteller <fabian@lukso.network> and <CJ42>, <YamenMerhi>, <B00ste>, <SkimaHarvey>\",\"details\":\"ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time. It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\",\"errors\":{\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"ERC725Y_MsgValueDisallowed()\":[{\"details\":\"Reverts when sending value to the {setData} or {setDataBatch} function.\"}],\"OwnableCannotSetZeroAddressAsOwner()\":[{\"details\":\"Reverts when trying to set `address(0)` as the contract owner when deploying the contract or initializing it.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:requirements\":\"- `initialOwner` CANNOT be the zero address.\",\"details\":\"Deploy a new ERC725Y contract with the provided `initialOwner` as the contract {owner}.\",\"params\":{\"initialOwner\":\"the owner of the contract.\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setData(bytes32,bytes)\":{\"custom:events\":\"{DataChanged} event.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner}.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**. If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"{DataChanged} event **for each data key/value pair set**.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**. If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"_store\":{\"details\":\"Map `bytes32` data keys to their `bytes` data values.\"}},\"title\":\"Deployable implementation with `constructor` of ERC725Y sub-standard, a generic data key/value store.\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Deploying an ERC725Y smart contract and setting address `initialOwner` as the contract owner.\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@erc725/smart-contracts-v8/contracts/ERC725Y.sol\":\"ERC725Y\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@erc725/smart-contracts-v8/contracts/ERC725Y.sol\":{\"keccak256\":\"0x209d6b52eb0d5dcb8c180773dd67e507f603c98ede7e5a64457752159a52ad3d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dbfa427c80ba998d30c721fb41795502d19aa09acb8e1f59f6982d080f029692\",\"dweb:/ipfs/QmPQXeYEU7kaDtskZ1ha2umRuGSrFTfXfpyiGgBSQfwZBn\"]},\"@erc725/smart-contracts-v8/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts-v8/contracts/errors.sol\":{\"keccak256\":\"0x198fece17fcfec61d40d3453ebbaa49760968ea8caa128dd5314a12b98ecec66\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5e705131b03cf4167ff312e7ebaa679cf56c22b01de518dfa4d2163d7e1ddb8b\",\"dweb:/ipfs/QmbH8q7MgrR7fJm1QEmYoKcnZCxWwejt4Jum2DUYmLJAGA\"]},\"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x943d0f67d6455cfb1bed5d1fb77995df0b202ecdbb028fa0e85bc26bcd3219a5\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c3b8b0daa2fed9c0513444120b87beec7c2b102eadbcbeccae73ece67819a658\",\"dweb:/ipfs/QmaSb9Xhma6UwhK1FosJtbP8EkBn8i9PTcLKg5FU1VAJSH\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol":{"IERC725Y":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time. It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\",\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}}},\"kind\":\"dev\",\"methods\":{\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"setData(bytes32,bytes)\":{\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}}},\"title\":\"The interface for ERC725Y sub-standard, a generic data key/value store.\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol\":\"IERC725Y\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x943d0f67d6455cfb1bed5d1fb77995df0b202ecdbb028fa0e85bc26bcd3219a5\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c3b8b0daa2fed9c0513444120b87beec7c2b102eadbcbeccae73ece67819a658\",\"dweb:/ipfs/QmaSb9Xhma6UwhK1FosJtbP8EkBn8i9PTcLKg5FU1VAJSH\"]}},\"version\":1}"}},"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol":{"IERC725Y":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time. It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\",\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}}},\"kind\":\"dev\",\"methods\":{\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"setData(bytes32,bytes)\":{\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"The interface for ERC725Y sub-standard, a generic data key/value store.\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":\"IERC725Y\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol":{"ILSP1UniversalReceiver":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"typeId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"receivedData","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"returnedValue","type":"bytes"}],"name":"UniversalReceiver","type":"event"},{"inputs":[{"internalType":"bytes32","name":"typeId","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"universalReceiver","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"universalReceiver(bytes32,bytes)":"6bb56a14"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"typeId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"receivedData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"returnedValue\",\"type\":\"bytes\"}],\"name\":\"UniversalReceiver\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"universalReceiver\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"LSP1UniversalReceiver allows to receive arbitrary messages and to be informed when assets are sent or received.\",\"events\":{\"UniversalReceiver(address,uint256,bytes32,bytes,bytes)\":{\"details\":\"Emitted when the {universalReceiver} function was called with a specific `typeId` and some `receivedData`\",\"params\":{\"from\":\"The address of the EOA or smart contract that called the {universalReceiver(...)} function.\",\"receivedData\":\"Any arbitrary data that was sent to the {universalReceiver(...)} function.\",\"returnedValue\":\"The value returned by the {universalReceiver(...)} function.\",\"typeId\":\"A `bytes32` unique identifier (= _\\\"hook\\\"_) that describe the type of notification, information or transaction received by the contract. Can be related to a specific standard or a hook.\",\"value\":\"The amount sent to the {universalReceiver(...)} function.\"}}},\"kind\":\"dev\",\"methods\":{\"universalReceiver(bytes32,bytes)\":{\"custom:events\":\"{UniversalReceiver} event.\",\"details\":\"Generic function that can be used to notify the contract about specific incoming transactions or events like asset transfers, vault transfers, etc. Allows for custom on-chain and off-chain reactions based on the `typeId` and `data`.\",\"params\":{\"data\":\"The arbitrary data received with the call.\",\"typeId\":\"The hash of a specific standard or a hook.\"}}},\"title\":\"Interface of the LSP1 - Universal Receiver standard, an entry function for a contract to receive arbitrary information.\",\"version\":1},\"userdoc\":{\"events\":{\"UniversalReceiver(address,uint256,bytes32,bytes,bytes)\":{\"notice\":\"Address `from` called the `universalReceiver(...)` function while sending `value` LYX. Notification type (typeId): `typeId` - Data received: `receivedData`.\"}},\"kind\":\"user\",\"methods\":{\"universalReceiver(bytes32,bytes)\":{\"notice\":\"Reacted on received notification with `typeId` & `data`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol\":\"ILSP1UniversalReceiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x72dd4f342e059edd246032d2cd2e45707453ceb27c187161e31af345d058dced\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9a8fb9c285da565984f6a168ecee00a647b988a829c218813e9d2e007b28b48d\",\"dweb:/ipfs/QmbXznWjhZPLXWF6NJAyVKD8ZReSWZaJyRdYZMLWaQHZWa\"]}},\"version\":1}"}},"@lukso/lsp1-contracts/contracts/LSP1Utils.sol":{"LSP1Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b1357a7701286236a712b6ce4577154fa24c4df0091be0b045db5b592ff5e34964736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 CALLDATALOAD PUSH27 0x7701286236A712B6CE4577154FA24C4DF0091BE0B045DB5B592FF5 0xE3 0x49 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"876:2519:7:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b1357a7701286236a712b6ce4577154fa24c4df0091be0b045db5b592ff5e34964736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 CALLDATALOAD PUSH27 0x7701286236A712B6CE4577154FA24C4DF0091BE0B045DB5B592FF5 0xE3 0x49 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"876:2519:7:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\",\"details\":\"LSP1Utils is a library of utility functions that can be used to notify the `universalReceiver` function of a contract that implements LSP1 and retrieve information related to LSP1 `typeId`. Based on LSP1 Universal Receiver standard.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LSP1 Utility library.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp1-contracts/contracts/LSP1Utils.sol\":\"LSP1Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x72dd4f342e059edd246032d2cd2e45707453ceb27c187161e31af345d058dced\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9a8fb9c285da565984f6a168ecee00a647b988a829c218813e9d2e007b28b48d\",\"dweb:/ipfs/QmbXznWjhZPLXWF6NJAyVKD8ZReSWZaJyRdYZMLWaQHZWa\"]},\"@lukso/lsp1-contracts/contracts/LSP1Constants.sol\":{\"keccak256\":\"0x0f87fc38243fc70316e22814f5a79d9c0770a39f64077cbc6fb5fddfa1d4c23c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7d83f054b71dfa5ca48a9a811e6a985ff6b38a9e5f4c220ea2ec3a322cce7cf\",\"dweb:/ipfs/QmaehpHpqc5dtRCm9BoU8vCY59AeEnmGvmmwPirVr47oGp\"]},\"@lukso/lsp1-contracts/contracts/LSP1Utils.sol\":{\"keccak256\":\"0x7dd32ff416b7275c5dbb8daa39c0f13bb1b4db2df8132221fc07619dbfe08cd0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fc3eaaa85cb6e14939417ba73729e65722f95c9db714bfda173a438fc2ce771d\",\"dweb:/ipfs/QmTg39yTVneeptAGBDTfGJfYrQMXJ153Y7VN4hJE2eNf1o\"]},\"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol":{"LSP17Extendable":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the `fallback(...)` logic according to LSP17 - Contract Extension standard. This module can be inherited to extend the functionality of the parent contract when calling a function that doesn't exist on the parent contract via forwarding the call to an extension mapped to the function selector being called, set originally by the parent contract\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"Module to add more functionalities to a contract using extensions.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol\":\"LSP17Extendable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol\":{\"keccak256\":\"0x6d4bb208587872ad563fef31655c44f7de03baa5b4a513910c0003aea0c04036\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://880c3b21e2090a14e7bba94ac5c8d4633e8a81d93c6f619454167a01dcc866d8\",\"dweb:/ipfs/QmZp6YVM4Eor5XtuXXqGRaPAJ3u5KCmLwuNRAGf4JY7sK1\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol\":{\"keccak256\":\"0x75a0159f76a3c5bf26b13aa404aca2f588ea41928eb1483683e29d2031fe5abf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f1b93e7eb5a88a2f42a9dfa061ca5e93e7650cd9114010faa18faf0a5508f579\",\"dweb:/ipfs/QmXmLhf1ejsF7G1FZnvpTBRS9oQ9ZTuqCBRT1im3vAuUYW\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol\":{\"keccak256\":\"0x4536ed09238f33ca9d40ed2e7c6254aac84bf81010b3524711524ae7fd30227c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://abaed57358cb811d3b368d52f66db3c1327b96c38301d6eccf2ffaa6d5fa5928\",\"dweb:/ipfs/QmS1FtQH4Gn6xYrHCTHWJwxgAURvGvvfypsuQ2rRhrkPgi\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp2-contracts/contracts/LSP2Utils.sol":{"LSP2Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212204f900b526e358aeb60e8afc5d531cf91cec800e4a998a5cf15d0f5cd323e7f0d64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F SWAP1 SIGNEXTEND MSTORE PUSH15 0x358AEB60E8AFC5D531CF91CEC800E4 0xA9 SWAP9 0xA5 0xCF ISZERO 0xD0 CREATE2 0xCD ORIGIN RETURNDATACOPY PUSH32 0xD64736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"482:15762:11:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212204f900b526e358aeb60e8afc5d531cf91cec800e4a998a5cf15d0f5cd323e7f0d64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F SWAP1 SIGNEXTEND MSTORE PUSH15 0x358AEB60E8AFC5D531CF91CEC800E4 0xA9 SWAP9 0xA5 0xCF ISZERO 0xD0 CREATE2 0xCD ORIGIN RETURNDATACOPY PUSH32 0xD64736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"482:15762:11:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\",\"details\":\"LSP2Utils is a library of utility functions that can be used to encode data key of different key type defined on the LSP2 standard. Based on LSP2 ERC725Y JSON Schema standard.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LSP2 Utility library.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\":\"LSP2Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol":{"LSP4DigitalAssetMetadata":{"abi":[{"inputs":[],"name":"ERC725Y_DataKeysValuesEmptyArray","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesLengthMismatch","type":"error"},{"inputs":[],"name":"ERC725Y_MsgValueDisallowed","type":"error"},{"inputs":[],"name":"LSP4TokenNameNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenSymbolNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenTypeNotEditable","type":"error"},{"inputs":[],"name":"OwnableCannotSetZeroAddressAsOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_MsgValueDisallowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenTypeNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableCannotSetZeroAddressAsOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Matthew Stevens\",\"details\":\"Standard Implementation of the LSP4 standard.\",\"errors\":{\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"ERC725Y_MsgValueDisallowed()\":[{\"details\":\"Reverts when sending value to the {setData} or {setDataBatch} function.\"}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized. The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized. The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenTypeNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized. The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized.\"}],\"OwnableCannotSetZeroAddressAsOwner()\":[{\"details\":\"Reverts when trying to set `address(0)` as the contract owner when deploying the contract or initializing it.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"initialOwner_\":\"The owner of the token contract.\",\"lsp4TokenType_\":\"The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection).\",\"name_\":\"The name of the token.\",\"symbol_\":\"The symbol of the token.\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setData(bytes32,bytes)\":{\"custom:events\":\"{DataChanged} event.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner}.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**. If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"{DataChanged} event **for each data key/value pair set**.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**. If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Implementation of a LSP4DigitalAssetMetadata contract that stores the **Token-Metadata** (`LSP4TokenName` and `LSP4TokenSymbol`) in its ERC725Y data store.\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Deploying a digital asset `name_` with the `symbol_` symbol.\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol\":\"LSP4DigitalAssetMetadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@erc725/smart-contracts-v8/contracts/ERC725Y.sol\":{\"keccak256\":\"0x209d6b52eb0d5dcb8c180773dd67e507f603c98ede7e5a64457752159a52ad3d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dbfa427c80ba998d30c721fb41795502d19aa09acb8e1f59f6982d080f029692\",\"dweb:/ipfs/QmPQXeYEU7kaDtskZ1ha2umRuGSrFTfXfpyiGgBSQfwZBn\"]},\"@erc725/smart-contracts-v8/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts-v8/contracts/errors.sol\":{\"keccak256\":\"0x198fece17fcfec61d40d3453ebbaa49760968ea8caa128dd5314a12b98ecec66\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5e705131b03cf4167ff312e7ebaa679cf56c22b01de518dfa4d2163d7e1ddb8b\",\"dweb:/ipfs/QmbH8q7MgrR7fJm1QEmYoKcnZCxWwejt4Jum2DUYmLJAGA\"]},\"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x943d0f67d6455cfb1bed5d1fb77995df0b202ecdbb028fa0e85bc26bcd3219a5\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c3b8b0daa2fed9c0513444120b87beec7c2b102eadbcbeccae73ece67819a658\",\"dweb:/ipfs/QmaSb9Xhma6UwhK1FosJtbP8EkBn8i9PTcLKg5FU1VAJSH\"]},\"@lukso/lsp4-contracts/contracts/LSP4Constants.sol\":{\"keccak256\":\"0xdf9b7c688d39a92cb3238136a9f56554245d5ae9b6568dcd6164d0e15c6f56c7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bb36a427cdfa0f394d2d78014f85152ab383499fc3c3d6285d4b801c656e7c3f\",\"dweb:/ipfs/QmZJehfeWKfHLyZLufhs9u4ZyVztGCUNWXzFgfZSU837vU\"]},\"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol\":{\"keccak256\":\"0x6a718979925b05064c15e4de4b376dadec8d107d720aa762d22a06e44ed67fa4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c82f6c8133c4d35d8cbbfc4da647204989acc5f38980be787263881e9f732f5\",\"dweb:/ipfs/QmdhHBnJvvo4Ax183HgHkL7w5A4w3ADXDQuewocnTVqsW6\"]},\"@lukso/lsp4-contracts/contracts/LSP4Errors.sol\":{\"keccak256\":\"0x3db7fd252ed02ce27686141125c3d65d3ff682a32601e1e8611becd9357a57b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5aded62a160ed7f9860996004d1656e8592b3f97d478d8597f8ad6afbe4f34b7\",\"dweb:/ipfs/QmcnmLVt8cmz1iRNaX5c6iNYckRgUXGz8YkjHW9T1KNB5A\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol":{"ILSP8IdentifiableDigitalAsset":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorAuthorizationChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"notified","type":"bool"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"TokenIdDataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"force","type":"bool"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"authorizeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"batchCalls","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatchForTokenIds","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getDataForTokenId","outputs":[{"internalType":"bytes","name":"dataValues","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"getOperatorsOf","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"isOperatorFor","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"notify","type":"bool"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"revokeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatchForTokenIds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setDataForTokenId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"tokenIdsOf","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"tokenOwnerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"force","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"from","type":"address[]"},{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"bytes32[]","name":"tokenId","type":"bytes32[]"},{"internalType":"bool[]","name":"force","type":"bool[]"},{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"transferBatch","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"authorizeOperator(address,bytes32,bytes)":"86a10ddd","balanceOf(address)":"70a08231","batchCalls(bytes[])":"6963d438","getDataBatchForTokenIds(bytes32[],bytes32[])":"1d26fce6","getDataForTokenId(bytes32,bytes32)":"16e023b3","getOperatorsOf(bytes32)":"49a6078d","isOperatorFor(address,bytes32)":"2a3654a4","revokeOperator(address,bytes32,bool,bytes)":"db8c9663","setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])":"be9f0e6f","setDataForTokenId(bytes32,bytes32,bytes)":"d6c1407c","tokenIdsOf(address)":"a3b261f2","tokenOwnerOf(bytes32)":"217b2270","totalSupply()":"18160ddd","transfer(address,address,bytes32,bool,bytes)":"511b6952","transferBatch(address[],address[],bytes32[],bool[],bytes[])":"7e87632c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorAuthorizationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"notified\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"TokenIdDataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"batchCalls\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatchForTokenIds\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getDataForTokenId\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValues\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"notify\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatchForTokenIds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setDataForTokenId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokenIdsOf\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"tokenOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"tokenId\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"OperatorAuthorizationChanged(address,address,bytes32,bytes)\":{\"details\":\"Emitted when `tokenOwner` enables `operator` to transfer or burn the `tokenId`.\",\"params\":{\"operator\":\"The address authorized as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` address has access on behalf of `tokenOwner`.\",\"tokenOwner\":\"The owner of the `tokenId`.\"}},\"OperatorRevoked(address,address,bytes32,bool,bytes)\":{\"details\":\"Emitted when `tokenOwner` disables `operator` to transfer or burn `tokenId` on its behalf.\",\"params\":{\"notified\":\"Bool indicating whether the operator has been notified or not\",\"operator\":\"The address revoked from the operator array ({getOperatorsOf}).\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` is revoked from operating on.\",\"tokenOwner\":\"The owner of the `tokenId`.\"}},\"TokenIdDataChanged(bytes32,bytes32,bytes)\":{\"details\":\"Emitted when setting data for `tokenId`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\",\"tokenId\":\"The tokenId which data is set for.\"}},\"Transfer(address,address,address,bytes32,bool,bytes)\":{\"details\":\"Emitted when `tokenId` token is transferred from the `from` to the `to` address.\",\"params\":{\"data\":\"Any additional data the caller included by the caller during the transfer, and sent in the hooks to the `from` and `to` addresses.\",\"force\":\"If the token transfer enforces the `to` recipient address to be a contract that implements the LSP1 standard or not.\",\"from\":\"The previous owner of the `tokenId`\",\"operator\":\"The address of operator that sent the `tokenId`\",\"to\":\"The new owner of `tokenId`\",\"tokenId\":\"The tokenId that was transferred\"}}},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address,bytes32,bytes)\":{\"custom:events\":\"{OperatorAuthorizationChanged} event.\",\"custom:requirements\":\"- `tokenId` must exist. - caller MUST be the {tokenOwnerOf} `tokenId`. - the owner of a `tokenId` cannot grant itself as an `operator` (`operator` cannot be the calling address). - `operator` cannot be the zero address.\",\"details\":\"Allow an `operator` address to transfer or burn a specific `tokenId` on behalf of its token owner. See {isOperatorFor}. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"operator\":\"The address to authorize as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The token ID operator has access to.\"}},\"balanceOf(address)\":{\"details\":\"Get the number of token IDs owned by `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The address to query     *\"},\"returns\":{\"_0\":\"The total number of token IDs that `tokenOwner` owns.\"}},\"batchCalls(bytes[])\":{\"details\":\"Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\",\"params\":{\"data\":\"An array of ABI encoded function calls to be called on the contract.\"},\"returns\":{\"results\":\"An array of abi-encoded data returned by the functions executed.\"}},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"tokenIds\":\"An array of token IDs.\"},\"returns\":{\"dataValues\":\"An array of data values for each pair of `tokenId` and `dataKey`.\"}},\"getDataForTokenId(bytes32,bytes32)\":{\"params\":{\"dataKey\":\"The key for the data to retrieve.\",\"tokenId\":\"The unique identifier for a token.\"},\"returns\":{\"dataValues\":\"The data value associated with the given `tokenId` and `dataKey`.\"}},\"getOperatorsOf(bytes32)\":{\"details\":\"Returns all `operator` addresses that are allowed to transfer or burn a specific `tokenId` on behalf of its owner.\",\"params\":{\"tokenId\":\"The token ID to get the operators for.\"},\"returns\":{\"_0\":\"An array of operators allowed to transfer or burn a specific `tokenId`. Requirements - `tokenId` must exist.\"}},\"isOperatorFor(address,bytes32)\":{\"custom:info\":\"The tokenOwner is its own operator.\",\"custom:requirements\":\"- `tokenId` must exist. - caller must be the current {tokenOwnerOf} `tokenId`.\",\"details\":\"Returns whether `operator` address is an operator for a given `tokenId`.\",\"params\":{\"operator\":\"The address to query operator status for.\",\"tokenId\":\"The token ID to check if `operator` is allowed to operate on.\"},\"returns\":{\"_0\":\"`true` if `operator` is an operator for `tokenId`, `false` otherwise.\"}},\"revokeOperator(address,bytes32,bool,bytes)\":{\"custom:events\":\"{OperatorRevoked} event with address of the operator being revoked for the caller (token owner)..\",\"custom:requirements\":\"- `tokenId` must exist. - caller must be the {tokenOwnerOf} `tokenId`. - the owner of a `tokenId` cannot grant revoke itself as an `operator` (`operator` cannot be the calling address). - `operator` cannot be the zero address.\",\"details\":\"Remove access of `operator` for a given `tokenId`, disallowing it to transfer `tokenId` on behalf of its owner. See also {isOperatorFor}.\",\"params\":{\"notify\":\"Boolean indicating whether to notify the operator or not\",\"operator\":\"The address to revoke as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` is revoked from operating on.\"}},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"custom:events\":\"{TokenIdDataChanged} event for each pair.\",\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"dataValues\":\"An array of values to set for the given data keys.\",\"tokenIds\":\"An array of token IDs.\"}},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"custom:events\":\"{TokenIdDataChanged} event.\",\"params\":{\"dataKey\":\"The key for the data to set.\",\"dataValue\":\"The value to set for the given data key.\",\"tokenId\":\"The unique identifier for a token.\"}},\"tokenIdsOf(address)\":{\"details\":\"Returns the list of token IDs that the `tokenOwner` address owns.\",\"params\":{\"tokenOwner\":\"The address that we want to get the list of token IDs for.\"},\"returns\":{\"_0\":\"An array of `bytes32[] tokenIds` owned by `tokenOwner`.\"}},\"tokenOwnerOf(bytes32)\":{\"custom:info\":\"if the `tokenId` is not owned by any address, the returned address will be `address(0)`\",\"custom:requirements\":\"`tokenId` must exist.\",\"details\":\"Returns the address that owns a given `tokenId`.\",\"params\":{\"tokenId\":\"The token ID to query the owner for.\"},\"returns\":{\"_0\":\"The owner address of the given `tokenId`.\"}},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens that have been minted in this contract.\",\"returns\":{\"_0\":\"The number of existing tokens.\"}},\"transfer(address,address,bytes32,bool,bytes)\":{\"custom:events\":\"- {Transfer} event when the `tokenId` is successfully transferred.\",\"custom:hint\":\"The `force` parameter **MUST be set to `true`** to transfer tokens to Externally Owned Accounts (EOAs) or contracts that do not implement the LSP1 Universal Receiver Standard. Otherwise the function will revert making the transfer fail.\",\"custom:info\":\"if the `to` address is a contract that implements LSP1, it will always be notified via its `universalReceiver(...)` function, regardless if `force` is set to `true` or `false`.\",\"custom:requirements\":\"- `from` cannot be the zero address. - `to` cannot be the zero address. - `from` and `to` cannot be the same address (`from` cannot send the `tokenId` to itself). - `from` must own the given `tokenId`. - If the caller is not `from`, it must be an operator for the `tokenId`.\",\"custom:warning\":\"Be aware that when either the sender or the recipient can have logic that revert in their `universalReceiver(...)` function when being notified. This even if the `force` was set to `true`.\",\"details\":\"Transfer a given `tokenId` token from the `from` address to the `to` address. If operators are set for a specific `tokenId`, all the operators are revoked after the tokenId have been transferred. The `force` parameter MUST be set to `true` when transferring tokens to Externally Owned Accounts (EOAs) or contracts that do not implement the LSP1 standard.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\",\"force\":\"When set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\",\"from\":\"The address that owns the given `tokenId`.\",\"to\":\"The address that will receive the `tokenId`.\",\"tokenId\":\"The token ID to transfer.\"}},\"transferBatch(address[],address[],bytes32[],bool[],bytes[])\":{\"custom:events\":\"- {Transfer} events on each successful token transfer.\",\"custom:requirements\":\"- The arrays of `from`, `to` and `tokenId` must have the same length. - no values in the `from` array can be the zero address. - no values in the `to` array can be the zero address. - `from` and `to` cannot be the same address at the same index on each arrays. - each `tokenId` must be owned by `from`. - If the caller is not `from`, it must be an operator of each `tokenId`.\",\"details\":\"Transfers multiple tokens at once based on the arrays of `from`, `to` and `tokenId`. If any transfer fails, the whole call will revert.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks to the `from` and `to` addresses.\",\"force\":\"When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard and not revert.\",\"from\":\"An array of sending addresses.\",\"to\":\"An array of recipient addresses.\",\"tokenId\":\"An array of token IDs to transfer.\"}}},\"title\":\"Interface of the LSP8 - Identifiable Digital Asset standard, a non-fungible digital asset.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchCalls(bytes[])\":{\"notice\":\"Executing the following batch of abi-encoded function calls on the contract: `data`.\"},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"notice\":\"Retrieves data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"getDataForTokenId(bytes32,bytes32)\":{\"notice\":\"Retrieves data for a specific `tokenId` and `dataKey`.\"},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"notice\":\"Sets data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"notice\":\"Sets data for a specific `tokenId` and `dataKey`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol\":\"ILSP8IdentifiableDigitalAsset\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x2ca5a81c6c006030e2204d2a9997b15e954bc0696959c051a570c8a19eac4786\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bef5bbbad59c2dbd09e9e80ffe2dcf6dc3da5101d4f4b8beedcb0245d04b7b8a\",\"dweb:/ipfs/QmQYeCHfTtCTQVpy36De1d1vFacvbjTNipxDRNWuCQPNo6\"]}},\"version\":1}"}},"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol":{"LSP8IdentifiableDigitalAsset":{"abi":[{"inputs":[],"name":"ERC725Y_DataKeysValuesEmptyArray","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesLengthMismatch","type":"error"},{"inputs":[],"name":"ERC725Y_MsgValueDisallowed","type":"error"},{"inputs":[{"internalType":"bytes","name":"storedData","type":"bytes"}],"name":"InvalidExtensionAddress","type":"error"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"InvalidFunctionSelector","type":"error"},{"inputs":[],"name":"LSP4TokenNameNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenSymbolNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenTypeNotEditable","type":"error"},{"inputs":[{"internalType":"uint256","name":"callIndex","type":"uint256"}],"name":"LSP8BatchCallFailed","type":"error"},{"inputs":[],"name":"LSP8CannotSendToAddressZero","type":"error"},{"inputs":[],"name":"LSP8CannotUseAddressZeroAsOperator","type":"error"},{"inputs":[],"name":"LSP8InvalidTransferBatch","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8NonExistentTokenId","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8NonExistingOperator","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"address","name":"caller","type":"address"}],"name":"LSP8NotTokenOperator","type":"error"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"address","name":"caller","type":"address"}],"name":"LSP8NotTokenOwner","type":"error"},{"inputs":[{"internalType":"address","name":"tokenReceiver","type":"address"}],"name":"LSP8NotifyTokenReceiverContractMissingLSP1Interface","type":"error"},{"inputs":[{"internalType":"address","name":"tokenReceiver","type":"address"}],"name":"LSP8NotifyTokenReceiverIsEOA","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8OperatorAlreadyAuthorized","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8RevokeOperatorNotAuthorized","type":"error"},{"inputs":[],"name":"LSP8TokenContractCannotHoldValue","type":"error"},{"inputs":[],"name":"LSP8TokenIdFormatNotEditable","type":"error"},{"inputs":[],"name":"LSP8TokenIdsDataEmptyArray","type":"error"},{"inputs":[],"name":"LSP8TokenIdsDataLengthMismatch","type":"error"},{"inputs":[],"name":"LSP8TokenOwnerCannotBeOperator","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"address","name":"oldOwner","type":"address"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"LSP8TokenOwnerChanged","type":"error"},{"inputs":[{"internalType":"bytes4","name":"functionSelector","type":"bytes4"}],"name":"NoExtensionFoundForFunctionSelector","type":"error"},{"inputs":[],"name":"OwnableCannotSetZeroAddressAsOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorAuthorizationChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"notified","type":"bool"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"TokenIdDataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"force","type":"bool"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"Transfer","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"authorizeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"batchCalls","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatchForTokenIds","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getDataForTokenId","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"getOperatorsOf","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"isOperatorFor","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"notify","type":"bool"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"revokeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatchForTokenIds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setDataForTokenId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"tokenIdsOf","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"tokenOwnerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"force","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"from","type":"address[]"},{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"bytes32[]","name":"tokenId","type":"bytes32[]"},{"internalType":"bool[]","name":"force","type":"bool[]"},{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"transferBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"authorizeOperator(address,bytes32,bytes)":"86a10ddd","balanceOf(address)":"70a08231","batchCalls(bytes[])":"6963d438","getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","getDataBatchForTokenIds(bytes32[],bytes32[])":"1d26fce6","getDataForTokenId(bytes32,bytes32)":"16e023b3","getOperatorsOf(bytes32)":"49a6078d","isOperatorFor(address,bytes32)":"2a3654a4","owner()":"8da5cb5b","renounceOwnership()":"715018a6","revokeOperator(address,bytes32,bool,bytes)":"db8c9663","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])":"be9f0e6f","setDataForTokenId(bytes32,bytes32,bytes)":"d6c1407c","supportsInterface(bytes4)":"01ffc9a7","tokenIdsOf(address)":"a3b261f2","tokenOwnerOf(bytes32)":"217b2270","totalSupply()":"18160ddd","transfer(address,address,bytes32,bool,bytes)":"511b6952","transferBatch(address[],address[],bytes32[],bool[],bytes[])":"7e87632c","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_MsgValueDisallowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"storedData\",\"type\":\"bytes\"}],\"name\":\"InvalidExtensionAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"InvalidFunctionSelector\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenTypeNotEditable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callIndex\",\"type\":\"uint256\"}],\"name\":\"LSP8BatchCallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotUseAddressZeroAsOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8InvalidTransferBatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistentTokenId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistingOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverContractMissingLSP1Interface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverIsEOA\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8OperatorAlreadyAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8RevokeOperatorNotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenContractCannotHoldValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdFormatNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdsDataEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdsDataLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenOwnerCannotBeOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"LSP8TokenOwnerChanged\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"}],\"name\":\"NoExtensionFoundForFunctionSelector\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableCannotSetZeroAddressAsOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorAuthorizationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"notified\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"TokenIdDataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"batchCalls\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatchForTokenIds\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getDataForTokenId\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"notify\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatchForTokenIds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setDataForTokenId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokenIdsOf\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"tokenOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"tokenId\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Matthew Stevens\",\"details\":\"Standard implementation contract of the LSP8 standard. Minting and transferring are done by providing a unique `tokenId`. This implementation is agnostic to the way tokens are created. A supply mechanism has to be added in a derived contract using {_mint} For a generic mechanism, see {LSP7Mintable}.\",\"errors\":{\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"ERC725Y_MsgValueDisallowed()\":[{\"details\":\"Reverts when sending value to the {setData} or {setDataBatch} function.\"}],\"InvalidExtensionAddress(bytes)\":[{\"details\":\"reverts when the bytes retrieved from the LSP17 data key is not a valid address (not 20 bytes)\"}],\"InvalidFunctionSelector(bytes)\":[{\"details\":\"reverts when the contract is called with a function selector not valid (less than 4 bytes of data)\"}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized. The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized. The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenTypeNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized. The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP8BatchCallFailed(uint256)\":[{\"details\":\"Reverts when a batch call failed.\"}],\"LSP8CannotSendToAddressZero()\":[{\"details\":\"Reverts when trying to send token to the zero address.\"}],\"LSP8CannotUseAddressZeroAsOperator()\":[{\"details\":\"Reverts when trying to set the zero address as an operator.\"}],\"LSP8InvalidTransferBatch()\":[{\"details\":\"Reverts when the parameters used for `transferBatch` have different lengths.\"}],\"LSP8NonExistentTokenId(bytes32)\":[{\"details\":\"Reverts when `tokenId` has not been minted.\"}],\"LSP8NonExistingOperator(address,bytes32)\":[{\"details\":\"Reverts when `operator` is not an operator for the `tokenId`.\"}],\"LSP8NotTokenOperator(bytes32,address)\":[{\"details\":\"Reverts when `caller` is not an allowed operator for `tokenId`.\"}],\"LSP8NotTokenOwner(address,bytes32,address)\":[{\"details\":\"Reverts when `caller` is not the `tokenOwner` of the `tokenId`.\"}],\"LSP8NotifyTokenReceiverContractMissingLSP1Interface(address)\":[{\"details\":\"Reverts if the `tokenReceiver` does not implement LSP1 when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8NotifyTokenReceiverIsEOA(address)\":[{\"details\":\"Reverts if the `tokenReceiver` is an EOA when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8OperatorAlreadyAuthorized(address,bytes32)\":[{\"details\":\"Reverts when `operator` is already authorized for the `tokenId`.\"}],\"LSP8RevokeOperatorNotAuthorized(address,address,bytes32)\":[{\"details\":\"Reverts when the call to revoke operator is not authorized.\"}],\"LSP8TokenContractCannotHoldValue()\":[{\"details\":\"Error occurs when sending native tokens to the LSP8 contract without sending any data. E.g. Sending value without passing a bytes4 function selector to call a LSP17 Extension.\"}],\"LSP8TokenIdFormatNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP8TokenIdFormat` after the identifiable digital asset contract has been deployed. The `LSP8TokenIdFormat` data key is located inside the ERC725Y Data key-value store of the identifiable digital asset contract. It can be set only once inside the constructor/initializer when the identifiable digital asset contract is being deployed.\"}],\"LSP8TokenIdsDataEmptyArray()\":[{\"details\":\"Reverts when empty arrays is passed to the function\"}],\"LSP8TokenIdsDataLengthMismatch()\":[{\"details\":\"Reverts when the length of the token IDs data arrays is not equal\"}],\"LSP8TokenOwnerCannotBeOperator()\":[{\"details\":\"Reverts when trying to authorize or revoke the token's owner as an operator.\"}],\"LSP8TokenOwnerChanged(bytes32,address,address)\":[{\"details\":\"Reverts when the token owner changed inside the {_beforeTokenTransfer} hook.\"}],\"NoExtensionFoundForFunctionSelector(bytes4)\":[{\"details\":\"reverts when there is no extension for the function selector being called with\"}],\"OwnableCannotSetZeroAddressAsOwner()\":[{\"details\":\"Reverts when trying to set `address(0)` as the contract owner when deploying the contract or initializing it.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}},\"OperatorAuthorizationChanged(address,address,bytes32,bytes)\":{\"details\":\"Emitted when `tokenOwner` enables `operator` to transfer or burn the `tokenId`.\",\"params\":{\"operator\":\"The address authorized as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` address has access on behalf of `tokenOwner`.\",\"tokenOwner\":\"The owner of the `tokenId`.\"}},\"OperatorRevoked(address,address,bytes32,bool,bytes)\":{\"details\":\"Emitted when `tokenOwner` disables `operator` to transfer or burn `tokenId` on its behalf.\",\"params\":{\"notified\":\"Bool indicating whether the operator has been notified or not\",\"operator\":\"The address revoked from the operator array ({getOperatorsOf}).\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` is revoked from operating on.\",\"tokenOwner\":\"The owner of the `tokenId`.\"}},\"TokenIdDataChanged(bytes32,bytes32,bytes)\":{\"details\":\"Emitted when setting data for `tokenId`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\",\"tokenId\":\"The tokenId which data is set for.\"}},\"Transfer(address,address,address,bytes32,bool,bytes)\":{\"details\":\"Emitted when `tokenId` token is transferred from the `from` to the `to` address.\",\"params\":{\"data\":\"Any additional data the caller included by the caller during the transfer, and sent in the hooks to the `from` and `to` addresses.\",\"force\":\"If the token transfer enforces the `to` recipient address to be a contract that implements the LSP1 standard or not.\",\"from\":\"The previous owner of the `tokenId`\",\"operator\":\"The address of operator that sent the `tokenId`\",\"to\":\"The new owner of `tokenId`\",\"tokenId\":\"The tokenId that was transferred\"}}},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address,bytes32,bytes)\":{\"details\":\"Allow an `operator` address to transfer or burn a specific `tokenId` on behalf of its token owner. See {isOperatorFor}. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"operator\":\"The address to authorize as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The token ID operator has access to.\"}},\"balanceOf(address)\":{\"details\":\"Get the number of token IDs owned by `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The address to query     *\"},\"returns\":{\"_0\":\"The total number of token IDs that `tokenOwner` owns.\"}},\"batchCalls(bytes[])\":{\"custom:info\":\"It's not possible to send value along the functions call due to the use of `delegatecall`.\",\"details\":\"Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\",\"params\":{\"data\":\"An array of ABI encoded function calls to be called on the contract.\"},\"returns\":{\"results\":\"An array of abi-encoded data returned by the functions executed.\"}},\"constructor\":{\"custom:warning\":\"Make sure the tokenId format provided on deployment is correct, as it can only be set once and cannot be changed in the ERC725Y storage after the contract has been deployed.\",\"details\":\"Deploy a `LSP8IdentifiableDigitalAsset` contract and set the tokenId format inside the ERC725Y storage of the contract. This will also set the token `name_` and `symbol_` under the ERC725Y data keys `LSP4TokenName` and `LSP4TokenSymbol`.\",\"params\":{\"lsp4TokenType_\":\"The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection).\",\"lsp8TokenIdFormat_\":\"The format of tokenIds (= NFTs) that this contract will create.\",\"name_\":\"The name of the token\",\"newOwner_\":\"The owner of the the token-Metadata\",\"symbol_\":\"The symbol of the token\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"tokenIds\":\"An array of token IDs.\"},\"returns\":{\"dataValues\":\"An array of data values for each pair of `tokenId` and `dataKey`.\"}},\"getDataForTokenId(bytes32,bytes32)\":{\"params\":{\"dataKey\":\"The key for the data to retrieve.\",\"tokenId\":\"The unique identifier for a token.\"},\"returns\":{\"dataValue\":\"The data value associated with the given `tokenId` and `dataKey`.\"}},\"getOperatorsOf(bytes32)\":{\"details\":\"Returns all `operator` addresses that are allowed to transfer or burn a specific `tokenId` on behalf of its owner.\",\"params\":{\"tokenId\":\"The token ID to get the operators for.\"},\"returns\":{\"_0\":\"An array of operators allowed to transfer or burn a specific `tokenId`. Requirements - `tokenId` must exist.\"}},\"isOperatorFor(address,bytes32)\":{\"details\":\"Returns whether `operator` address is an operator for a given `tokenId`.\",\"params\":{\"operator\":\"The address to query operator status for.\",\"tokenId\":\"The token ID to check if `operator` is allowed to operate on.\"},\"returns\":{\"_0\":\"`true` if `operator` is an operator for `tokenId`, `false` otherwise.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"revokeOperator(address,bytes32,bool,bytes)\":{\"details\":\"Remove access of `operator` for a given `tokenId`, disallowing it to transfer `tokenId` on behalf of its owner. See also {isOperatorFor}.\",\"params\":{\"notify\":\"Boolean indicating whether to notify the operator or not\",\"operator\":\"The address to revoke as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` is revoked from operating on.\"}},\"setData(bytes32,bytes)\":{\"custom:events\":\"{DataChanged} event.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner}.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**. If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"{DataChanged} event **for each data key/value pair set**.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**. If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"dataValues\":\"An array of values to set for the given data keys.\",\"tokenIds\":\"An array of token IDs.\"}},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"params\":{\"dataKey\":\"The key for the data to set.\",\"dataValue\":\"The value to set for the given data key.\",\"tokenId\":\"The unique identifier for a token.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"tokenIdsOf(address)\":{\"details\":\"Returns the list of token IDs that the `tokenOwner` address owns.\",\"params\":{\"tokenOwner\":\"The address that we want to get the list of token IDs for.\"},\"returns\":{\"_0\":\"An array of `bytes32[] tokenIds` owned by `tokenOwner`.\"}},\"tokenOwnerOf(bytes32)\":{\"details\":\"Returns the address that owns a given `tokenId`.\",\"params\":{\"tokenId\":\"The token ID to query the owner for.\"},\"returns\":{\"_0\":\"The owner address of the given `tokenId`.\"}},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens that have been minted in this contract.\",\"returns\":{\"_0\":\"The number of existing tokens.\"}},\"transfer(address,address,bytes32,bool,bytes)\":{\"details\":\"Transfer a given `tokenId` token from the `from` address to the `to` address. If operators are set for a specific `tokenId`, all the operators are revoked after the tokenId have been transferred. The `force` parameter MUST be set to `true` when transferring tokens to Externally Owned Accounts (EOAs) or contracts that do not implement the LSP1 standard.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\",\"force\":\"When set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\",\"from\":\"The address that owns the given `tokenId`.\",\"to\":\"The address that will receive the `tokenId`.\",\"tokenId\":\"The token ID to transfer.\"}},\"transferBatch(address[],address[],bytes32[],bool[],bytes[])\":{\"details\":\"Transfers multiple tokens at once based on the arrays of `from`, `to` and `tokenId`. If any transfer fails, the whole call will revert.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks to the `from` and `to` addresses.\",\"force\":\"When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard and not revert.\",\"from\":\"An array of sending addresses.\",\"to\":\"An array of recipient addresses.\",\"tokenId\":\"An array of token IDs to transfer.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Implementation of a LSP8 Identifiable Digital Asset, a contract that represents a non-fungible token.\",\"version\":1},\"userdoc\":{\"errors\":{\"LSP8BatchCallFailed(uint256)\":[{\"notice\":\"Batch call failed.\"}],\"LSP8TokenContractCannotHoldValue()\":[{\"notice\":\"LSP8 contract cannot receive native tokens.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"batchCalls(bytes[])\":{\"notice\":\"Executing the following batch of abi-encoded function calls on the contract: `data`.\"},\"constructor\":{\"notice\":\"Deploying a LSP8IdentifiableDigitalAsset with name `name_`, symbol `symbol_`, owned by address `newOwner_` with tokenId format `lsp8TokenIdFormat_`.\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"notice\":\"Retrieves data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"getDataForTokenId(bytes32,bytes32)\":{\"notice\":\"Retrieves data for a specific `tokenId` and `dataKey`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"notice\":\"Sets data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"notice\":\"Sets data for a specific `tokenId` and `dataKey`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol\":\"LSP8IdentifiableDigitalAsset\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@erc725/smart-contracts-v8/contracts/ERC725Y.sol\":{\"keccak256\":\"0x209d6b52eb0d5dcb8c180773dd67e507f603c98ede7e5a64457752159a52ad3d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dbfa427c80ba998d30c721fb41795502d19aa09acb8e1f59f6982d080f029692\",\"dweb:/ipfs/QmPQXeYEU7kaDtskZ1ha2umRuGSrFTfXfpyiGgBSQfwZBn\"]},\"@erc725/smart-contracts-v8/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts-v8/contracts/errors.sol\":{\"keccak256\":\"0x198fece17fcfec61d40d3453ebbaa49760968ea8caa128dd5314a12b98ecec66\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5e705131b03cf4167ff312e7ebaa679cf56c22b01de518dfa4d2163d7e1ddb8b\",\"dweb:/ipfs/QmbH8q7MgrR7fJm1QEmYoKcnZCxWwejt4Jum2DUYmLJAGA\"]},\"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x943d0f67d6455cfb1bed5d1fb77995df0b202ecdbb028fa0e85bc26bcd3219a5\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c3b8b0daa2fed9c0513444120b87beec7c2b102eadbcbeccae73ece67819a658\",\"dweb:/ipfs/QmaSb9Xhma6UwhK1FosJtbP8EkBn8i9PTcLKg5FU1VAJSH\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x72dd4f342e059edd246032d2cd2e45707453ceb27c187161e31af345d058dced\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9a8fb9c285da565984f6a168ecee00a647b988a829c218813e9d2e007b28b48d\",\"dweb:/ipfs/QmbXznWjhZPLXWF6NJAyVKD8ZReSWZaJyRdYZMLWaQHZWa\"]},\"@lukso/lsp1-contracts/contracts/LSP1Constants.sol\":{\"keccak256\":\"0x0f87fc38243fc70316e22814f5a79d9c0770a39f64077cbc6fb5fddfa1d4c23c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7d83f054b71dfa5ca48a9a811e6a985ff6b38a9e5f4c220ea2ec3a322cce7cf\",\"dweb:/ipfs/QmaehpHpqc5dtRCm9BoU8vCY59AeEnmGvmmwPirVr47oGp\"]},\"@lukso/lsp1-contracts/contracts/LSP1Utils.sol\":{\"keccak256\":\"0x7dd32ff416b7275c5dbb8daa39c0f13bb1b4db2df8132221fc07619dbfe08cd0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fc3eaaa85cb6e14939417ba73729e65722f95c9db714bfda173a438fc2ce771d\",\"dweb:/ipfs/QmTg39yTVneeptAGBDTfGJfYrQMXJ153Y7VN4hJE2eNf1o\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol\":{\"keccak256\":\"0x6d4bb208587872ad563fef31655c44f7de03baa5b4a513910c0003aea0c04036\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://880c3b21e2090a14e7bba94ac5c8d4633e8a81d93c6f619454167a01dcc866d8\",\"dweb:/ipfs/QmZp6YVM4Eor5XtuXXqGRaPAJ3u5KCmLwuNRAGf4JY7sK1\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol\":{\"keccak256\":\"0x75a0159f76a3c5bf26b13aa404aca2f588ea41928eb1483683e29d2031fe5abf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f1b93e7eb5a88a2f42a9dfa061ca5e93e7650cd9114010faa18faf0a5508f579\",\"dweb:/ipfs/QmXmLhf1ejsF7G1FZnvpTBRS9oQ9ZTuqCBRT1im3vAuUYW\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol\":{\"keccak256\":\"0x4536ed09238f33ca9d40ed2e7c6254aac84bf81010b3524711524ae7fd30227c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://abaed57358cb811d3b368d52f66db3c1327b96c38301d6eccf2ffaa6d5fa5928\",\"dweb:/ipfs/QmS1FtQH4Gn6xYrHCTHWJwxgAURvGvvfypsuQ2rRhrkPgi\"]},\"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@lukso/lsp4-contracts/contracts/LSP4Constants.sol\":{\"keccak256\":\"0xdf9b7c688d39a92cb3238136a9f56554245d5ae9b6568dcd6164d0e15c6f56c7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bb36a427cdfa0f394d2d78014f85152ab383499fc3c3d6285d4b801c656e7c3f\",\"dweb:/ipfs/QmZJehfeWKfHLyZLufhs9u4ZyVztGCUNWXzFgfZSU837vU\"]},\"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol\":{\"keccak256\":\"0x6a718979925b05064c15e4de4b376dadec8d107d720aa762d22a06e44ed67fa4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c82f6c8133c4d35d8cbbfc4da647204989acc5f38980be787263881e9f732f5\",\"dweb:/ipfs/QmdhHBnJvvo4Ax183HgHkL7w5A4w3ADXDQuewocnTVqsW6\"]},\"@lukso/lsp4-contracts/contracts/LSP4Errors.sol\":{\"keccak256\":\"0x3db7fd252ed02ce27686141125c3d65d3ff682a32601e1e8611becd9357a57b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5aded62a160ed7f9860996004d1656e8592b3f97d478d8597f8ad6afbe4f34b7\",\"dweb:/ipfs/QmcnmLVt8cmz1iRNaX5c6iNYckRgUXGz8YkjHW9T1KNB5A\"]},\"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x2ca5a81c6c006030e2204d2a9997b15e954bc0696959c051a570c8a19eac4786\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bef5bbbad59c2dbd09e9e80ffe2dcf6dc3da5101d4f4b8beedcb0245d04b7b8a\",\"dweb:/ipfs/QmQYeCHfTtCTQVpy36De1d1vFacvbjTNipxDRNWuCQPNo6\"]},\"@lukso/lsp8-contracts/contracts/LSP8Constants.sol\":{\"keccak256\":\"0xe958d7d5ab694eb054df65ef6fb37864ff9da33604a28a14ca42e25c23629065\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://41f8b02e4c05b6eb3cfc447dae5862e38ba100269c56bb8d23ab26255085a41e\",\"dweb:/ipfs/QmVgeWYBovEJR1Xqph5AuJoP5EizSuY77gUUDmt48wmgWm\"]},\"@lukso/lsp8-contracts/contracts/LSP8Errors.sol\":{\"keccak256\":\"0xff2c1791043272eb4a7c05bc77fa0a0234678991b0700f84d92edbd31fefd905\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://72b32242e8a4b7c12355de3f1c463437a81d8d5f8d34b3a8d25d726340b891c0\",\"dweb:/ipfs/Qmbhz53zdudSQbPwES2qMHqLHaph4GhigNETC481VWwK6J\"]},\"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x1f707425bbcd5a84c7de2ad8ba9c2f620617b5f6483074c27ad6f259d91b7dd2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://799901e6bb5e3465a610d88dd4d314bac0aa787e8aaffd69e960e3e0975bda60\",\"dweb:/ipfs/QmVtLccrrEmvJuMiTFDrbxFuBQcSR8u9St14jXtFB9tmE8\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Base64.sol":{"Base64":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220900e637863f6dffd86e79cb6d123b6df47ce90b178ee650fa9fb53d73cdeafa664736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0xE PUSH4 0x7863F6DF REVERT DUP7 0xE7 SWAP13 0xB6 0xD1 0x23 0xB6 0xDF SELFBALANCE 0xCE SWAP1 0xB1 PUSH25 0xEE650FA9FB53D73CDEAFA664736F6C63430008140033000000 ","sourceMap":"231:3658:21:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220900e637863f6dffd86e79cb6d123b6df47ce90b178ee650fa9fb53d73cdeafa664736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0xE PUSH4 0x7863F6DF REVERT DUP7 0xE7 SWAP13 0xB6 0xD1 0x23 0xB6 0xDF SELFBALANCE 0xCE SWAP1 0xB1 PUSH25 0xEE650FA9FB53D73CDEAFA664736F6C63430008140033000000 ","sourceMap":"231:3658:21:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to operate with Base64 strings. _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_TABLE\":{\"details\":\"Base64 Encoding/Decoding Table\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Base64.sol\":\"Base64\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Base64.sol\":{\"keccak256\":\"0x822fe67e9e671773d29c8182e7287b42edf5f575eab1eb98558d5ccbdff61c96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce73cb57d5a2e705a0a65cac2ed73ab2fa91932e8af22b7ec1a6a3d88f28669\",\"dweb:/ipfs/QmcbjWFekUTsNeoFwGgUT4xtXoVzsA38ca9pkC4jxvxy7L\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212208ac13cdd8d0521d52154beaad57d8f3cc20a79075a6c37c2dade85202f447f3264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xC1 EXTCODECOPY 0xDD DUP14 SDIV 0x21 0xD5 0x21 SLOAD 0xBE 0xAA 0xD5 PUSH30 0x8F3CC20A79075A6C37C2DADE85202F447F3264736F6C6343000814003300 ","sourceMap":"220:2559:23:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212208ac13cdd8d0521d52154beaad57d8f3cc20a79075a6c37c2dade85202f447f3264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xC1 EXTCODECOPY 0xDD DUP14 SDIV 0x21 0xD5 0x21 SLOAD 0xBE 0xAA 0xD5 PUSH30 0x8F3CC20A79075A6C37C2DADE85202F447F3264736F6C6343000814003300 ","sourceMap":"220:2559:23:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol":{"ERC165Checker":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212203bcef82d9d6e3cf4670816992dc3a365604486609a06d34b5559f29e9acbb81664736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0xCE 0xF8 0x2D SWAP14 PUSH15 0x3CF4670816992DC3A365604486609A MOD 0xD3 0x4B SSTORE MSIZE CALLCODE SWAP15 SWAP11 0xCB 0xB8 AND PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"449:4621:25:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212203bcef82d9d6e3cf4670816992dc3a365604486609a06d34b5559f29e9acbb81664736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0xCE 0xF8 0x2D SWAP14 PUSH15 0x3CF4670816992DC3A365604486609A MOD 0xD3 0x4B SSTORE MSIZE CALLCODE SWAP15 SWAP11 0xCB 0xB8 AND PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"449:4621:25:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library used to query support of an interface declared via {IERC165}. Note that these functions return the actual result of the query: they do not `revert` if an interface is not supported. It is up to the caller to decide what to do in these cases.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":\"ERC165Checker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202c61f610e9c1d5dd1dbeab6d1c20fa76cb476724e8847172e46a6a98b671477564736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C PUSH2 0xF610 0xE9 0xC1 0xD5 0xDD SAR 0xBE 0xAB PUSH14 0x1C20FA76CB476724E8847172E46A PUSH11 0x98B671477564736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"202:12582:27:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212202c61f610e9c1d5dd1dbeab6d1c20fa76cb476724e8847172e46a6a98b671477564736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C PUSH2 0xF610 0xE9 0xC1 0xD5 0xDD SAR 0xBE 0xAB PUSH14 0x1C20FA76CB476724E8847172E46A PUSH11 0x98B671477564736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"202:12582:27:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212205aa40068d9bff08ee52013b97ffaa925adb46080ffcb0daae07ef26457fe238d64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS LOG4 STOP PUSH9 0xD9BFF08EE52013B97F STATICCALL 0xA9 0x25 0xAD 0xB4 PUSH1 0x80 SELFDESTRUCT 0xCB 0xD 0xAA 0xE0 PUSH31 0xF26457FE238D64736F6C634300081400330000000000000000000000000000 ","sourceMap":"215:1047:28:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212205aa40068d9bff08ee52013b97ffaa925adb46080ffcb0daae07ef26457fe238d64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS LOG4 STOP PUSH9 0xD9BFF08EE52013B97F STATICCALL 0xA9 0x25 0xAD 0xB4 PUSH1 0x80 SELFDESTRUCT 0xCB 0xD 0xAA 0xE0 PUSH31 0xF26457FE238D64736F6C634300081400330000000000000000000000000000 ","sourceMap":"215:1047:28:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212206e4bb122fc640936c68799c18a712edca7254ff30bfd0f1575575b3d37556ba764736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x4BB122FC640936C68799C18A712EDC 0xA7 0x25 0x4F RETURN SIGNEXTEND REVERT 0xF ISZERO PUSH22 0x575B3D37556BA764736F6C6343000814003300000000 ","sourceMap":"1329:11630:29:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212206e4bb122fc640936c68799c18a712edca7254ff30bfd0f1575575b3d37556ba764736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x4BB122FC640936C68799C18A712EDC 0xA7 0x25 0x4F RETURN SIGNEXTEND REVERT 0xF ISZERO PUSH22 0x575B3D37556BA764736F6C6343000814003300000000 ","sourceMap":"1329:11630:29:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"contracts/standalone/LSP8LoogiesEnhanced.sol":{"IERC725Y":{"abi":[{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getData(bytes32)":"54f6127f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/standalone/LSP8LoogiesEnhanced.sol\":\"IERC725Y\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@erc725/smart-contracts-v8/contracts/ERC725Y.sol\":{\"keccak256\":\"0x209d6b52eb0d5dcb8c180773dd67e507f603c98ede7e5a64457752159a52ad3d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dbfa427c80ba998d30c721fb41795502d19aa09acb8e1f59f6982d080f029692\",\"dweb:/ipfs/QmPQXeYEU7kaDtskZ1ha2umRuGSrFTfXfpyiGgBSQfwZBn\"]},\"@erc725/smart-contracts-v8/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts-v8/contracts/errors.sol\":{\"keccak256\":\"0x198fece17fcfec61d40d3453ebbaa49760968ea8caa128dd5314a12b98ecec66\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5e705131b03cf4167ff312e7ebaa679cf56c22b01de518dfa4d2163d7e1ddb8b\",\"dweb:/ipfs/QmbH8q7MgrR7fJm1QEmYoKcnZCxWwejt4Jum2DUYmLJAGA\"]},\"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x943d0f67d6455cfb1bed5d1fb77995df0b202ecdbb028fa0e85bc26bcd3219a5\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c3b8b0daa2fed9c0513444120b87beec7c2b102eadbcbeccae73ece67819a658\",\"dweb:/ipfs/QmaSb9Xhma6UwhK1FosJtbP8EkBn8i9PTcLKg5FU1VAJSH\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x72dd4f342e059edd246032d2cd2e45707453ceb27c187161e31af345d058dced\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9a8fb9c285da565984f6a168ecee00a647b988a829c218813e9d2e007b28b48d\",\"dweb:/ipfs/QmbXznWjhZPLXWF6NJAyVKD8ZReSWZaJyRdYZMLWaQHZWa\"]},\"@lukso/lsp1-contracts/contracts/LSP1Constants.sol\":{\"keccak256\":\"0x0f87fc38243fc70316e22814f5a79d9c0770a39f64077cbc6fb5fddfa1d4c23c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7d83f054b71dfa5ca48a9a811e6a985ff6b38a9e5f4c220ea2ec3a322cce7cf\",\"dweb:/ipfs/QmaehpHpqc5dtRCm9BoU8vCY59AeEnmGvmmwPirVr47oGp\"]},\"@lukso/lsp1-contracts/contracts/LSP1Utils.sol\":{\"keccak256\":\"0x7dd32ff416b7275c5dbb8daa39c0f13bb1b4db2df8132221fc07619dbfe08cd0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fc3eaaa85cb6e14939417ba73729e65722f95c9db714bfda173a438fc2ce771d\",\"dweb:/ipfs/QmTg39yTVneeptAGBDTfGJfYrQMXJ153Y7VN4hJE2eNf1o\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol\":{\"keccak256\":\"0x6d4bb208587872ad563fef31655c44f7de03baa5b4a513910c0003aea0c04036\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://880c3b21e2090a14e7bba94ac5c8d4633e8a81d93c6f619454167a01dcc866d8\",\"dweb:/ipfs/QmZp6YVM4Eor5XtuXXqGRaPAJ3u5KCmLwuNRAGf4JY7sK1\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol\":{\"keccak256\":\"0x75a0159f76a3c5bf26b13aa404aca2f588ea41928eb1483683e29d2031fe5abf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f1b93e7eb5a88a2f42a9dfa061ca5e93e7650cd9114010faa18faf0a5508f579\",\"dweb:/ipfs/QmXmLhf1ejsF7G1FZnvpTBRS9oQ9ZTuqCBRT1im3vAuUYW\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol\":{\"keccak256\":\"0x4536ed09238f33ca9d40ed2e7c6254aac84bf81010b3524711524ae7fd30227c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://abaed57358cb811d3b368d52f66db3c1327b96c38301d6eccf2ffaa6d5fa5928\",\"dweb:/ipfs/QmS1FtQH4Gn6xYrHCTHWJwxgAURvGvvfypsuQ2rRhrkPgi\"]},\"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@lukso/lsp4-contracts/contracts/LSP4Constants.sol\":{\"keccak256\":\"0xdf9b7c688d39a92cb3238136a9f56554245d5ae9b6568dcd6164d0e15c6f56c7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bb36a427cdfa0f394d2d78014f85152ab383499fc3c3d6285d4b801c656e7c3f\",\"dweb:/ipfs/QmZJehfeWKfHLyZLufhs9u4ZyVztGCUNWXzFgfZSU837vU\"]},\"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol\":{\"keccak256\":\"0x6a718979925b05064c15e4de4b376dadec8d107d720aa762d22a06e44ed67fa4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c82f6c8133c4d35d8cbbfc4da647204989acc5f38980be787263881e9f732f5\",\"dweb:/ipfs/QmdhHBnJvvo4Ax183HgHkL7w5A4w3ADXDQuewocnTVqsW6\"]},\"@lukso/lsp4-contracts/contracts/LSP4Errors.sol\":{\"keccak256\":\"0x3db7fd252ed02ce27686141125c3d65d3ff682a32601e1e8611becd9357a57b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5aded62a160ed7f9860996004d1656e8592b3f97d478d8597f8ad6afbe4f34b7\",\"dweb:/ipfs/QmcnmLVt8cmz1iRNaX5c6iNYckRgUXGz8YkjHW9T1KNB5A\"]},\"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x2ca5a81c6c006030e2204d2a9997b15e954bc0696959c051a570c8a19eac4786\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bef5bbbad59c2dbd09e9e80ffe2dcf6dc3da5101d4f4b8beedcb0245d04b7b8a\",\"dweb:/ipfs/QmQYeCHfTtCTQVpy36De1d1vFacvbjTNipxDRNWuCQPNo6\"]},\"@lukso/lsp8-contracts/contracts/LSP8Constants.sol\":{\"keccak256\":\"0xe958d7d5ab694eb054df65ef6fb37864ff9da33604a28a14ca42e25c23629065\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://41f8b02e4c05b6eb3cfc447dae5862e38ba100269c56bb8d23ab26255085a41e\",\"dweb:/ipfs/QmVgeWYBovEJR1Xqph5AuJoP5EizSuY77gUUDmt48wmgWm\"]},\"@lukso/lsp8-contracts/contracts/LSP8Errors.sol\":{\"keccak256\":\"0xff2c1791043272eb4a7c05bc77fa0a0234678991b0700f84d92edbd31fefd905\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://72b32242e8a4b7c12355de3f1c463437a81d8d5f8d34b3a8d25d726340b891c0\",\"dweb:/ipfs/Qmbhz53zdudSQbPwES2qMHqLHaph4GhigNETC481VWwK6J\"]},\"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x1f707425bbcd5a84c7de2ad8ba9c2f620617b5f6483074c27ad6f259d91b7dd2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://799901e6bb5e3465a610d88dd4d314bac0aa787e8aaffd69e960e3e0975bda60\",\"dweb:/ipfs/QmVtLccrrEmvJuMiTFDrbxFuBQcSR8u9St14jXtFB9tmE8\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/utils/Base64.sol\":{\"keccak256\":\"0x822fe67e9e671773d29c8182e7287b42edf5f575eab1eb98558d5ccbdff61c96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce73cb57d5a2e705a0a65cac2ed73ab2fa91932e8af22b7ec1a6a3d88f28669\",\"dweb:/ipfs/QmcbjWFekUTsNeoFwGgUT4xtXoVzsA38ca9pkC4jxvxy7L\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"contracts/standalone/LSP8LoogiesEnhanced.sol\":{\"keccak256\":\"0xd0c8a4fb35197b420b295d198409055cfc82ff98764878a30a60609d31336f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4eaa152dbe1f6f784f091b9aff3f3faba6472796a608b022a39f00587dc6b4b\",\"dweb:/ipfs/QmUo1QHrHNT5ELy6HvrmJk48V7aN7EHtP1FJrpiknCJipX\"]}},\"version\":1}"},"LSP8LoogiesEnhanced":{"abi":[{"inputs":[{"internalType":"address","name":"contractOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ERC725Y_DataKeysValuesEmptyArray","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesLengthMismatch","type":"error"},{"inputs":[],"name":"ERC725Y_MsgValueDisallowed","type":"error"},{"inputs":[{"internalType":"bytes","name":"storedData","type":"bytes"}],"name":"InvalidExtensionAddress","type":"error"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"InvalidFunctionSelector","type":"error"},{"inputs":[],"name":"LSP4TokenNameNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenSymbolNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenTypeNotEditable","type":"error"},{"inputs":[{"internalType":"uint256","name":"callIndex","type":"uint256"}],"name":"LSP8BatchCallFailed","type":"error"},{"inputs":[],"name":"LSP8CannotSendToAddressZero","type":"error"},{"inputs":[],"name":"LSP8CannotUseAddressZeroAsOperator","type":"error"},{"inputs":[],"name":"LSP8InvalidTransferBatch","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8NonExistentTokenId","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8NonExistingOperator","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"address","name":"caller","type":"address"}],"name":"LSP8NotTokenOperator","type":"error"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"address","name":"caller","type":"address"}],"name":"LSP8NotTokenOwner","type":"error"},{"inputs":[{"internalType":"address","name":"tokenReceiver","type":"address"}],"name":"LSP8NotifyTokenReceiverContractMissingLSP1Interface","type":"error"},{"inputs":[{"internalType":"address","name":"tokenReceiver","type":"address"}],"name":"LSP8NotifyTokenReceiverIsEOA","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8OperatorAlreadyAuthorized","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8RevokeOperatorNotAuthorized","type":"error"},{"inputs":[],"name":"LSP8TokenContractCannotHoldValue","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8TokenIdAlreadyMinted","type":"error"},{"inputs":[],"name":"LSP8TokenIdFormatNotEditable","type":"error"},{"inputs":[],"name":"LSP8TokenIdsDataEmptyArray","type":"error"},{"inputs":[],"name":"LSP8TokenIdsDataLengthMismatch","type":"error"},{"inputs":[],"name":"LSP8TokenOwnerCannotBeOperator","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"address","name":"oldOwner","type":"address"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"LSP8TokenOwnerChanged","type":"error"},{"inputs":[{"internalType":"bytes4","name":"functionSelector","type":"bytes4"}],"name":"NoExtensionFoundForFunctionSelector","type":"error"},{"inputs":[],"name":"OwnableCannotSetZeroAddressAsOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorAuthorizationChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"notified","type":"bool"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"TokenIdDataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"force","type":"bool"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"string","name":"username","type":"string"}],"name":"UsernameUpdated","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"MAX_MINTABLE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_SUPPLY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PRICE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"authorizeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"batchCalls","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}],"name":"bytes32ToHexString","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"chubbiness","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"color","outputs":[{"internalType":"bytes3","name":"","type":"bytes3"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"generateCollectionSVG","outputs":[{"internalType":"string","name":"svg","type":"string"},{"internalType":"string","name":"encodedSvg","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"string","name":"loogieType","type":"string"},{"internalType":"bytes3","name":"colorValue","type":"bytes3"},{"internalType":"uint256","name":"chubbinessValue","type":"uint256"},{"internalType":"uint256","name":"mouthLengthValue","type":"uint256"},{"internalType":"string","name":"username","type":"string"},{"internalType":"bool","name":"isUP","type":"bool"}],"name":"generateLoogieSVG","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"limit","type":"uint256"}],"name":"getCollectionMetadataBytes","outputs":[{"internalType":"bytes","name":"raw","type":"bytes"},{"internalType":"bytes","name":"encoded","type":"bytes"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatchForTokenIds","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getDataForTokenId","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"string","name":"loogieTypeValue","type":"string"},{"internalType":"bytes3","name":"colorBytes","type":"bytes3"},{"internalType":"uint256","name":"chubbiness","type":"uint256"},{"internalType":"uint256","name":"mouthLength","type":"uint256"},{"internalType":"string","name":"username","type":"string"},{"internalType":"bool","name":"isUP","type":"bool"}],"name":"getMetadataBytes","outputs":[{"internalType":"bytes","name":"raw","type":"bytes"},{"internalType":"bytes","name":"encoded","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"getOperatorsOf","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"isOperatorFor","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"loogieTypes","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mintItem","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"string","name":"_username","type":"string"}],"name":"mintItemWithUsername","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"mintedPerAddress","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"mouthLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"publicMintSet","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"recipient","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"notify","type":"bool"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"revokeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatchForTokenIds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setDataForTokenId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_publicMintSet","type":"bool"}],"name":"setMintStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"string","name":"username","type":"string"}],"name":"setUsername","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes3","name":"_color","type":"bytes3"}],"name":"toColorHexString","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"tokenIdsOf","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"tokenOwnerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenSupplyCap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"force","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"from","type":"address[]"},{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"bytes32[]","name":"tokenId","type":"bytes32[]"},{"internalType":"bool[]","name":"force","type":"bool[]"},{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"transferBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_i","type":"uint256"}],"name":"uint2str","outputs":[{"internalType":"string","name":"_uintAsString","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"upUsernames","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"_to","type":"address"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"abi_encode_bytes":{"entryPoint":6140,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_string":{"entryPoint":5831,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_bytes_storage":{"entryPoint":6064,"id":null,"parameterSlots":3,"returnSlots":0},"clear_storage_range_bytes1":{"entryPoint":6039,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5941,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":5978,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":5795,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_23392":{"entryPoint":5767,"id":null,"parameterSlots":1,"returnSlots":0},"fun_encode":{"entryPoint":6295,"id":3833,"parameterSlots":1,"returnSlots":1},"fun_transferOwnership":{"entryPoint":6186,"id":3721,"parameterSlots":1,"returnSlots":0},"fun_uint2str":{"entryPoint":6715,"id":6286,"parameterSlots":0,"returnSlots":1},"increment_uint256":{"entryPoint":6257,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_string_dyn":{"entryPoint":5890,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_string_dyn_10256":{"entryPoint":5859,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_string_dyn_10259":{"entryPoint":5873,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_string_dyn_10265":{"entryPoint":5907,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_string_dyn_10268":{"entryPoint":5924,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"608080604052346200168257602081620078f08038038091620000238285620016a3565b8339810103126200168257516001600160a01b038116808203620016825760405191620000508362001687565b600c83526b4c756b736f4c6f6f6769657360a01b602084015260405191620000788362001687565b60078352664c554b4c4f4f4760c81b602084015262000097336200182a565b156200167057620000a8906200182a565b604051620000b68162001687565b60048152632936598960e21b60208201527feafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c908160005260016020526040600020815160018060401b038111620007ae576200011f816200011884546200175a565b84620017b0565b6020601f82116001146200160b579181600080516020620078d08339815191529492620001709460009162001441575b508160011b916000199060031b1c19161790555b60405191829182620017fc565b0390a26000805160206200787083398151915260005260016020528151917f2a367ae1ac46d529739aa27ac74856f860e70af05d3642d18ba60fd5d32a069a6001600160401b038411620007ae57620001d684620001cf83546200175a565b83620017b0565b602093601f8111600114620015965791620002379183600080516020620078d0833981519152946000805160206200787083398151915296976000916200144157508160011b916000199060031b1c191617905560405191829182620017fc565b0390a27f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db932756600081905260016020528151917f83b322886c7b7e25779e5d38e06e005c9e7aba1e1267ce9210cf24e31833535a6001600160401b038411620007ae57620002a984620001cf83546200175a565b602093601f811160011462001531579081620002fa9392600080516020620078d083398151915295966000916200144157508160011b916000199060031b1c191617905560405191829182620017fc565b0390a26040516002602082015260208152620003168162001687565b7fe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb3600081905260016020528151917ff73b01b344a9bb3b96525b0cb731f6b14cde20ce6cecea8459266944490b411f6001600160401b038411620007ae576200038584620001cf83546200175a565b602093601f8111600114620014cc579081620003d69392600080516020620078d083398151915295966000916200144157508160011b916000199060031b1c191617905560405191829182620017fc565b0390a26040516000602082015260208152620003f28162001687565b7ff675e9361af1c1664c1868cfa3eb97672d6b1a513aa5b81dec34c9ee330e818d600081905260016020528151917f01f5eb934e794ddcc86b89a579078013860f8fe92140885511742594f219ad0b6001600160401b038411620007ae576200046184620001cf83546200175a565b602093601f81116001146200144d579081620004b29392600080516020620078d083398151915295966000916200144157508160011b916000199060031b1c191617905560405191829182620017fc565b0390a26001600755600e805460ff1916905560405160c081016001600160401b03811182821017620007ae576040526005815260005b60a081106200142f5750604051620005008162001687565b600581526433b932b2b760d91b60208201526200051d82620016e3565b526200052981620016e3565b50604051620005388162001687565b6004815263626c756560e01b60208201526200055482620016f1565b526200056081620016f1565b506040516200056f8162001687565b60038152621c995960ea1b60208201526200058a8262001702565b52620005968162001702565b50604051620005a58162001687565b6006815265707572706c6560d01b6020820152620005c38262001713565b52620005cf8162001713565b50604051620005de8162001687565b600681526579656c6c6f7760d01b6020820152620005fc8262001724565b52620006088162001724565b50604051620006178162001687565b6005815264747970657360d81b602082015260405160005b600581106200141b575080600660056025930152208054906000815581620013a5575b5050906000915b8151831015620007da5760405160208183516200067a818385880162001735565b81016006815203019020928251811015620007c45760208160051b840101519380549068010000000000000000821015620007ae5760018201808255821015620007c45760005260206000200184519460018060401b038611620007ae57620006e9866200011884546200175a565b602090601f87116001146200073957958091620007259596976000926200072d575b50508160011b916000199060031b1c191617905562001871565b919062000659565b0151905038806200070b565b908260005260206000209160005b601f198916811062000795575091879160019362000725979899601f198116106200077b575b505050811b01905562001871565b015160001960f88460031b161c191690553880806200076d565b9192602060018192868501518155019401920162000747565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b604080517f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323060208201527f30302f737667222077696474683d2234303022206865696768743d2234303022918101919091527f2076696577426f783d223020302034303020343030223e00000000000000000060608201527f3c726563742077696474683d2234303022206865696768743d2234303022206660778201526b34b6361e911198181811179f60a11b6097820152711e3334b63a32b91034b21e9133b637bb911f60711b60a38201527f3c6665476175737369616e426c757220737464446576696174696f6e3d22332e60b5820152711a91103932b9bab63a1e9131363ab911179f60711b60d58201527f3c6665436f6d706f7369746520696e3d22536f7572636547726170686963222060e78201527f696e323d22626c757222206f70657261746f723d226f766572222f3e00000000610107820152681e17b334b63a32b91f60b91b6101238201527f3c7465787420783d223230302220793d223138302220666f6e742d66616d696c61012c8201527f793d22417269616c2220666f6e742d73697a653d223430222066696c6c3d222361014c8201527f6666662220746578742d616e63686f723d226d6964646c65222066696c74657261016c8201527f3d2275726c2823676c6f7729223e4c756b736f4c6f6f676965733c2f7465787461018c820152601f60f91b6101ac8201527f3c7465787420783d223230302220793d223233302220666f6e742d66616d696c6101ad8201527f793d22417269616c2220666f6e742d73697a653d223230222066696c6c3d22236101cd8201527f3066302220746578742d616e63686f723d226d6964646c65222066696c7465726101ed8201527f3d2275726c2823676c6f7729223e4d61747269782045646974696f6e3c2f746561020d820152623c3a1f60e91b61022d820152651e17b9bb339f60d11b61023082015261021681526102408101906001600160401b03821181831017620007ae5762000ad59160405262001897565b62000fa8604860405162000b33603a8260208101967f646174613a696d6167652f7376672b786d6c3b6261736536342c000000000000885262000b22815180926020868601910162001735565b810103601a810184520182620016a3565b62000f0361027e62000b4462001a3b565b9262000b4f62001a3b565b6040519788926020840196707b224c5350344d65746164617461223a7b60781b88527f226e616d65223a224c756b736f4c6f6f67696573222c0000000000000000000060318601527f226465736372697074696f6e223a224c756b736f4c6f6f67696573206172652060478601527f4c554b534f205374616e64617264204c535038204e465473207769746820612060678601526d039b6b4b632901d149027b7363c960951b608786015262000c1081518092602060958901910162001735565b8401907f204c756b736f4c6f6f6769657320617661696c61626c65206f6e20612070726960958301527f636520637572766520696e6372656173696e6720302e3225207769746820656160b58301527f6368206e6577206d696e742e2054686973204d61747269782045646974696f6e60d58301527f20666561747572657320616e696d61746564204d61747269782d7374796c652060f58301527f64657369676e7320666f722065616368204c6f6f6769652e222c0000000000006101158301527f226c696e6b73223a5b7b227469746c65223a2257656273697465222c2275726c61012f8301527f223a2268747470733a2f2f6c756b736f6c6f6f676965732e76657263656c2e6161014f8301527f7070227d2c7b227469746c65223a2254776974746572222c2275726c223a226861016f8301527f747470733a2f2f747769747465722e636f6d2f6c756b736f4c6f6f676965732261018f830152621f574b60ea1b6101af8301527f22696d61676573223a5b5b7b227769647468223a3430302c22686569676874226101b28301526b1d1a181816113ab936111d1160a11b6101d2830152519062000dcd826101de948584019062001735565b019064089f57574b60da1b908201526d2261747472696275746573223a5b60901b6101e38201527f7b226b6579223a2274797065222c2276616c7565223a22636f6c6c656374696f6101f18201527f6e222c2274797065223a22737472696e67227d2c0000000000000000000000006102118201527f7b226b6579223a226c696d6974222c2276616c7565223a00000000000000000061022582015281519062000e828261023c946020868501910162001735565b710b089d1e5c19488e889b9d5b58995c889f4b60721b9101918201527f7b226b6579223a226375727665222c2276616c7565223a3130302e322c22747961024e8201526c7065223a226e756d626572227d60981b61026e820152605d60f81b61027b820152617d7d60f01b61027c8201520361025e810187520185620016a3565b62000f0e8462001897565b906040519462000f68603d8760208101957f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000875262000f57815180926020868601910162001735565b810103601d810189520187620016a3565b5190209062000f97604051958693650379abe3500160c51b602086015260288501525180928585019062001735565b8101036028810184520182620016a3565b60008051602062007890833981519152600052600160205280517fce0cb05d718cbac69f1841ea88f1ecbbd18b24f05ba47c3a562737c9f52148f3906001600160401b038111620007ae5762001004816200011884546200175a565b6020601f82116001146200132e5792600080516020620078d08339815191529282620010639360008051602062007890833981519152966000916200122b57508160011b916000199060031b1c191617905560405191829182620017fc565b0390a2604051610e90602082015260208152620010808162001687565b600080516020620078b0833981519152600052600160205280517f4cbd1f2d64c647609fa4bdd3a58236f5de1700b67ad10769949e53a351c3ea31906001600160401b038111620007ae57620010dc816200011884546200175a565b6020601f8211600114620012b75792600080516020620078d083398151915292826200113b93600080516020620078b0833981519152966000916200122b57508160011b916000199060031b1c191617905560405191829182620017fc565b0390a2604051610e90602082015260208152620011588162001687565b7fd28c95357cf4c94d638a4f572d5d3df8d7e1415c8b650e747a219c559d1435c8600081905260016020528151917f9613c0adfc28e5910313e791ad5ae672b5566422415144580003dc3ff108dd2d6001600160401b038411620007ae57620011c784620001cf83546200175a565b602093601f811160011462001237579081620012189392600080516020620078d083398151915295966000916200122b57508160011b916000199060031b1c191617905560405191829182620017fc565b0390a2604051615d69908162001b078239f35b9050830151876200014f565b601f1981168260005260206000209060005b8181106200129e575091600191600080516020620078d0833981519152969782620012189796951062001284575b5050811b01905562000163565b85015160001960f88460031b161c19169055878062001277565b8588015183556020978801976001909301920162001249565b8260005260206000209060005b601f198416811062001315575092600183600080516020620078b08339815191529693600080516020620078d0833981519152966200113b96601f1981161062001284575050811b01905562000163565b90916020600181928589015181550193019101620012c4565b8260005260206000209060005b601f19841681106200138c575092600183600080516020620078908339815191529693600080516020620078d0833981519152966200106396601f1981161062001284575050811b01905562000163565b909160206001819285890151815501930191016200133b565b6000526020600020908101905b81811015620006525780620013ca600192546200175a565b80620013d9575b5001620013b2565b601f81118314620013f15750600081555b38620013d1565b60009082825262001411601f60208420920160051c820185830162001797565b81835555620013ea565b80602080928501015181840152016200062f565b806060602080938501015201620004e8565b9050830151386200014f565b601f1981168260005260206000209060005b818110620014b3575091600191600080516020620078d0833981519152969782620004b29796951062001499575050811b01905562000163565b85015160001960f88460031b161c19169055388062001277565b858801518355602097880197600190930192016200145f565b601f1981168260005260206000209060005b81811062001518575091600191600080516020620078d0833981519152969782620003d69796951062001499575050811b01905562000163565b85880151835560209788019760019093019201620014de565b601f1981168260005260206000209060005b8181106200157d575091600191600080516020620078d0833981519152969782620002fa9796951062001499575050811b01905562000163565b8588015183556020978801976001909301920162001543565b601f1981168260005260206000209060005b818110620015f2575082620002379492600080516020620078708339815191529798600080516020620078d083398151915297956001941062001499575050811b01905562000163565b85880151835560209788019760019093019201620015a8565b601f198216908360005260206000209160005b8181106200165757509262000170949260019282600080516020620078d083398151915298961062001499575050811b01905562000163565b9192602060018192868a0151815501940192016200161e565b6040516306b620db60e21b8152600490fd5b600080fd5b604081019081106001600160401b03821117620007ae57604052565b601f909101601f19168101906001600160401b03821190821017620007ae57604052565b6001600160401b038111620007ae57601f01601f191660200190565b805115620007c45760200190565b805160011015620007c45760400190565b805160021015620007c45760600190565b805160031015620007c45760800190565b805160041015620007c45760a00190565b60005b838110620017495750506000910152565b818101518382015260200162001738565b90600182811c921680156200178c575b60208310146200177657565b634e487b7160e01b600052602260045260246000fd5b91607f16916200176a565b818110620017a3575050565b6000815560010162001797565b9190601f8111620017c057505050565b620017ef926000526020600020906020601f840160051c83019310620017f1575b601f0160051c019062001797565b565b9091508190620017e1565b604091602082526200181e815180928160208601526020868601910162001735565b601f01601f1916010190565b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3565b6000198114620018815760010190565b634e487b7160e01b600052601160045260246000fd5b80511562001a165760405190606082016001600160401b03811183821017620007ae57604052604082527f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208301527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f60408301528051600291828201809211620018815760039182900480841b94906001600160fe1b03811603620018815792620019616200194886620016c7565b95620019586040519788620016a3565b808752620016c7565b6020860190601f190136823793829183518401906020820192835194600085525b838110620019c4575050505052510680600114620019b157600214620019a6575090565b603d90600019015390565b50603d9081600019820153600119015390565b87600491999293949901918251600190603f9082828260121c16880101518453828282600c1c16880101518385015382828260061c168801015188850153168501015189820153019792919062001982565b50604051602081016001600160401b03811182821017620007ae576040526000815290565b6000610e90805b62001aef575062001a5381620016c7565b9062001a636040519283620016a3565b808252601f1962001a7482620016c7565b0190602091368385013790610e90805b62001a8f5750505090565b600a9060309382820685018095116200188157801562001881576000190180948651821015620007c45760f81b7fff000000000000000000000000000000000000000000000000000000000000001660001a908601840153048062001a84565b9062001afd600a9162001871565b91048062001a4256fe6080604052600436101561002a575b36156100255761001d366120ec565b602081519101f35b612138565b60003560e01c8063017c96b81461031557806301ffc9a71461031057806316e023b31461030b57806318160ddd146103065780631d26fce6146103015780631ead90b0146102fc5780631ef0352d146102f75780631f85e3ca146102f2578063217b2270146102ed5780632a3654a4146102e857806332cb6b0c146102c55780633be699f9146102e35780633f879faf146102de578063472dfcfb146102d957806349a6078d146102d4578063511b6952146102cf57806351cff8d9146102ca57806352058d8a146102c557806354f6127f146102c05780635a9c2b1c146102bb5780636643a686146102b657806366d003ac146102b15780636963d438146102ac57806370a08231146102a7578063715018a6146102a2578063767991361461029d5780637e87632c146102985780637f23690c146102935780638528247f1461028e57806386a10ddd146102895780638cda5103146102845780638d859f3e1461027f5780638da5cb5b1461027a5780639790242114610275578063a3b261f214610270578063ad30ddbf1461026b578063be9f0e6f14610266578063c65eb18014610261578063c68b37871461025c578063d445b97814610257578063d6c1407c14610252578063db8c96631461024d578063dedff9c614610248578063eb93406b14610243578063f2fde38b1461023e578063f3ba2059146102395763f76f950e0361000e57612035565b611e81565b611dba565b611c66565b611bdf565b611ade565b611a98565b611a5b565b6119a6565b611970565b611881565b611861565b6117e1565b61171d565b6116f4565b6116d1565b6112d0565b61114f565b611122565b611037565b610f9e565b610e1d565b610dbf565b610d82565b610d1d565b610cee565b610cc2565b610c9f565b610c80565b610992565b610c2a565b610bc6565b610b1c565b610adf565b6109f3565b6109af565b61095d565b61091c565b6108e2565b61076f565b6106d6565b61060d565b61048b565b610455565b610346565b3461034157602036600319011261034157600435600052600b6020526020604060002054604051908152f35b600080fd5b34610341576020366003190112610341576004356001600160e01b031981168082036103415761039d91631d138b8360e11b82149182156103b1575b5081156103a1575b5060405190151581529081906020820190565b0390f35b6103ab915061234f565b3861038a565b90915063a918fa6b60e01b81149081156103ce575b509038610382565b6318a6a9a560e21b8114915081156103e8575b50386103c6565b6301ffc9a760e01b149050386103e1565b60005b83811061040c5750506000910152565b81810151838201526020016103fc565b90602091610435815180928185528580860191016103f9565b601f01601f1916010190565b90602061045292818152019061041c565b90565b346103415760403660031901126103415761039d610477602435600435615c19565b60405191829160208352602083019061041c565b34610341576000366003190112610341576020600854604051908152f35b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b038211176104da57604052565b6104a9565b604081019081106001600160401b038211176104da57604052565b606081019081106001600160401b038211176104da57604052565b90601f801991011681019081106001600160401b038211176104da57604052565b6001600160401b0381116104da5760051b60200190565b81601f820112156103415780359161056483610536565b926105726040519485610515565b808452602092838086019260051b820101928311610341578301905b82821061059c575050505090565b8135815290830190830161058e565b602080820190808352835180925260408301928160408460051b8301019501936000915b8483106105df5750505050505090565b90919293949584806105fd600193603f198682030187528a5161041c565b98019301930191949392906105cf565b34610341576040366003190112610341576001600160401b036004358181116103415761063e90369060040161054d565b906024359081116103415761065790369060040161054d565b9080518251036106c45761066b8151612073565b9160005b82518110156106b6578061069a610688600193866120d3565b5161069383866120d3565b5190615c19565b6106a482876120d3565b526106af81866120d3565b500161066f565b6040518061039d86826105ab565b6040516317d38eff60e11b8152600490fd5b34610341576020366003190112610341576004356000526009602052602060406000205460e81b6040519062ffffff60e81b168152f35b6001600160401b0381116104da57601f01601f191660200190565b81601f820112156103415780359061073f8261070d565b9261074d6040519485610515565b8284526020838301011161034157816000926020809301838601378301015290565b6020366003190112610341576004356001600160401b0381116103415761079d61039d913690600401610728565b6107a5615642565b6107b96107b4600e5460ff1690565b615504565b6107c8610e9060085410615550565b6107dc67016345785d8a000034101561558b565b336000908152600f602052604090206107fa90600a905b54106155c4565b336000908152600f602052604090206108138154613417565b9055610828610823600854613417565b600855565b6108906008549161083843613224565b60408051602081018681529240918101919091526bffffffffffffffffffffffff1933606090811b82168184015230901b16607482015261088681608881015b03601f198101835282610515565b5190208333615918565b6108be60008080803473a81a6a910fed20374361b35c451a4a44f86ced465af16108b86121c1565b50615605565b6108c86001600755565b6040519081529081906020820190565b8015150361034157565b34610341576020366003190112610341576004356108ff816108d8565b6109076130a3565b60ff8019600e54169115151617600e55600080f35b3461034157602036600319011261034157602061093a60043561266a565b6040516001600160a01b039091168152f35b6001600160a01b0381160361034157565b3461034157604036600319011261034157602061098860043561097f8161094c565b602435906127c1565b6040519015158152f35b34610341576000366003190112610341576020604051610e908152f35b34610341576000366003190112610341576109e561039d6109ce6149e3565b60409291925193849360408552604085019061041c565b90838203602085015261041c565b34610341576000366003190112610341576020604051600a8152f35b90600182811c92168015610a3f575b6020831014610a2957565b634e487b7160e01b600052602260045260246000fd5b91607f1691610a1e565b9060009291805491610a5a83610a0f565b918282526001938481169081600014610abc5750600114610a7c575b50505050565b90919394506000526020928360002092846000945b838610610aa8575050505001019038808080610a76565b805485870183015294019385908201610a91565b9294505050602093945060ff191683830152151560051b01019038808080610a76565b3461034157602036600319011261034157600435600052600d60205261039d610b15610477604060002060405192838092610a49565b0382610515565b3461034157602080600319360112610341576004356000818152600360205260409020546001600160a01b031615610bae5760005260058152610b62604060002061333d565b906040519181839283018184528251809152816040850193019160005b828110610b8e57505050500390f35b83516001600160a01b031685528695509381019392810192600101610b7f565b60249060405190635747cd1b60e11b82526004820152fd5b346103415760a036600319011261034157600435610be38161094c565b602435610bef8161094c565b606435610bfb816108d8565b608435926001600160401b03841161034157610c1e610c28943690600401610728565b926044359161280c565b005b34610341576020366003190112610341576000808080600435610c4c8161094c565b610c546130a3565b479082908215610c76575b6001600160a01b031690f115610c7157005b612ed2565b6108fc9150610c5f565b346103415760203660031901126103415761039d610477600435612054565b3461034157600036600319011261034157602060ff600e54166040519015158152f35b3461034157602036600319011261034157600435600052600a6020526020604060002054604051908152f35b3461034157600036600319011261034157602060405173a81a6a910fed20374361b35c451a4a44f86ced468152f35b34610341576020366003190112610341576001600160401b036004358181116103415736602382011215610341578060040135918211610341573660248360051b830101116103415761039d916024610d7692016126ce565b604051918291826105ab565b3461034157602036600319011261034157600435610d9f8161094c565b60018060a01b031660005260046020526020604060002054604051908152f35b3461034157600080600319360112610e1a57610dd96130a3565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b34610341576020366003190112610341576004356001600160e81b0319811681036103415761047761039d916134fb565b81601f8201121561034157803591610e6583610536565b92610e736040519485610515565b808452602092838086019260051b820101928311610341578301905b828210610e9d575050505090565b8380918335610eab8161094c565b815201910190610e8f565b81601f8201121561034157803591610ecd83610536565b92610edb6040519485610515565b808452602092838086019260051b820101928311610341578301905b828210610f05575050505090565b8380918335610f13816108d8565b815201910190610ef7565b9080601f8301121561034157813590610f3682610536565b92610f446040519485610515565b828452602092838086019160051b8301019280841161034157848301915b848310610f725750505050505090565b82356001600160401b038111610341578691610f9384848094890101610728565b815201920191610f62565b346103415760a03660031901126103415760046001600160401b03813581811161034157610fcf9036908401610e4e565b9060243581811161034157610fe79036908501610e4e565b60443582811161034157610ffe903690860161054d565b90606435838111610341576110169036908701610eb6565b9260843590811161034157610c289561103191369101610f1e565b936129dc565b6040366003190112610341576024356001600160401b03811161034157611062903690600401610728565b61106a6130a3565b3461107b57610c28906004356123cc565b60405163f36ba73760e01b8152600490fd5b60e060031982011261034157600435916001600160401b0360243581811161034157836110bc91600401610728565b926044356001600160e81b0319811681036103415792606435926084359260a435918211610341576110f091600401610728565b9060c435610452816108d8565b90916111146104529360408452604084019061041c565b91602081840391015261041c565b346103415761113f6111333661108d565b95949094939193614ec4565b9061039d604051928392836110fd565b3461034157606036600319011261034157600480359061116e8261094c565b6024356044356001600160401b0381116103415761118f9036908401610728565b916111998261266a565b6001600160a01b0380821692913384036112995750851690811561128a5781831461127b576111e26111de876111d9876000526005602052604060002090565b61338c565b1590565b61124a5750918061124592610c2896947f1b1b58aa2ec0cec2228b2d37124556d41f5a1f7b12f089171f896cc236671215604051806112218a82610441565b0390a4611237604051948592336020850161276b565b03601f198101845283610515565b612ede565b604080516314ec4d6d60e31b81526001600160a01b03881692810192835260208301869052918291010390fd5b0390fd5b6040516344fed6b160e11b8152fd5b604051639577b8b360e01b8152fd5b60408051632d938f5160e11b81526001600160a01b0390921682850190815260208101879052339181019190915281906060010390fd5b34610341576020366003190112610341576004356112ec6149e3565b9190506112f881613596565b9061130290613596565b604051707b224c5350344d65746164617461223a7b60781b602082015275089b985b59488e88931d5adcdbd31bdbd9da595cc88b60521b60318201527f226465736372697074696f6e223a224c756b736f4c6f6f67696573206172652060478201527f4c554b534f205374616e64617264204c535038204e465473207769746820612060678201526d039b6b4b632901d149027b7363c960951b6087820152928392609584016113b1916136d4565b7f204c756b736f4c6f6f6769657320617661696c61626c65206f6e20612070726981527f636520637572766520696e6372656173696e6720302e3225207769746820656160208201527f6368206e6577206d696e742e2054686973204d61747269782045646974696f6e60408201527f20666561747572657320616e696d61746564204d61747269782d7374796c652060608201527f64657369676e7320666f722065616368204c6f6f6769652e222c0000000000006080820152609a017f226c696e6b73223a5b7b227469746c65223a2257656273697465222c2275726c81527f223a2268747470733a2f2f6c756b736f6c6f6f676965732e76657263656c2e6160208201527f7070227d2c7b227469746c65223a2254776974746572222c2275726c223a226860408201527f747470733a2f2f747769747465722e636f6d2f6c756b736f4c6f6f67696573226060820152621f574b60ea1b60808201526083017f22696d61676573223a5b5b7b227769647468223a3430302c226865696768742281526b1d1a181816113ab936111d1160a11b6020820152602c01611557916136d4565b64089f57574b60da1b81526005016d2261747472696275746573223a5b60901b8152600e017f7b226b6579223a2274797065222c2276616c7565223a22636f6c6c656374696f8152731b888b089d1e5c19488e889cdd1c9a5b99c89f4b60621b60208201526034017f7b226b6579223a226c696d6974222c2276616c7565223a00000000000000000081526017016115ee916136d4565b710b089d1e5c19488e889b9d5b58995c889f4b60721b81526012017f7b226b6579223a226375727665222c2276616c7565223a3130302e322c22747981526c7065223a226e756d626572227d60981b6020820152602d01605d60f81b8152600101617d7d60f01b815260020103601f1990818101835261166e9083610515565b61167782614d46565b6040517f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000602082015291908290603d82016116b1916136d4565b0390810182526116c19082610515565b60405191829161039d91836110fd565b3461034157600036600319011261034157602060405167016345785d8a00008152f35b34610341576000366003190112610341576000546040516001600160a01b039091168152602090f35b60403660031901126103415760046001600160401b03813581811161034157611749903690840161054d565b90602435908111610341576117619036908401610f1e565b9161176a6130a3565b346117d25781518351036117c3578151156117b4575060005b8151811015610c2857806117ae61179c600193856120d3565b516117a783876120d3565b51906123cc565b01611783565b6040516397da5f9560e01b8152fd5b604051633bcc897960e01b8152fd5b60405163f36ba73760e01b8152fd5b3461034157602080600319360112610341576004356117ff8161094c565b6001600160a01b03166000908152600482526040902061181e9061333d565b906040519181839283018184528251809152816040850193019160005b82811061184a57505050500390f35b83518552869550938101939281019260010161183b565b346103415761039d6104776118753661108d565b9594909493919361387c565b346103415760603660031901126103415760046001600160401b038135818111610341576118b2903690840161054d565b602435828111610341576118c9903690850161054d565b91604435908111610341576118e19036908501610f1e565b926118ea6130a3565b8151835180911490811591611964575b5061195557815115611946575060005b8151811015610c285780611940611923600193856120d3565b5161192e83876120d3565b5161193984896120d3565b5191612d0f565b0161190a565b6040516380c9830560e01b8152fd5b6040516317d38eff60e11b8152fd5b905084511415386118fa565b3461034157602036600319011261034157600435600052600c60205261039d610b15610477604060002060405192838092610a49565b34610341576020806003193601126103415760049081356119c561339f565b6119cd6133cb565b93600092835b8581106119e8576040518061039d8982610441565b611a5690611a32611a0a600f85841a8b611a2a611a1885848c1c86168d613433565b516001600160f81b03191690565b611a2188613444565b908d1a92613433565b531687613433565b611a50611a46611a4184613444565b6134a7565b91881a918a613433565b53613417565b6119d3565b3461034157602036600319011261034157600435611a788161094c565b60018060a01b0316600052600f6020526020604060002054604051908152f35b34610341576060366003190112610341576044356001600160401b03811161034157611acb610c28913690600401610728565b611ad36130a3565b602435600435612d0f565b3461034157608036600319011261034157600435611afb8161094c565b60243560443591611b0b836108d8565b6064356001600160401b03811161034157611b2a903690600401610728565b611b338361266a565b936001600160a01b038086169033829003611ba8575b8416908115611b965714611b8457611b648282868887612aac565b611b6a57005b610c28936112376112459260405195869360208501612796565b6040516344fed6b160e11b8152600490fd5b604051639577b8b360e01b8152600490fd5b8481163314611b495760405163760b5acd60e01b81523360048201526001600160a01b038816602482015260448101879052606490fd5b34610341576020366003190112610341576004356001600160401b03811161034157611c0f90369060040161054d565b611c198151612073565b9060005b8151811015611c585780611c3c611c36600193856120d3565b51612054565b611c4682866120d3565b52611c5181856120d3565b5001611c1d565b6040518061039d85826105ab565b600080600319360112610e1a5761039d90611c7f615642565b611c8e6107b4600e5460ff1690565b611c9d610e9060085410615550565b611cb167016345785d8a000034101561558b565b336000908152600f60205260409020611ccc90600a906107f3565b336000908152600f60205260409020611ce58154613417565b9055611cf5610823600854613417565b6108be60085491611d7f611d0843613224565b60408051602081018781529240918101919091526bffffffffffffffffffffffff1933606090811b82168184015230901b166074820152611d4c8160888101610878565b519020611d576121ae565b50611d61336156e1565b15611db257611d6f33615761565b90815115611da2575b8533615918565b8080803473a81a6a910fed20374361b35c451a4a44f86ced465af16108b86121c1565b9050611dac6156bd565b90611d78565b611dac615698565b3461034157602036600319011261034157600435611dd78161094c565b611ddf6130a3565b6001600160a01b039081168015611e2d57600080546001600160a01b03198116831782559092167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b34610341576040366003190112610341576001600160401b0360043560243582811161034157611eb5903690600401610728565b611ebe8261266a565b336001600160a01b0390911603611ffe57600092828452602090600d8252604085209183519182116104da57611efe82611ef88554610a0f565b85612557565b80601f8311600114611f6c575091817f0bab5fbabbf1262857155d5133d7829bd5739a99eb04ee435fe0e160483b1e8a9492611f5b948891611f61575b508160011b916000199060031b1c19161790555b60405191829182610441565b0390a280f35b905083015138611f3b565b90601f198316611f8185600052602060002090565b9288905b828210611fe657505092611f5b9492600192827f0bab5fbabbf1262857155d5133d7829bd5739a99eb04ee435fe0e160483b1e8a989610611fcd575b5050811b019055611f4f565b85015160001960f88460031b161c191690553880611fc1565b80600185968294968b01518155019501930190611f85565b60405162461bcd60e51b815260206004820152600f60248201526e2737ba103a37b5b2b71037bbb732b960891b6044820152606490fd5b346103415760203660031901126103415761039d610477600435613596565b6000526001602052610b15610452604060002060405192838092610a49565b9061207d82610536565b61208a6040519182610515565b828152809261209b601f1991610536565b019060005b8281106120ac57505050565b8060606020809385010152016120a0565b634e487b7160e01b600052603260045260246000fd5b80518210156120e75760209160051b010190565b6120bd565b600436106120fd57610452906121f1565b6044604051809263e5099ee360e01b825260206004830152806024830152806000848401376000828201840152601f01601f19168101030190fd5b3415612150576040516330fa4a2160e11b8152600490fd5b606460405163e5099ee360e01b8152602060048201526004602482015260006044820152fd5b908092918237016000815290565b9060349391816000823701916bffffffffffffffffffffffff199060601b16825260148201520190565b604051906121bb826104bf565b60008252565b3d156121ec573d906121d28261070d565b916121e06040519384610515565b82523d6000602084013e565b606090565b63ffffffff60e01b600035169061223e612239604051696773c5a04a6d4300884b60b11b60208201526000602a82015284602c82015260208152612234816104df565b61232c565b612054565b8051601481141590816122eb575b506122c65761225a906122f5565b60601c9182156122a2575060009182916040516122838161087860208201943490339087612184565b519134905af16122916121c1565b901561229a5790565b602081519101fd5b60405163bb370b2b60e01b81526001600160e01b0319919091166004820152602490fd5b6040516342bfe79f60e01b81526020600482015290819061127790602483019061041c565b905015153861224c565b90602082519201516bffffffffffffffffffffffff1990818116936014811061231d57505050565b60140360031b82901b16169150565b602081519101519060208110612340575090565b6000199060200360031b1b1690565b61238c612239604051696773c5a04a6d4300884b60b11b60208201526000602a8201526301ffc9a760e01b602c82015260208152612234816104df565b8051601481141590816123c2575b506122c6576123a8906122f5565b60601c9081156123bb5761045291613158565b5050600090565b905015153861239a565b907ff675e9361af1c1664c1868cfa3eb97672d6b1a513aa5b81dec34c9ee330e818d82146124e6577fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af1820361242d576040516385c169bd60e01b8152600490fd5b7f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db932756820361246657604051630eceab6760e31b8152600490fd5b7fe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb3820361249f57604051634ef6d7fb60e01b8152600490fd5b6124e181611f4f7fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2936124dc866000526001602052604060002090565b61259c565b0390a2565b604051631b32400560e11b8152600490fd5b916125129183549060031b91821b91600019901b19161790565b9055565b818110612521575050565b60008155600101612516565b90601f811161253a575050565b61255591600052601f6020600020910160051c810190612516565b565b9190601f811161256657505050565b612555926000526020600020906020601f840160051c83019310612592575b601f0160051c0190612516565b9091508190612585565b91909182516001600160401b0381116104da576125c3816125bd8454610a0f565b84612557565b602080601f83116001146125ff5750819293946000926125f4575b50508160011b916000199060031b1c1916179055565b0151905038806125de565b90601f1983169561261585600052602060002090565b926000905b88821061265257505083600195969710612639575b505050811b019055565b015160001960f88460031b161c1916905538808061262f565b8060018596829496860151815501950193019061261a565b6000818152600360205260409020546001600160a01b0316908115610bae575090565b91908110156120e75760051b81013590601e19813603018212156103415701908135916001600160401b038311610341576020018236038113610341579190565b91906126d981612073565b92600091825b8181106126ec5750505050565b83806126f983858761268d565b6040939161270b855180938193612176565b0390305af4906127196121c1565b911561274057509060019161272e82896120d3565b5261273981886120d3565b50016126df565b81519192911561275257825160208401fd5b5163234eb81960e01b8152600481019190915260249150fd5b610452939260809260018060a01b03168252602082015260016040820152816060820152019061041c565b610452939260809260018060a01b03168252602082015260006040820152816060820152019061041c565b6001600160a01b03806127d38461266a565b1691169081149182156127e557505090565b61045292506000526005602052604060002060019160005201602052604060002054151590565b9092939161281a81336127c1565b156129be576128288161266a565b6001600160a01b03818116918482169182840361298e5780881693841561297c576128528661266a565b9182160361294c575050926129428380612555999794611237999761287a6129479887612c11565b6001600160a01b038616600090815260046020526040902061289d908490613288565b506001600160a01b03891660009081526004602052604090206128c19084906131a2565b506128f9896128da856000526003602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b6040517fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf908061292b8a8e3384612b75565b0390a4604051978894859288863360208701612bd7565b612f7b565b613017565b604051635a9c31d360e01b8152600481018690526001600160a01b03928316602482015291166044820152606490fd5b6040516324ecef4d60e01b8152600490fd5b604051632d938f5160e11b81526001600160a01b0383811660048301526024820187905287166044820152606490fd5b60449060405190631294d2a960e01b82526004820152336024820152fd5b949390919285519383518514801590612aa1575b8015612a96575b8015612a8b575b612a795760005b858110612a16575050505050509050565b80612a73612a36612a296001948c6120d3565b516001600160a01b031690565b612a43612a29848a6120d3565b612a4d84876120d3565b51612a61612a5b868a6120d3565b51151590565b91612a6c868b6120d3565b519361280c565b01612a05565b6040516393a8311960e01b8152600490fd5b5082518514156129fe565b5081518514156129f7565b5080518514156129f0565b91939284600052600560205260406000209260018060a01b0390612ad38282168096613288565b15612b22575090612b1d7fc78cd419d6136f9f1c1c6aec1d3fae098cffaf8bc86314a8f2685e32fe574e3c939260405193849315158452604060208501521695604083019061041c565b0390a4565b6040516312a8c6a360e21b81526001600160a01b0391909116600482015260248101879052604490fd5b6001600160a01b039091168152600160208201526060604082018190526104529291019061041c565b6001600160a01b03909116815290151560208201526060604082018190526104529291019061041c565b6001600160a01b0391821681526000602082015291166040820152606081019190915260a0608082018190526104529291019061041c565b6001600160a01b03918216815291811660208301529091166040820152606081019190915260a0608082018190526104529291019061041c565b9060009080825260059160209383855260409182812094855495825b878110612c3f57505050505050505050565b8154156120e7578184528884205486516001600160a01b0391821691612c64826104bf565b868252898752858c52612c79838a8920613288565b15612ccb57600193927fc78cd419d6136f9f1c1c6aec1d3fae098cffaf8bc86314a8f2685e32fe574e3c8d89612cc28e968e968e8880519687968752860152169683019061041c565b0390a401612c2d565b88516312a8c6a360e21b81526001600160a01b0384166004820152602481018b9052604490fd5b9190604051926020840152604083015260408252612555826104fa565b9091612d1b8383612cf2565b80516020809201206000526001908181526040600020918351916001600160401b0383116104da57612d5783612d518654610a0f565b86612557565b80601f8411600114612dc35750918080612db395937fa6e4251f855f750545fe414f120db91c76b88def14d120969e5bb2d3f05debbb9795600093612db8575b501b916000199060031b1c191617905560405191829182610441565b0390a3565b860151925038612d97565b90601f939293198316612ddb86600052602060002090565b926000905b828210612e26575050918391612db396947fa6e4251f855f750545fe414f120db91c76b88def14d120969e5bb2d3f05debbb98969410611fcd575050811b019055611f4f565b808785968294968c01518155019501930190612de0565b602081830312610341578051906001600160401b038211610341570181601f82011215610341578051612e6f8161070d565b92612e7d6040519485610515565b818452602082840101116103415761045291602080850191016103f9565b906040610452927f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d8152816020820152019061041c565b6040513d6000823e3d90fd5b612ee7816130fb565b612eef575050565b612f42600092918392604051948580948193631aed5a8560e21b83527f8a1c15a8799f71b547e08e2bcb2e85257e81b0a07eee2ce6712549eef1f00970600484015260406024840152604483019061041c565b03926001600160a01b03165af18015610c7157612f5c5750565b612f78903d806000833e612f708183610515565b810190612e3d565b50565b612f84816130fb565b612f8c575050565b612f42600092918392604051948580948193631aed5a8560e21b83527fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab00600484015260406024840152604483019061041c565b612fe8816130fb565b1561301357604051631aed5a8560e21b8152916000918391829084908290612f429060048301612e9b565b5050565b9190613022836130fb565b1561304c5750612f426000928392604051948580948193631aed5a8560e21b835260048301612e9b565b9050156130565750565b803b1561308057604051634349776d60e01b81526001600160a01b03919091166004820152602490fd5b604051630317313760e01b81526001600160a01b03919091166004820152602490fd5b6000546001600160a01b031633036130b757565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6000602091604051838101906301ffc9a760e01b8252631aed5a8560e21b60248201526024815261312b816104fa565b5191617530fa6000513d8261314c575b5081613145575090565b9050151590565b6020111591503861313b565b600090602092604051848101916301ffc9a760e01b835263ffffffff60e01b1660248201526024815261312b816104fa565b80548210156120e75760005260206000200190600090565b60008281526001820160205260409020546123bb57805490680100000000000000008210156104da57826131f76131e084600180960185558461318a565b819391549060031b91821b91600019901b19161790565b905580549260005201602052604060002055600190565b634e487b7160e01b600052601160045260246000fd5b60001981019190821161323357565b61320e565b9061032a91820391821161323357565b80549081156132725760001991820191613262838361318a565b909182549160031b1b1916905555565b634e487b7160e01b600052603160045260246000fd5b60018101918060005282602052604060002054928315156000146133345760001992848401908582116132335780549485019485116132335760009585836132dc946132eb98036132f1575b505050613248565b90600052602052604060002090565b55600190565b61331b6133159161330561332b948761318a565b90549060031b1c9283918761318a565b906124f8565b8590600052602052604060002090565b553880806132d4565b50505050600090565b9060405191828154918282526020928383019160005283600020936000905b8282106133725750505061255592500383610515565b85548452600195860195889550938101939091019061335c565b610452916001600160a01b0316906131a2565b604051906133ac826104df565b601082526f181899199a1a9b1b9c1cb0b131b232b360811b6020830152565b604051906133d8826104fa565b6040808352366020840137565b906133ef8261070d565b6133fc6040519182610515565b828152809261340d601f199161070d565b0190602036910137565b60001981146132335760010190565b8051156120e75760200190565b9081518110156120e7570160200190565b908160011b918083046002149015171561323357565b908160090291600983040361323357565b600281901b91906001600160fe1b0381160361323357565b908160370291603783040361323357565b8181029291811591840414171561323357565b906001820180921161323357565b90600a820180921161323357565b906030820180921161323357565b906002820180921161323357565b602301908160231161323357565b60b401908160b41161323357565b9061350461339f565b60405190613511826104df565b60068252602036818401376000805b6003811061353057509193505050565b613591906001600160f81b0319613576600f89841a83613556600483901c84168a613433565b511661356e61356487613444565b91891a918b613433565b531686613433565b5116611a50613587611a4184613444565b91851a9187613433565b613520565b801561361257806000908282935b6135fe57506135b2836133e5565b9290805b6135c05750505090565b600a90603092828206840180941161323357801561323357600019019260f81b6001600160f81b031916841a6135f68487613433565b5304806135b6565b9261360a600a91613417565b9304806135a4565b5060405161361f816104df565b60018152600360fc1b602082015290565b6040519061363d826104df565b600582526433b932b2b760d91b6020830152565b6040519061365e826104df565b6004825263626c756560e01b6020830152565b6040519061367e826104df565b60038252621c995960ea1b6020830152565b6040519061369d826104df565b6006825265707572706c6560d01b6020830152565b604051906136bf826104df565b600682526579656c6c6f7760d01b6020830152565b906136e7602092828151948592016103f9565b0190565b604051906136f8826104df565b60078252662366616363313560c81b6020830152565b6040519061371b826104df565b60078252662361383535663760c81b6020830152565b6040519061373e826104df565b600782526608d9598d0d0d0d60ca1b6020830152565b60405190613761826104df565b60078252661199b11c19331b60c91b6020830152565b60405190613784826104df565b60078252662361336536333560c81b6020830152565b604051906137a7826104df565b60078252660236666636330360cc1b6020830152565b604051906137ca826104df565b600782526611b1b19818333360c91b6020830152565b604051906137ed826104df565b600782526611b33318181b1b60c91b6020830152565b60405190613810826104df565b600782526611981831b1b33360c91b6020830152565b60405190613833826104df565b60078252660233030666630360cc1b6020830152565b60405190613856826104df565b600782526611b3331818333360c91b6020830152565b631e17b39f60e11b815260040190565b949395918260001461437a57815160209283810191822061389b613630565b805190860120036142c257505050506138b2613826565b945b60405194600360208701876138dc84836026918152650dac2e8e4d2f60d31b60208201520190565b03976138f0601f19998a8101835282610515565b51902084156142ba57811610965b83156142ac5761390c613849565b955b61392961392261391d8861345a565b613238565b600b900490565b92891561429e5761393861447c565b995b1561428c5761395761395761395161395d936146ae565b98613596565b94613596565b81519095901561427c57156141ea57613a176139f891613a0b6040519384926139f2602085016056907f3c7465787420783d223230302220793d223330302220636c6173733d2275736581527f726e616d6522207374796c653d22666f6e742d66616d696c793a2027436f6d69602082015275319029b0b7399026a993961031bab939b4bb329d911f60511b60408201520190565b906136d4565b661e17ba32bc3a1f60c91b815260070190565b03898101835282610515565b945b60405198899760208901613a9d906057907f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323081527f30302f737667222076696577426f783d2230203020343030203430302220776960208201527f6474683d2234303022206865696768743d22343030223e00000000000000000060408201520190565b651e3232b3399f60d11b8152600601661e39ba3cb6329f60c91b81526007017f40696d706f72742075726c282268747470733a2f2f666f6e74732e676f6f676c81527f65617069732e636f6d2f637373323f66616d696c793d436f6d69632b53616e7360208201527f2b4d5326616d703b646973706c61793d7377617022293b00000000000000000060408201526057017f2e757365726e616d65207b20666f6e742d66616d696c793a2022436f6d69632081527f53616e73204d53222c20637572736976653b20666f6e742d73697a653a20313660208201527f70783b2066696c6c3a2077686974653b20746578742d616e63686f723a206d6960408201526664646c653b207d60c81b60608201526067017f2e6d61747269782d63686172207b20666f6e742d66616d696c793a206d6f6e6f81526c039b830b1b29d903334b6361d1609d1b6020820152602d01613bf5916136d4565b7f3b206f7061636974793a20302e333b20616e696d6174696f6e3a20666164652081527f337320696e66696e6974652c2066616c6c203873206c696e65617220696e66696020820152666e6974653b207d60c81b60408201526047017f406b65796672616d65732066616465207b203025207b206f7061636974793a2081527f302e323b207d20333025207b206f7061636974793a20302e393b207d2037302560208201527f207b206f7061636974793a20302e393b207d2031303025207b206f706163697460408201526a793a20302e323b207d207d60a81b6060820152606b017f406b65796672616d65732066616c6c207b2066726f6d207b207472616e73666f81527f726d3a207472616e736c61746559282d32307078293b207d20746f207b20747260208201527f616e73666f726d3a207472616e736c61746559283432307078293b207d207d006040820152605f01671e17b9ba3cb6329f60c11b8152600801613d63916136d4565b661e17b232b3399f60c91b81526007017f3c726563742077696474683d2234303022206865696768743d2234303022206681526c34b6361e91313630b1b591179f60991b6020820152602d01613db8916136d4565b7f3c6720636c6173733d226c6f6f6769652d636f6e7461696e6572223e000000008152601c016c1e339034b21e9132bcb298911f60991b8152600d017f3c656c6c69707365207374726f6b652d77696474683d2233222072793d22323981527f2e35222072783d2232392e35222069643d227376675f31222063793d2231353460208201527f2e35222063783d223138312e3522207374726f6b653d2223303030222066696c604082015269361e9111b3333311179f60b11b6060820152606a017f3c656c6c697073652072793d22332e35222072783d22322e35222069643d227381527f76675f33222063793d223135342e35222063783d223137332e3522207374726f60208201527f6b652d77696474683d223322207374726f6b653d2223303030222066696c6c3d60408201526a111198181818181811179f60a91b6060820152606b01613f089061386c565b6c1e339034b21e913432b0b2111f60991b8152600d016e1e32b63634b839b2903334b6361e9160891b8152600f01613f3f916136d4565b7f22207374726f6b652d77696474683d2233222063783d223230342e352220637981527f3d223231312e3830303635222069643d227376675f35222072783d22000000006020820152603c01613f94916136d4565b7f222072793d2235312e383030363522207374726f6b653d2223303030222f3e008152601f01613fc39061386c565b6c1e339034b21e9132bcb299111f60991b8152600d017f3c656c6c69707365207374726f6b652d77696474683d2233222072793d22323981527f2e35222072783d2232392e35222069643d227376675f32222063793d2231363860208201527f2e35222063783d223230392e3522207374726f6b653d2223303030222066696c604082015269361e9111b3333311179f60b11b6060820152606a017f3c656c6c697073652072793d22332e35222072783d2233222069643d2273766781527f5f34222063793d223136392e35222063783d2232303822207374726f6b652d7760208201527f696474683d2233222066696c6c3d222330303030303022207374726f6b653d226040820152661198181811179f60c91b60608201526067016140e99061386c565b7f3c6720636c6173733d226d6f75746822207472616e73666f726d3d227472616e8152650e6d8c2e8ca560d31b6020820152602601614127916136d4565b64161814911f60d91b81526005017f3c7061746820643d224d203133302032343020512031363520323530200000008152601d01614164916136d4565b7f2032333522207374726f6b653d22626c61636b22207374726f6b652d7769647481527f683d2233222066696c6c3d227472616e73706172656e74222f3e0000000000006020820152603a016141b99061386c565b6141c2916136d4565b6141cb9061386c565b651e17b9bb339f60d11b81526006010390810182526104529082610515565b6142776139f891613a0b6040519384926139f260208501605d907f3c7465787420783d223230302220793d223330302220666f6e742d66616d696c81527f793d22417269616c2220666f6e742d73697a653d223136222066696c6c3d222360208201527f6666666666662220746578742d616e63686f723d226d6964646c65223e00000060408201520190565b613a17565b50506142866121ae565b94613a19565b5061395d6139576139576139516121ae565b6142a66121ae565b9961393a565b6142b4613826565b9561390e565b1615966138fe565b805182206142ce613651565b805190860120036142eb57505050506142e5613803565b946138b4565b805182206142f7613671565b8051908601200361430e57505050506142e56137e0565b8051822061431a613690565b8051908601200361433157505050506142e56137bd565b51902061433c6136b2565b805190840120036143515750506142e561379a565b6139f2916108786143646142e5936134fb565b6040519485938401600190602360f81b81520190565b815160209283810191822061438d613630565b805190860120036143a457505050506142e5613777565b805182206143b0613651565b805190860120036143c757505050506142e5613754565b805182206143d3613671565b805190860120036143ea57505050506142e5613731565b805182206143f6613690565b8051908601200361440d57505050506142e561370e565b5190206144186136b2565b805190840120036143515750506142e56136eb565b7f3c6665436f6d706f7369746520696e3d22536f7572636547726170686963222081527f696e323d22626c757222206f70657261746f723d226f766572222f3e000000006020820152603c0190565b6040517f3c66696c7465722069643d226d61747269782d676c6f772220783d222d32302560208201527f2220793d222d323025222077696474683d223134302522206865696768743d22604082015265189a1812911f60d11b60608201527f3c6665476175737369616e426c757220737464446576696174696f6e3d22332260668201526f103932b9bab63a1e9131363ab911179f60811b6086820152610452816108786146126145d6604a6145346096860161442d565b681e17b334b63a32b91f60b91b81527f3c6c696e6561724772616469656e742069643d226d61747269782d626722207860098201527f313d223025222079313d223025222078323d223025222079323d2231303025226029820152601f60f91b60498201527f3c73746f70206f66667365743d223025222073746f702d636f6c6f723d22233091019081526718181c181811179f60c11b602082015260280190565b7f3c73746f70206f66667365743d2231303025222073746f702d636f6c6f723d228152691198181898181811179f60b11b6020820152602a0190565b701e17b634b732b0b923b930b234b2b73a1f60791b815260110190565b6040519061463c826104df565b601882527f3c6720636c6173733d226d61747269782d6368617273223e00000000000000006020830152565b604051906101e08083018381106001600160401b038211176104da57604052368337565b60ff1660ff81146132335760010190565b90600f8110156120e75760051b0190565b6146b661462f565b6146be614668565b9160005b60ff811690600f82101561473e576147346147399261472c61472561471f61471a8860405161470f816108788b6020830195869091602192825260ff60f81b9060f81b1660208201520190565b51902061017c900690565b6134b5565b60ff1690565b918861469d565b9060ff169052565b61468c565b6146c2565b505060005b60ff80821690600f8210156149be57906000915b6008818416106147725750505061476d9061468c565b614743565b90919460408787825192868987806020968c888a018a6147b48a848985919092602293835260ff60f81b809260f81b16602084015260f81b1660218201520190565b039a601f199b8c810182526147c99082610515565b51902061017c90066147da906134b5565b60ff1687518a81018781526001600160f81b031960f885811b821660208401528c901b1660218201526331b430b960e11b6022820152919691908060268301038d810182526148299082610515565b519020600a9006614839906134c3565b60ff1688518b81019283526001600160f81b031960f894851b811660208501529a90931b90991660218201526464656c617960d81b6022820152908060278301038b810182526148899082610515565b5190206005900660ff169461489d9161469d565b516148aa9060ff16613596565b92166148b590613596565b92166148c090613596565b835160f89590951b6001600160f81b03191686860190815290939085906001010387810186526148f09086610515565b5196879586016148ff916136d4565b681e3a32bc3a103c1e9160b91b815260090161491a916136d4565b6411103c9e9160d91b8152600501614931916136d4565b7f2220636c6173733d226d61747269782d6368617222207374796c653d22616e6981526d036b0ba34b7b716b232b630bc9d160951b6020820152602e01614977916136d4565b63399d911f60e11b815260040161498d916136d4565b661e17ba32bc3a1f60c91b81526007010390810182526149ad9082610515565b946149b79061468c565b9190614757565b505050506149de91506104529061087860405193849260208401906136d4565b61386c565b604080517f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323060208201527f30302f737667222077696474683d2234303022206865696768743d2234303022918101919091527f2076696577426f783d223020302034303020343030223e00000000000000000060608201527f3c726563742077696474683d2234303022206865696768743d2234303022206660778201526b34b6361e911198181811179f60a11b6097820152711e3334b63a32b91034b21e9133b637bb911f60711b60a38201527f3c6665476175737369616e426c757220737464446576696174696f6e3d22332e60b5820152711a91103932b9bab63a1e9131363ab911179f60711b60d5820152614cd79190614ce381614c86614c74614bcd614b28614b1360e7860161442d565b681e17b334b63a32b91f60b91b815260090190565b7f3c7465787420783d223230302220793d223138302220666f6e742d66616d696c81527f793d22417269616c2220666f6e742d73697a653d223430222066696c6c3d222360208201527f6666662220746578742d616e63686f723d226d6964646c65222066696c74657260408201527f3d2275726c2823676c6f7729223e4c756b736f4c6f6f676965733c2f746578746060820152601f60f91b608082015260810190565b7f3c7465787420783d223230302220793d223233302220666f6e742d66616d696c81527f793d22417269616c2220666f6e742d73697a653d223230222066696c6c3d222360208201527f3066302220746578742d616e63686f723d226d6964646c65222066696c74657260408201527f3d2275726c2823676c6f7729223e4d61747269782045646974696f6e3c2f74656060820152623c3a1f60e91b608082015260830190565b651e17b9bb339f60d11b815260060190565b03614c99601f1991828101855284610515565b614ca283614d46565b6040517f646174613a696d6167652f7376672b786d6c3b6261736536342c0000000000006020820152958691603a83016139f2565b03908101855284610515565b9190565b60405190614cf4826104fa565b604082527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f6040837f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201520152565b805115614e2457614d55614ce7565b614d79614d74614d6f614d6885516134d1565b6003900490565b61346b565b6133e5565b91602083019181825183016020810191825193600084525b828210614dd25750505052516003900660018114614dbf57600214614db4575090565b603d90600019015390565b50603d9081600019820153600119015390565b9091956004906003809401938451600190603f9082828260121c16880101518553828282600c1c16880101518386015382828260061c1688010151600286015316850101519082015301959190614d91565b506104526121ae565b60405190614e3a826104df565b60018252601760f91b6020830152565b60405190614e57826104df565b601f82527f2e204f776e6564206279206120556e6976657273616c2050726f66696c6521006020830152565b60405190614e90826104df565b600582526466616c736560d81b6020830152565b60405190614eb1826104df565b60048252637472756560e01b6020830152565b969584614ef0614eea614ee4848a614f109a8a8f9a8a819f9b9d9c61387c565b986134fb565b996153c1565b604051674c6f6f676965202360c01b6020820152968791602883016139f2565b0398614f24601f199a8b8101895288610515565b614f2d85613596565b97614f3783613596565b9884156153b457614f46614e4a565b6040519a8b9260208401614f88906021907f54686973204d6174726978204c6f6f6769652069732074686520636f6c6f72208152602360f81b60208201520190565b614f9290876136d4565b750103bb4ba3410309031b43ab13134b732b9b99037b3160551b8152601601614fba916136d4565b7401030b7321036b7baba34103632b733ba341037b31605d1b8152601501614fe1916136d4565b614fea916136d4565b038b81018a52614ffa908a610515565b61500390614d46565b9461500d90613596565b9161501790613596565b92156153a657615025614ea4565b945b6040517f7b224c5350344d65746164617461223a207b226e616d65223a202200000000006020820152988998603b8a01615060916136d4565b711116113232b9b1b934b83a34b7b7111d101160711b8152601201615084916136d4565b7f222c226c696e6b73223a205b7b227469746c65223a2257656273697465222c2281527f75726c223a2268747470733a2f2f6c756b736f6c6f6f676965732e76657263656020820152721b0b985c1c089f574b089a58dbdb888e96d74b606a1b60408201526053017f22696d61676573223a205b5b7b227769647468223a203430302c22686569676881526f3a111d101a181816113ab936111d101160811b60208201526030017f646174613a696d6167652f7376672b786d6c3b6261736536342c0000000000008152601a0161515a916136d4565b64089f57574b60da1b81526005016d2261747472696275746573223a5b60901b8152600e017f7b226b6579223a22636f6c6f72222c2276616c7565223a22230000000000000081526019016151ae916136d4565b72088b089d1e5c19488e889cdd1c9a5b99c89f4b606a1b81526013017f7b226b6579223a226368756262696e657373222c2276616c7565223a000000008152601c016151f9916136d4565b710b089d1e5c19488e889b9d5b58995c889f4b60721b81526012017f7b226b6579223a226d6f7574684c656e677468222c2276616c7565223a0000008152601d01615243916136d4565b710b089d1e5c19488e889b9d5b58995c889f4b60721b81526012017f7b226b6579223a22757365726e616d65222c2276616c7565223a2200000000008152601b0161528d916136d4565b72088b089d1e5c19488e889cdd1c9a5b99c89f4b606a1b8152601301753d9135b2bc911d1134b9aaa81116113b30b63ab2911d60511b81526016016152d1916136d4565b720b089d1e5c19488e88989bdbdb19585b889f4b606a1b81526013017f7b226b6579223a2274797065222c2276616c7565223a22000000000000000000815260170161531c916136d4565b71222c2274797065223a22737472696e67227d60701b8152601201625d7d7d60e81b81526003010383810182526153539082610515565b61535c81614d46565b6040517f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000602082015293908490603d8201615396916136d4565b039081018452614ce39084610515565b6153ae614e83565b94615027565b6153bc614e2d565b614f46565b806000917a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000808210156154f6575b506d04ee2d6d415b85acef8100000000808310156154e7575b50662386f26fc10000808310156154d8575b506305f5e100808310156154c9575b50612710808310156154ba575b5060648210156154aa575b600a809210156154a0575b6001908160216154588287016133e5565b95860101905b61546a575b5050505090565b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a83530491821561549b5791908261545e565b615463565b9160010191615447565b919060646002910491019161543c565b60049193920491019138615431565b60089193920491019138615424565b60109193920491019138615415565b60209193920491019138615403565b6040935081049150386153ea565b1561550b57565b60405162461bcd60e51b815260206004820152601860248201527f5075626c6963206d696e74696e6720697320636c6f73656400000000000000006044820152606490fd5b1561555757565b60405162461bcd60e51b815260206004820152600c60248201526b444f4e45204d494e54494e4760a01b6044820152606490fd5b1561559257565b60405162461bcd60e51b815260206004820152600a60248201526909c9ea8408a9c9eaa8e960b31b6044820152606490fd5b156155cb57565b60405162461bcd60e51b8152602060048201526012602482015271135253950813125352550814915050d2115160721b6044820152606490fd5b1561560c57565b60405162461bcd60e51b815260206004820152600e60248201526d18dbdd5b19081b9bdd081cd95b9960921b6044820152606490fd5b600260075414615653576002600755565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b604051906156a5826104df565b60098252681b1d5adcdbdb985d5d60ba1b6020830152565b604051906156ca826104df565b60088252672aa81027bbb732b960c11b6020830152565b6040516301ffc9a760e01b8152631c537ddf60e21b600482015290602090829060249082906001600160a01b03165afa60009181615725575b506104525750600090565b90916020823d8211615759575b8161573f60209383610515565b81010312610e1a575051615752816108d8565b903861571a565b3d9150615732565b61576d6111de826156e1565b614e24576040516354f6127f60e01b81527fa5f25703c828c6d3c468fa5542c279e8c98f1acc783318e4fcd67ea8fd61be026004820152906000908190839060249082906001600160a01b03165afa80928293615866575b506157d45750506104526121ae565b8151806157e7575b5050506104526121ae565b600180911180615849575b156157dc57615804614d748451613224565b9281805b615813575050505090565b815181101561549b578061582d611a0a6158439385613433565b611a5061583983613224565b91871a9188613433565b82615808565b506001600160f81b031961585f611a0a85613426565b16156157f2565b61587b9193503d8084833e612f708183610515565b91386157c5565b61589561588f8254610a0f565b8261252d565b600c6579656c6c6f7760d01b019055565b6158b361588f8254610a0f565b600c65707572706c6560d01b019055565b6158d161588f8254610a0f565b6006621c995960ea1b019055565b6158ec61588f8254610a0f565b600863626c756560e01b019055565b61590861588f8254610a0f565b600a6433b932b2b760d91b019055565b91612555936005615a2b9261597460ff60e81b8260021a60e81b1660ff60f01b8360011a60f01b1660ff60f81b8460001a60f81b161717615963876000526009602052604060002090565b9060e81c62ffffff19825416179055565b61599261598d6159868360031a613483565b60ff900490565b6134df565b6159a686600052600a602052604060002090565b556159dd6159d86159866159ce6159c789600052600a602052604060002090565b5460021c90565b8460041a90613494565b6134ed565b6159f186600052600b602052604060002090565b55811a0680615a395750615a17615a1284600052600c602052604060002090565b6158fb565b6124dc83600052600d602052604060002090565b615a336121ae565b91615ac7565b60018103615a635750615a5e615a5984600052600c602052604060002090565b6158df565b615a17565b60028103615a885750615a5e615a8384600052600c602052604060002090565b6158c4565b600303615aab57615a5e615aa684600052600c602052604060002090565b6158a6565b615a5e615ac284600052600c602052604060002090565b615882565b909291906001600160a01b038116801561297c576000858152600360205260409020546001600160a01b0316615bba576000858152600360205260409020546001600160a01b0316615bba57846125559495615bb592615b30615b2b600254613417565b600255565b6001600160a01b0385166000908152600460205260409020615b539083906131a2565b50615b6c856128da846000526003602052604060002090565b60007fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf60405180615b9e8a3383612b4c565b0390a4611237604051948592853360208601612b9f565b612fdf565b6040516334c7b51160e01b815260048101869052602490fd5b604861255591939293604051948591650379abe3500160c51b60208401526028830152615c0981518092602086860191016103f9565b8101036028810185520183610515565b907f9afb95cacc9f95858ec44aa8c3b685511002e30ae54415823f406128b85b238e8103615d045750615cf781615cd9610b15615c72615c6661045296600052600c602052604060002090565b60405192838092610a49565b615c86836000526009602052604060002090565b5460e81b615c9e84600052600a602052604060002090565b5490615cb485600052600b602052604060002090565b5492615ce0615ccd87600052600d602052604060002090565b60405196878092610a49565b0386610515565b615cf1615cec8761266a565b6156e1565b95614ec4565b9060208151910120615bd3565b615d0d91612cf2565b602081519101206000526001602052610b15610452604060002060405192838092610a4956fea2646970667358221220c8fa8a6ac35e76faf5b5af745a909f117873761088c311a16fb9027a08c9685b64736f6c63430008140033deba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af19afb95cacc9f95858ec44aa8c3b685511002e30ae54415823f406128b85b238ea23ea79c706be4641bfd97c9afb5b71a552c5bc320930dbe09b3530ed76dee0fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x1682 JUMPI PUSH1 0x20 DUP2 PUSH3 0x78F0 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH3 0x23 DUP3 DUP6 PUSH3 0x16A3 JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x1682 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH3 0x1682 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH3 0x50 DUP4 PUSH3 0x1687 JUMP JUMPDEST PUSH1 0xC DUP4 MSTORE PUSH12 0x4C756B736F4C6F6F67696573 PUSH1 0xA0 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 PUSH3 0x78 DUP4 PUSH3 0x1687 JUMP JUMPDEST PUSH1 0x7 DUP4 MSTORE PUSH7 0x4C554B4C4F4F47 PUSH1 0xC8 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x97 CALLER PUSH3 0x182A JUMP JUMPDEST ISZERO PUSH3 0x1670 JUMPI PUSH3 0xA8 SWAP1 PUSH3 0x182A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xB6 DUP2 PUSH3 0x1687 JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH4 0x29365989 PUSH1 0xE2 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xEAFEC4D89FA9619884B60000A4D96624A38F7AC2D8D9A604ECF07C12C77E480C SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 MLOAD PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x7AE JUMPI PUSH3 0x11F DUP2 PUSH3 0x118 DUP5 SLOAD PUSH3 0x175A JUMP JUMPDEST DUP5 PUSH3 0x17B0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH3 0x160B JUMPI SWAP2 DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x78D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 SWAP3 PUSH3 0x170 SWAP5 PUSH1 0x0 SWAP2 PUSH3 0x1441 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH3 0x17FC JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x7870 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 MLOAD SWAP2 PUSH32 0x2A367AE1AC46D529739AA27AC74856F860E70AF05D3642D18BA60FD5D32A069A PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH3 0x7AE JUMPI PUSH3 0x1D6 DUP5 PUSH3 0x1CF DUP4 SLOAD PUSH3 0x175A JUMP JUMPDEST DUP4 PUSH3 0x17B0 JUMP JUMPDEST PUSH1 0x20 SWAP4 PUSH1 0x1F DUP2 GT PUSH1 0x1 EQ PUSH3 0x1596 JUMPI SWAP2 PUSH3 0x237 SWAP2 DUP4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x78D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x7870 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 SWAP8 PUSH1 0x0 SWAP2 PUSH3 0x1441 JUMPI POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH3 0x17FC JUMP JUMPDEST SUB SWAP1 LOG2 PUSH32 0x2F0A68AB07768E01943A599E73362A0E17A63A72E94DD2E384D2C1D4DB932756 PUSH1 0x0 DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 MLOAD SWAP2 PUSH32 0x83B322886C7B7E25779E5D38E06E005C9E7ABA1E1267CE9210CF24E31833535A PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH3 0x7AE JUMPI PUSH3 0x2A9 DUP5 PUSH3 0x1CF DUP4 SLOAD PUSH3 0x175A JUMP JUMPDEST PUSH1 0x20 SWAP4 PUSH1 0x1F DUP2 GT PUSH1 0x1 EQ PUSH3 0x1531 JUMPI SWAP1 DUP2 PUSH3 0x2FA SWAP4 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x78D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 SWAP7 PUSH1 0x0 SWAP2 PUSH3 0x1441 JUMPI POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH3 0x17FC JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH1 0x2 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH3 0x316 DUP2 PUSH3 0x1687 JUMP JUMPDEST PUSH32 0xE0261FA95DB2EB3B5439BD033CDA66D56B96F92F243A8228FD87550ED7BDFDB3 PUSH1 0x0 DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 MLOAD SWAP2 PUSH32 0xF73B01B344A9BB3B96525B0CB731F6B14CDE20CE6CECEA8459266944490B411F PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH3 0x7AE JUMPI PUSH3 0x385 DUP5 PUSH3 0x1CF DUP4 SLOAD PUSH3 0x175A JUMP JUMPDEST PUSH1 0x20 SWAP4 PUSH1 0x1F DUP2 GT PUSH1 0x1 EQ PUSH3 0x14CC JUMPI SWAP1 DUP2 PUSH3 0x3D6 SWAP4 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x78D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 SWAP7 PUSH1 0x0 SWAP2 PUSH3 0x1441 JUMPI POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH3 0x17FC JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH3 0x3F2 DUP2 PUSH3 0x1687 JUMP JUMPDEST PUSH32 0xF675E9361AF1C1664C1868CFA3EB97672D6B1A513AA5B81DEC34C9EE330E818D PUSH1 0x0 DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 MLOAD SWAP2 PUSH32 0x1F5EB934E794DDCC86B89A579078013860F8FE92140885511742594F219AD0B PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH3 0x7AE JUMPI PUSH3 0x461 DUP5 PUSH3 0x1CF DUP4 SLOAD PUSH3 0x175A JUMP JUMPDEST PUSH1 0x20 SWAP4 PUSH1 0x1F DUP2 GT PUSH1 0x1 EQ PUSH3 0x144D JUMPI SWAP1 DUP2 PUSH3 0x4B2 SWAP4 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x78D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 SWAP7 PUSH1 0x0 SWAP2 PUSH3 0x1441 JUMPI POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH3 0x17FC JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x7 SSTORE PUSH1 0xE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0xC0 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH3 0x7AE JUMPI PUSH1 0x40 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH1 0x0 JUMPDEST PUSH1 0xA0 DUP2 LT PUSH3 0x142F JUMPI POP PUSH1 0x40 MLOAD PUSH3 0x500 DUP2 PUSH3 0x1687 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x33B932B2B7 PUSH1 0xD9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x51D DUP3 PUSH3 0x16E3 JUMP JUMPDEST MSTORE PUSH3 0x529 DUP2 PUSH3 0x16E3 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x538 DUP2 PUSH3 0x1687 JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH4 0x626C7565 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x554 DUP3 PUSH3 0x16F1 JUMP JUMPDEST MSTORE PUSH3 0x560 DUP2 PUSH3 0x16F1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x56F DUP2 PUSH3 0x1687 JUMP JUMPDEST PUSH1 0x3 DUP2 MSTORE PUSH3 0x1C9959 PUSH1 0xEA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x58A DUP3 PUSH3 0x1702 JUMP JUMPDEST MSTORE PUSH3 0x596 DUP2 PUSH3 0x1702 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x5A5 DUP2 PUSH3 0x1687 JUMP JUMPDEST PUSH1 0x6 DUP2 MSTORE PUSH6 0x707572706C65 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x5C3 DUP3 PUSH3 0x1713 JUMP JUMPDEST MSTORE PUSH3 0x5CF DUP2 PUSH3 0x1713 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x5DE DUP2 PUSH3 0x1687 JUMP JUMPDEST PUSH1 0x6 DUP2 MSTORE PUSH6 0x79656C6C6F77 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x5FC DUP3 PUSH3 0x1724 JUMP JUMPDEST MSTORE PUSH3 0x608 DUP2 PUSH3 0x1724 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x617 DUP2 PUSH3 0x1687 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x7479706573 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP2 LT PUSH3 0x141B JUMPI POP DUP1 PUSH1 0x6 PUSH1 0x5 PUSH1 0x25 SWAP4 ADD MSTORE KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x0 DUP2 SSTORE DUP2 PUSH3 0x13A5 JUMPI JUMPDEST POP POP SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP2 MLOAD DUP4 LT ISZERO PUSH3 0x7DA JUMPI PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 MLOAD PUSH3 0x67A DUP2 DUP4 DUP6 DUP9 ADD PUSH3 0x1735 JUMP JUMPDEST DUP2 ADD PUSH1 0x6 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP3 DUP3 MLOAD DUP2 LT ISZERO PUSH3 0x7C4 JUMPI PUSH1 0x20 DUP2 PUSH1 0x5 SHL DUP5 ADD ADD MLOAD SWAP4 DUP1 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH3 0x7AE JUMPI PUSH1 0x1 DUP3 ADD DUP1 DUP3 SSTORE DUP3 LT ISZERO PUSH3 0x7C4 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP5 MLOAD SWAP5 PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP7 GT PUSH3 0x7AE JUMPI PUSH3 0x6E9 DUP7 PUSH3 0x118 DUP5 SLOAD PUSH3 0x175A JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP8 GT PUSH1 0x1 EQ PUSH3 0x739 JUMPI SWAP6 DUP1 SWAP2 PUSH3 0x725 SWAP6 SWAP7 SWAP8 PUSH1 0x0 SWAP3 PUSH3 0x72D JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE PUSH3 0x1871 JUMP JUMPDEST SWAP2 SWAP1 PUSH3 0x659 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x70B JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP10 AND DUP2 LT PUSH3 0x795 JUMPI POP SWAP2 DUP8 SWAP2 PUSH1 0x1 SWAP4 PUSH3 0x725 SWAP8 SWAP9 SWAP10 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x77B JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x1871 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x76D JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH3 0x747 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x3C73766720786D6C6E733D22687474703A2F2F7777772E77332E6F72672F3230 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x30302F737667222077696474683D2234303022206865696768743D2234303022 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x2076696577426F783D223020302034303020343030223E000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x3C726563742077696474683D2234303022206865696768743D22343030222066 PUSH1 0x77 DUP3 ADD MSTORE PUSH12 0x34B6361E911198181811179F PUSH1 0xA1 SHL PUSH1 0x97 DUP3 ADD MSTORE PUSH18 0x1E3334B63A32B91034B21E9133B637BB911F PUSH1 0x71 SHL PUSH1 0xA3 DUP3 ADD MSTORE PUSH32 0x3C6665476175737369616E426C757220737464446576696174696F6E3D22332E PUSH1 0xB5 DUP3 ADD MSTORE PUSH18 0x1A91103932B9BAB63A1E9131363AB911179F PUSH1 0x71 SHL PUSH1 0xD5 DUP3 ADD MSTORE PUSH32 0x3C6665436F6D706F7369746520696E3D22536F75726365477261706869632220 PUSH1 0xE7 DUP3 ADD MSTORE PUSH32 0x696E323D22626C757222206F70657261746F723D226F766572222F3E00000000 PUSH2 0x107 DUP3 ADD MSTORE PUSH9 0x1E17B334B63A32B91F PUSH1 0xB9 SHL PUSH2 0x123 DUP3 ADD MSTORE PUSH32 0x3C7465787420783D223230302220793D223138302220666F6E742D66616D696C PUSH2 0x12C DUP3 ADD MSTORE PUSH32 0x793D22417269616C2220666F6E742D73697A653D223430222066696C6C3D2223 PUSH2 0x14C DUP3 ADD MSTORE PUSH32 0x6666662220746578742D616E63686F723D226D6964646C65222066696C746572 PUSH2 0x16C DUP3 ADD MSTORE PUSH32 0x3D2275726C2823676C6F7729223E4C756B736F4C6F6F676965733C2F74657874 PUSH2 0x18C DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0xF9 SHL PUSH2 0x1AC DUP3 ADD MSTORE PUSH32 0x3C7465787420783D223230302220793D223233302220666F6E742D66616D696C PUSH2 0x1AD DUP3 ADD MSTORE PUSH32 0x793D22417269616C2220666F6E742D73697A653D223230222066696C6C3D2223 PUSH2 0x1CD DUP3 ADD MSTORE PUSH32 0x3066302220746578742D616E63686F723D226D6964646C65222066696C746572 PUSH2 0x1ED DUP3 ADD MSTORE PUSH32 0x3D2275726C2823676C6F7729223E4D61747269782045646974696F6E3C2F7465 PUSH2 0x20D DUP3 ADD MSTORE PUSH3 0x3C3A1F PUSH1 0xE9 SHL PUSH2 0x22D DUP3 ADD MSTORE PUSH6 0x1E17B9BB339F PUSH1 0xD1 SHL PUSH2 0x230 DUP3 ADD MSTORE PUSH2 0x216 DUP2 MSTORE PUSH2 0x240 DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT DUP2 DUP4 LT OR PUSH3 0x7AE JUMPI PUSH3 0xAD5 SWAP2 PUSH1 0x40 MSTORE PUSH3 0x1897 JUMP JUMPDEST PUSH3 0xFA8 PUSH1 0x48 PUSH1 0x40 MLOAD PUSH3 0xB33 PUSH1 0x3A DUP3 PUSH1 0x20 DUP2 ADD SWAP7 PUSH32 0x646174613A696D6167652F7376672B786D6C3B6261736536342C000000000000 DUP9 MSTORE PUSH3 0xB22 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH3 0x1735 JUMP JUMPDEST DUP2 ADD SUB PUSH1 0x1A DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH3 0x16A3 JUMP JUMPDEST PUSH3 0xF03 PUSH2 0x27E PUSH3 0xB44 PUSH3 0x1A3B JUMP JUMPDEST SWAP3 PUSH3 0xB4F PUSH3 0x1A3B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP3 PUSH1 0x20 DUP5 ADD SWAP7 PUSH17 0x7B224C5350344D65746164617461223A7B PUSH1 0x78 SHL DUP9 MSTORE PUSH32 0x226E616D65223A224C756B736F4C6F6F67696573222C00000000000000000000 PUSH1 0x31 DUP7 ADD MSTORE PUSH32 0x226465736372697074696F6E223A224C756B736F4C6F6F676965732061726520 PUSH1 0x47 DUP7 ADD MSTORE PUSH32 0x4C554B534F205374616E64617264204C535038204E4654732077697468206120 PUSH1 0x67 DUP7 ADD MSTORE PUSH14 0x39B6B4B632901D149027B7363C9 PUSH1 0x95 SHL PUSH1 0x87 DUP7 ADD MSTORE PUSH3 0xC10 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 PUSH1 0x95 DUP10 ADD SWAP2 ADD PUSH3 0x1735 JUMP JUMPDEST DUP5 ADD SWAP1 PUSH32 0x204C756B736F4C6F6F6769657320617661696C61626C65206F6E206120707269 PUSH1 0x95 DUP4 ADD MSTORE PUSH32 0x636520637572766520696E6372656173696E6720302E32252077697468206561 PUSH1 0xB5 DUP4 ADD MSTORE PUSH32 0x6368206E6577206D696E742E2054686973204D61747269782045646974696F6E PUSH1 0xD5 DUP4 ADD MSTORE PUSH32 0x20666561747572657320616E696D61746564204D61747269782D7374796C6520 PUSH1 0xF5 DUP4 ADD MSTORE PUSH32 0x64657369676E7320666F722065616368204C6F6F6769652E222C000000000000 PUSH2 0x115 DUP4 ADD MSTORE PUSH32 0x226C696E6B73223A5B7B227469746C65223A2257656273697465222C2275726C PUSH2 0x12F DUP4 ADD MSTORE PUSH32 0x223A2268747470733A2F2F6C756B736F6C6F6F676965732E76657263656C2E61 PUSH2 0x14F DUP4 ADD MSTORE PUSH32 0x7070227D2C7B227469746C65223A2254776974746572222C2275726C223A2268 PUSH2 0x16F DUP4 ADD MSTORE PUSH32 0x747470733A2F2F747769747465722E636F6D2F6C756B736F4C6F6F6769657322 PUSH2 0x18F DUP4 ADD MSTORE PUSH3 0x1F574B PUSH1 0xEA SHL PUSH2 0x1AF DUP4 ADD MSTORE PUSH32 0x22696D61676573223A5B5B7B227769647468223A3430302C2268656967687422 PUSH2 0x1B2 DUP4 ADD MSTORE PUSH12 0x1D1A181816113AB936111D11 PUSH1 0xA1 SHL PUSH2 0x1D2 DUP4 ADD MSTORE MLOAD SWAP1 PUSH3 0xDCD DUP3 PUSH2 0x1DE SWAP5 DUP6 DUP5 ADD SWAP1 PUSH3 0x1735 JUMP JUMPDEST ADD SWAP1 PUSH5 0x89F57574B PUSH1 0xDA SHL SWAP1 DUP3 ADD MSTORE PUSH14 0x2261747472696275746573223A5B PUSH1 0x90 SHL PUSH2 0x1E3 DUP3 ADD MSTORE PUSH32 0x7B226B6579223A2274797065222C2276616C7565223A22636F6C6C656374696F PUSH2 0x1F1 DUP3 ADD MSTORE PUSH32 0x6E222C2274797065223A22737472696E67227D2C000000000000000000000000 PUSH2 0x211 DUP3 ADD MSTORE PUSH32 0x7B226B6579223A226C696D6974222C2276616C7565223A000000000000000000 PUSH2 0x225 DUP3 ADD MSTORE DUP2 MLOAD SWAP1 PUSH3 0xE82 DUP3 PUSH2 0x23C SWAP5 PUSH1 0x20 DUP7 DUP6 ADD SWAP2 ADD PUSH3 0x1735 JUMP JUMPDEST PUSH18 0xB089D1E5C19488E889B9D5B58995C889F4B PUSH1 0x72 SHL SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH32 0x7B226B6579223A226375727665222C2276616C7565223A3130302E322C227479 PUSH2 0x24E DUP3 ADD MSTORE PUSH13 0x7065223A226E756D626572227D PUSH1 0x98 SHL PUSH2 0x26E DUP3 ADD MSTORE PUSH1 0x5D PUSH1 0xF8 SHL PUSH2 0x27B DUP3 ADD MSTORE PUSH2 0x7D7D PUSH1 0xF0 SHL PUSH2 0x27C DUP3 ADD MSTORE SUB PUSH2 0x25E DUP2 ADD DUP8 MSTORE ADD DUP6 PUSH3 0x16A3 JUMP JUMPDEST PUSH3 0xF0E DUP5 PUSH3 0x1897 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP5 PUSH3 0xF68 PUSH1 0x3D DUP8 PUSH1 0x20 DUP2 ADD SWAP6 PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP8 MSTORE PUSH3 0xF57 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH3 0x1735 JUMP JUMPDEST DUP2 ADD SUB PUSH1 0x1D DUP2 ADD DUP10 MSTORE ADD DUP8 PUSH3 0x16A3 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH3 0xF97 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 PUSH6 0x379ABE35001 PUSH1 0xC5 SHL PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x28 DUP6 ADD MSTORE MLOAD DUP1 SWAP3 DUP6 DUP6 ADD SWAP1 PUSH3 0x1735 JUMP JUMPDEST DUP2 ADD SUB PUSH1 0x28 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH3 0x16A3 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x7890 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 MLOAD PUSH32 0xCE0CB05D718CBAC69F1841EA88F1ECBBD18B24F05BA47C3A562737C9F52148F3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x7AE JUMPI PUSH3 0x1004 DUP2 PUSH3 0x118 DUP5 SLOAD PUSH3 0x175A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH3 0x132E JUMPI SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x78D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP3 PUSH3 0x1063 SWAP4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x7890 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 PUSH1 0x0 SWAP2 PUSH3 0x122B JUMPI POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH3 0x17FC JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH2 0xE90 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH3 0x1080 DUP2 PUSH3 0x1687 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x78B0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 MLOAD PUSH32 0x4CBD1F2D64C647609FA4BDD3A58236F5DE1700B67AD10769949E53A351C3EA31 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x7AE JUMPI PUSH3 0x10DC DUP2 PUSH3 0x118 DUP5 SLOAD PUSH3 0x175A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH3 0x12B7 JUMPI SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x78D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP3 PUSH3 0x113B SWAP4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x78B0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 PUSH1 0x0 SWAP2 PUSH3 0x122B JUMPI POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH3 0x17FC JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH2 0xE90 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH3 0x1158 DUP2 PUSH3 0x1687 JUMP JUMPDEST PUSH32 0xD28C95357CF4C94D638A4F572D5D3DF8D7E1415C8B650E747A219C559D1435C8 PUSH1 0x0 DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 MLOAD SWAP2 PUSH32 0x9613C0ADFC28E5910313E791AD5AE672B5566422415144580003DC3FF108DD2D PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH3 0x7AE JUMPI PUSH3 0x11C7 DUP5 PUSH3 0x1CF DUP4 SLOAD PUSH3 0x175A JUMP JUMPDEST PUSH1 0x20 SWAP4 PUSH1 0x1F DUP2 GT PUSH1 0x1 EQ PUSH3 0x1237 JUMPI SWAP1 DUP2 PUSH3 0x1218 SWAP4 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x78D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 SWAP7 PUSH1 0x0 SWAP2 PUSH3 0x122B JUMPI POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH3 0x17FC JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH2 0x5D69 SWAP1 DUP2 PUSH3 0x1B07 DUP3 CODECOPY RETURN JUMPDEST SWAP1 POP DUP4 ADD MLOAD DUP8 PUSH3 0x14F JUMP JUMPDEST PUSH1 0x1F NOT DUP2 AND DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0x129E JUMPI POP SWAP2 PUSH1 0x1 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x78D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 SWAP8 DUP3 PUSH3 0x1218 SWAP8 SWAP7 SWAP6 LT PUSH3 0x1284 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x163 JUMP JUMPDEST DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 PUSH3 0x1277 JUMP JUMPDEST DUP6 DUP9 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP8 DUP9 ADD SWAP8 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 ADD PUSH3 0x1249 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP2 LT PUSH3 0x1315 JUMPI POP SWAP3 PUSH1 0x1 DUP4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x78B0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 SWAP4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x78D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 PUSH3 0x113B SWAP7 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x1284 JUMPI POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x163 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP6 DUP10 ADD MLOAD DUP2 SSTORE ADD SWAP4 ADD SWAP2 ADD PUSH3 0x12C4 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP2 LT PUSH3 0x138C JUMPI POP SWAP3 PUSH1 0x1 DUP4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x7890 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 SWAP4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x78D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 PUSH3 0x1063 SWAP7 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x1284 JUMPI POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x163 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP6 DUP10 ADD MLOAD DUP2 SSTORE ADD SWAP4 ADD SWAP2 ADD PUSH3 0x133B JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x652 JUMPI DUP1 PUSH3 0x13CA PUSH1 0x1 SWAP3 SLOAD PUSH3 0x175A JUMP JUMPDEST DUP1 PUSH3 0x13D9 JUMPI JUMPDEST POP ADD PUSH3 0x13B2 JUMP JUMPDEST PUSH1 0x1F DUP2 GT DUP4 EQ PUSH3 0x13F1 JUMPI POP PUSH1 0x0 DUP2 SSTORE JUMPDEST CODESIZE PUSH3 0x13D1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE PUSH3 0x1411 PUSH1 0x1F PUSH1 0x20 DUP5 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD DUP6 DUP4 ADD PUSH3 0x1797 JUMP JUMPDEST DUP2 DUP4 SSTORE SSTORE PUSH3 0x13EA JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP6 ADD ADD MLOAD DUP2 DUP5 ADD MSTORE ADD PUSH3 0x62F JUMP JUMPDEST DUP1 PUSH1 0x60 PUSH1 0x20 DUP1 SWAP4 DUP6 ADD ADD MSTORE ADD PUSH3 0x4E8 JUMP JUMPDEST SWAP1 POP DUP4 ADD MLOAD CODESIZE PUSH3 0x14F JUMP JUMPDEST PUSH1 0x1F NOT DUP2 AND DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0x14B3 JUMPI POP SWAP2 PUSH1 0x1 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x78D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 SWAP8 DUP3 PUSH3 0x4B2 SWAP8 SWAP7 SWAP6 LT PUSH3 0x1499 JUMPI POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x163 JUMP JUMPDEST DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH3 0x1277 JUMP JUMPDEST DUP6 DUP9 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP8 DUP9 ADD SWAP8 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 ADD PUSH3 0x145F JUMP JUMPDEST PUSH1 0x1F NOT DUP2 AND DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0x1518 JUMPI POP SWAP2 PUSH1 0x1 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x78D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 SWAP8 DUP3 PUSH3 0x3D6 SWAP8 SWAP7 SWAP6 LT PUSH3 0x1499 JUMPI POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x163 JUMP JUMPDEST DUP6 DUP9 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP8 DUP9 ADD SWAP8 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 ADD PUSH3 0x14DE JUMP JUMPDEST PUSH1 0x1F NOT DUP2 AND DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0x157D JUMPI POP SWAP2 PUSH1 0x1 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x78D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 SWAP8 DUP3 PUSH3 0x2FA SWAP8 SWAP7 SWAP6 LT PUSH3 0x1499 JUMPI POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x163 JUMP JUMPDEST DUP6 DUP9 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP8 DUP9 ADD SWAP8 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 ADD PUSH3 0x1543 JUMP JUMPDEST PUSH1 0x1F NOT DUP2 AND DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0x15F2 JUMPI POP DUP3 PUSH3 0x237 SWAP5 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x7870 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP8 SWAP9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x78D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP8 SWAP6 PUSH1 0x1 SWAP5 LT PUSH3 0x1499 JUMPI POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x163 JUMP JUMPDEST DUP6 DUP9 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP8 DUP9 ADD SWAP8 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 ADD PUSH3 0x15A8 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0x1657 JUMPI POP SWAP3 PUSH3 0x170 SWAP5 SWAP3 PUSH1 0x1 SWAP3 DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x78D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP9 SWAP7 LT PUSH3 0x1499 JUMPI POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x163 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP11 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH3 0x161E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6B620DB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x7AE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH3 0x7AE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x7AE JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH3 0x7C4 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH3 0x7C4 JUMPI PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x2 LT ISZERO PUSH3 0x7C4 JUMPI PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x3 LT ISZERO PUSH3 0x7C4 JUMPI PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x4 LT ISZERO PUSH3 0x7C4 JUMPI PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH3 0x1749 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x1738 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x178C JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x1776 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x176A JUMP JUMPDEST DUP2 DUP2 LT PUSH3 0x17A3 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1797 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH3 0x17C0 JUMPI POP POP POP JUMP JUMPDEST PUSH3 0x17EF SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH3 0x17F1 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH3 0x1797 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x17E1 JUMP JUMPDEST PUSH1 0x40 SWAP2 PUSH1 0x20 DUP3 MSTORE PUSH3 0x181E DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH3 0x1735 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH3 0x1881 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH3 0x1A16 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x7AE JUMPI PUSH1 0x40 MSTORE PUSH1 0x40 DUP3 MSTORE PUSH32 0x4142434445464748494A4B4C4D4E4F505152535455565758595A616263646566 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x6768696A6B6C6D6E6F707172737475767778797A303132333435363738392B2F PUSH1 0x40 DUP4 ADD MSTORE DUP1 MLOAD PUSH1 0x2 SWAP2 DUP3 DUP3 ADD DUP1 SWAP3 GT PUSH3 0x1881 JUMPI PUSH1 0x3 SWAP2 DUP3 SWAP1 DIV DUP1 DUP5 SHL SWAP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFE SHL SUB DUP2 AND SUB PUSH3 0x1881 JUMPI SWAP3 PUSH3 0x1961 PUSH3 0x1948 DUP7 PUSH3 0x16C7 JUMP JUMPDEST SWAP6 PUSH3 0x1958 PUSH1 0x40 MLOAD SWAP8 DUP9 PUSH3 0x16A3 JUMP JUMPDEST DUP1 DUP8 MSTORE PUSH3 0x16C7 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP3 CALLDATACOPY SWAP4 DUP3 SWAP2 DUP4 MLOAD DUP5 ADD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MLOAD SWAP5 PUSH1 0x0 DUP6 MSTORE JUMPDEST DUP4 DUP2 LT PUSH3 0x19C4 JUMPI POP POP POP POP MSTORE MLOAD MOD DUP1 PUSH1 0x1 EQ PUSH3 0x19B1 JUMPI PUSH1 0x2 EQ PUSH3 0x19A6 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x3D SWAP1 PUSH1 0x0 NOT ADD MSTORE8 SWAP1 JUMP JUMPDEST POP PUSH1 0x3D SWAP1 DUP2 PUSH1 0x0 NOT DUP3 ADD MSTORE8 PUSH1 0x1 NOT ADD MSTORE8 SWAP1 JUMP JUMPDEST DUP8 PUSH1 0x4 SWAP2 SWAP10 SWAP3 SWAP4 SWAP5 SWAP10 ADD SWAP2 DUP3 MLOAD PUSH1 0x1 SWAP1 PUSH1 0x3F SWAP1 DUP3 DUP3 DUP3 PUSH1 0x12 SHR AND DUP9 ADD ADD MLOAD DUP5 MSTORE8 DUP3 DUP3 DUP3 PUSH1 0xC SHR AND DUP9 ADD ADD MLOAD DUP4 DUP6 ADD MSTORE8 DUP3 DUP3 DUP3 PUSH1 0x6 SHR AND DUP9 ADD ADD MLOAD DUP9 DUP6 ADD MSTORE8 AND DUP6 ADD ADD MLOAD DUP10 DUP3 ADD MSTORE8 ADD SWAP8 SWAP3 SWAP2 SWAP1 PUSH3 0x1982 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH3 0x7AE JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE90 DUP1 JUMPDEST PUSH3 0x1AEF JUMPI POP PUSH3 0x1A53 DUP2 PUSH3 0x16C7 JUMP JUMPDEST SWAP1 PUSH3 0x1A63 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH3 0x16A3 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x1F NOT PUSH3 0x1A74 DUP3 PUSH3 0x16C7 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 SWAP2 CALLDATASIZE DUP4 DUP6 ADD CALLDATACOPY SWAP1 PUSH2 0xE90 DUP1 JUMPDEST PUSH3 0x1A8F JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0xA SWAP1 PUSH1 0x30 SWAP4 DUP3 DUP3 MOD DUP6 ADD DUP1 SWAP6 GT PUSH3 0x1881 JUMPI DUP1 ISZERO PUSH3 0x1881 JUMPI PUSH1 0x0 NOT ADD DUP1 SWAP5 DUP7 MLOAD DUP3 LT ISZERO PUSH3 0x7C4 JUMPI PUSH1 0xF8 SHL PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 AND PUSH1 0x0 BYTE SWAP1 DUP7 ADD DUP5 ADD MSTORE8 DIV DUP1 PUSH3 0x1A84 JUMP JUMPDEST SWAP1 PUSH3 0x1AFD PUSH1 0xA SWAP2 PUSH3 0x1871 JUMP JUMPDEST SWAP2 DIV DUP1 PUSH3 0x1A42 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x2A JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x25 JUMPI PUSH2 0x1D CALLDATASIZE PUSH2 0x20EC JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD RETURN JUMPDEST PUSH2 0x2138 JUMP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x17C96B8 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x16E023B3 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x1D26FCE6 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x1EAD90B0 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x1EF0352D EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x1F85E3CA EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x217B2270 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x2A3654A4 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x3BE699F9 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x3F879FAF EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x472DFCFB EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x49A6078D EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x511B6952 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x52058D8A EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x54F6127F EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x5A9C2B1C EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x6643A686 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x66D003AC EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x6963D438 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x76799136 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x7E87632C EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x7F23690C EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x8528247F EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x86A10DDD EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x8CDA5103 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x8D859F3E EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x97902421 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0xA3B261F2 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0xAD30DDBF EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xBE9F0E6F EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0xC65EB180 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xC68B3787 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xD445B978 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xD6C1407C EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xDB8C9663 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xDEDFF9C6 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0xEB93406B EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xF3BA2059 EQ PUSH2 0x239 JUMPI PUSH4 0xF76F950E SUB PUSH2 0xE JUMPI PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x1E81 JUMP JUMPDEST PUSH2 0x1DBA JUMP JUMPDEST PUSH2 0x1C66 JUMP JUMPDEST PUSH2 0x1BDF JUMP JUMPDEST PUSH2 0x1ADE JUMP JUMPDEST PUSH2 0x1A98 JUMP JUMPDEST PUSH2 0x1A5B JUMP JUMPDEST PUSH2 0x19A6 JUMP JUMPDEST PUSH2 0x1970 JUMP JUMPDEST PUSH2 0x1881 JUMP JUMPDEST PUSH2 0x1861 JUMP JUMPDEST PUSH2 0x17E1 JUMP JUMPDEST PUSH2 0x171D JUMP JUMPDEST PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x16D1 JUMP JUMPDEST PUSH2 0x12D0 JUMP JUMPDEST PUSH2 0x114F JUMP JUMPDEST PUSH2 0x1122 JUMP JUMPDEST PUSH2 0x1037 JUMP JUMPDEST PUSH2 0xF9E JUMP JUMPDEST PUSH2 0xE1D JUMP JUMPDEST PUSH2 0xDBF JUMP JUMPDEST PUSH2 0xD82 JUMP JUMPDEST PUSH2 0xD1D JUMP JUMPDEST PUSH2 0xCEE JUMP JUMPDEST PUSH2 0xCC2 JUMP JUMPDEST PUSH2 0xC9F JUMP JUMPDEST PUSH2 0xC80 JUMP JUMPDEST PUSH2 0x992 JUMP JUMPDEST PUSH2 0xC2A JUMP JUMPDEST PUSH2 0xBC6 JUMP JUMPDEST PUSH2 0xB1C JUMP JUMPDEST PUSH2 0xADF JUMP JUMPDEST PUSH2 0x9F3 JUMP JUMPDEST PUSH2 0x9AF JUMP JUMPDEST PUSH2 0x95D JUMP JUMPDEST PUSH2 0x91C JUMP JUMPDEST PUSH2 0x8E2 JUMP JUMPDEST PUSH2 0x76F JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST PUSH2 0x48B JUMP JUMPDEST PUSH2 0x455 JUMP JUMPDEST PUSH2 0x346 JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP1 DUP3 SUB PUSH2 0x341 JUMPI PUSH2 0x39D SWAP2 PUSH4 0x1D138B83 PUSH1 0xE1 SHL DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0x3B1 JUMPI JUMPDEST POP DUP2 ISZERO PUSH2 0x3A1 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AB SWAP2 POP PUSH2 0x234F JUMP JUMPDEST CODESIZE PUSH2 0x38A JUMP JUMPDEST SWAP1 SWAP2 POP PUSH4 0xA918FA6B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x3CE JUMPI JUMPDEST POP SWAP1 CODESIZE PUSH2 0x382 JUMP JUMPDEST PUSH4 0x18A6A9A5 PUSH1 0xE2 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x3E8 JUMPI JUMPDEST POP CODESIZE PUSH2 0x3C6 JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x40C JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3FC JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x435 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x452 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH2 0x39D PUSH2 0x477 PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x5C19 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x4DA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x4DA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x4DA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x4DA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4DA JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x341 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0x564 DUP4 PUSH2 0x536 JUMP JUMPDEST SWAP3 PUSH2 0x572 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x515 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x341 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x59C JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x58E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD SWAP1 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP3 DUP2 PUSH1 0x40 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x5DF JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x5FD PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0x41C JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0x5CF JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x341 JUMPI PUSH2 0x63E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x54D JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x341 JUMPI PUSH2 0x657 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x54D JUMP JUMPDEST SWAP1 DUP1 MLOAD DUP3 MLOAD SUB PUSH2 0x6C4 JUMPI PUSH2 0x66B DUP2 MLOAD PUSH2 0x2073 JUMP JUMPDEST SWAP2 PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x6B6 JUMPI DUP1 PUSH2 0x69A PUSH2 0x688 PUSH1 0x1 SWAP4 DUP7 PUSH2 0x20D3 JUMP JUMPDEST MLOAD PUSH2 0x693 DUP4 DUP7 PUSH2 0x20D3 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x5C19 JUMP JUMPDEST PUSH2 0x6A4 DUP3 DUP8 PUSH2 0x20D3 JUMP JUMPDEST MSTORE PUSH2 0x6AF DUP2 DUP7 PUSH2 0x20D3 JUMP JUMPDEST POP ADD PUSH2 0x66F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x39D DUP7 DUP3 PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x17D38EFF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xE8 SHL PUSH1 0x40 MLOAD SWAP1 PUSH3 0xFFFFFF PUSH1 0xE8 SHL AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4DA JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x341 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x73F DUP3 PUSH2 0x70D JUMP JUMPDEST SWAP3 PUSH2 0x74D PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x515 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x341 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x341 JUMPI PUSH2 0x79D PUSH2 0x39D SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x728 JUMP JUMPDEST PUSH2 0x7A5 PUSH2 0x5642 JUMP JUMPDEST PUSH2 0x7B9 PUSH2 0x7B4 PUSH1 0xE SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x5504 JUMP JUMPDEST PUSH2 0x7C8 PUSH2 0xE90 PUSH1 0x8 SLOAD LT PUSH2 0x5550 JUMP JUMPDEST PUSH2 0x7DC PUSH8 0x16345785D8A0000 CALLVALUE LT ISZERO PUSH2 0x558B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x7FA SWAP1 PUSH1 0xA SWAP1 JUMPDEST SLOAD LT PUSH2 0x55C4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x813 DUP2 SLOAD PUSH2 0x3417 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x828 PUSH2 0x823 PUSH1 0x8 SLOAD PUSH2 0x3417 JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH2 0x890 PUSH1 0x8 SLOAD SWAP2 PUSH2 0x838 NUMBER PUSH2 0x3224 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP7 DUP2 MSTORE SWAP3 BLOCKHASH SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SWAP1 DUP2 SHL DUP3 AND DUP2 DUP5 ADD MSTORE ADDRESS SWAP1 SHL AND PUSH1 0x74 DUP3 ADD MSTORE PUSH2 0x886 DUP2 PUSH1 0x88 DUP2 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x515 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP4 CALLER PUSH2 0x5918 JUMP JUMPDEST PUSH2 0x8BE PUSH1 0x0 DUP1 DUP1 DUP1 CALLVALUE PUSH20 0xA81A6A910FED20374361B35C451A4A44F86CED46 GAS CALL PUSH2 0x8B8 PUSH2 0x21C1 JUMP JUMPDEST POP PUSH2 0x5605 JUMP JUMPDEST PUSH2 0x8C8 PUSH1 0x1 PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST DUP1 ISZERO ISZERO SUB PUSH2 0x341 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x8FF DUP2 PUSH2 0x8D8 JUMP JUMPDEST PUSH2 0x907 PUSH2 0x30A3 JUMP JUMPDEST PUSH1 0xFF DUP1 NOT PUSH1 0xE SLOAD AND SWAP2 ISZERO ISZERO AND OR PUSH1 0xE SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x20 PUSH2 0x93A PUSH1 0x4 CALLDATALOAD PUSH2 0x266A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x341 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x20 PUSH2 0x988 PUSH1 0x4 CALLDATALOAD PUSH2 0x97F DUP2 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x27C1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0xE90 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH2 0x9E5 PUSH2 0x39D PUSH2 0x9CE PUSH2 0x49E3 JUMP JUMPDEST PUSH1 0x40 SWAP3 SWAP2 SWAP3 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x40 DUP6 MSTORE PUSH1 0x40 DUP6 ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x41C JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xA DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xA3F JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xA29 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xA1E JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP2 PUSH2 0xA5A DUP4 PUSH2 0xA0F JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 SWAP4 DUP5 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0xABC JUMPI POP PUSH1 0x1 EQ PUSH2 0xA7C JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP3 DUP4 PUSH1 0x0 KECCAK256 SWAP3 DUP5 PUSH1 0x0 SWAP5 JUMPDEST DUP4 DUP7 LT PUSH2 0xAA8 JUMPI POP POP POP POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0xA76 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD DUP4 ADD MSTORE SWAP5 ADD SWAP4 DUP6 SWAP1 DUP3 ADD PUSH2 0xA91 JUMP JUMPDEST SWAP3 SWAP5 POP POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0xA76 JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0x39D PUSH2 0xB15 PUSH2 0x477 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0xA49 JUMP JUMPDEST SUB DUP3 PUSH2 0x515 JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xBAE JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH2 0xB62 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x333D JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP2 DUP4 SWAP3 DUP4 ADD DUP2 DUP5 MSTORE DUP3 MLOAD DUP1 SWAP2 MSTORE DUP2 PUSH1 0x40 DUP6 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xB8E JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x5747CD1B PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xBE3 DUP2 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0xBEF DUP2 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH2 0xBFB DUP2 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x341 JUMPI PUSH2 0xC1E PUSH2 0xC28 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x728 JUMP JUMPDEST SWAP3 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x280C JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x4 CALLDATALOAD PUSH2 0xC4C DUP2 PUSH2 0x94C JUMP JUMPDEST PUSH2 0xC54 PUSH2 0x30A3 JUMP JUMPDEST SELFBALANCE SWAP1 DUP3 SWAP1 DUP3 ISZERO PUSH2 0xC76 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALL ISZERO PUSH2 0xC71 JUMPI STOP JUMPDEST PUSH2 0x2ED2 JUMP JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0xC5F JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH2 0x39D PUSH2 0x477 PUSH1 0x4 CALLDATALOAD PUSH2 0x2054 JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xE SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH20 0xA81A6A910FED20374361B35C451A4A44F86CED46 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x341 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x341 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x341 JUMPI CALLDATASIZE PUSH1 0x24 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD GT PUSH2 0x341 JUMPI PUSH2 0x39D SWAP2 PUSH1 0x24 PUSH2 0xD76 SWAP3 ADD PUSH2 0x26CE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x5AB JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xD9F DUP2 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE1A JUMPI PUSH2 0xDD9 PUSH2 0x30A3 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE8 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x341 JUMPI PUSH2 0x477 PUSH2 0x39D SWAP2 PUSH2 0x34FB JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x341 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0xE65 DUP4 PUSH2 0x536 JUMP JUMPDEST SWAP3 PUSH2 0xE73 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x515 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x341 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xE9D JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 DUP1 SWAP2 DUP4 CALLDATALOAD PUSH2 0xEAB DUP2 PUSH2 0x94C JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xE8F JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x341 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0xECD DUP4 PUSH2 0x536 JUMP JUMPDEST SWAP3 PUSH2 0xEDB PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x515 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x341 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xF05 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 DUP1 SWAP2 DUP4 CALLDATALOAD PUSH2 0xF13 DUP2 PUSH2 0x8D8 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xEF7 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x341 JUMPI DUP2 CALLDATALOAD SWAP1 PUSH2 0xF36 DUP3 PUSH2 0x536 JUMP JUMPDEST SWAP3 PUSH2 0xF44 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x515 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 DUP1 DUP5 GT PUSH2 0x341 JUMPI DUP5 DUP4 ADD SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0xF72 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x341 JUMPI DUP7 SWAP2 PUSH2 0xF93 DUP5 DUP5 DUP1 SWAP5 DUP10 ADD ADD PUSH2 0x728 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0xF62 JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x341 JUMPI PUSH2 0xFCF SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0xE4E JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x341 JUMPI PUSH2 0xFE7 SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0xE4E JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x341 JUMPI PUSH2 0xFFE SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x54D JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x341 JUMPI PUSH2 0x1016 SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0xEB6 JUMP JUMPDEST SWAP3 PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x341 JUMPI PUSH2 0xC28 SWAP6 PUSH2 0x1031 SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0xF1E JUMP JUMPDEST SWAP4 PUSH2 0x29DC JUMP JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x341 JUMPI PUSH2 0x1062 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x728 JUMP JUMPDEST PUSH2 0x106A PUSH2 0x30A3 JUMP JUMPDEST CALLVALUE PUSH2 0x107B JUMPI PUSH2 0xC28 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x23CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF36BA737 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0xE0 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x341 JUMPI DUP4 PUSH2 0x10BC SWAP2 PUSH1 0x4 ADD PUSH2 0x728 JUMP JUMPDEST SWAP3 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE8 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x341 JUMPI SWAP3 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x84 CALLDATALOAD SWAP3 PUSH1 0xA4 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x341 JUMPI PUSH2 0x10F0 SWAP2 PUSH1 0x4 ADD PUSH2 0x728 JUMP JUMPDEST SWAP1 PUSH1 0xC4 CALLDATALOAD PUSH2 0x452 DUP2 PUSH2 0x8D8 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1114 PUSH2 0x452 SWAP4 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x41C JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH2 0x113F PUSH2 0x1133 CALLDATASIZE PUSH2 0x108D JUMP JUMPDEST SWAP6 SWAP5 SWAP1 SWAP5 SWAP4 SWAP2 SWAP4 PUSH2 0x4EC4 JUMP JUMPDEST SWAP1 PUSH2 0x39D PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x10FD JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 PUSH2 0x116E DUP3 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x341 JUMPI PUSH2 0x118F SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x728 JUMP JUMPDEST SWAP2 PUSH2 0x1199 DUP3 PUSH2 0x266A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP3 SWAP2 CALLER DUP5 SUB PUSH2 0x1299 JUMPI POP DUP6 AND SWAP1 DUP2 ISZERO PUSH2 0x128A JUMPI DUP2 DUP4 EQ PUSH2 0x127B JUMPI PUSH2 0x11E2 PUSH2 0x11DE DUP8 PUSH2 0x11D9 DUP8 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x338C JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x124A JUMPI POP SWAP2 DUP1 PUSH2 0x1245 SWAP3 PUSH2 0xC28 SWAP7 SWAP5 PUSH32 0x1B1B58AA2EC0CEC2228B2D37124556D41F5A1F7B12F089171F896CC236671215 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1221 DUP11 DUP3 PUSH2 0x441 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x1237 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP3 CALLER PUSH1 0x20 DUP6 ADD PUSH2 0x276B JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x515 JUMP JUMPDEST PUSH2 0x2EDE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x14EC4D6D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP3 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD DUP7 SWAP1 MSTORE SWAP2 DUP3 SWAP2 ADD SUB SWAP1 REVERT JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x44FED6B1 PUSH1 0xE1 SHL DUP2 MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9577B8B3 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x2D938F51 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x12EC PUSH2 0x49E3 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0x12F8 DUP2 PUSH2 0x3596 JUMP JUMPDEST SWAP1 PUSH2 0x1302 SWAP1 PUSH2 0x3596 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH17 0x7B224C5350344D65746164617461223A7B PUSH1 0x78 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH22 0x89B985B59488E88931D5ADCDBD31BDBD9DA595CC88B PUSH1 0x52 SHL PUSH1 0x31 DUP3 ADD MSTORE PUSH32 0x226465736372697074696F6E223A224C756B736F4C6F6F676965732061726520 PUSH1 0x47 DUP3 ADD MSTORE PUSH32 0x4C554B534F205374616E64617264204C535038204E4654732077697468206120 PUSH1 0x67 DUP3 ADD MSTORE PUSH14 0x39B6B4B632901D149027B7363C9 PUSH1 0x95 SHL PUSH1 0x87 DUP3 ADD MSTORE SWAP3 DUP4 SWAP3 PUSH1 0x95 DUP5 ADD PUSH2 0x13B1 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH32 0x204C756B736F4C6F6F6769657320617661696C61626C65206F6E206120707269 DUP2 MSTORE PUSH32 0x636520637572766520696E6372656173696E6720302E32252077697468206561 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6368206E6577206D696E742E2054686973204D61747269782045646974696F6E PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x20666561747572657320616E696D61746564204D61747269782D7374796C6520 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x64657369676E7320666F722065616368204C6F6F6769652E222C000000000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x9A ADD PUSH32 0x226C696E6B73223A5B7B227469746C65223A2257656273697465222C2275726C DUP2 MSTORE PUSH32 0x223A2268747470733A2F2F6C756B736F6C6F6F676965732E76657263656C2E61 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x7070227D2C7B227469746C65223A2254776974746572222C2275726C223A2268 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x747470733A2F2F747769747465722E636F6D2F6C756B736F4C6F6F6769657322 PUSH1 0x60 DUP3 ADD MSTORE PUSH3 0x1F574B PUSH1 0xEA SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x83 ADD PUSH32 0x22696D61676573223A5B5B7B227769647468223A3430302C2268656967687422 DUP2 MSTORE PUSH12 0x1D1A181816113AB936111D11 PUSH1 0xA1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2C ADD PUSH2 0x1557 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH5 0x89F57574B PUSH1 0xDA SHL DUP2 MSTORE PUSH1 0x5 ADD PUSH14 0x2261747472696275746573223A5B PUSH1 0x90 SHL DUP2 MSTORE PUSH1 0xE ADD PUSH32 0x7B226B6579223A2274797065222C2276616C7565223A22636F6C6C656374696F DUP2 MSTORE PUSH20 0x1B888B089D1E5C19488E889CDD1C9A5B99C89F4B PUSH1 0x62 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD PUSH32 0x7B226B6579223A226C696D6974222C2276616C7565223A000000000000000000 DUP2 MSTORE PUSH1 0x17 ADD PUSH2 0x15EE SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH18 0xB089D1E5C19488E889B9D5B58995C889F4B PUSH1 0x72 SHL DUP2 MSTORE PUSH1 0x12 ADD PUSH32 0x7B226B6579223A226375727665222C2276616C7565223A3130302E322C227479 DUP2 MSTORE PUSH13 0x7065223A226E756D626572227D PUSH1 0x98 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2D ADD PUSH1 0x5D PUSH1 0xF8 SHL DUP2 MSTORE PUSH1 0x1 ADD PUSH2 0x7D7D PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD SUB PUSH1 0x1F NOT SWAP1 DUP2 DUP2 ADD DUP4 MSTORE PUSH2 0x166E SWAP1 DUP4 PUSH2 0x515 JUMP JUMPDEST PUSH2 0x1677 DUP3 PUSH2 0x4D46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x3D DUP3 ADD PUSH2 0x16B1 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP3 MSTORE PUSH2 0x16C1 SWAP1 DUP3 PUSH2 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH2 0x39D SWAP2 DUP4 PUSH2 0x10FD JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0x16345785D8A0000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x341 JUMPI PUSH2 0x1749 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x54D JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x341 JUMPI PUSH2 0x1761 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0xF1E JUMP JUMPDEST SWAP2 PUSH2 0x176A PUSH2 0x30A3 JUMP JUMPDEST CALLVALUE PUSH2 0x17D2 JUMPI DUP2 MLOAD DUP4 MLOAD SUB PUSH2 0x17C3 JUMPI DUP2 MLOAD ISZERO PUSH2 0x17B4 JUMPI POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xC28 JUMPI DUP1 PUSH2 0x17AE PUSH2 0x179C PUSH1 0x1 SWAP4 DUP6 PUSH2 0x20D3 JUMP JUMPDEST MLOAD PUSH2 0x17A7 DUP4 DUP8 PUSH2 0x20D3 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x23CC JUMP JUMPDEST ADD PUSH2 0x1783 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x97DA5F95 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3BCC8979 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF36BA737 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x17FF DUP2 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x181E SWAP1 PUSH2 0x333D JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP2 DUP4 SWAP3 DUP4 ADD DUP2 DUP5 MSTORE DUP3 MLOAD DUP1 SWAP2 MSTORE DUP2 PUSH1 0x40 DUP6 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x184A JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x183B JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH2 0x39D PUSH2 0x477 PUSH2 0x1875 CALLDATASIZE PUSH2 0x108D JUMP JUMPDEST SWAP6 SWAP5 SWAP1 SWAP5 SWAP4 SWAP2 SWAP4 PUSH2 0x387C JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x341 JUMPI PUSH2 0x18B2 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x54D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x341 JUMPI PUSH2 0x18C9 SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0x54D JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x341 JUMPI PUSH2 0x18E1 SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0xF1E JUMP JUMPDEST SWAP3 PUSH2 0x18EA PUSH2 0x30A3 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD DUP1 SWAP2 EQ SWAP1 DUP2 ISZERO SWAP2 PUSH2 0x1964 JUMPI JUMPDEST POP PUSH2 0x1955 JUMPI DUP2 MLOAD ISZERO PUSH2 0x1946 JUMPI POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xC28 JUMPI DUP1 PUSH2 0x1940 PUSH2 0x1923 PUSH1 0x1 SWAP4 DUP6 PUSH2 0x20D3 JUMP JUMPDEST MLOAD PUSH2 0x192E DUP4 DUP8 PUSH2 0x20D3 JUMP JUMPDEST MLOAD PUSH2 0x1939 DUP5 DUP10 PUSH2 0x20D3 JUMP JUMPDEST MLOAD SWAP2 PUSH2 0x2D0F JUMP JUMPDEST ADD PUSH2 0x190A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x80C98305 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x17D38EFF PUSH1 0xE1 SHL DUP2 MSTORE REVERT JUMPDEST SWAP1 POP DUP5 MLOAD EQ ISZERO CODESIZE PUSH2 0x18FA JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH2 0x39D PUSH2 0xB15 PUSH2 0x477 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0xA49 JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 SWAP1 DUP2 CALLDATALOAD PUSH2 0x19C5 PUSH2 0x339F JUMP JUMPDEST PUSH2 0x19CD PUSH2 0x33CB JUMP JUMPDEST SWAP4 PUSH1 0x0 SWAP3 DUP4 JUMPDEST DUP6 DUP2 LT PUSH2 0x19E8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x39D DUP10 DUP3 PUSH2 0x441 JUMP JUMPDEST PUSH2 0x1A56 SWAP1 PUSH2 0x1A32 PUSH2 0x1A0A PUSH1 0xF DUP6 DUP5 BYTE DUP12 PUSH2 0x1A2A PUSH2 0x1A18 DUP6 DUP5 DUP13 SHR DUP7 AND DUP14 PUSH2 0x3433 JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH2 0x1A21 DUP9 PUSH2 0x3444 JUMP JUMPDEST SWAP1 DUP14 BYTE SWAP3 PUSH2 0x3433 JUMP JUMPDEST MSTORE8 AND DUP8 PUSH2 0x3433 JUMP JUMPDEST PUSH2 0x1A50 PUSH2 0x1A46 PUSH2 0x1A41 DUP5 PUSH2 0x3444 JUMP JUMPDEST PUSH2 0x34A7 JUMP JUMPDEST SWAP2 DUP9 BYTE SWAP2 DUP11 PUSH2 0x3433 JUMP JUMPDEST MSTORE8 PUSH2 0x3417 JUMP JUMPDEST PUSH2 0x19D3 JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1A78 DUP2 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x341 JUMPI PUSH2 0x1ACB PUSH2 0xC28 SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x728 JUMP JUMPDEST PUSH2 0x1AD3 PUSH2 0x30A3 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x2D0F JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1AFB DUP2 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x1B0B DUP4 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x341 JUMPI PUSH2 0x1B2A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x728 JUMP JUMPDEST PUSH2 0x1B33 DUP4 PUSH2 0x266A JUMP JUMPDEST SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP1 CALLER DUP3 SWAP1 SUB PUSH2 0x1BA8 JUMPI JUMPDEST DUP5 AND SWAP1 DUP2 ISZERO PUSH2 0x1B96 JUMPI EQ PUSH2 0x1B84 JUMPI PUSH2 0x1B64 DUP3 DUP3 DUP7 DUP9 DUP8 PUSH2 0x2AAC JUMP JUMPDEST PUSH2 0x1B6A JUMPI STOP JUMPDEST PUSH2 0xC28 SWAP4 PUSH2 0x1237 PUSH2 0x1245 SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 PUSH1 0x20 DUP6 ADD PUSH2 0x2796 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x44FED6B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9577B8B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP5 DUP2 AND CALLER EQ PUSH2 0x1B49 JUMPI PUSH1 0x40 MLOAD PUSH4 0x760B5ACD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x341 JUMPI PUSH2 0x1C0F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x54D JUMP JUMPDEST PUSH2 0x1C19 DUP2 MLOAD PUSH2 0x2073 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1C58 JUMPI DUP1 PUSH2 0x1C3C PUSH2 0x1C36 PUSH1 0x1 SWAP4 DUP6 PUSH2 0x20D3 JUMP JUMPDEST MLOAD PUSH2 0x2054 JUMP JUMPDEST PUSH2 0x1C46 DUP3 DUP7 PUSH2 0x20D3 JUMP JUMPDEST MSTORE PUSH2 0x1C51 DUP2 DUP6 PUSH2 0x20D3 JUMP JUMPDEST POP ADD PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x39D DUP6 DUP3 PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE1A JUMPI PUSH2 0x39D SWAP1 PUSH2 0x1C7F PUSH2 0x5642 JUMP JUMPDEST PUSH2 0x1C8E PUSH2 0x7B4 PUSH1 0xE SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1C9D PUSH2 0xE90 PUSH1 0x8 SLOAD LT PUSH2 0x5550 JUMP JUMPDEST PUSH2 0x1CB1 PUSH8 0x16345785D8A0000 CALLVALUE LT ISZERO PUSH2 0x558B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1CCC SWAP1 PUSH1 0xA SWAP1 PUSH2 0x7F3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1CE5 DUP2 SLOAD PUSH2 0x3417 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1CF5 PUSH2 0x823 PUSH1 0x8 SLOAD PUSH2 0x3417 JUMP JUMPDEST PUSH2 0x8BE PUSH1 0x8 SLOAD SWAP2 PUSH2 0x1D7F PUSH2 0x1D08 NUMBER PUSH2 0x3224 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP8 DUP2 MSTORE SWAP3 BLOCKHASH SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SWAP1 DUP2 SHL DUP3 AND DUP2 DUP5 ADD MSTORE ADDRESS SWAP1 SHL AND PUSH1 0x74 DUP3 ADD MSTORE PUSH2 0x1D4C DUP2 PUSH1 0x88 DUP2 ADD PUSH2 0x878 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x1D57 PUSH2 0x21AE JUMP JUMPDEST POP PUSH2 0x1D61 CALLER PUSH2 0x56E1 JUMP JUMPDEST ISZERO PUSH2 0x1DB2 JUMPI PUSH2 0x1D6F CALLER PUSH2 0x5761 JUMP JUMPDEST SWAP1 DUP2 MLOAD ISZERO PUSH2 0x1DA2 JUMPI JUMPDEST DUP6 CALLER PUSH2 0x5918 JUMP JUMPDEST DUP1 DUP1 DUP1 CALLVALUE PUSH20 0xA81A6A910FED20374361B35C451A4A44F86CED46 GAS CALL PUSH2 0x8B8 PUSH2 0x21C1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DAC PUSH2 0x56BD JUMP JUMPDEST SWAP1 PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0x1DAC PUSH2 0x5698 JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1DD7 DUP2 PUSH2 0x94C JUMP JUMPDEST PUSH2 0x1DDF PUSH2 0x30A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 ISZERO PUSH2 0x1E2D JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE SWAP1 SWAP3 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x341 JUMPI PUSH2 0x1EB5 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x728 JUMP JUMPDEST PUSH2 0x1EBE DUP3 PUSH2 0x266A JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x1FFE JUMPI PUSH1 0x0 SWAP3 DUP3 DUP5 MSTORE PUSH1 0x20 SWAP1 PUSH1 0xD DUP3 MSTORE PUSH1 0x40 DUP6 KECCAK256 SWAP2 DUP4 MLOAD SWAP2 DUP3 GT PUSH2 0x4DA JUMPI PUSH2 0x1EFE DUP3 PUSH2 0x1EF8 DUP6 SLOAD PUSH2 0xA0F JUMP JUMPDEST DUP6 PUSH2 0x2557 JUMP JUMPDEST DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1F6C JUMPI POP SWAP2 DUP2 PUSH32 0xBAB5FBABBF1262857155D5133D7829BD5739A99EB04EE435FE0E160483B1E8A SWAP5 SWAP3 PUSH2 0x1F5B SWAP5 DUP9 SWAP2 PUSH2 0x1F61 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x441 JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST SWAP1 POP DUP4 ADD MLOAD CODESIZE PUSH2 0x1F3B JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND PUSH2 0x1F81 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 DUP9 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1FE6 JUMPI POP POP SWAP3 PUSH2 0x1F5B SWAP5 SWAP3 PUSH1 0x1 SWAP3 DUP3 PUSH32 0xBAB5FBABBF1262857155D5133D7829BD5739A99EB04EE435FE0E160483B1E8A SWAP9 SWAP7 LT PUSH2 0x1FCD JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1F4F JUMP JUMPDEST DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x1FC1 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x1F85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2737BA103A37B5B2B71037BBB732B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH2 0x39D PUSH2 0x477 PUSH1 0x4 CALLDATALOAD PUSH2 0x3596 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0xB15 PUSH2 0x452 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0xA49 JUMP JUMPDEST SWAP1 PUSH2 0x207D DUP3 PUSH2 0x536 JUMP JUMPDEST PUSH2 0x208A PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x515 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x209B PUSH1 0x1F NOT SWAP2 PUSH2 0x536 JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x20AC JUMPI POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x60 PUSH1 0x20 DUP1 SWAP4 DUP6 ADD ADD MSTORE ADD PUSH2 0x20A0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x20E7 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x20BD JUMP JUMPDEST PUSH1 0x4 CALLDATASIZE LT PUSH2 0x20FD JUMPI PUSH2 0x452 SWAP1 PUSH2 0x21F1 JUMP JUMPDEST PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH4 0xE5099EE3 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP4 ADD MSTORE DUP1 PUSH1 0x24 DUP4 ADD MSTORE DUP1 PUSH1 0x0 DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x2150 JUMPI PUSH1 0x40 MLOAD PUSH4 0x30FA4A21 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH4 0xE5099EE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP1 SWAP3 SWAP2 DUP3 CALLDATACOPY ADD PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x34 SWAP4 SWAP2 DUP2 PUSH1 0x0 DUP3 CALLDATACOPY ADD SWAP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 PUSH1 0x60 SHL AND DUP3 MSTORE PUSH1 0x14 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x21BB DUP3 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x21EC JUMPI RETURNDATASIZE SWAP1 PUSH2 0x21D2 DUP3 PUSH2 0x70D JUMP JUMPDEST SWAP2 PUSH2 0x21E0 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x515 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL PUSH1 0x0 CALLDATALOAD AND SWAP1 PUSH2 0x223E PUSH2 0x2239 PUSH1 0x40 MLOAD PUSH10 0x6773C5A04A6D4300884B PUSH1 0xB1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x2A DUP3 ADD MSTORE DUP5 PUSH1 0x2C DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x2234 DUP2 PUSH2 0x4DF JUMP JUMPDEST PUSH2 0x232C JUMP JUMPDEST PUSH2 0x2054 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x14 DUP2 EQ ISZERO SWAP1 DUP2 PUSH2 0x22EB JUMPI JUMPDEST POP PUSH2 0x22C6 JUMPI PUSH2 0x225A SWAP1 PUSH2 0x22F5 JUMP JUMPDEST PUSH1 0x60 SHR SWAP2 DUP3 ISZERO PUSH2 0x22A2 JUMPI POP PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x40 MLOAD PUSH2 0x2283 DUP2 PUSH2 0x878 PUSH1 0x20 DUP3 ADD SWAP5 CALLVALUE SWAP1 CALLER SWAP1 DUP8 PUSH2 0x2184 JUMP JUMPDEST MLOAD SWAP2 CALLVALUE SWAP1 GAS CALL PUSH2 0x2291 PUSH2 0x21C1 JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x229A JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xBB370B2B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x42BFE79F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x1277 SWAP1 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST SWAP1 POP ISZERO ISZERO CODESIZE PUSH2 0x224C JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 MLOAD SWAP3 ADD MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 DUP2 AND SWAP4 PUSH1 0x14 DUP2 LT PUSH2 0x231D JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x14 SUB PUSH1 0x3 SHL DUP3 SWAP1 SHL AND AND SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD MLOAD SWAP1 PUSH1 0x20 DUP2 LT PUSH2 0x2340 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH1 0x3 SHL SHL AND SWAP1 JUMP JUMPDEST PUSH2 0x238C PUSH2 0x2239 PUSH1 0x40 MLOAD PUSH10 0x6773C5A04A6D4300884B PUSH1 0xB1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x2A DUP3 ADD MSTORE PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x2C DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x2234 DUP2 PUSH2 0x4DF JUMP JUMPDEST DUP1 MLOAD PUSH1 0x14 DUP2 EQ ISZERO SWAP1 DUP2 PUSH2 0x23C2 JUMPI JUMPDEST POP PUSH2 0x22C6 JUMPI PUSH2 0x23A8 SWAP1 PUSH2 0x22F5 JUMP JUMPDEST PUSH1 0x60 SHR SWAP1 DUP2 ISZERO PUSH2 0x23BB JUMPI PUSH2 0x452 SWAP2 PUSH2 0x3158 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 POP ISZERO ISZERO CODESIZE PUSH2 0x239A JUMP JUMPDEST SWAP1 PUSH32 0xF675E9361AF1C1664C1868CFA3EB97672D6B1A513AA5B81DEC34C9EE330E818D DUP3 EQ PUSH2 0x24E6 JUMPI PUSH32 0xDEBA1E292F8BA88238E10AB3C7F88BD4BE4FAC56CAD5194B6ECCEAF653468AF1 DUP3 SUB PUSH2 0x242D JUMPI PUSH1 0x40 MLOAD PUSH4 0x85C169BD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH32 0x2F0A68AB07768E01943A599E73362A0E17A63A72E94DD2E384D2C1D4DB932756 DUP3 SUB PUSH2 0x2466 JUMPI PUSH1 0x40 MLOAD PUSH4 0xECEAB67 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH32 0xE0261FA95DB2EB3B5439BD033CDA66D56B96F92F243A8228FD87550ED7BDFDB3 DUP3 SUB PUSH2 0x249F JUMPI PUSH1 0x40 MLOAD PUSH4 0x4EF6D7FB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x24E1 DUP2 PUSH2 0x1F4F PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 SWAP4 PUSH2 0x24DC DUP7 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x259C JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1B324005 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP2 PUSH2 0x2512 SWAP2 DUP4 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x2521 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2516 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x253A JUMPI POP POP JUMP JUMPDEST PUSH2 0x2555 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x1F PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 ADD PUSH1 0x5 SHR DUP2 ADD SWAP1 PUSH2 0x2516 JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x2566 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x2555 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x2592 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2516 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x2585 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4DA JUMPI PUSH2 0x25C3 DUP2 PUSH2 0x25BD DUP5 SLOAD PUSH2 0xA0F JUMP JUMPDEST DUP5 PUSH2 0x2557 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x25FF JUMPI POP DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x25F4 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x25DE JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 PUSH2 0x2615 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x2652 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x2639 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x262F JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x261A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0xBAE JUMPI POP SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x20E7 JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x341 JUMPI ADD SWAP1 DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x341 JUMPI PUSH1 0x20 ADD DUP3 CALLDATASIZE SUB DUP2 SGT PUSH2 0x341 JUMPI SWAP2 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x26D9 DUP2 PUSH2 0x2073 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP2 DUP3 JUMPDEST DUP2 DUP2 LT PUSH2 0x26EC JUMPI POP POP POP POP JUMP JUMPDEST DUP4 DUP1 PUSH2 0x26F9 DUP4 DUP6 DUP8 PUSH2 0x268D JUMP JUMPDEST PUSH1 0x40 SWAP4 SWAP2 PUSH2 0x270B DUP6 MLOAD DUP1 SWAP4 DUP2 SWAP4 PUSH2 0x2176 JUMP JUMPDEST SUB SWAP1 ADDRESS GAS DELEGATECALL SWAP1 PUSH2 0x2719 PUSH2 0x21C1 JUMP JUMPDEST SWAP2 ISZERO PUSH2 0x2740 JUMPI POP SWAP1 PUSH1 0x1 SWAP2 PUSH2 0x272E DUP3 DUP10 PUSH2 0x20D3 JUMP JUMPDEST MSTORE PUSH2 0x2739 DUP2 DUP9 PUSH2 0x20D3 JUMP JUMPDEST POP ADD PUSH2 0x26DF JUMP JUMPDEST DUP2 MLOAD SWAP2 SWAP3 SWAP2 ISZERO PUSH2 0x2752 JUMPI DUP3 MLOAD PUSH1 0x20 DUP5 ADD REVERT JUMPDEST MLOAD PUSH4 0x234EB819 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 SWAP2 POP REVERT JUMPDEST PUSH2 0x452 SWAP4 SWAP3 PUSH1 0x80 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP3 ADD MSTORE DUP2 PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST PUSH2 0x452 SWAP4 SWAP3 PUSH1 0x80 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE DUP2 PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x27D3 DUP5 PUSH2 0x266A JUMP JUMPDEST AND SWAP2 AND SWAP1 DUP2 EQ SWAP2 DUP3 ISZERO PUSH2 0x27E5 JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH2 0x452 SWAP3 POP PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE ADD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP4 SWAP2 PUSH2 0x281A DUP2 CALLER PUSH2 0x27C1 JUMP JUMPDEST ISZERO PUSH2 0x29BE JUMPI PUSH2 0x2828 DUP2 PUSH2 0x266A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP5 DUP3 AND SWAP2 DUP3 DUP5 SUB PUSH2 0x298E JUMPI DUP1 DUP9 AND SWAP4 DUP5 ISZERO PUSH2 0x297C JUMPI PUSH2 0x2852 DUP7 PUSH2 0x266A JUMP JUMPDEST SWAP2 DUP3 AND SUB PUSH2 0x294C JUMPI POP POP SWAP3 PUSH2 0x2942 DUP4 DUP1 PUSH2 0x2555 SWAP10 SWAP8 SWAP5 PUSH2 0x1237 SWAP10 SWAP8 PUSH2 0x287A PUSH2 0x2947 SWAP9 DUP8 PUSH2 0x2C11 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x289D SWAP1 DUP5 SWAP1 PUSH2 0x3288 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x28C1 SWAP1 DUP5 SWAP1 PUSH2 0x31A2 JUMP JUMPDEST POP PUSH2 0x28F9 DUP10 PUSH2 0x28DA DUP6 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xB333C813A7426A7A11E2B190CAD52C44119421594B47F6F32ACE6D8C7207B2BF SWAP1 DUP1 PUSH2 0x292B DUP11 DUP15 CALLER DUP5 PUSH2 0x2B75 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP5 DUP6 SWAP3 DUP9 DUP7 CALLER PUSH1 0x20 DUP8 ADD PUSH2 0x2BD7 JUMP JUMPDEST PUSH2 0x2F7B JUMP JUMPDEST PUSH2 0x3017 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5A9C31D3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x24ECEF4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2D938F51 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE DUP8 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x1294D2A9 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP5 SWAP4 SWAP1 SWAP2 SWAP3 DUP6 MLOAD SWAP4 DUP4 MLOAD DUP6 EQ DUP1 ISZERO SWAP1 PUSH2 0x2AA1 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x2A96 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x2A8B JUMPI JUMPDEST PUSH2 0x2A79 JUMPI PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH2 0x2A16 JUMPI POP POP POP POP POP POP SWAP1 POP JUMP JUMPDEST DUP1 PUSH2 0x2A73 PUSH2 0x2A36 PUSH2 0x2A29 PUSH1 0x1 SWAP5 DUP13 PUSH2 0x20D3 JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x2A43 PUSH2 0x2A29 DUP5 DUP11 PUSH2 0x20D3 JUMP JUMPDEST PUSH2 0x2A4D DUP5 DUP8 PUSH2 0x20D3 JUMP JUMPDEST MLOAD PUSH2 0x2A61 PUSH2 0x2A5B DUP7 DUP11 PUSH2 0x20D3 JUMP JUMPDEST MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x2A6C DUP7 DUP12 PUSH2 0x20D3 JUMP JUMPDEST MLOAD SWAP4 PUSH2 0x280C JUMP JUMPDEST ADD PUSH2 0x2A05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x93A83119 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP DUP3 MLOAD DUP6 EQ ISZERO PUSH2 0x29FE JUMP JUMPDEST POP DUP2 MLOAD DUP6 EQ ISZERO PUSH2 0x29F7 JUMP JUMPDEST POP DUP1 MLOAD DUP6 EQ ISZERO PUSH2 0x29F0 JUMP JUMPDEST SWAP2 SWAP4 SWAP3 DUP5 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x2AD3 DUP3 DUP3 AND DUP1 SWAP7 PUSH2 0x3288 JUMP JUMPDEST ISZERO PUSH2 0x2B22 JUMPI POP SWAP1 PUSH2 0x2B1D PUSH32 0xC78CD419D6136F9F1C1C6AEC1D3FAE098CFFAF8BC86314A8F2685E32FE574E3C SWAP4 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x40 PUSH1 0x20 DUP6 ADD MSTORE AND SWAP6 PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x12A8C6A3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x452 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x452 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x452 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x452 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x5 SWAP2 PUSH1 0x20 SWAP4 DUP4 DUP6 MSTORE PUSH1 0x40 SWAP2 DUP3 DUP2 KECCAK256 SWAP5 DUP6 SLOAD SWAP6 DUP3 JUMPDEST DUP8 DUP2 LT PUSH2 0x2C3F JUMPI POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 SLOAD ISZERO PUSH2 0x20E7 JUMPI DUP2 DUP5 MSTORE DUP9 DUP5 KECCAK256 SLOAD DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 PUSH2 0x2C64 DUP3 PUSH2 0x4BF JUMP JUMPDEST DUP7 DUP3 MSTORE DUP10 DUP8 MSTORE DUP6 DUP13 MSTORE PUSH2 0x2C79 DUP4 DUP11 DUP10 KECCAK256 PUSH2 0x3288 JUMP JUMPDEST ISZERO PUSH2 0x2CCB JUMPI PUSH1 0x1 SWAP4 SWAP3 PUSH32 0xC78CD419D6136F9F1C1C6AEC1D3FAE098CFFAF8BC86314A8F2685E32FE574E3C DUP14 DUP10 PUSH2 0x2CC2 DUP15 SWAP7 DUP15 SWAP7 DUP15 DUP9 DUP1 MLOAD SWAP7 DUP8 SWAP7 DUP8 MSTORE DUP7 ADD MSTORE AND SWAP7 DUP4 ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST SUB SWAP1 LOG4 ADD PUSH2 0x2C2D JUMP JUMPDEST DUP9 MLOAD PUSH4 0x12A8C6A3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x40 DUP3 MSTORE PUSH2 0x2555 DUP3 PUSH2 0x4FA JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x2D1B DUP4 DUP4 PUSH2 0x2CF2 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 SWAP3 ADD KECCAK256 PUSH1 0x0 MSTORE PUSH1 0x1 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP4 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x4DA JUMPI PUSH2 0x2D57 DUP4 PUSH2 0x2D51 DUP7 SLOAD PUSH2 0xA0F JUMP JUMPDEST DUP7 PUSH2 0x2557 JUMP JUMPDEST DUP1 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x2DC3 JUMPI POP SWAP2 DUP1 DUP1 PUSH2 0x2DB3 SWAP6 SWAP4 PUSH32 0xA6E4251F855F750545FE414F120DB91C76B88DEF14D120969E5BB2D3F05DEBBB SWAP8 SWAP6 PUSH1 0x0 SWAP4 PUSH2 0x2DB8 JUMPI JUMPDEST POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x441 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST DUP7 ADD MLOAD SWAP3 POP CODESIZE PUSH2 0x2D97 JUMP JUMPDEST SWAP1 PUSH1 0x1F SWAP4 SWAP3 SWAP4 NOT DUP4 AND PUSH2 0x2DDB DUP7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2E26 JUMPI POP POP SWAP2 DUP4 SWAP2 PUSH2 0x2DB3 SWAP7 SWAP5 PUSH32 0xA6E4251F855F750545FE414F120DB91C76B88DEF14D120969E5BB2D3F05DEBBB SWAP9 SWAP7 SWAP5 LT PUSH2 0x1FCD JUMPI POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1F4F JUMP JUMPDEST DUP1 DUP8 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP13 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x2DE0 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x341 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x341 JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x341 JUMPI DUP1 MLOAD PUSH2 0x2E6F DUP2 PUSH2 0x70D JUMP JUMPDEST SWAP3 PUSH2 0x2E7D PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x515 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x341 JUMPI PUSH2 0x452 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x3F9 JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH2 0x452 SWAP3 PUSH32 0xB084A55EBF70FD3C06FD755269DAC2212C4D3F0F4D09079780BFA50C1B2984D DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x2EE7 DUP2 PUSH2 0x30FB JUMP JUMPDEST PUSH2 0x2EEF JUMPI POP POP JUMP JUMPDEST PUSH2 0x2F42 PUSH1 0x0 SWAP3 SWAP2 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x1AED5A85 PUSH1 0xE2 SHL DUP4 MSTORE PUSH32 0x8A1C15A8799F71B547E08E2BCB2E85257E81B0A07EEE2CE6712549EEF1F00970 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST SUB SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0xC71 JUMPI PUSH2 0x2F5C JUMPI POP JUMP JUMPDEST PUSH2 0x2F78 SWAP1 RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x2F70 DUP2 DUP4 PUSH2 0x515 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2E3D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2F84 DUP2 PUSH2 0x30FB JUMP JUMPDEST PUSH2 0x2F8C JUMPI POP POP JUMP JUMPDEST PUSH2 0x2F42 PUSH1 0x0 SWAP3 SWAP2 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x1AED5A85 PUSH1 0xE2 SHL DUP4 MSTORE PUSH32 0xB23EAE7E6D1564B295B4C3E3BE402D9A2F0776C57BDF365903496F6FA481AB00 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST PUSH2 0x2FE8 DUP2 PUSH2 0x30FB JUMP JUMPDEST ISZERO PUSH2 0x3013 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AED5A85 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 PUSH1 0x0 SWAP2 DUP4 SWAP2 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH2 0x2F42 SWAP1 PUSH1 0x4 DUP4 ADD PUSH2 0x2E9B JUMP JUMPDEST POP POP JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x3022 DUP4 PUSH2 0x30FB JUMP JUMPDEST ISZERO PUSH2 0x304C JUMPI POP PUSH2 0x2F42 PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x1AED5A85 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x2E9B JUMP JUMPDEST SWAP1 POP ISZERO PUSH2 0x3056 JUMPI POP JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x3080 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4349776D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3173137 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x30B7 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP2 PUSH1 0x40 MLOAD DUP4 DUP2 ADD SWAP1 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH4 0x1AED5A85 PUSH1 0xE2 SHL PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x24 DUP2 MSTORE PUSH2 0x312B DUP2 PUSH2 0x4FA JUMP JUMPDEST MLOAD SWAP2 PUSH2 0x7530 STATICCALL PUSH1 0x0 MLOAD RETURNDATASIZE DUP3 PUSH2 0x314C JUMPI JUMPDEST POP DUP2 PUSH2 0x3145 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x20 GT ISZERO SWAP2 POP CODESIZE PUSH2 0x313B JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP3 PUSH1 0x40 MLOAD DUP5 DUP2 ADD SWAP2 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x24 DUP2 MSTORE PUSH2 0x312B DUP2 PUSH2 0x4FA JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x20E7 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x23BB JUMPI DUP1 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x4DA JUMPI DUP3 PUSH2 0x31F7 PUSH2 0x31E0 DUP5 PUSH1 0x1 DUP1 SWAP7 ADD DUP6 SSTORE DUP5 PUSH2 0x318A JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE DUP1 SLOAD SWAP3 PUSH1 0x0 MSTORE ADD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x3233 JUMPI JUMP JUMPDEST PUSH2 0x320E JUMP JUMPDEST SWAP1 PUSH2 0x32A SWAP2 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x3233 JUMPI JUMP JUMPDEST DUP1 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x3272 JUMPI PUSH1 0x0 NOT SWAP2 DUP3 ADD SWAP2 PUSH2 0x3262 DUP4 DUP4 PUSH2 0x318A JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SWAP2 DUP1 PUSH1 0x0 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 DUP4 ISZERO ISZERO PUSH1 0x0 EQ PUSH2 0x3334 JUMPI PUSH1 0x0 NOT SWAP3 DUP5 DUP5 ADD SWAP1 DUP6 DUP3 GT PUSH2 0x3233 JUMPI DUP1 SLOAD SWAP5 DUP6 ADD SWAP5 DUP6 GT PUSH2 0x3233 JUMPI PUSH1 0x0 SWAP6 DUP6 DUP4 PUSH2 0x32DC SWAP5 PUSH2 0x32EB SWAP9 SUB PUSH2 0x32F1 JUMPI JUMPDEST POP POP POP PUSH2 0x3248 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x331B PUSH2 0x3315 SWAP2 PUSH2 0x3305 PUSH2 0x332B SWAP5 DUP8 PUSH2 0x318A JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP2 DUP8 PUSH2 0x318A JUMP JUMPDEST SWAP1 PUSH2 0x24F8 JUMP JUMPDEST DUP6 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 DUP1 PUSH2 0x32D4 JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP4 ADD SWAP2 PUSH1 0x0 MSTORE DUP4 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3372 JUMPI POP POP POP PUSH2 0x2555 SWAP3 POP SUB DUP4 PUSH2 0x515 JUMP JUMPDEST DUP6 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 DUP9 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH2 0x452 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x31A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x33AC DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x10 DUP3 MSTORE PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x33D8 DUP3 PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x40 DUP1 DUP4 MSTORE CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x33EF DUP3 PUSH2 0x70D JUMP JUMPDEST PUSH2 0x33FC PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x515 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x340D PUSH1 0x1F NOT SWAP2 PUSH2 0x70D JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x3233 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x20E7 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x20E7 JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x1 SHL SWAP2 DUP1 DUP4 DIV PUSH1 0x2 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x3233 JUMPI JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x9 MUL SWAP2 PUSH1 0x9 DUP4 DIV SUB PUSH2 0x3233 JUMPI JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SHL SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFE SHL SUB DUP2 AND SUB PUSH2 0x3233 JUMPI JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x37 MUL SWAP2 PUSH1 0x37 DUP4 DIV SUB PUSH2 0x3233 JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x3233 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x3233 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0xA DUP3 ADD DUP1 SWAP3 GT PUSH2 0x3233 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x30 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x3233 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x2 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x3233 JUMPI JUMP JUMPDEST PUSH1 0x23 ADD SWAP1 DUP2 PUSH1 0x23 GT PUSH2 0x3233 JUMPI JUMP JUMPDEST PUSH1 0xB4 ADD SWAP1 DUP2 PUSH1 0xB4 GT PUSH2 0x3233 JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x3504 PUSH2 0x339F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3511 DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x6 DUP3 MSTORE PUSH1 0x20 CALLDATASIZE DUP2 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x3530 JUMPI POP SWAP2 SWAP4 POP POP POP JUMP JUMPDEST PUSH2 0x3591 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT PUSH2 0x3576 PUSH1 0xF DUP10 DUP5 BYTE DUP4 PUSH2 0x3556 PUSH1 0x4 DUP4 SWAP1 SHR DUP5 AND DUP11 PUSH2 0x3433 JUMP JUMPDEST MLOAD AND PUSH2 0x356E PUSH2 0x3564 DUP8 PUSH2 0x3444 JUMP JUMPDEST SWAP2 DUP10 BYTE SWAP2 DUP12 PUSH2 0x3433 JUMP JUMPDEST MSTORE8 AND DUP7 PUSH2 0x3433 JUMP JUMPDEST MLOAD AND PUSH2 0x1A50 PUSH2 0x3587 PUSH2 0x1A41 DUP5 PUSH2 0x3444 JUMP JUMPDEST SWAP2 DUP6 BYTE SWAP2 DUP8 PUSH2 0x3433 JUMP JUMPDEST PUSH2 0x3520 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3612 JUMPI DUP1 PUSH1 0x0 SWAP1 DUP3 DUP3 SWAP4 JUMPDEST PUSH2 0x35FE JUMPI POP PUSH2 0x35B2 DUP4 PUSH2 0x33E5 JUMP JUMPDEST SWAP3 SWAP1 DUP1 JUMPDEST PUSH2 0x35C0 JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0xA SWAP1 PUSH1 0x30 SWAP3 DUP3 DUP3 MOD DUP5 ADD DUP1 SWAP5 GT PUSH2 0x3233 JUMPI DUP1 ISZERO PUSH2 0x3233 JUMPI PUSH1 0x0 NOT ADD SWAP3 PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND DUP5 BYTE PUSH2 0x35F6 DUP5 DUP8 PUSH2 0x3433 JUMP JUMPDEST MSTORE8 DIV DUP1 PUSH2 0x35B6 JUMP JUMPDEST SWAP3 PUSH2 0x360A PUSH1 0xA SWAP2 PUSH2 0x3417 JUMP JUMPDEST SWAP4 DIV DUP1 PUSH2 0x35A4 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x361F DUP2 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x363D DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x5 DUP3 MSTORE PUSH5 0x33B932B2B7 PUSH1 0xD9 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x365E DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x4 DUP3 MSTORE PUSH4 0x626C7565 PUSH1 0xE0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x367E DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x3 DUP3 MSTORE PUSH3 0x1C9959 PUSH1 0xEA SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x369D DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x6 DUP3 MSTORE PUSH6 0x707572706C65 PUSH1 0xD0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x36BF DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x6 DUP3 MSTORE PUSH6 0x79656C6C6F77 PUSH1 0xD0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x36E7 PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x3F9 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x36F8 DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x23666163633135 PUSH1 0xC8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x371B DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x23613835356637 PUSH1 0xC8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x373E DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x8D9598D0D0D0D PUSH1 0xCA SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3761 DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x1199B11C19331B PUSH1 0xC9 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3784 DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x23613365363335 PUSH1 0xC8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x37A7 DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x2366666363303 PUSH1 0xCC SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x37CA DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x11B1B198183333 PUSH1 0xC9 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x37ED DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x11B33318181B1B PUSH1 0xC9 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3810 DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x11981831B1B333 PUSH1 0xC9 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3833 DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x2330306666303 PUSH1 0xCC SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3856 DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x11B33318183333 PUSH1 0xC9 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH4 0x1E17B39F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD SWAP1 JUMP JUMPDEST SWAP5 SWAP4 SWAP6 SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x437A JUMPI DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 DUP2 ADD SWAP2 DUP3 KECCAK256 PUSH2 0x389B PUSH2 0x3630 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x42C2 JUMPI POP POP POP POP PUSH2 0x38B2 PUSH2 0x3826 JUMP JUMPDEST SWAP5 JUMPDEST PUSH1 0x40 MLOAD SWAP5 PUSH1 0x3 PUSH1 0x20 DUP8 ADD DUP8 PUSH2 0x38DC DUP5 DUP4 PUSH1 0x26 SWAP2 DUP2 MSTORE PUSH6 0xDAC2E8E4D2F PUSH1 0xD3 SHL PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SUB SWAP8 PUSH2 0x38F0 PUSH1 0x1F NOT SWAP10 DUP11 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x515 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP5 ISZERO PUSH2 0x42BA JUMPI DUP2 AND LT SWAP7 JUMPDEST DUP4 ISZERO PUSH2 0x42AC JUMPI PUSH2 0x390C PUSH2 0x3849 JUMP JUMPDEST SWAP6 JUMPDEST PUSH2 0x3929 PUSH2 0x3922 PUSH2 0x391D DUP9 PUSH2 0x345A JUMP JUMPDEST PUSH2 0x3238 JUMP JUMPDEST PUSH1 0xB SWAP1 DIV SWAP1 JUMP JUMPDEST SWAP3 DUP10 ISZERO PUSH2 0x429E JUMPI PUSH2 0x3938 PUSH2 0x447C JUMP JUMPDEST SWAP10 JUMPDEST ISZERO PUSH2 0x428C JUMPI PUSH2 0x3957 PUSH2 0x3957 PUSH2 0x3951 PUSH2 0x395D SWAP4 PUSH2 0x46AE JUMP JUMPDEST SWAP9 PUSH2 0x3596 JUMP JUMPDEST SWAP5 PUSH2 0x3596 JUMP JUMPDEST DUP2 MLOAD SWAP1 SWAP6 SWAP1 ISZERO PUSH2 0x427C JUMPI ISZERO PUSH2 0x41EA JUMPI PUSH2 0x3A17 PUSH2 0x39F8 SWAP2 PUSH2 0x3A0B PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH2 0x39F2 PUSH1 0x20 DUP6 ADD PUSH1 0x56 SWAP1 PUSH32 0x3C7465787420783D223230302220793D223330302220636C6173733D22757365 DUP2 MSTORE PUSH32 0x726E616D6522207374796C653D22666F6E742D66616D696C793A2027436F6D69 PUSH1 0x20 DUP3 ADD MSTORE PUSH22 0x319029B0B7399026A993961031BAB939B4BB329D911F PUSH1 0x51 SHL PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x36D4 JUMP JUMPDEST PUSH7 0x1E17BA32BC3A1F PUSH1 0xC9 SHL DUP2 MSTORE PUSH1 0x7 ADD SWAP1 JUMP JUMPDEST SUB DUP10 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x515 JUMP JUMPDEST SWAP5 JUMPDEST PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP8 PUSH1 0x20 DUP10 ADD PUSH2 0x3A9D SWAP1 PUSH1 0x57 SWAP1 PUSH32 0x3C73766720786D6C6E733D22687474703A2F2F7777772E77332E6F72672F3230 DUP2 MSTORE PUSH32 0x30302F737667222076696577426F783D22302030203430302034303022207769 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6474683D2234303022206865696768743D22343030223E000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH6 0x1E3232B3399F PUSH1 0xD1 SHL DUP2 MSTORE PUSH1 0x6 ADD PUSH7 0x1E39BA3CB6329F PUSH1 0xC9 SHL DUP2 MSTORE PUSH1 0x7 ADD PUSH32 0x40696D706F72742075726C282268747470733A2F2F666F6E74732E676F6F676C DUP2 MSTORE PUSH32 0x65617069732E636F6D2F637373323F66616D696C793D436F6D69632B53616E73 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2B4D5326616D703B646973706C61793D7377617022293B000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x57 ADD PUSH32 0x2E757365726E616D65207B20666F6E742D66616D696C793A2022436F6D696320 DUP2 MSTORE PUSH32 0x53616E73204D53222C20637572736976653B20666F6E742D73697A653A203136 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x70783B2066696C6C3A2077686974653B20746578742D616E63686F723A206D69 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x64646C653B207D PUSH1 0xC8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x67 ADD PUSH32 0x2E6D61747269782D63686172207B20666F6E742D66616D696C793A206D6F6E6F DUP2 MSTORE PUSH13 0x39B830B1B29D903334B6361D1 PUSH1 0x9D SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2D ADD PUSH2 0x3BF5 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH32 0x3B206F7061636974793A20302E333B20616E696D6174696F6E3A206661646520 DUP2 MSTORE PUSH32 0x337320696E66696E6974652C2066616C6C203873206C696E65617220696E6669 PUSH1 0x20 DUP3 ADD MSTORE PUSH7 0x6E6974653B207D PUSH1 0xC8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x47 ADD PUSH32 0x406B65796672616D65732066616465207B203025207B206F7061636974793A20 DUP2 MSTORE PUSH32 0x302E323B207D20333025207B206F7061636974793A20302E393B207D20373025 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x207B206F7061636974793A20302E393B207D2031303025207B206F7061636974 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x793A20302E323B207D207D PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x6B ADD PUSH32 0x406B65796672616D65732066616C6C207B2066726F6D207B207472616E73666F DUP2 MSTORE PUSH32 0x726D3A207472616E736C61746559282D32307078293B207D20746F207B207472 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x616E73666F726D3A207472616E736C61746559283432307078293B207D207D00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x5F ADD PUSH8 0x1E17B9BA3CB6329F PUSH1 0xC1 SHL DUP2 MSTORE PUSH1 0x8 ADD PUSH2 0x3D63 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH7 0x1E17B232B3399F PUSH1 0xC9 SHL DUP2 MSTORE PUSH1 0x7 ADD PUSH32 0x3C726563742077696474683D2234303022206865696768743D22343030222066 DUP2 MSTORE PUSH13 0x34B6361E91313630B1B591179F PUSH1 0x99 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2D ADD PUSH2 0x3DB8 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH32 0x3C6720636C6173733D226C6F6F6769652D636F6E7461696E6572223E00000000 DUP2 MSTORE PUSH1 0x1C ADD PUSH13 0x1E339034B21E9132BCB298911F PUSH1 0x99 SHL DUP2 MSTORE PUSH1 0xD ADD PUSH32 0x3C656C6C69707365207374726F6B652D77696474683D2233222072793D223239 DUP2 MSTORE PUSH32 0x2E35222072783D2232392E35222069643D227376675F31222063793D22313534 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2E35222063783D223138312E3522207374726F6B653D2223303030222066696C PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x361E9111B3333311179F PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x6A ADD PUSH32 0x3C656C6C697073652072793D22332E35222072783D22322E35222069643D2273 DUP2 MSTORE PUSH32 0x76675F33222063793D223135342E35222063783D223137332E3522207374726F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6B652D77696474683D223322207374726F6B653D2223303030222066696C6C3D PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x111198181818181811179F PUSH1 0xA9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x6B ADD PUSH2 0x3F08 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH13 0x1E339034B21E913432B0B2111F PUSH1 0x99 SHL DUP2 MSTORE PUSH1 0xD ADD PUSH15 0x1E32B63634B839B2903334B6361E91 PUSH1 0x89 SHL DUP2 MSTORE PUSH1 0xF ADD PUSH2 0x3F3F SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH32 0x22207374726F6B652D77696474683D2233222063783D223230342E3522206379 DUP2 MSTORE PUSH32 0x3D223231312E3830303635222069643D227376675F35222072783D2200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C ADD PUSH2 0x3F94 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH32 0x222072793D2235312E383030363522207374726F6B653D2223303030222F3E00 DUP2 MSTORE PUSH1 0x1F ADD PUSH2 0x3FC3 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH13 0x1E339034B21E9132BCB299111F PUSH1 0x99 SHL DUP2 MSTORE PUSH1 0xD ADD PUSH32 0x3C656C6C69707365207374726F6B652D77696474683D2233222072793D223239 DUP2 MSTORE PUSH32 0x2E35222072783D2232392E35222069643D227376675F32222063793D22313638 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2E35222063783D223230392E3522207374726F6B653D2223303030222066696C PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x361E9111B3333311179F PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x6A ADD PUSH32 0x3C656C6C697073652072793D22332E35222072783D2233222069643D22737667 DUP2 MSTORE PUSH32 0x5F34222063793D223136392E35222063783D2232303822207374726F6B652D77 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x696474683D2233222066696C6C3D222330303030303022207374726F6B653D22 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x1198181811179F PUSH1 0xC9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x67 ADD PUSH2 0x40E9 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH32 0x3C6720636C6173733D226D6F75746822207472616E73666F726D3D227472616E DUP2 MSTORE PUSH6 0xE6D8C2E8CA5 PUSH1 0xD3 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x26 ADD PUSH2 0x4127 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH5 0x161814911F PUSH1 0xD9 SHL DUP2 MSTORE PUSH1 0x5 ADD PUSH32 0x3C7061746820643D224D20313330203234302051203136352032353020000000 DUP2 MSTORE PUSH1 0x1D ADD PUSH2 0x4164 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH32 0x2032333522207374726F6B653D22626C61636B22207374726F6B652D77696474 DUP2 MSTORE PUSH32 0x683D2233222066696C6C3D227472616E73706172656E74222F3E000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3A ADD PUSH2 0x41B9 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH2 0x41C2 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH2 0x41CB SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH6 0x1E17B9BB339F PUSH1 0xD1 SHL DUP2 MSTORE PUSH1 0x6 ADD SUB SWAP1 DUP2 ADD DUP3 MSTORE PUSH2 0x452 SWAP1 DUP3 PUSH2 0x515 JUMP JUMPDEST PUSH2 0x4277 PUSH2 0x39F8 SWAP2 PUSH2 0x3A0B PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH2 0x39F2 PUSH1 0x20 DUP6 ADD PUSH1 0x5D SWAP1 PUSH32 0x3C7465787420783D223230302220793D223330302220666F6E742D66616D696C DUP2 MSTORE PUSH32 0x793D22417269616C2220666F6E742D73697A653D223136222066696C6C3D2223 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6666666666662220746578742D616E63686F723D226D6964646C65223E000000 PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH2 0x3A17 JUMP JUMPDEST POP POP PUSH2 0x4286 PUSH2 0x21AE JUMP JUMPDEST SWAP5 PUSH2 0x3A19 JUMP JUMPDEST POP PUSH2 0x395D PUSH2 0x3957 PUSH2 0x3957 PUSH2 0x3951 PUSH2 0x21AE JUMP JUMPDEST PUSH2 0x42A6 PUSH2 0x21AE JUMP JUMPDEST SWAP10 PUSH2 0x393A JUMP JUMPDEST PUSH2 0x42B4 PUSH2 0x3826 JUMP JUMPDEST SWAP6 PUSH2 0x390E JUMP JUMPDEST AND ISZERO SWAP7 PUSH2 0x38FE JUMP JUMPDEST DUP1 MLOAD DUP3 KECCAK256 PUSH2 0x42CE PUSH2 0x3651 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x42EB JUMPI POP POP POP POP PUSH2 0x42E5 PUSH2 0x3803 JUMP JUMPDEST SWAP5 PUSH2 0x38B4 JUMP JUMPDEST DUP1 MLOAD DUP3 KECCAK256 PUSH2 0x42F7 PUSH2 0x3671 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x430E JUMPI POP POP POP POP PUSH2 0x42E5 PUSH2 0x37E0 JUMP JUMPDEST DUP1 MLOAD DUP3 KECCAK256 PUSH2 0x431A PUSH2 0x3690 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x4331 JUMPI POP POP POP POP PUSH2 0x42E5 PUSH2 0x37BD JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x433C PUSH2 0x36B2 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP5 ADD KECCAK256 SUB PUSH2 0x4351 JUMPI POP POP PUSH2 0x42E5 PUSH2 0x379A JUMP JUMPDEST PUSH2 0x39F2 SWAP2 PUSH2 0x878 PUSH2 0x4364 PUSH2 0x42E5 SWAP4 PUSH2 0x34FB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 ADD PUSH1 0x1 SWAP1 PUSH1 0x23 PUSH1 0xF8 SHL DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 DUP2 ADD SWAP2 DUP3 KECCAK256 PUSH2 0x438D PUSH2 0x3630 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x43A4 JUMPI POP POP POP POP PUSH2 0x42E5 PUSH2 0x3777 JUMP JUMPDEST DUP1 MLOAD DUP3 KECCAK256 PUSH2 0x43B0 PUSH2 0x3651 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x43C7 JUMPI POP POP POP POP PUSH2 0x42E5 PUSH2 0x3754 JUMP JUMPDEST DUP1 MLOAD DUP3 KECCAK256 PUSH2 0x43D3 PUSH2 0x3671 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x43EA JUMPI POP POP POP POP PUSH2 0x42E5 PUSH2 0x3731 JUMP JUMPDEST DUP1 MLOAD DUP3 KECCAK256 PUSH2 0x43F6 PUSH2 0x3690 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x440D JUMPI POP POP POP POP PUSH2 0x42E5 PUSH2 0x370E JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x4418 PUSH2 0x36B2 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP5 ADD KECCAK256 SUB PUSH2 0x4351 JUMPI POP POP PUSH2 0x42E5 PUSH2 0x36EB JUMP JUMPDEST PUSH32 0x3C6665436F6D706F7369746520696E3D22536F75726365477261706869632220 DUP2 MSTORE PUSH32 0x696E323D22626C757222206F70657261746F723D226F766572222F3E00000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x3C66696C7465722069643D226D61747269782D676C6F772220783D222D323025 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2220793D222D323025222077696474683D223134302522206865696768743D22 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x189A1812911F PUSH1 0xD1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x3C6665476175737369616E426C757220737464446576696174696F6E3D223322 PUSH1 0x66 DUP3 ADD MSTORE PUSH16 0x103932B9BAB63A1E9131363AB911179F PUSH1 0x81 SHL PUSH1 0x86 DUP3 ADD MSTORE PUSH2 0x452 DUP2 PUSH2 0x878 PUSH2 0x4612 PUSH2 0x45D6 PUSH1 0x4A PUSH2 0x4534 PUSH1 0x96 DUP7 ADD PUSH2 0x442D JUMP JUMPDEST PUSH9 0x1E17B334B63A32B91F PUSH1 0xB9 SHL DUP2 MSTORE PUSH32 0x3C6C696E6561724772616469656E742069643D226D61747269782D6267222078 PUSH1 0x9 DUP3 ADD MSTORE PUSH32 0x313D223025222079313D223025222078323D223025222079323D223130302522 PUSH1 0x29 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0xF9 SHL PUSH1 0x49 DUP3 ADD MSTORE PUSH32 0x3C73746F70206F66667365743D223025222073746F702D636F6C6F723D222330 SWAP2 ADD SWAP1 DUP2 MSTORE PUSH8 0x18181C181811179F PUSH1 0xC1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x28 ADD SWAP1 JUMP JUMPDEST PUSH32 0x3C73746F70206F66667365743D2231303025222073746F702D636F6C6F723D22 DUP2 MSTORE PUSH10 0x1198181898181811179F PUSH1 0xB1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2A ADD SWAP1 JUMP JUMPDEST PUSH17 0x1E17B634B732B0B923B930B234B2B73A1F PUSH1 0x79 SHL DUP2 MSTORE PUSH1 0x11 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x463C DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x18 DUP3 MSTORE PUSH32 0x3C6720636C6173733D226D61747269782D6368617273223E0000000000000000 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1E0 DUP1 DUP4 ADD DUP4 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x4DA JUMPI PUSH1 0x40 MSTORE CALLDATASIZE DUP4 CALLDATACOPY JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xFF DUP2 EQ PUSH2 0x3233 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xF DUP2 LT ISZERO PUSH2 0x20E7 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH2 0x46B6 PUSH2 0x462F JUMP JUMPDEST PUSH2 0x46BE PUSH2 0x4668 JUMP JUMPDEST SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0xF DUP3 LT ISZERO PUSH2 0x473E JUMPI PUSH2 0x4734 PUSH2 0x4739 SWAP3 PUSH2 0x472C PUSH2 0x4725 PUSH2 0x471F PUSH2 0x471A DUP9 PUSH1 0x40 MLOAD PUSH2 0x470F DUP2 PUSH2 0x878 DUP12 PUSH1 0x20 DUP4 ADD SWAP6 DUP7 SWAP1 SWAP2 PUSH1 0x21 SWAP3 DUP3 MSTORE PUSH1 0xFF PUSH1 0xF8 SHL SWAP1 PUSH1 0xF8 SHL AND PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x17C SWAP1 MOD SWAP1 JUMP JUMPDEST PUSH2 0x34B5 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP2 DUP9 PUSH2 0x469D JUMP JUMPDEST SWAP1 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x468C JUMP JUMPDEST PUSH2 0x46C2 JUMP JUMPDEST POP POP PUSH1 0x0 JUMPDEST PUSH1 0xFF DUP1 DUP3 AND SWAP1 PUSH1 0xF DUP3 LT ISZERO PUSH2 0x49BE JUMPI SWAP1 PUSH1 0x0 SWAP2 JUMPDEST PUSH1 0x8 DUP2 DUP5 AND LT PUSH2 0x4772 JUMPI POP POP POP PUSH2 0x476D SWAP1 PUSH2 0x468C JUMP JUMPDEST PUSH2 0x4743 JUMP JUMPDEST SWAP1 SWAP2 SWAP5 PUSH1 0x40 DUP8 DUP8 DUP3 MLOAD SWAP3 DUP7 DUP10 DUP8 DUP1 PUSH1 0x20 SWAP7 DUP13 DUP9 DUP11 ADD DUP11 PUSH2 0x47B4 DUP11 DUP5 DUP10 DUP6 SWAP2 SWAP1 SWAP3 PUSH1 0x22 SWAP4 DUP4 MSTORE PUSH1 0xFF PUSH1 0xF8 SHL DUP1 SWAP3 PUSH1 0xF8 SHL AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0xF8 SHL AND PUSH1 0x21 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SUB SWAP11 PUSH1 0x1F NOT SWAP12 DUP13 DUP2 ADD DUP3 MSTORE PUSH2 0x47C9 SWAP1 DUP3 PUSH2 0x515 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x17C SWAP1 MOD PUSH2 0x47DA SWAP1 PUSH2 0x34B5 JUMP JUMPDEST PUSH1 0xFF AND DUP8 MLOAD DUP11 DUP2 ADD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT PUSH1 0xF8 DUP6 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE DUP13 SWAP1 SHL AND PUSH1 0x21 DUP3 ADD MSTORE PUSH4 0x31B430B9 PUSH1 0xE1 SHL PUSH1 0x22 DUP3 ADD MSTORE SWAP2 SWAP7 SWAP2 SWAP1 DUP1 PUSH1 0x26 DUP4 ADD SUB DUP14 DUP2 ADD DUP3 MSTORE PUSH2 0x4829 SWAP1 DUP3 PUSH2 0x515 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0xA SWAP1 MOD PUSH2 0x4839 SWAP1 PUSH2 0x34C3 JUMP JUMPDEST PUSH1 0xFF AND DUP9 MLOAD DUP12 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT PUSH1 0xF8 SWAP5 DUP6 SHL DUP2 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP11 SWAP1 SWAP4 SHL SWAP1 SWAP10 AND PUSH1 0x21 DUP3 ADD MSTORE PUSH5 0x64656C6179 PUSH1 0xD8 SHL PUSH1 0x22 DUP3 ADD MSTORE SWAP1 DUP1 PUSH1 0x27 DUP4 ADD SUB DUP12 DUP2 ADD DUP3 MSTORE PUSH2 0x4889 SWAP1 DUP3 PUSH2 0x515 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x5 SWAP1 MOD PUSH1 0xFF AND SWAP5 PUSH2 0x489D SWAP2 PUSH2 0x469D JUMP JUMPDEST MLOAD PUSH2 0x48AA SWAP1 PUSH1 0xFF AND PUSH2 0x3596 JUMP JUMPDEST SWAP3 AND PUSH2 0x48B5 SWAP1 PUSH2 0x3596 JUMP JUMPDEST SWAP3 AND PUSH2 0x48C0 SWAP1 PUSH2 0x3596 JUMP JUMPDEST DUP4 MLOAD PUSH1 0xF8 SWAP6 SWAP1 SWAP6 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND DUP7 DUP7 ADD SWAP1 DUP2 MSTORE SWAP1 SWAP4 SWAP1 DUP6 SWAP1 PUSH1 0x1 ADD SUB DUP8 DUP2 ADD DUP7 MSTORE PUSH2 0x48F0 SWAP1 DUP7 PUSH2 0x515 JUMP JUMPDEST MLOAD SWAP7 DUP8 SWAP6 DUP7 ADD PUSH2 0x48FF SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH9 0x1E3A32BC3A103C1E91 PUSH1 0xB9 SHL DUP2 MSTORE PUSH1 0x9 ADD PUSH2 0x491A SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH5 0x11103C9E91 PUSH1 0xD9 SHL DUP2 MSTORE PUSH1 0x5 ADD PUSH2 0x4931 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH32 0x2220636C6173733D226D61747269782D6368617222207374796C653D22616E69 DUP2 MSTORE PUSH14 0x36B0BA34B7B716B232B630BC9D1 PUSH1 0x95 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2E ADD PUSH2 0x4977 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH4 0x399D911F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x498D SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH7 0x1E17BA32BC3A1F PUSH1 0xC9 SHL DUP2 MSTORE PUSH1 0x7 ADD SUB SWAP1 DUP2 ADD DUP3 MSTORE PUSH2 0x49AD SWAP1 DUP3 PUSH2 0x515 JUMP JUMPDEST SWAP5 PUSH2 0x49B7 SWAP1 PUSH2 0x468C JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x4757 JUMP JUMPDEST POP POP POP POP PUSH2 0x49DE SWAP2 POP PUSH2 0x452 SWAP1 PUSH2 0x878 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x36D4 JUMP JUMPDEST PUSH2 0x386C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x3C73766720786D6C6E733D22687474703A2F2F7777772E77332E6F72672F3230 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x30302F737667222077696474683D2234303022206865696768743D2234303022 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x2076696577426F783D223020302034303020343030223E000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x3C726563742077696474683D2234303022206865696768743D22343030222066 PUSH1 0x77 DUP3 ADD MSTORE PUSH12 0x34B6361E911198181811179F PUSH1 0xA1 SHL PUSH1 0x97 DUP3 ADD MSTORE PUSH18 0x1E3334B63A32B91034B21E9133B637BB911F PUSH1 0x71 SHL PUSH1 0xA3 DUP3 ADD MSTORE PUSH32 0x3C6665476175737369616E426C757220737464446576696174696F6E3D22332E PUSH1 0xB5 DUP3 ADD MSTORE PUSH18 0x1A91103932B9BAB63A1E9131363AB911179F PUSH1 0x71 SHL PUSH1 0xD5 DUP3 ADD MSTORE PUSH2 0x4CD7 SWAP2 SWAP1 PUSH2 0x4CE3 DUP2 PUSH2 0x4C86 PUSH2 0x4C74 PUSH2 0x4BCD PUSH2 0x4B28 PUSH2 0x4B13 PUSH1 0xE7 DUP7 ADD PUSH2 0x442D JUMP JUMPDEST PUSH9 0x1E17B334B63A32B91F PUSH1 0xB9 SHL DUP2 MSTORE PUSH1 0x9 ADD SWAP1 JUMP JUMPDEST PUSH32 0x3C7465787420783D223230302220793D223138302220666F6E742D66616D696C DUP2 MSTORE PUSH32 0x793D22417269616C2220666F6E742D73697A653D223430222066696C6C3D2223 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6666662220746578742D616E63686F723D226D6964646C65222066696C746572 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x3D2275726C2823676C6F7729223E4C756B736F4C6F6F676965733C2F74657874 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0xF9 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x81 ADD SWAP1 JUMP JUMPDEST PUSH32 0x3C7465787420783D223230302220793D223233302220666F6E742D66616D696C DUP2 MSTORE PUSH32 0x793D22417269616C2220666F6E742D73697A653D223230222066696C6C3D2223 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x3066302220746578742D616E63686F723D226D6964646C65222066696C746572 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x3D2275726C2823676C6F7729223E4D61747269782045646974696F6E3C2F7465 PUSH1 0x60 DUP3 ADD MSTORE PUSH3 0x3C3A1F PUSH1 0xE9 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x83 ADD SWAP1 JUMP JUMPDEST PUSH6 0x1E17B9BB339F PUSH1 0xD1 SHL DUP2 MSTORE PUSH1 0x6 ADD SWAP1 JUMP JUMPDEST SUB PUSH2 0x4C99 PUSH1 0x1F NOT SWAP2 DUP3 DUP2 ADD DUP6 MSTORE DUP5 PUSH2 0x515 JUMP JUMPDEST PUSH2 0x4CA2 DUP4 PUSH2 0x4D46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x646174613A696D6167652F7376672B786D6C3B6261736536342C000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP6 DUP7 SWAP2 PUSH1 0x3A DUP4 ADD PUSH2 0x39F2 JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP6 MSTORE DUP5 PUSH2 0x515 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x4CF4 DUP3 PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x40 DUP3 MSTORE PUSH32 0x6768696A6B6C6D6E6F707172737475767778797A303132333435363738392B2F PUSH1 0x40 DUP4 PUSH32 0x4142434445464748494A4B4C4D4E4F505152535455565758595A616263646566 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x4E24 JUMPI PUSH2 0x4D55 PUSH2 0x4CE7 JUMP JUMPDEST PUSH2 0x4D79 PUSH2 0x4D74 PUSH2 0x4D6F PUSH2 0x4D68 DUP6 MLOAD PUSH2 0x34D1 JUMP JUMPDEST PUSH1 0x3 SWAP1 DIV SWAP1 JUMP JUMPDEST PUSH2 0x346B JUMP JUMPDEST PUSH2 0x33E5 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP4 ADD SWAP2 DUP2 DUP3 MLOAD DUP4 ADD PUSH1 0x20 DUP2 ADD SWAP2 DUP3 MLOAD SWAP4 PUSH1 0x0 DUP5 MSTORE JUMPDEST DUP3 DUP3 LT PUSH2 0x4DD2 JUMPI POP POP POP MSTORE MLOAD PUSH1 0x3 SWAP1 MOD PUSH1 0x1 DUP2 EQ PUSH2 0x4DBF JUMPI PUSH1 0x2 EQ PUSH2 0x4DB4 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x3D SWAP1 PUSH1 0x0 NOT ADD MSTORE8 SWAP1 JUMP JUMPDEST POP PUSH1 0x3D SWAP1 DUP2 PUSH1 0x0 NOT DUP3 ADD MSTORE8 PUSH1 0x1 NOT ADD MSTORE8 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP6 PUSH1 0x4 SWAP1 PUSH1 0x3 DUP1 SWAP5 ADD SWAP4 DUP5 MLOAD PUSH1 0x1 SWAP1 PUSH1 0x3F SWAP1 DUP3 DUP3 DUP3 PUSH1 0x12 SHR AND DUP9 ADD ADD MLOAD DUP6 MSTORE8 DUP3 DUP3 DUP3 PUSH1 0xC SHR AND DUP9 ADD ADD MLOAD DUP4 DUP7 ADD MSTORE8 DUP3 DUP3 DUP3 PUSH1 0x6 SHR AND DUP9 ADD ADD MLOAD PUSH1 0x2 DUP7 ADD MSTORE8 AND DUP6 ADD ADD MLOAD SWAP1 DUP3 ADD MSTORE8 ADD SWAP6 SWAP2 SWAP1 PUSH2 0x4D91 JUMP JUMPDEST POP PUSH2 0x452 PUSH2 0x21AE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x4E3A DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x1 DUP3 MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x4E57 DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x1F DUP3 MSTORE PUSH32 0x2E204F776E6564206279206120556E6976657273616C2050726F66696C652100 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x4E90 DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x5 DUP3 MSTORE PUSH5 0x66616C7365 PUSH1 0xD8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x4EB1 DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x4 DUP3 MSTORE PUSH4 0x74727565 PUSH1 0xE0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST SWAP7 SWAP6 DUP5 PUSH2 0x4EF0 PUSH2 0x4EEA PUSH2 0x4EE4 DUP5 DUP11 PUSH2 0x4F10 SWAP11 DUP11 DUP16 SWAP11 DUP11 DUP2 SWAP16 SWAP12 SWAP14 SWAP13 PUSH2 0x387C JUMP JUMPDEST SWAP9 PUSH2 0x34FB JUMP JUMPDEST SWAP10 PUSH2 0x53C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0x4C6F6F6769652023 PUSH1 0xC0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP7 DUP8 SWAP2 PUSH1 0x28 DUP4 ADD PUSH2 0x39F2 JUMP JUMPDEST SUB SWAP9 PUSH2 0x4F24 PUSH1 0x1F NOT SWAP11 DUP12 DUP2 ADD DUP10 MSTORE DUP9 PUSH2 0x515 JUMP JUMPDEST PUSH2 0x4F2D DUP6 PUSH2 0x3596 JUMP JUMPDEST SWAP8 PUSH2 0x4F37 DUP4 PUSH2 0x3596 JUMP JUMPDEST SWAP9 DUP5 ISZERO PUSH2 0x53B4 JUMPI PUSH2 0x4F46 PUSH2 0x4E4A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP3 PUSH1 0x20 DUP5 ADD PUSH2 0x4F88 SWAP1 PUSH1 0x21 SWAP1 PUSH32 0x54686973204D6174726978204C6F6F6769652069732074686520636F6C6F7220 DUP2 MSTORE PUSH1 0x23 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH2 0x4F92 SWAP1 DUP8 PUSH2 0x36D4 JUMP JUMPDEST PUSH22 0x103BB4BA3410309031B43AB13134B732B9B99037B31 PUSH1 0x55 SHL DUP2 MSTORE PUSH1 0x16 ADD PUSH2 0x4FBA SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH21 0x1030B7321036B7BABA34103632B733BA341037B31 PUSH1 0x5D SHL DUP2 MSTORE PUSH1 0x15 ADD PUSH2 0x4FE1 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH2 0x4FEA SWAP2 PUSH2 0x36D4 JUMP JUMPDEST SUB DUP12 DUP2 ADD DUP11 MSTORE PUSH2 0x4FFA SWAP1 DUP11 PUSH2 0x515 JUMP JUMPDEST PUSH2 0x5003 SWAP1 PUSH2 0x4D46 JUMP JUMPDEST SWAP5 PUSH2 0x500D SWAP1 PUSH2 0x3596 JUMP JUMPDEST SWAP2 PUSH2 0x5017 SWAP1 PUSH2 0x3596 JUMP JUMPDEST SWAP3 ISZERO PUSH2 0x53A6 JUMPI PUSH2 0x5025 PUSH2 0x4EA4 JUMP JUMPDEST SWAP5 JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x7B224C5350344D65746164617461223A207B226E616D65223A20220000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP9 DUP10 SWAP9 PUSH1 0x3B DUP11 ADD PUSH2 0x5060 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH18 0x1116113232B9B1B934B83A34B7B7111D1011 PUSH1 0x71 SHL DUP2 MSTORE PUSH1 0x12 ADD PUSH2 0x5084 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH32 0x222C226C696E6B73223A205B7B227469746C65223A2257656273697465222C22 DUP2 MSTORE PUSH32 0x75726C223A2268747470733A2F2F6C756B736F6C6F6F676965732E7665726365 PUSH1 0x20 DUP3 ADD MSTORE PUSH19 0x1B0B985C1C089F574B089A58DBDB888E96D74B PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x53 ADD PUSH32 0x22696D61676573223A205B5B7B227769647468223A203430302C226865696768 DUP2 MSTORE PUSH16 0x3A111D101A181816113AB936111D1011 PUSH1 0x81 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x30 ADD PUSH32 0x646174613A696D6167652F7376672B786D6C3B6261736536342C000000000000 DUP2 MSTORE PUSH1 0x1A ADD PUSH2 0x515A SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH5 0x89F57574B PUSH1 0xDA SHL DUP2 MSTORE PUSH1 0x5 ADD PUSH14 0x2261747472696275746573223A5B PUSH1 0x90 SHL DUP2 MSTORE PUSH1 0xE ADD PUSH32 0x7B226B6579223A22636F6C6F72222C2276616C7565223A222300000000000000 DUP2 MSTORE PUSH1 0x19 ADD PUSH2 0x51AE SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH19 0x88B089D1E5C19488E889CDD1C9A5B99C89F4B PUSH1 0x6A SHL DUP2 MSTORE PUSH1 0x13 ADD PUSH32 0x7B226B6579223A226368756262696E657373222C2276616C7565223A00000000 DUP2 MSTORE PUSH1 0x1C ADD PUSH2 0x51F9 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH18 0xB089D1E5C19488E889B9D5B58995C889F4B PUSH1 0x72 SHL DUP2 MSTORE PUSH1 0x12 ADD PUSH32 0x7B226B6579223A226D6F7574684C656E677468222C2276616C7565223A000000 DUP2 MSTORE PUSH1 0x1D ADD PUSH2 0x5243 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH18 0xB089D1E5C19488E889B9D5B58995C889F4B PUSH1 0x72 SHL DUP2 MSTORE PUSH1 0x12 ADD PUSH32 0x7B226B6579223A22757365726E616D65222C2276616C7565223A220000000000 DUP2 MSTORE PUSH1 0x1B ADD PUSH2 0x528D SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH19 0x88B089D1E5C19488E889CDD1C9A5B99C89F4B PUSH1 0x6A SHL DUP2 MSTORE PUSH1 0x13 ADD PUSH22 0x3D9135B2BC911D1134B9AAA81116113B30B63AB2911D PUSH1 0x51 SHL DUP2 MSTORE PUSH1 0x16 ADD PUSH2 0x52D1 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH19 0xB089D1E5C19488E88989BDBDB19585B889F4B PUSH1 0x6A SHL DUP2 MSTORE PUSH1 0x13 ADD PUSH32 0x7B226B6579223A2274797065222C2276616C7565223A22000000000000000000 DUP2 MSTORE PUSH1 0x17 ADD PUSH2 0x531C SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH18 0x222C2274797065223A22737472696E67227D PUSH1 0x70 SHL DUP2 MSTORE PUSH1 0x12 ADD PUSH3 0x5D7D7D PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x3 ADD SUB DUP4 DUP2 ADD DUP3 MSTORE PUSH2 0x5353 SWAP1 DUP3 PUSH2 0x515 JUMP JUMPDEST PUSH2 0x535C DUP2 PUSH2 0x4D46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP4 SWAP1 DUP5 SWAP1 PUSH1 0x3D DUP3 ADD PUSH2 0x5396 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP5 MSTORE PUSH2 0x4CE3 SWAP1 DUP5 PUSH2 0x515 JUMP JUMPDEST PUSH2 0x53AE PUSH2 0x4E83 JUMP JUMPDEST SWAP5 PUSH2 0x5027 JUMP JUMPDEST PUSH2 0x53BC PUSH2 0x4E2D JUMP JUMPDEST PUSH2 0x4F46 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP2 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP1 DUP3 LT ISZERO PUSH2 0x54F6 JUMPI JUMPDEST POP PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP1 DUP4 LT ISZERO PUSH2 0x54E7 JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 DUP1 DUP4 LT ISZERO PUSH2 0x54D8 JUMPI JUMPDEST POP PUSH4 0x5F5E100 DUP1 DUP4 LT ISZERO PUSH2 0x54C9 JUMPI JUMPDEST POP PUSH2 0x2710 DUP1 DUP4 LT ISZERO PUSH2 0x54BA JUMPI JUMPDEST POP PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x54AA JUMPI JUMPDEST PUSH1 0xA DUP1 SWAP3 LT ISZERO PUSH2 0x54A0 JUMPI JUMPDEST PUSH1 0x1 SWAP1 DUP2 PUSH1 0x21 PUSH2 0x5458 DUP3 DUP8 ADD PUSH2 0x33E5 JUMP JUMPDEST SWAP6 DUP7 ADD ADD SWAP1 JUMPDEST PUSH2 0x546A JUMPI JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 DUP4 SWAP1 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP3 DUP3 MOD BYTE DUP4 MSTORE8 DIV SWAP2 DUP3 ISZERO PUSH2 0x549B JUMPI SWAP2 SWAP1 DUP3 PUSH2 0x545E JUMP JUMPDEST PUSH2 0x5463 JUMP JUMPDEST SWAP2 PUSH1 0x1 ADD SWAP2 PUSH2 0x5447 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x64 PUSH1 0x2 SWAP2 DIV SWAP2 ADD SWAP2 PUSH2 0x543C JUMP JUMPDEST PUSH1 0x4 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x5431 JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x5424 JUMP JUMPDEST PUSH1 0x10 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x5415 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x5403 JUMP JUMPDEST PUSH1 0x40 SWAP4 POP DUP2 DIV SWAP2 POP CODESIZE PUSH2 0x53EA JUMP JUMPDEST ISZERO PUSH2 0x550B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5075626C6963206D696E74696E6720697320636C6F7365640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x5557 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x444F4E45204D494E54494E47 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x5592 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x9C9EA8408A9C9EAA8E9 PUSH1 0xB3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x55CB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x135253950813125352550814915050D21151 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x560C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x18DBDD5B19081B9BDD081CD95B99 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD EQ PUSH2 0x5653 JUMPI PUSH1 0x2 PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x56A5 DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x9 DUP3 MSTORE PUSH9 0x1B1D5ADCDBDB985D5D PUSH1 0xBA SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x56CA DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x8 DUP3 MSTORE PUSH8 0x2AA81027BBB732B9 PUSH1 0xC1 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH4 0x1C537DDF PUSH1 0xE2 SHL PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x5725 JUMPI JUMPDEST POP PUSH2 0x452 JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x5759 JUMPI JUMPDEST DUP2 PUSH2 0x573F PUSH1 0x20 SWAP4 DUP4 PUSH2 0x515 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xE1A JUMPI POP MLOAD PUSH2 0x5752 DUP2 PUSH2 0x8D8 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x571A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5732 JUMP JUMPDEST PUSH2 0x576D PUSH2 0x11DE DUP3 PUSH2 0x56E1 JUMP JUMPDEST PUSH2 0x4E24 JUMPI PUSH1 0x40 MLOAD PUSH4 0x54F6127F PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0xA5F25703C828C6D3C468FA5542C279E8C98F1ACC783318E4FCD67EA8FD61BE02 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP4 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 SWAP3 DUP3 SWAP4 PUSH2 0x5866 JUMPI JUMPDEST POP PUSH2 0x57D4 JUMPI POP POP PUSH2 0x452 PUSH2 0x21AE JUMP JUMPDEST DUP2 MLOAD DUP1 PUSH2 0x57E7 JUMPI JUMPDEST POP POP POP PUSH2 0x452 PUSH2 0x21AE JUMP JUMPDEST PUSH1 0x1 DUP1 SWAP2 GT DUP1 PUSH2 0x5849 JUMPI JUMPDEST ISZERO PUSH2 0x57DC JUMPI PUSH2 0x5804 PUSH2 0x4D74 DUP5 MLOAD PUSH2 0x3224 JUMP JUMPDEST SWAP3 DUP2 DUP1 JUMPDEST PUSH2 0x5813 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x549B JUMPI DUP1 PUSH2 0x582D PUSH2 0x1A0A PUSH2 0x5843 SWAP4 DUP6 PUSH2 0x3433 JUMP JUMPDEST PUSH2 0x1A50 PUSH2 0x5839 DUP4 PUSH2 0x3224 JUMP JUMPDEST SWAP2 DUP8 BYTE SWAP2 DUP9 PUSH2 0x3433 JUMP JUMPDEST DUP3 PUSH2 0x5808 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT PUSH2 0x585F PUSH2 0x1A0A DUP6 PUSH2 0x3426 JUMP JUMPDEST AND ISZERO PUSH2 0x57F2 JUMP JUMPDEST PUSH2 0x587B SWAP2 SWAP4 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH2 0x2F70 DUP2 DUP4 PUSH2 0x515 JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x57C5 JUMP JUMPDEST PUSH2 0x5895 PUSH2 0x588F DUP3 SLOAD PUSH2 0xA0F JUMP JUMPDEST DUP3 PUSH2 0x252D JUMP JUMPDEST PUSH1 0xC PUSH6 0x79656C6C6F77 PUSH1 0xD0 SHL ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x58B3 PUSH2 0x588F DUP3 SLOAD PUSH2 0xA0F JUMP JUMPDEST PUSH1 0xC PUSH6 0x707572706C65 PUSH1 0xD0 SHL ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x58D1 PUSH2 0x588F DUP3 SLOAD PUSH2 0xA0F JUMP JUMPDEST PUSH1 0x6 PUSH3 0x1C9959 PUSH1 0xEA SHL ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x58EC PUSH2 0x588F DUP3 SLOAD PUSH2 0xA0F JUMP JUMPDEST PUSH1 0x8 PUSH4 0x626C7565 PUSH1 0xE0 SHL ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x5908 PUSH2 0x588F DUP3 SLOAD PUSH2 0xA0F JUMP JUMPDEST PUSH1 0xA PUSH5 0x33B932B2B7 PUSH1 0xD9 SHL ADD SWAP1 SSTORE JUMP JUMPDEST SWAP2 PUSH2 0x2555 SWAP4 PUSH1 0x5 PUSH2 0x5A2B SWAP3 PUSH2 0x5974 PUSH1 0xFF PUSH1 0xE8 SHL DUP3 PUSH1 0x2 BYTE PUSH1 0xE8 SHL AND PUSH1 0xFF PUSH1 0xF0 SHL DUP4 PUSH1 0x1 BYTE PUSH1 0xF0 SHL AND PUSH1 0xFF PUSH1 0xF8 SHL DUP5 PUSH1 0x0 BYTE PUSH1 0xF8 SHL AND OR OR PUSH2 0x5963 DUP8 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xE8 SHR PUSH3 0xFFFFFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x5992 PUSH2 0x598D PUSH2 0x5986 DUP4 PUSH1 0x3 BYTE PUSH2 0x3483 JUMP JUMPDEST PUSH1 0xFF SWAP1 DIV SWAP1 JUMP JUMPDEST PUSH2 0x34DF JUMP JUMPDEST PUSH2 0x59A6 DUP7 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH2 0x59DD PUSH2 0x59D8 PUSH2 0x5986 PUSH2 0x59CE PUSH2 0x59C7 DUP10 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x2 SHR SWAP1 JUMP JUMPDEST DUP5 PUSH1 0x4 BYTE SWAP1 PUSH2 0x3494 JUMP JUMPDEST PUSH2 0x34ED JUMP JUMPDEST PUSH2 0x59F1 DUP7 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP2 BYTE MOD DUP1 PUSH2 0x5A39 JUMPI POP PUSH2 0x5A17 PUSH2 0x5A12 DUP5 PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x58FB JUMP JUMPDEST PUSH2 0x24DC DUP4 PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x5A33 PUSH2 0x21AE JUMP JUMPDEST SWAP2 PUSH2 0x5AC7 JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x5A63 JUMPI POP PUSH2 0x5A5E PUSH2 0x5A59 DUP5 PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x58DF JUMP JUMPDEST PUSH2 0x5A17 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x5A88 JUMPI POP PUSH2 0x5A5E PUSH2 0x5A83 DUP5 PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x58C4 JUMP JUMPDEST PUSH1 0x3 SUB PUSH2 0x5AAB JUMPI PUSH2 0x5A5E PUSH2 0x5AA6 DUP5 PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x58A6 JUMP JUMPDEST PUSH2 0x5A5E PUSH2 0x5AC2 DUP5 PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x5882 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 ISZERO PUSH2 0x297C JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5BBA JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5BBA JUMPI DUP5 PUSH2 0x2555 SWAP5 SWAP6 PUSH2 0x5BB5 SWAP3 PUSH2 0x5B30 PUSH2 0x5B2B PUSH1 0x2 SLOAD PUSH2 0x3417 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x5B53 SWAP1 DUP4 SWAP1 PUSH2 0x31A2 JUMP JUMPDEST POP PUSH2 0x5B6C DUP6 PUSH2 0x28DA DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xB333C813A7426A7A11E2B190CAD52C44119421594B47F6F32ACE6D8C7207B2BF PUSH1 0x40 MLOAD DUP1 PUSH2 0x5B9E DUP11 CALLER DUP4 PUSH2 0x2B4C JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x1237 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP3 DUP6 CALLER PUSH1 0x20 DUP7 ADD PUSH2 0x2B9F JUMP JUMPDEST PUSH2 0x2FDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x34C7B511 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x48 PUSH2 0x2555 SWAP2 SWAP4 SWAP3 SWAP4 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP2 PUSH6 0x379ABE35001 PUSH1 0xC5 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x28 DUP4 ADD MSTORE PUSH2 0x5C09 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0x3F9 JUMP JUMPDEST DUP2 ADD SUB PUSH1 0x28 DUP2 ADD DUP6 MSTORE ADD DUP4 PUSH2 0x515 JUMP JUMPDEST SWAP1 PUSH32 0x9AFB95CACC9F95858EC44AA8C3B685511002E30AE54415823F406128B85B238E DUP2 SUB PUSH2 0x5D04 JUMPI POP PUSH2 0x5CF7 DUP2 PUSH2 0x5CD9 PUSH2 0xB15 PUSH2 0x5C72 PUSH2 0x5C66 PUSH2 0x452 SWAP7 PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0xA49 JUMP JUMPDEST PUSH2 0x5C86 DUP4 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xE8 SHL PUSH2 0x5C9E DUP5 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 PUSH2 0x5CB4 DUP6 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP3 PUSH2 0x5CE0 PUSH2 0x5CCD DUP8 PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP7 DUP8 DUP1 SWAP3 PUSH2 0xA49 JUMP JUMPDEST SUB DUP7 PUSH2 0x515 JUMP JUMPDEST PUSH2 0x5CF1 PUSH2 0x5CEC DUP8 PUSH2 0x266A JUMP JUMPDEST PUSH2 0x56E1 JUMP JUMPDEST SWAP6 PUSH2 0x4EC4 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x5BD3 JUMP JUMPDEST PUSH2 0x5D0D SWAP2 PUSH2 0x2CF2 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0xB15 PUSH2 0x452 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0xA49 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 STATICCALL DUP11 PUSH11 0xC35E76FAF5B5AF745A909F GT PUSH25 0x73761088C311A16FB9027A08C9685B64736F6C634300081400 CALLER 0xDE 0xBA 0x1E 0x29 0x2F DUP12 0xA8 DUP3 CODESIZE 0xE1 EXP 0xB3 0xC7 0xF8 DUP12 0xD4 0xBE 0x4F 0xAC JUMP 0xCA 0xD5 NOT 0x4B PUSH15 0xCCEAF653468AF19AFB95CACC9F9585 DUP15 0xC4 0x4A 0xA8 0xC3 0xB6 DUP6 MLOAD LT MUL 0xE3 EXP 0xE5 PREVRANDAO ISZERO DUP3 EXTCODEHASH BLOCKHASH PUSH2 0x28B8 JUMPDEST 0x23 DUP15 LOG2 RETURNDATACOPY 0xA7 SWAP13 PUSH17 0x6BE4641BFD97C9AFB5B71A552C5BC32093 0xD 0xBE MULMOD 0xB3 MSTORE8 0xE 0xD7 PUSH14 0xEE0FECE574603820D07BC9B91F2A SWAP4 0x2B 0xAA 0xDF CHAINID 0x28 0xAA 0xBC 0xB8 0xAF 0xBA 0x49 PUSH24 0x6529C14A6104B20000000000000000000000000000000000 ","sourceMap":"19923:9327:30:-:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;19923:9327:30;;;;955:12:19;734:10:22;955:12:19;:::i;:::-;1613:26:0;1609:100;;1745:12;;;:::i;:::-;19923:9327:30;;;;;:::i;:::-;388:66:12;19923:9327:30;;388:66:12;;;19923:9327:30;388:66:12;;;;19923:9327:30;;-1:-1:-1;19923:9327:30;;;;;-1:-1:-1;19923:9327:30;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;19923:9327:30;;5646:31:0;19923:9327:30;-1:-1:-1;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;;5646:31:0;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;;;;;;19923:9327:30;;;;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;5646:31:0;19923:9327:30;;-1:-1:-1;;;;;;;;;;;19923:9327:30;-1:-1:-1;;;;;;;;;;;19923:9327:30;;-1:-1:-1;19923:9327:30;;;;;;;;;;;;;;;;;;;;;5646:31:0;;;;;:::i;:::-;;;;776:66:12;-1:-1:-1;19923:9327:30;;;;;;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;:::i;:::-;;;;;;;;;;;;5646:31:0;19923:9327:30;;-1:-1:-1;;;;;;;;;;;19923:9327:30;;-1:-1:-1;19923:9327:30;;;;;;;;;;;;;;;;;;;;;5646:31:0;;;;;:::i;:::-;;;;19923:9327:30;;21126:1;19923:9327;1713:26:13;;20435:4:30;19923:9327;1713:26:13;;;;;:::i;:::-;915:66:12;-1:-1:-1;19923:9327:30;;;;;;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;:::i;:::-;;;;;;;;;;;;5646:31:0;19923:9327:30;;-1:-1:-1;;;;;;;;;;;19923:9327:30;;-1:-1:-1;19923:9327:30;;;;;;;;;;;;;;;;;;;;;5646:31:0;;;;;:::i;:::-;;;;19923:9327:30;;-1:-1:-1;19923:9327:30;4667:30:18;;20435:4:30;19923:9327;4667:30:18;;;;;:::i;:::-;359:66:16;-1:-1:-1;19923:9327:30;;;;;;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;:::i;:::-;;;;;;;;;;;;2420:31:13;19923:9327:30;;-1:-1:-1;;;;;;;;;;;19923:9327:30;;-1:-1:-1;19923:9327:30;;;;;;;;;;;;;;;;;;;;;2420:31:13;;;;;:::i;:::-;;;;19923:9327:30;;1716:1:20;20723:5:30;19923:9327;;-1:-1:-1;;19923:9327:30;;;;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;21277:1;19923:9327;;-1:-1:-1;19923:9327:30;;;;;;;;;;;;:::i;:::-;21277:1;19923:9327;;-1:-1:-1;;;19923:9327:30;;;;21289:18;;;:::i;:::-;19923:9327;21289:18;;;:::i;:::-;;19923:9327;;;;;:::i;:::-;388:66:12;19923:9327:30;;-1:-1:-1;;;19923:9327:30;;;;21317:17;;;:::i;:::-;19923:9327;21317:17;;;:::i;:::-;;19923:9327;;;;;:::i;:::-;;;;-1:-1:-1;;;19923:9327:30;;;;21344:16;;;:::i;:::-;19923:9327;21344:16;;;:::i;:::-;;19923:9327;;;;;:::i;:::-;;;;-1:-1:-1;;;19923:9327:30;;;;21370:19;;;:::i;:::-;19923:9327;21370:19;;;:::i;:::-;;19923:9327;;;;;:::i;:::-;;;;-1:-1:-1;;;19923:9327:30;;;;21399:19;;;:::i;:::-;19923:9327;21399:19;;;:::i;:::-;;19923:9327;;;;;:::i;:::-;21277:1;19923:9327;;-1:-1:-1;;;19923:9327:30;;;;;;-1:-1:-1;20435:4:30;21277:1;20435:4;;;;;;19923:9327;21277:1;19923:9327;20435:4;;;19923:9327;;;;-1:-1:-1;19923:9327:30;;;;;20435:4;2813:10;;;-1:-1:-1;2808:92:30;2842:3;19923:9327;;2825:15;;;;;19923:9327;;;;;;20435:4;19923:9327;;;;;20435:4;:::i;:::-;;;19923:9327;20435:4;;19923:9327;;;;;;;;;;;;;;21277:1;19923:9327;;;;2881:7;19923:9327;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19923:9327:30;;-1:-1:-1;19923:9327:30;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2842:3;19923:9327;;;-1:-1:-1;19923:9327:30;;;;;;;;;;;;;;;;;;;;;2842:3;:::i;:::-;2813:10;;;;19923:9327;;;;-1:-1:-1;19923:9327:30;;;;;;;-1:-1:-1;19923:9327:30;;-1:-1:-1;19923:9327:30;;-1:-1:-1;19923:9327:30;-1:-1:-1;;19923:9327:30;;;;;;;;;;;;2842:3;19923:9327;;;;;;;;;;;;;;;;;;;2842:3;:::i;19923:9327::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19923:9327:30;;388:66:12;19923:9327:30;;-1:-1:-1;19923:9327:30;;;;;-1:-1:-1;19923:9327:30;;388:66:12;19923:9327:30;;-1:-1:-1;19923:9327:30;2825:15;19923:9327;;;;;13979:744;;19923:9327;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;-1:-1:-1;;;19923:9327:30;;;;13979:744;;;19923:9327;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;14865:25;19923:9327;;;14865:25;:::i;:::-;20435:4;;19923:9327;;14785:119;19923:9327;14785:119;19923:9327;14785:119;;19923:9327;;;;20435:4;19923:9327;;;;;;;;20435:4;;;:::i;:::-;;;14785:119;;;;;;;;;:::i;:::-;18534:912;;18717:15;;:::i;:::-;19303;;;:::i;:::-;19923:9327;;18534:912;;;19923:9327;18534:912;;19923:9327;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;20435:4;19923:9327;;;;;;;;20435:4;;;:::i;:::-;;;;19923:9327;;20435:4;;19923:9327;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;;;;;;;20435:4;19923:9327;;;;;;20435:4;;:::i;:::-;;19923:9327;;;;20435:4;;;19923:9327;;;;;;;;;;;;;;;;;;;;;;;;;;20435:4;19923:9327;;;;;;;20435:4;;;:::i;:::-;-1:-1:-1;;;20435:4:30;;;;;19923:9327;;;;;;-1:-1:-1;;;19923:9327:30;;;;-1:-1:-1;;;19923:9327:30;;;;-1:-1:-1;;;19923:9327:30;;;;18534:912;;;;;;;;;:::i;:::-;19701:18;;;:::i;:::-;19923:9327;;;19618:115;;19923:9327;19618:115;19923:9327;19618:115;;19923:9327;;;;20435:4;19923:9327;;;;;;;;20435:4;;;:::i;:::-;;;19618:115;;;;;;;;;:::i;:::-;19923:9327;21738:22;;19923:9327;20435:4;19923:9327;;20435:4;;;;;;19923:9327;20435:4;;;;;;;19923:9327;20435:4;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;19923:9327:30;;;;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;;;;;;;19923:9327:30;;2420:31:13;19923:9327:30;-1:-1:-1;;;;;;;;;;;19923:9327:30;-1:-1:-1;19923:9327:30;;;;;;;;;;;;;;;;;;;;;2420:31:13;;;;;:::i;:::-;;;;19923:9327:30;;20435:4;19923:9327;1310:66:12;;20435:4:30;19923:9327;1310:66:12;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;19923:9327:30;;;;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;;;;;;;19923:9327:30;;2420:31:13;19923:9327:30;-1:-1:-1;;;;;;;;;;;19923:9327:30;-1:-1:-1;19923:9327:30;;;;;;;;;;;;;;;;;;;;;2420:31:13;;;;;:::i;:::-;;;;19923:9327:30;;20435:4;19923:9327;1310:66:12;;20435:4:30;19923:9327;1310:66:12;;;;;:::i;:::-;22156::30;-1:-1:-1;19923:9327:30;;;;;;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;:::i;:::-;;;;;;;;;;;;2420:31:13;19923:9327:30;;-1:-1:-1;;;;;;;;;;;19923:9327:30;;-1:-1:-1;19923:9327:30;;;;;;;;;;;;;;;;;;;;;2420:31:13;;;;;:::i;:::-;;;;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19923:9327:30;;-1:-1:-1;19923:9327:30;;-1:-1:-1;19923:9327:30;;;;;;;;;;-1:-1:-1;;;;;;;;;;;19923:9327:30;;;2420:31:13;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19923:9327:30;;-1:-1:-1;19923:9327:30;;-1:-1:-1;19923:9327:30;-1:-1:-1;;19923:9327:30;;;;;;;;;;-1:-1:-1;;;;;;;;;;;19923:9327:30;;-1:-1:-1;;;;;;;;;;;19923:9327:30;2420:31:13;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19923:9327:30;;-1:-1:-1;19923:9327:30;;-1:-1:-1;19923:9327:30;-1:-1:-1;;19923:9327:30;;;;;;;;;;-1:-1:-1;;;;;;;;;;;19923:9327:30;;-1:-1:-1;;;;;;;;;;;19923:9327:30;2420:31:13;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19923:9327:30;;-1:-1:-1;19923:9327:30;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;19923:9327:30;;;;;;;-1:-1:-1;19923:9327:30;;;;;;;;;;;21277:1;19923:9327;;;;;;;:::i;:::-;;;;;;;20435:4;;19923:9327;20435:4;;;;;;;;;;;;;19923:9327;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19923:9327:30;;-1:-1:-1;19923:9327:30;;-1:-1:-1;19923:9327:30;;;;;;;;;;-1:-1:-1;;;;;;;;;;;19923:9327:30;;;2420:31:13;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19923:9327:30;;-1:-1:-1;19923:9327:30;;-1:-1:-1;19923:9327:30;;;;;;;;;;-1:-1:-1;;;;;;;;;;;19923:9327:30;;;5646:31:0;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19923:9327:30;;-1:-1:-1;19923:9327:30;;-1:-1:-1;19923:9327:30;;;;;;;;;;-1:-1:-1;;;;;;;;;;;19923:9327:30;;;5646:31:0;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19923:9327:30;;-1:-1:-1;19923:9327:30;;-1:-1:-1;19923:9327:30;;;;;;;;5646:31:0;19923:9327:30;;-1:-1:-1;;;;;;;;;;;19923:9327:30;;-1:-1:-1;;;;;;;;;;;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19923:9327:30;;-1:-1:-1;19923:9327:30;;-1:-1:-1;19923:9327:30;;;;;;;;5646:31:0;19923:9327:30;;;;;-1:-1:-1;;;;;;;;;;;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1609:100:0;19923:9327:30;;-1:-1:-1;;;1662:36:0;;;;;19923:9327:30;-1:-1:-1;19923:9327:30;;;;;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;:::o;:::-;;;;;-1:-1:-1;;19923:9327:30;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;19923:9327:30;;;;;;-1:-1:-1;;19923:9327:30;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;1716:1:20;19923:9327:30;;;;;;;:::o;:::-;;;21126:1;19923:9327;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;388:66:12;19923:9327:30;;;;;;;:::o;20435:4::-;;;;;;;;-1:-1:-1;;20435:4:30;;;;:::o;:::-;;;;;;;;;;;;;19923:9327;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;19923:9327:30;;-1:-1:-1;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;-1:-1:-1;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;19923:9327:30;;;;:::o;2426:187:19:-;2518:6;19923:9327:30;;-1:-1:-1;;;;;19923:9327:30;;;-1:-1:-1;;;;;;19923:9327:30;;;;;;;;;2566:40:19;;2518:6;2566:40;2426:187::o;19923:9327:30:-;-1:-1:-1;;19923:9327:30;;;;;;;:::o;:::-;;;;;;;;;;;;505:3382:21;19923:9327:30;;795:16:21;791:31;;19923:9327:30;;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;;;;1357:1:21;345:66;;;;;;;;;1362:1;345:66;;;;19923:9327:30;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;345:66:21;19923:9327:30;;;:::i;:::-;;;;;;;;:::i;:::-;;;;345:66:21;:::i;:::-;19923:9327:30;345:66:21;;;-1:-1:-1;;345:66:21;;;;1419:2438;;;;;;;;19923:9327:30;1419:2438:21;;;;;;810:1;1419:2438;;;;;;;;;;;;;;;1362:1;1419:2438;1362:1;;;1419:2438;;;;3867:13;505:3382;:::o;1419:2438::-;;;-1:-1:-1;;1419:2438:21;;505:3382;:::o;1419:2438::-;-1:-1:-1;1419:2438:21;;;-1:-1:-1;;1419:2438:21;;;-1:-1:-1;;1419:2438:21;;505:3382;:::o;1419:2438::-;;1337:1;1419:2438;;;;;;;;;;19923:9327:30;1419:2438:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;791:31;-1:-1:-1;19923:9327:30;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;810:1:21;19923:9327:30;;813:9:21;:::o;3998:474:30:-;4095:1;20435:4;;4188:6;;;19923:9327;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;19923:9327:30;;;:::i;:::-;;;;345:66:21;;19923:9327:30;;;345:66:21;4322:6:30;20435:4;4338:99;4345:6;;;4446:19;;;3998:474;:::o;4338:99::-;4234:2;4392;;19923:9327;;;;345:66:21;;;;;;;19923:9327:30;;;;;;;4372:3;19923:9327;;;;;;;;;;;;4095:1;4367:38;;19923:9327;;;;4367:38;345:66:21;;4338:99:30;;4181:66;4210:5;;4234:2;4210:5;;:::i;:::-;345:66:21;;4181::30;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_array_address_dyn":{"entryPoint":3662,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_bool_dyn":{"entryPoint":3766,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_bytes32_dyn":{"entryPoint":1357,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_bytes_dyn":{"entryPoint":3870,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes32t_stringt_bytes3t_uint256t_uint256t_stringt_bool":{"entryPoint":4237,"id":null,"parameterSlots":1,"returnSlots":7},"abi_decode_bytes_fromMemory":{"entryPoint":11837,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string":{"entryPoint":1832,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_address_address_bytes32_bytes":{"entryPoint":11223,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_address_address_address_bytes32_bytes_22928":{"entryPoint":11167,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_address_address_bytes32":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_address_bool_bytes":{"entryPoint":11125,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_address_bool_bytes_36685":{"entryPoint":11084,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_bytes32":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_bytes32_address":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_address_bytes32_bool_bytes":{"entryPoint":10134,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_address_bytes32_bool_bytes_22740":{"entryPoint":10091,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_array_bytes_dyn":{"entryPoint":1451,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes":{"entryPoint":1089,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_bytes32_address_address":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_bytes32_bytes":{"entryPoint":11931,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes4":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes_bytes":{"entryPoint":4349,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_bytes_calldata":{"entryPoint":8566,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_bytes_to_bytes":{"entryPoint":1052,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_packed_bytes1":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_packed_bytes32_bytes32_address_address":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_packed_bytes32_stringliteral_9b15":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_packed_bytes32_uint8":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_packed_bytes32_uint8_uint8":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_packed_bytes32_uint8_uint8_stringliteral_9d09":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_packed_bytes32_uint8_uint8_stringliteral_c44f":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_packed_bytes_calldata_address_uint256":{"entryPoint":8580,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_string":{"entryPoint":14036,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":2633,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_00ef":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_0745":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_0eef":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_1083":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_1597":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_1772":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_1795":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_1d85":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_2089":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_23ee":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_2816":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_2a0a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_2c4b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_2dd3":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_2ecc":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_2ee0":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_2f99":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_311c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_32f9":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_3a42":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_3b6c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_427b":{"entryPoint":17453,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_42ee":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_44bd":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_47a7":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_48ba":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_48dc":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_584e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_5e52":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_6532":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_6c82":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_74aa":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_76ef":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_7d18":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_858d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_85c1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_8aa7":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_91f5":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_956a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_9f0e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_a472":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_a4ba":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_a645":{"entryPoint":14444,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_ab28":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_ace7":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_afe7":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_b14f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_b36b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_b75e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_bcca":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_bccb":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_bed5":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_bee9":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_c4d6":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_c66d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_c7e8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_c893":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_c9d6":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_ce0b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_cf97":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_d734":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_daee":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_dbd5":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_e203":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_eba4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_ed52":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_ed94":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_ee85":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_ef6b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_f10e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_f3b9":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_f90a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_f969":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_fae5":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_fd00":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_fd5a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_bytes_dyn":{"entryPoint":8307,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_array_array_uint8":{"entryPoint":18024,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_and_zero_memory_array_bytes":{"entryPoint":13285,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_array_bytes_22747":{"entryPoint":13259,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_array_bytes":{"entryPoint":8622,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_bytes32_dyn":{"entryPoint":1334,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":1805,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_pop_array_bytes32_dyn_storage_ptr":{"entryPoint":12872,"id":null,"parameterSlots":1,"returnSlots":0},"bytes_concat_bytes32_bytes32":{"entryPoint":11506,"id":null,"parameterSlots":2,"returnSlots":1},"bytes_concat_stringliteral_58e2_bytes32_bytes":{"entryPoint":23507,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_array_index_access_bytes_calldata_dyn_calldata":{"entryPoint":9869,"id":null,"parameterSlots":3,"returnSlots":2},"checked_add_uint256":{"entryPoint":13479,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256_22835":{"entryPoint":13493,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256_22839":{"entryPoint":13507,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256_22843":{"entryPoint":13521,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256_22909":{"entryPoint":13535,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256_22914":{"entryPoint":13549,"id":null,"parameterSlots":1,"returnSlots":1},"checked_div_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_div_uint256_22828":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_div_uint256_22844":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_div_uint256_22912":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_mul_uint256":{"entryPoint":13460,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256_22749":{"entryPoint":13380,"id":null,"parameterSlots":1,"returnSlots":1},"checked_mul_uint256_22826":{"entryPoint":13402,"id":null,"parameterSlots":1,"returnSlots":1},"checked_mul_uint256_22845":{"entryPoint":13419,"id":null,"parameterSlots":1,"returnSlots":1},"checked_mul_uint256_22907":{"entryPoint":13443,"id":null,"parameterSlots":1,"returnSlots":1},"checked_sub_uint256":{"entryPoint":12856,"id":null,"parameterSlots":1,"returnSlots":1},"checked_sub_uint256_22724":{"entryPoint":12836,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_bytes_storage":{"entryPoint":9559,"id":null,"parameterSlots":3,"returnSlots":0},"clean_up_bytearray_end_slots_bytes_storage_22894":{"entryPoint":9517,"id":null,"parameterSlots":2,"returnSlots":0},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":9494,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_bytes_to_bytes20":{"entryPoint":8949,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes_to_fixedbytes_from_bytes_to_bytes32":{"entryPoint":9004,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_array_bytes32_dyn":{"entryPoint":13117,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_bytes_to_bytes":{"entryPoint":9628,"id":null,"parameterSlots":2,"returnSlots":0},"copy_literal_to_memory_0ceb74360896f85b39388579e9f44ea71ffeef099012760c53d69361c5916c4e":{"entryPoint":13968,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_204cdd99aa55bc4f600d5720dbce0336dfda480a09d14a388dc27e8f8ab6ef98":{"entryPoint":20042,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_27617207effe6bfd81a3e2b21d8a20c4e622b23e5422d607771b4f8b8ba006fa":{"entryPoint":14002,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_4851ec83a1fcbdd43cb6dd8c7a42ae170c7be664862561b4120774fc91e8795e":{"entryPoint":14234,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_50b397cde8fab5177b7c16709fea41a662b1d126155b88df5c6c0bc81eaff36b":{"entryPoint":14129,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_5c429240eb80bae8c8233f81d399961fe5ff4d0d273717ea22d33a73c100fd4d":{"entryPoint":14059,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034":{"entryPoint":20132,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf":{"entryPoint":20013,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_79bcb7b1836cad37261b84389a47747a27872a6d42b800dd67a18207258a7aad":{"entryPoint":22205,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_8456dd4bb47e7f2a9d86e5d8ec089f0752a22bdd928c20b2aacb95eaca319215":{"entryPoint":14199,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce":{"entryPoint":19687,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_84edd11dbf0dafdf7f19c50c2bb4ec78adcdead0272747b466274282a49b8e5d":{"entryPoint":22168,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_890429bcd0f89b71a466808f6c342bf52046cd09ff93aba35cc2cf3bc5ee6b41":{"entryPoint":17967,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_8eec9d5ae546887db6b6a3889e6591fe96f3c16bc9d921551a4aac3adce52996":{"entryPoint":13937,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_ac39c4016c25be69fabda4be5ef991beab985cf664648aa7ad249e789b051c79":{"entryPoint":14269,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_ba9154e0baa69c78e0ca563b867df81bae9d177c4ea1452c35c84386a70f0f7a":{"entryPoint":20099,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_c33594c4f63c9d62e928eaeeb11b2ae0736245372a8ca39d027d3d45d8ba7d60":{"entryPoint":14339,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_c6493fd6706204ca45bea01aa45ca1b7347c138a6e78ae6794fbd0f56f8e42c6":{"entryPoint":14164,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_c6c7e729c3a6c86e4b17e2365164514096f10fa5fdab1587a39b007cafac43ad":{"entryPoint":14409,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_c84abec21ba1fee09b64be2206d75e3d0bfa99fc7af73751b1fd348db78e9eb7":{"entryPoint":14374,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f":{"entryPoint":13215,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_f0ed949e70d2454f9167bba4ab6b8d0d146f826f1ce53c120d89502468a17f88":{"entryPoint":14094,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_f99e8d094ee97e7be9a3d7269f09f9996041160cc5c134b6a863be5b0ce9b5bd":{"entryPoint":13872,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_fa187c1e7b6b42ab8b2d9415ab7e6b1e71b551fcdc8151ebafe46e40a10d90ad":{"entryPoint":13905,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_feea4b81a12df75bbafd6e2e42c16ffb6d9ea4dd1a26ac5458cb4efff203c897":{"entryPoint":14304,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_storage_0ceb74360896f85b39388579e9f44ea71ffeef099012760c53d69361c5916c4e":{"entryPoint":22694,"id":null,"parameterSlots":1,"returnSlots":0},"copy_literal_to_storage_27617207effe6bfd81a3e2b21d8a20c4e622b23e5422d607771b4f8b8ba006fa":{"entryPoint":22658,"id":null,"parameterSlots":1,"returnSlots":0},"copy_literal_to_storage_8eec9d5ae546887db6b6a3889e6591fe96f3c16bc9d921551a4aac3adce52996":{"entryPoint":22724,"id":null,"parameterSlots":1,"returnSlots":0},"copy_literal_to_storage_f99e8d094ee97e7be9a3d7269f09f9996041160cc5c134b6a863be5b0ce9b5bd":{"entryPoint":22779,"id":null,"parameterSlots":1,"returnSlots":0},"copy_literal_to_storage_fa187c1e7b6b42ab8b2d9415ab7e6b1e71b551fcdc8151ebafe46e40a10d90ad":{"entryPoint":22751,"id":null,"parameterSlots":1,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1017,"id":null,"parameterSlots":3,"returnSlots":0},"external_fun_MAX_MINTABLE":{"entryPoint":2547,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_MAX_SUPPLY":{"entryPoint":2450,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_PRICE":{"entryPoint":5841,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_authorizeOperator":{"entryPoint":4431,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_balanceOf":{"entryPoint":3458,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_batchCalls":{"entryPoint":3357,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_bytes32ToHexString":{"entryPoint":6566,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_chubbiness":{"entryPoint":3266,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_color":{"entryPoint":1750,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_generateCollectionSVG":{"entryPoint":2479,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_generateLoogieSVG":{"entryPoint":6241,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getCollectionMetadataBytes":{"entryPoint":4816,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getData":{"entryPoint":3200,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getDataBatch":{"entryPoint":7135,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getDataBatchForTokenIds":{"entryPoint":1549,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getDataForTokenId":{"entryPoint":1109,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getMetadataBytes":{"entryPoint":4386,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getOperatorsOf":{"entryPoint":2844,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isOperatorFor":{"entryPoint":2397,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_loogieTypes":{"entryPoint":6512,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_mintItem":{"entryPoint":7270,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_mintItemWithUsername":{"entryPoint":1903,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_mintedPerAddress":{"entryPoint":6747,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_mouthLength":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":5876,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_publicMintSet":{"entryPoint":3231,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_recipient":{"entryPoint":3310,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceOwnership":{"entryPoint":3519,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_revokeOperator":{"entryPoint":6878,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setData":{"entryPoint":4151,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setDataBatch":{"entryPoint":5917,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setDataBatchForTokenIds":{"entryPoint":6273,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setDataForTokenId":{"entryPoint":6808,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setMintStatus":{"entryPoint":2274,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setUsername":{"entryPoint":7809,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_supportsInterface":{"entryPoint":838,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_toColorHexString":{"entryPoint":3613,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_tokenIdsOf":{"entryPoint":6113,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_tokenOwnerOf":{"entryPoint":2332,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_totalSupply":{"entryPoint":1163,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transfer":{"entryPoint":3014,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferBatch":{"entryPoint":3998,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferOwnership":{"entryPoint":7610,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_uint2str":{"entryPoint":8245,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_upUsernames":{"entryPoint":2783,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_withdraw":{"entryPoint":3114,"id":null,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":2575,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":8641,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":1301,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_36637":{"entryPoint":1215,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_36646":{"entryPoint":1247,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_36651":{"entryPoint":1274,"id":null,"parameterSlots":1,"returnSlots":0},"fun":{"entryPoint":8428,"id":2135,"parameterSlots":1,"returnSlots":1},"fun_2153":{"entryPoint":8504,"id":2153,"parameterSlots":0,"returnSlots":0},"fun__add":{"entryPoint":12706,"id":5347,"parameterSlots":2,"returnSlots":1},"fun_add":{"entryPoint":13196,"id":5647,"parameterSlots":2,"returnSlots":1},"fun_batchCalls":{"entryPoint":9934,"id":2618,"parameterSlots":2,"returnSlots":1},"fun_checkOwner":{"entryPoint":12451,"id":3664,"parameterSlots":0,"returnSlots":0},"fun_clearOperators":{"entryPoint":11281,"id":3067,"parameterSlots":2,"returnSlots":0},"fun_contains":{"entryPoint":null,"id":5450,"parameterSlots":2,"returnSlots":1},"fun_encode":{"entryPoint":19782,"id":3833,"parameterSlots":1,"returnSlots":1},"fun_exists":{"entryPoint":null,"id":3085,"parameterSlots":1,"returnSlots":1},"fun_fallbackLSP17Extendable":{"entryPoint":8689,"id":2208,"parameterSlots":1,"returnSlots":1},"fun_generateCollectionSVG":{"entryPoint":18915,"id":7024,"parameterSlots":0,"returnSlots":2},"fun_generateLoogieSVG":{"entryPoint":14460,"id":6757,"parameterSlots":7,"returnSlots":1},"fun_generateMatrixRainEffect":{"entryPoint":17532,"id":6781,"parameterSlots":0,"returnSlots":1},"fun_generateRandomMatrixChars":{"entryPoint":18094,"id":6976,"parameterSlots":1,"returnSlots":1},"fun_getData":{"entryPoint":8276,"id":64,"parameterSlots":1,"returnSlots":1},"fun_getDataForTokenId":{"entryPoint":23577,"id":8083,"parameterSlots":2,"returnSlots":1},"fun_getMetadataBytes":{"entryPoint":20164,"id":7186,"parameterSlots":7,"returnSlots":2},"fun_getUPName":{"entryPoint":22369,"id":6055,"parameterSlots":1,"returnSlots":1},"fun_isOperatorOrOwner":{"entryPoint":10177,"id":2855,"parameterSlots":2,"returnSlots":1},"fun_isUniversalProfile":{"entryPoint":22241,"id":5965,"parameterSlots":1,"returnSlots":1},"fun_mint":{"entryPoint":23239,"id":3216,"parameterSlots":3,"returnSlots":0},"fun_mintAndGenerateWithUsername":{"entryPoint":22808,"id":7891,"parameterSlots":4,"returnSlots":0},"fun_nonReentrantAfter":{"entryPoint":null,"id":3775,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":22082,"id":3767,"parameterSlots":0,"returnSlots":0},"fun_notifyTokenReceiver":{"entryPoint":12311,"id":3608,"parameterSlots":3,"returnSlots":0},"fun_notifyTokenReceiver_36686":{"entryPoint":12255,"id":3608,"parameterSlots":2,"returnSlots":0},"fun_notifyUniversalReceiver":{"entryPoint":12155,"id":519,"parameterSlots":2,"returnSlots":0},"fun_notifyUniversalReceiver_22780":{"entryPoint":11998,"id":519,"parameterSlots":2,"returnSlots":0},"fun_remove":{"entryPoint":12936,"id":5431,"parameterSlots":2,"returnSlots":1},"fun_revokeOperator":{"entryPoint":10924,"id":3013,"parameterSlots":5,"returnSlots":0},"fun_setData":{"entryPoint":9164,"id":2309,"parameterSlots":2,"returnSlots":0},"fun_setDataForTokenId":{"entryPoint":11535,"id":3476,"parameterSlots":3,"returnSlots":0},"fun_supportsERC165InterfaceUnchecked":{"entryPoint":12632,"id":4310,"parameterSlots":2,"returnSlots":1},"fun_supportsERC165InterfaceUnchecked_22781":{"entryPoint":12539,"id":4310,"parameterSlots":1,"returnSlots":1},"fun_supportsInterfaceInERC165Extension":{"entryPoint":9039,"id":655,"parameterSlots":1,"returnSlots":1},"fun_toColorHexString":{"entryPoint":13563,"id":6205,"parameterSlots":1,"returnSlots":1},"fun_toString":{"entryPoint":21441,"id":3923,"parameterSlots":1,"returnSlots":1},"fun_tokenOwnerOf":{"entryPoint":9834,"id":2365,"parameterSlots":1,"returnSlots":1},"fun_transfer":{"entryPoint":10252,"id":2893,"parameterSlots":5,"returnSlots":0},"fun_transferBatch":{"entryPoint":10716,"id":2973,"parameterSlots":5,"returnSlots":0},"fun_uint2str":{"entryPoint":13718,"id":6286,"parameterSlots":1,"returnSlots":1},"increment_uint256":{"entryPoint":13335,"id":null,"parameterSlots":1,"returnSlots":1},"increment_uint8":{"entryPoint":18060,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address_22721":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_bytes32_uint256_of_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_bytes32_uint256_of_bytes32_22739":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_bytes32_uint256_of_bytes32_22764":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_bytes32_uint256_of_bytes32_22773":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_bytes32_uint256_of_bytes32_22906":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_bytes32_uint256_of_bytes32_22910":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_bytes32_uint256_of_bytes32_22915":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_bytes32_uint256_of_bytes32_22917":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_bytes32_uint256_of_bytes32_22922":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_bytes":{"entryPoint":13363,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_bytes32_dyn":{"entryPoint":8403,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_bytes_22889":{"entryPoint":13350,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_uint8":{"entryPoint":18077,"id":null,"parameterSlots":2,"returnSlots":1},"mod_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mod_uint256_22838":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mod_uint256_22840":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":12814,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":8381,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1193,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_memoryt_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_1dd0":{"entryPoint":22021,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_2ecf":{"entryPoint":21840,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_50ad":{"entryPoint":21764,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_a598":{"entryPoint":21899,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_ddc5":{"entryPoint":21956,"id":null,"parameterSlots":1,"returnSlots":0},"revert_forward":{"entryPoint":11986,"id":null,"parameterSlots":0,"returnSlots":0},"storage_array_index_access_bytes32_dyn_ptr":{"entryPoint":12682,"id":null,"parameterSlots":2,"returnSlots":2},"update_byte_slice_dynamic32":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_offsett_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bytes3_to_bytes3":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256_22723":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_uint256_to_uint256":{"entryPoint":9464,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_address":{"entryPoint":2380,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":2264,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_uint8":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x2A JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x25 JUMPI PUSH2 0x1D CALLDATASIZE PUSH2 0x20EC JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD RETURN JUMPDEST PUSH2 0x2138 JUMP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x17C96B8 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x16E023B3 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x1D26FCE6 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x1EAD90B0 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x1EF0352D EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x1F85E3CA EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x217B2270 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x2A3654A4 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x3BE699F9 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x3F879FAF EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x472DFCFB EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x49A6078D EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x511B6952 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x52058D8A EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x54F6127F EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x5A9C2B1C EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x6643A686 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x66D003AC EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x6963D438 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x76799136 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x7E87632C EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x7F23690C EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x8528247F EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x86A10DDD EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x8CDA5103 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x8D859F3E EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x97902421 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0xA3B261F2 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0xAD30DDBF EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xBE9F0E6F EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0xC65EB180 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xC68B3787 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xD445B978 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xD6C1407C EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xDB8C9663 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xDEDFF9C6 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0xEB93406B EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xF3BA2059 EQ PUSH2 0x239 JUMPI PUSH4 0xF76F950E SUB PUSH2 0xE JUMPI PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x1E81 JUMP JUMPDEST PUSH2 0x1DBA JUMP JUMPDEST PUSH2 0x1C66 JUMP JUMPDEST PUSH2 0x1BDF JUMP JUMPDEST PUSH2 0x1ADE JUMP JUMPDEST PUSH2 0x1A98 JUMP JUMPDEST PUSH2 0x1A5B JUMP JUMPDEST PUSH2 0x19A6 JUMP JUMPDEST PUSH2 0x1970 JUMP JUMPDEST PUSH2 0x1881 JUMP JUMPDEST PUSH2 0x1861 JUMP JUMPDEST PUSH2 0x17E1 JUMP JUMPDEST PUSH2 0x171D JUMP JUMPDEST PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x16D1 JUMP JUMPDEST PUSH2 0x12D0 JUMP JUMPDEST PUSH2 0x114F JUMP JUMPDEST PUSH2 0x1122 JUMP JUMPDEST PUSH2 0x1037 JUMP JUMPDEST PUSH2 0xF9E JUMP JUMPDEST PUSH2 0xE1D JUMP JUMPDEST PUSH2 0xDBF JUMP JUMPDEST PUSH2 0xD82 JUMP JUMPDEST PUSH2 0xD1D JUMP JUMPDEST PUSH2 0xCEE JUMP JUMPDEST PUSH2 0xCC2 JUMP JUMPDEST PUSH2 0xC9F JUMP JUMPDEST PUSH2 0xC80 JUMP JUMPDEST PUSH2 0x992 JUMP JUMPDEST PUSH2 0xC2A JUMP JUMPDEST PUSH2 0xBC6 JUMP JUMPDEST PUSH2 0xB1C JUMP JUMPDEST PUSH2 0xADF JUMP JUMPDEST PUSH2 0x9F3 JUMP JUMPDEST PUSH2 0x9AF JUMP JUMPDEST PUSH2 0x95D JUMP JUMPDEST PUSH2 0x91C JUMP JUMPDEST PUSH2 0x8E2 JUMP JUMPDEST PUSH2 0x76F JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST PUSH2 0x48B JUMP JUMPDEST PUSH2 0x455 JUMP JUMPDEST PUSH2 0x346 JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP1 DUP3 SUB PUSH2 0x341 JUMPI PUSH2 0x39D SWAP2 PUSH4 0x1D138B83 PUSH1 0xE1 SHL DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0x3B1 JUMPI JUMPDEST POP DUP2 ISZERO PUSH2 0x3A1 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AB SWAP2 POP PUSH2 0x234F JUMP JUMPDEST CODESIZE PUSH2 0x38A JUMP JUMPDEST SWAP1 SWAP2 POP PUSH4 0xA918FA6B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x3CE JUMPI JUMPDEST POP SWAP1 CODESIZE PUSH2 0x382 JUMP JUMPDEST PUSH4 0x18A6A9A5 PUSH1 0xE2 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x3E8 JUMPI JUMPDEST POP CODESIZE PUSH2 0x3C6 JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x40C JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3FC JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x435 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x452 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH2 0x39D PUSH2 0x477 PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x5C19 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x4DA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x4DA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x4DA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x4DA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4DA JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x341 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0x564 DUP4 PUSH2 0x536 JUMP JUMPDEST SWAP3 PUSH2 0x572 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x515 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x341 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x59C JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x58E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD SWAP1 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP3 DUP2 PUSH1 0x40 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x5DF JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x5FD PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0x41C JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0x5CF JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x341 JUMPI PUSH2 0x63E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x54D JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x341 JUMPI PUSH2 0x657 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x54D JUMP JUMPDEST SWAP1 DUP1 MLOAD DUP3 MLOAD SUB PUSH2 0x6C4 JUMPI PUSH2 0x66B DUP2 MLOAD PUSH2 0x2073 JUMP JUMPDEST SWAP2 PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x6B6 JUMPI DUP1 PUSH2 0x69A PUSH2 0x688 PUSH1 0x1 SWAP4 DUP7 PUSH2 0x20D3 JUMP JUMPDEST MLOAD PUSH2 0x693 DUP4 DUP7 PUSH2 0x20D3 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x5C19 JUMP JUMPDEST PUSH2 0x6A4 DUP3 DUP8 PUSH2 0x20D3 JUMP JUMPDEST MSTORE PUSH2 0x6AF DUP2 DUP7 PUSH2 0x20D3 JUMP JUMPDEST POP ADD PUSH2 0x66F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x39D DUP7 DUP3 PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x17D38EFF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xE8 SHL PUSH1 0x40 MLOAD SWAP1 PUSH3 0xFFFFFF PUSH1 0xE8 SHL AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4DA JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x341 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x73F DUP3 PUSH2 0x70D JUMP JUMPDEST SWAP3 PUSH2 0x74D PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x515 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x341 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x341 JUMPI PUSH2 0x79D PUSH2 0x39D SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x728 JUMP JUMPDEST PUSH2 0x7A5 PUSH2 0x5642 JUMP JUMPDEST PUSH2 0x7B9 PUSH2 0x7B4 PUSH1 0xE SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x5504 JUMP JUMPDEST PUSH2 0x7C8 PUSH2 0xE90 PUSH1 0x8 SLOAD LT PUSH2 0x5550 JUMP JUMPDEST PUSH2 0x7DC PUSH8 0x16345785D8A0000 CALLVALUE LT ISZERO PUSH2 0x558B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x7FA SWAP1 PUSH1 0xA SWAP1 JUMPDEST SLOAD LT PUSH2 0x55C4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x813 DUP2 SLOAD PUSH2 0x3417 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x828 PUSH2 0x823 PUSH1 0x8 SLOAD PUSH2 0x3417 JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH2 0x890 PUSH1 0x8 SLOAD SWAP2 PUSH2 0x838 NUMBER PUSH2 0x3224 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP7 DUP2 MSTORE SWAP3 BLOCKHASH SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SWAP1 DUP2 SHL DUP3 AND DUP2 DUP5 ADD MSTORE ADDRESS SWAP1 SHL AND PUSH1 0x74 DUP3 ADD MSTORE PUSH2 0x886 DUP2 PUSH1 0x88 DUP2 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x515 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP4 CALLER PUSH2 0x5918 JUMP JUMPDEST PUSH2 0x8BE PUSH1 0x0 DUP1 DUP1 DUP1 CALLVALUE PUSH20 0xA81A6A910FED20374361B35C451A4A44F86CED46 GAS CALL PUSH2 0x8B8 PUSH2 0x21C1 JUMP JUMPDEST POP PUSH2 0x5605 JUMP JUMPDEST PUSH2 0x8C8 PUSH1 0x1 PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST DUP1 ISZERO ISZERO SUB PUSH2 0x341 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x8FF DUP2 PUSH2 0x8D8 JUMP JUMPDEST PUSH2 0x907 PUSH2 0x30A3 JUMP JUMPDEST PUSH1 0xFF DUP1 NOT PUSH1 0xE SLOAD AND SWAP2 ISZERO ISZERO AND OR PUSH1 0xE SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x20 PUSH2 0x93A PUSH1 0x4 CALLDATALOAD PUSH2 0x266A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x341 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x20 PUSH2 0x988 PUSH1 0x4 CALLDATALOAD PUSH2 0x97F DUP2 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x27C1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0xE90 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH2 0x9E5 PUSH2 0x39D PUSH2 0x9CE PUSH2 0x49E3 JUMP JUMPDEST PUSH1 0x40 SWAP3 SWAP2 SWAP3 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x40 DUP6 MSTORE PUSH1 0x40 DUP6 ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x41C JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xA DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xA3F JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xA29 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xA1E JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP2 PUSH2 0xA5A DUP4 PUSH2 0xA0F JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 SWAP4 DUP5 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0xABC JUMPI POP PUSH1 0x1 EQ PUSH2 0xA7C JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP3 DUP4 PUSH1 0x0 KECCAK256 SWAP3 DUP5 PUSH1 0x0 SWAP5 JUMPDEST DUP4 DUP7 LT PUSH2 0xAA8 JUMPI POP POP POP POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0xA76 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD DUP4 ADD MSTORE SWAP5 ADD SWAP4 DUP6 SWAP1 DUP3 ADD PUSH2 0xA91 JUMP JUMPDEST SWAP3 SWAP5 POP POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0xA76 JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0x39D PUSH2 0xB15 PUSH2 0x477 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0xA49 JUMP JUMPDEST SUB DUP3 PUSH2 0x515 JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xBAE JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH2 0xB62 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x333D JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP2 DUP4 SWAP3 DUP4 ADD DUP2 DUP5 MSTORE DUP3 MLOAD DUP1 SWAP2 MSTORE DUP2 PUSH1 0x40 DUP6 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xB8E JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x5747CD1B PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xBE3 DUP2 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0xBEF DUP2 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH2 0xBFB DUP2 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x341 JUMPI PUSH2 0xC1E PUSH2 0xC28 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x728 JUMP JUMPDEST SWAP3 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x280C JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x4 CALLDATALOAD PUSH2 0xC4C DUP2 PUSH2 0x94C JUMP JUMPDEST PUSH2 0xC54 PUSH2 0x30A3 JUMP JUMPDEST SELFBALANCE SWAP1 DUP3 SWAP1 DUP3 ISZERO PUSH2 0xC76 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALL ISZERO PUSH2 0xC71 JUMPI STOP JUMPDEST PUSH2 0x2ED2 JUMP JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0xC5F JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH2 0x39D PUSH2 0x477 PUSH1 0x4 CALLDATALOAD PUSH2 0x2054 JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xE SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH20 0xA81A6A910FED20374361B35C451A4A44F86CED46 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x341 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x341 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x341 JUMPI CALLDATASIZE PUSH1 0x24 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD GT PUSH2 0x341 JUMPI PUSH2 0x39D SWAP2 PUSH1 0x24 PUSH2 0xD76 SWAP3 ADD PUSH2 0x26CE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x5AB JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xD9F DUP2 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE1A JUMPI PUSH2 0xDD9 PUSH2 0x30A3 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE8 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x341 JUMPI PUSH2 0x477 PUSH2 0x39D SWAP2 PUSH2 0x34FB JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x341 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0xE65 DUP4 PUSH2 0x536 JUMP JUMPDEST SWAP3 PUSH2 0xE73 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x515 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x341 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xE9D JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 DUP1 SWAP2 DUP4 CALLDATALOAD PUSH2 0xEAB DUP2 PUSH2 0x94C JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xE8F JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x341 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0xECD DUP4 PUSH2 0x536 JUMP JUMPDEST SWAP3 PUSH2 0xEDB PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x515 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x341 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xF05 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 DUP1 SWAP2 DUP4 CALLDATALOAD PUSH2 0xF13 DUP2 PUSH2 0x8D8 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xEF7 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x341 JUMPI DUP2 CALLDATALOAD SWAP1 PUSH2 0xF36 DUP3 PUSH2 0x536 JUMP JUMPDEST SWAP3 PUSH2 0xF44 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x515 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 DUP1 DUP5 GT PUSH2 0x341 JUMPI DUP5 DUP4 ADD SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0xF72 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x341 JUMPI DUP7 SWAP2 PUSH2 0xF93 DUP5 DUP5 DUP1 SWAP5 DUP10 ADD ADD PUSH2 0x728 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0xF62 JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x341 JUMPI PUSH2 0xFCF SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0xE4E JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x341 JUMPI PUSH2 0xFE7 SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0xE4E JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x341 JUMPI PUSH2 0xFFE SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x54D JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x341 JUMPI PUSH2 0x1016 SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0xEB6 JUMP JUMPDEST SWAP3 PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x341 JUMPI PUSH2 0xC28 SWAP6 PUSH2 0x1031 SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0xF1E JUMP JUMPDEST SWAP4 PUSH2 0x29DC JUMP JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x341 JUMPI PUSH2 0x1062 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x728 JUMP JUMPDEST PUSH2 0x106A PUSH2 0x30A3 JUMP JUMPDEST CALLVALUE PUSH2 0x107B JUMPI PUSH2 0xC28 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x23CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF36BA737 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0xE0 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x341 JUMPI DUP4 PUSH2 0x10BC SWAP2 PUSH1 0x4 ADD PUSH2 0x728 JUMP JUMPDEST SWAP3 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE8 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x341 JUMPI SWAP3 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x84 CALLDATALOAD SWAP3 PUSH1 0xA4 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x341 JUMPI PUSH2 0x10F0 SWAP2 PUSH1 0x4 ADD PUSH2 0x728 JUMP JUMPDEST SWAP1 PUSH1 0xC4 CALLDATALOAD PUSH2 0x452 DUP2 PUSH2 0x8D8 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1114 PUSH2 0x452 SWAP4 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x41C JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH2 0x113F PUSH2 0x1133 CALLDATASIZE PUSH2 0x108D JUMP JUMPDEST SWAP6 SWAP5 SWAP1 SWAP5 SWAP4 SWAP2 SWAP4 PUSH2 0x4EC4 JUMP JUMPDEST SWAP1 PUSH2 0x39D PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x10FD JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 PUSH2 0x116E DUP3 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x341 JUMPI PUSH2 0x118F SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x728 JUMP JUMPDEST SWAP2 PUSH2 0x1199 DUP3 PUSH2 0x266A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP3 SWAP2 CALLER DUP5 SUB PUSH2 0x1299 JUMPI POP DUP6 AND SWAP1 DUP2 ISZERO PUSH2 0x128A JUMPI DUP2 DUP4 EQ PUSH2 0x127B JUMPI PUSH2 0x11E2 PUSH2 0x11DE DUP8 PUSH2 0x11D9 DUP8 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x338C JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x124A JUMPI POP SWAP2 DUP1 PUSH2 0x1245 SWAP3 PUSH2 0xC28 SWAP7 SWAP5 PUSH32 0x1B1B58AA2EC0CEC2228B2D37124556D41F5A1F7B12F089171F896CC236671215 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1221 DUP11 DUP3 PUSH2 0x441 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x1237 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP3 CALLER PUSH1 0x20 DUP6 ADD PUSH2 0x276B JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x515 JUMP JUMPDEST PUSH2 0x2EDE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x14EC4D6D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP3 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD DUP7 SWAP1 MSTORE SWAP2 DUP3 SWAP2 ADD SUB SWAP1 REVERT JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x44FED6B1 PUSH1 0xE1 SHL DUP2 MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9577B8B3 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x2D938F51 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x12EC PUSH2 0x49E3 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0x12F8 DUP2 PUSH2 0x3596 JUMP JUMPDEST SWAP1 PUSH2 0x1302 SWAP1 PUSH2 0x3596 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH17 0x7B224C5350344D65746164617461223A7B PUSH1 0x78 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH22 0x89B985B59488E88931D5ADCDBD31BDBD9DA595CC88B PUSH1 0x52 SHL PUSH1 0x31 DUP3 ADD MSTORE PUSH32 0x226465736372697074696F6E223A224C756B736F4C6F6F676965732061726520 PUSH1 0x47 DUP3 ADD MSTORE PUSH32 0x4C554B534F205374616E64617264204C535038204E4654732077697468206120 PUSH1 0x67 DUP3 ADD MSTORE PUSH14 0x39B6B4B632901D149027B7363C9 PUSH1 0x95 SHL PUSH1 0x87 DUP3 ADD MSTORE SWAP3 DUP4 SWAP3 PUSH1 0x95 DUP5 ADD PUSH2 0x13B1 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH32 0x204C756B736F4C6F6F6769657320617661696C61626C65206F6E206120707269 DUP2 MSTORE PUSH32 0x636520637572766520696E6372656173696E6720302E32252077697468206561 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6368206E6577206D696E742E2054686973204D61747269782045646974696F6E PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x20666561747572657320616E696D61746564204D61747269782D7374796C6520 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x64657369676E7320666F722065616368204C6F6F6769652E222C000000000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x9A ADD PUSH32 0x226C696E6B73223A5B7B227469746C65223A2257656273697465222C2275726C DUP2 MSTORE PUSH32 0x223A2268747470733A2F2F6C756B736F6C6F6F676965732E76657263656C2E61 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x7070227D2C7B227469746C65223A2254776974746572222C2275726C223A2268 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x747470733A2F2F747769747465722E636F6D2F6C756B736F4C6F6F6769657322 PUSH1 0x60 DUP3 ADD MSTORE PUSH3 0x1F574B PUSH1 0xEA SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x83 ADD PUSH32 0x22696D61676573223A5B5B7B227769647468223A3430302C2268656967687422 DUP2 MSTORE PUSH12 0x1D1A181816113AB936111D11 PUSH1 0xA1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2C ADD PUSH2 0x1557 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH5 0x89F57574B PUSH1 0xDA SHL DUP2 MSTORE PUSH1 0x5 ADD PUSH14 0x2261747472696275746573223A5B PUSH1 0x90 SHL DUP2 MSTORE PUSH1 0xE ADD PUSH32 0x7B226B6579223A2274797065222C2276616C7565223A22636F6C6C656374696F DUP2 MSTORE PUSH20 0x1B888B089D1E5C19488E889CDD1C9A5B99C89F4B PUSH1 0x62 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD PUSH32 0x7B226B6579223A226C696D6974222C2276616C7565223A000000000000000000 DUP2 MSTORE PUSH1 0x17 ADD PUSH2 0x15EE SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH18 0xB089D1E5C19488E889B9D5B58995C889F4B PUSH1 0x72 SHL DUP2 MSTORE PUSH1 0x12 ADD PUSH32 0x7B226B6579223A226375727665222C2276616C7565223A3130302E322C227479 DUP2 MSTORE PUSH13 0x7065223A226E756D626572227D PUSH1 0x98 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2D ADD PUSH1 0x5D PUSH1 0xF8 SHL DUP2 MSTORE PUSH1 0x1 ADD PUSH2 0x7D7D PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD SUB PUSH1 0x1F NOT SWAP1 DUP2 DUP2 ADD DUP4 MSTORE PUSH2 0x166E SWAP1 DUP4 PUSH2 0x515 JUMP JUMPDEST PUSH2 0x1677 DUP3 PUSH2 0x4D46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x3D DUP3 ADD PUSH2 0x16B1 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP3 MSTORE PUSH2 0x16C1 SWAP1 DUP3 PUSH2 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH2 0x39D SWAP2 DUP4 PUSH2 0x10FD JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0x16345785D8A0000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x341 JUMPI PUSH2 0x1749 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x54D JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x341 JUMPI PUSH2 0x1761 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0xF1E JUMP JUMPDEST SWAP2 PUSH2 0x176A PUSH2 0x30A3 JUMP JUMPDEST CALLVALUE PUSH2 0x17D2 JUMPI DUP2 MLOAD DUP4 MLOAD SUB PUSH2 0x17C3 JUMPI DUP2 MLOAD ISZERO PUSH2 0x17B4 JUMPI POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xC28 JUMPI DUP1 PUSH2 0x17AE PUSH2 0x179C PUSH1 0x1 SWAP4 DUP6 PUSH2 0x20D3 JUMP JUMPDEST MLOAD PUSH2 0x17A7 DUP4 DUP8 PUSH2 0x20D3 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x23CC JUMP JUMPDEST ADD PUSH2 0x1783 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x97DA5F95 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3BCC8979 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF36BA737 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x17FF DUP2 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x181E SWAP1 PUSH2 0x333D JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP2 DUP4 SWAP3 DUP4 ADD DUP2 DUP5 MSTORE DUP3 MLOAD DUP1 SWAP2 MSTORE DUP2 PUSH1 0x40 DUP6 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x184A JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x183B JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH2 0x39D PUSH2 0x477 PUSH2 0x1875 CALLDATASIZE PUSH2 0x108D JUMP JUMPDEST SWAP6 SWAP5 SWAP1 SWAP5 SWAP4 SWAP2 SWAP4 PUSH2 0x387C JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x341 JUMPI PUSH2 0x18B2 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x54D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x341 JUMPI PUSH2 0x18C9 SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0x54D JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x341 JUMPI PUSH2 0x18E1 SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0xF1E JUMP JUMPDEST SWAP3 PUSH2 0x18EA PUSH2 0x30A3 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD DUP1 SWAP2 EQ SWAP1 DUP2 ISZERO SWAP2 PUSH2 0x1964 JUMPI JUMPDEST POP PUSH2 0x1955 JUMPI DUP2 MLOAD ISZERO PUSH2 0x1946 JUMPI POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xC28 JUMPI DUP1 PUSH2 0x1940 PUSH2 0x1923 PUSH1 0x1 SWAP4 DUP6 PUSH2 0x20D3 JUMP JUMPDEST MLOAD PUSH2 0x192E DUP4 DUP8 PUSH2 0x20D3 JUMP JUMPDEST MLOAD PUSH2 0x1939 DUP5 DUP10 PUSH2 0x20D3 JUMP JUMPDEST MLOAD SWAP2 PUSH2 0x2D0F JUMP JUMPDEST ADD PUSH2 0x190A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x80C98305 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x17D38EFF PUSH1 0xE1 SHL DUP2 MSTORE REVERT JUMPDEST SWAP1 POP DUP5 MLOAD EQ ISZERO CODESIZE PUSH2 0x18FA JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH2 0x39D PUSH2 0xB15 PUSH2 0x477 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0xA49 JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 SWAP1 DUP2 CALLDATALOAD PUSH2 0x19C5 PUSH2 0x339F JUMP JUMPDEST PUSH2 0x19CD PUSH2 0x33CB JUMP JUMPDEST SWAP4 PUSH1 0x0 SWAP3 DUP4 JUMPDEST DUP6 DUP2 LT PUSH2 0x19E8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x39D DUP10 DUP3 PUSH2 0x441 JUMP JUMPDEST PUSH2 0x1A56 SWAP1 PUSH2 0x1A32 PUSH2 0x1A0A PUSH1 0xF DUP6 DUP5 BYTE DUP12 PUSH2 0x1A2A PUSH2 0x1A18 DUP6 DUP5 DUP13 SHR DUP7 AND DUP14 PUSH2 0x3433 JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH2 0x1A21 DUP9 PUSH2 0x3444 JUMP JUMPDEST SWAP1 DUP14 BYTE SWAP3 PUSH2 0x3433 JUMP JUMPDEST MSTORE8 AND DUP8 PUSH2 0x3433 JUMP JUMPDEST PUSH2 0x1A50 PUSH2 0x1A46 PUSH2 0x1A41 DUP5 PUSH2 0x3444 JUMP JUMPDEST PUSH2 0x34A7 JUMP JUMPDEST SWAP2 DUP9 BYTE SWAP2 DUP11 PUSH2 0x3433 JUMP JUMPDEST MSTORE8 PUSH2 0x3417 JUMP JUMPDEST PUSH2 0x19D3 JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1A78 DUP2 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x341 JUMPI PUSH2 0x1ACB PUSH2 0xC28 SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x728 JUMP JUMPDEST PUSH2 0x1AD3 PUSH2 0x30A3 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x2D0F JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1AFB DUP2 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x1B0B DUP4 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x341 JUMPI PUSH2 0x1B2A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x728 JUMP JUMPDEST PUSH2 0x1B33 DUP4 PUSH2 0x266A JUMP JUMPDEST SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP1 CALLER DUP3 SWAP1 SUB PUSH2 0x1BA8 JUMPI JUMPDEST DUP5 AND SWAP1 DUP2 ISZERO PUSH2 0x1B96 JUMPI EQ PUSH2 0x1B84 JUMPI PUSH2 0x1B64 DUP3 DUP3 DUP7 DUP9 DUP8 PUSH2 0x2AAC JUMP JUMPDEST PUSH2 0x1B6A JUMPI STOP JUMPDEST PUSH2 0xC28 SWAP4 PUSH2 0x1237 PUSH2 0x1245 SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 PUSH1 0x20 DUP6 ADD PUSH2 0x2796 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x44FED6B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9577B8B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP5 DUP2 AND CALLER EQ PUSH2 0x1B49 JUMPI PUSH1 0x40 MLOAD PUSH4 0x760B5ACD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x341 JUMPI PUSH2 0x1C0F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x54D JUMP JUMPDEST PUSH2 0x1C19 DUP2 MLOAD PUSH2 0x2073 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1C58 JUMPI DUP1 PUSH2 0x1C3C PUSH2 0x1C36 PUSH1 0x1 SWAP4 DUP6 PUSH2 0x20D3 JUMP JUMPDEST MLOAD PUSH2 0x2054 JUMP JUMPDEST PUSH2 0x1C46 DUP3 DUP7 PUSH2 0x20D3 JUMP JUMPDEST MSTORE PUSH2 0x1C51 DUP2 DUP6 PUSH2 0x20D3 JUMP JUMPDEST POP ADD PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x39D DUP6 DUP3 PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE1A JUMPI PUSH2 0x39D SWAP1 PUSH2 0x1C7F PUSH2 0x5642 JUMP JUMPDEST PUSH2 0x1C8E PUSH2 0x7B4 PUSH1 0xE SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1C9D PUSH2 0xE90 PUSH1 0x8 SLOAD LT PUSH2 0x5550 JUMP JUMPDEST PUSH2 0x1CB1 PUSH8 0x16345785D8A0000 CALLVALUE LT ISZERO PUSH2 0x558B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1CCC SWAP1 PUSH1 0xA SWAP1 PUSH2 0x7F3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1CE5 DUP2 SLOAD PUSH2 0x3417 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1CF5 PUSH2 0x823 PUSH1 0x8 SLOAD PUSH2 0x3417 JUMP JUMPDEST PUSH2 0x8BE PUSH1 0x8 SLOAD SWAP2 PUSH2 0x1D7F PUSH2 0x1D08 NUMBER PUSH2 0x3224 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP8 DUP2 MSTORE SWAP3 BLOCKHASH SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SWAP1 DUP2 SHL DUP3 AND DUP2 DUP5 ADD MSTORE ADDRESS SWAP1 SHL AND PUSH1 0x74 DUP3 ADD MSTORE PUSH2 0x1D4C DUP2 PUSH1 0x88 DUP2 ADD PUSH2 0x878 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x1D57 PUSH2 0x21AE JUMP JUMPDEST POP PUSH2 0x1D61 CALLER PUSH2 0x56E1 JUMP JUMPDEST ISZERO PUSH2 0x1DB2 JUMPI PUSH2 0x1D6F CALLER PUSH2 0x5761 JUMP JUMPDEST SWAP1 DUP2 MLOAD ISZERO PUSH2 0x1DA2 JUMPI JUMPDEST DUP6 CALLER PUSH2 0x5918 JUMP JUMPDEST DUP1 DUP1 DUP1 CALLVALUE PUSH20 0xA81A6A910FED20374361B35C451A4A44F86CED46 GAS CALL PUSH2 0x8B8 PUSH2 0x21C1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DAC PUSH2 0x56BD JUMP JUMPDEST SWAP1 PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0x1DAC PUSH2 0x5698 JUMP JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1DD7 DUP2 PUSH2 0x94C JUMP JUMPDEST PUSH2 0x1DDF PUSH2 0x30A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 ISZERO PUSH2 0x1E2D JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE SWAP1 SWAP3 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x341 JUMPI PUSH2 0x1EB5 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x728 JUMP JUMPDEST PUSH2 0x1EBE DUP3 PUSH2 0x266A JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x1FFE JUMPI PUSH1 0x0 SWAP3 DUP3 DUP5 MSTORE PUSH1 0x20 SWAP1 PUSH1 0xD DUP3 MSTORE PUSH1 0x40 DUP6 KECCAK256 SWAP2 DUP4 MLOAD SWAP2 DUP3 GT PUSH2 0x4DA JUMPI PUSH2 0x1EFE DUP3 PUSH2 0x1EF8 DUP6 SLOAD PUSH2 0xA0F JUMP JUMPDEST DUP6 PUSH2 0x2557 JUMP JUMPDEST DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1F6C JUMPI POP SWAP2 DUP2 PUSH32 0xBAB5FBABBF1262857155D5133D7829BD5739A99EB04EE435FE0E160483B1E8A SWAP5 SWAP3 PUSH2 0x1F5B SWAP5 DUP9 SWAP2 PUSH2 0x1F61 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x441 JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST SWAP1 POP DUP4 ADD MLOAD CODESIZE PUSH2 0x1F3B JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND PUSH2 0x1F81 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 DUP9 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1FE6 JUMPI POP POP SWAP3 PUSH2 0x1F5B SWAP5 SWAP3 PUSH1 0x1 SWAP3 DUP3 PUSH32 0xBAB5FBABBF1262857155D5133D7829BD5739A99EB04EE435FE0E160483B1E8A SWAP9 SWAP7 LT PUSH2 0x1FCD JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1F4F JUMP JUMPDEST DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x1FC1 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x1F85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2737BA103A37B5B2B71037BBB732B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x341 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x341 JUMPI PUSH2 0x39D PUSH2 0x477 PUSH1 0x4 CALLDATALOAD PUSH2 0x3596 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0xB15 PUSH2 0x452 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0xA49 JUMP JUMPDEST SWAP1 PUSH2 0x207D DUP3 PUSH2 0x536 JUMP JUMPDEST PUSH2 0x208A PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x515 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x209B PUSH1 0x1F NOT SWAP2 PUSH2 0x536 JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x20AC JUMPI POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x60 PUSH1 0x20 DUP1 SWAP4 DUP6 ADD ADD MSTORE ADD PUSH2 0x20A0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x20E7 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x20BD JUMP JUMPDEST PUSH1 0x4 CALLDATASIZE LT PUSH2 0x20FD JUMPI PUSH2 0x452 SWAP1 PUSH2 0x21F1 JUMP JUMPDEST PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH4 0xE5099EE3 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP4 ADD MSTORE DUP1 PUSH1 0x24 DUP4 ADD MSTORE DUP1 PUSH1 0x0 DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x2150 JUMPI PUSH1 0x40 MLOAD PUSH4 0x30FA4A21 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH4 0xE5099EE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP1 SWAP3 SWAP2 DUP3 CALLDATACOPY ADD PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x34 SWAP4 SWAP2 DUP2 PUSH1 0x0 DUP3 CALLDATACOPY ADD SWAP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 PUSH1 0x60 SHL AND DUP3 MSTORE PUSH1 0x14 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x21BB DUP3 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x21EC JUMPI RETURNDATASIZE SWAP1 PUSH2 0x21D2 DUP3 PUSH2 0x70D JUMP JUMPDEST SWAP2 PUSH2 0x21E0 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x515 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL PUSH1 0x0 CALLDATALOAD AND SWAP1 PUSH2 0x223E PUSH2 0x2239 PUSH1 0x40 MLOAD PUSH10 0x6773C5A04A6D4300884B PUSH1 0xB1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x2A DUP3 ADD MSTORE DUP5 PUSH1 0x2C DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x2234 DUP2 PUSH2 0x4DF JUMP JUMPDEST PUSH2 0x232C JUMP JUMPDEST PUSH2 0x2054 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x14 DUP2 EQ ISZERO SWAP1 DUP2 PUSH2 0x22EB JUMPI JUMPDEST POP PUSH2 0x22C6 JUMPI PUSH2 0x225A SWAP1 PUSH2 0x22F5 JUMP JUMPDEST PUSH1 0x60 SHR SWAP2 DUP3 ISZERO PUSH2 0x22A2 JUMPI POP PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x40 MLOAD PUSH2 0x2283 DUP2 PUSH2 0x878 PUSH1 0x20 DUP3 ADD SWAP5 CALLVALUE SWAP1 CALLER SWAP1 DUP8 PUSH2 0x2184 JUMP JUMPDEST MLOAD SWAP2 CALLVALUE SWAP1 GAS CALL PUSH2 0x2291 PUSH2 0x21C1 JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x229A JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xBB370B2B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x42BFE79F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x1277 SWAP1 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST SWAP1 POP ISZERO ISZERO CODESIZE PUSH2 0x224C JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 MLOAD SWAP3 ADD MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 DUP2 AND SWAP4 PUSH1 0x14 DUP2 LT PUSH2 0x231D JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x14 SUB PUSH1 0x3 SHL DUP3 SWAP1 SHL AND AND SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD MLOAD SWAP1 PUSH1 0x20 DUP2 LT PUSH2 0x2340 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH1 0x3 SHL SHL AND SWAP1 JUMP JUMPDEST PUSH2 0x238C PUSH2 0x2239 PUSH1 0x40 MLOAD PUSH10 0x6773C5A04A6D4300884B PUSH1 0xB1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x2A DUP3 ADD MSTORE PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x2C DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x2234 DUP2 PUSH2 0x4DF JUMP JUMPDEST DUP1 MLOAD PUSH1 0x14 DUP2 EQ ISZERO SWAP1 DUP2 PUSH2 0x23C2 JUMPI JUMPDEST POP PUSH2 0x22C6 JUMPI PUSH2 0x23A8 SWAP1 PUSH2 0x22F5 JUMP JUMPDEST PUSH1 0x60 SHR SWAP1 DUP2 ISZERO PUSH2 0x23BB JUMPI PUSH2 0x452 SWAP2 PUSH2 0x3158 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 POP ISZERO ISZERO CODESIZE PUSH2 0x239A JUMP JUMPDEST SWAP1 PUSH32 0xF675E9361AF1C1664C1868CFA3EB97672D6B1A513AA5B81DEC34C9EE330E818D DUP3 EQ PUSH2 0x24E6 JUMPI PUSH32 0xDEBA1E292F8BA88238E10AB3C7F88BD4BE4FAC56CAD5194B6ECCEAF653468AF1 DUP3 SUB PUSH2 0x242D JUMPI PUSH1 0x40 MLOAD PUSH4 0x85C169BD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH32 0x2F0A68AB07768E01943A599E73362A0E17A63A72E94DD2E384D2C1D4DB932756 DUP3 SUB PUSH2 0x2466 JUMPI PUSH1 0x40 MLOAD PUSH4 0xECEAB67 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH32 0xE0261FA95DB2EB3B5439BD033CDA66D56B96F92F243A8228FD87550ED7BDFDB3 DUP3 SUB PUSH2 0x249F JUMPI PUSH1 0x40 MLOAD PUSH4 0x4EF6D7FB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x24E1 DUP2 PUSH2 0x1F4F PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 SWAP4 PUSH2 0x24DC DUP7 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x259C JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1B324005 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP2 PUSH2 0x2512 SWAP2 DUP4 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x2521 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2516 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x253A JUMPI POP POP JUMP JUMPDEST PUSH2 0x2555 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x1F PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 ADD PUSH1 0x5 SHR DUP2 ADD SWAP1 PUSH2 0x2516 JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x2566 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x2555 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x2592 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2516 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x2585 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4DA JUMPI PUSH2 0x25C3 DUP2 PUSH2 0x25BD DUP5 SLOAD PUSH2 0xA0F JUMP JUMPDEST DUP5 PUSH2 0x2557 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x25FF JUMPI POP DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x25F4 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x25DE JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 PUSH2 0x2615 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x2652 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x2639 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x262F JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x261A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0xBAE JUMPI POP SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x20E7 JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x341 JUMPI ADD SWAP1 DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x341 JUMPI PUSH1 0x20 ADD DUP3 CALLDATASIZE SUB DUP2 SGT PUSH2 0x341 JUMPI SWAP2 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x26D9 DUP2 PUSH2 0x2073 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP2 DUP3 JUMPDEST DUP2 DUP2 LT PUSH2 0x26EC JUMPI POP POP POP POP JUMP JUMPDEST DUP4 DUP1 PUSH2 0x26F9 DUP4 DUP6 DUP8 PUSH2 0x268D JUMP JUMPDEST PUSH1 0x40 SWAP4 SWAP2 PUSH2 0x270B DUP6 MLOAD DUP1 SWAP4 DUP2 SWAP4 PUSH2 0x2176 JUMP JUMPDEST SUB SWAP1 ADDRESS GAS DELEGATECALL SWAP1 PUSH2 0x2719 PUSH2 0x21C1 JUMP JUMPDEST SWAP2 ISZERO PUSH2 0x2740 JUMPI POP SWAP1 PUSH1 0x1 SWAP2 PUSH2 0x272E DUP3 DUP10 PUSH2 0x20D3 JUMP JUMPDEST MSTORE PUSH2 0x2739 DUP2 DUP9 PUSH2 0x20D3 JUMP JUMPDEST POP ADD PUSH2 0x26DF JUMP JUMPDEST DUP2 MLOAD SWAP2 SWAP3 SWAP2 ISZERO PUSH2 0x2752 JUMPI DUP3 MLOAD PUSH1 0x20 DUP5 ADD REVERT JUMPDEST MLOAD PUSH4 0x234EB819 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 SWAP2 POP REVERT JUMPDEST PUSH2 0x452 SWAP4 SWAP3 PUSH1 0x80 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP3 ADD MSTORE DUP2 PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST PUSH2 0x452 SWAP4 SWAP3 PUSH1 0x80 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE DUP2 PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x27D3 DUP5 PUSH2 0x266A JUMP JUMPDEST AND SWAP2 AND SWAP1 DUP2 EQ SWAP2 DUP3 ISZERO PUSH2 0x27E5 JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH2 0x452 SWAP3 POP PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE ADD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP4 SWAP2 PUSH2 0x281A DUP2 CALLER PUSH2 0x27C1 JUMP JUMPDEST ISZERO PUSH2 0x29BE JUMPI PUSH2 0x2828 DUP2 PUSH2 0x266A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP5 DUP3 AND SWAP2 DUP3 DUP5 SUB PUSH2 0x298E JUMPI DUP1 DUP9 AND SWAP4 DUP5 ISZERO PUSH2 0x297C JUMPI PUSH2 0x2852 DUP7 PUSH2 0x266A JUMP JUMPDEST SWAP2 DUP3 AND SUB PUSH2 0x294C JUMPI POP POP SWAP3 PUSH2 0x2942 DUP4 DUP1 PUSH2 0x2555 SWAP10 SWAP8 SWAP5 PUSH2 0x1237 SWAP10 SWAP8 PUSH2 0x287A PUSH2 0x2947 SWAP9 DUP8 PUSH2 0x2C11 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x289D SWAP1 DUP5 SWAP1 PUSH2 0x3288 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x28C1 SWAP1 DUP5 SWAP1 PUSH2 0x31A2 JUMP JUMPDEST POP PUSH2 0x28F9 DUP10 PUSH2 0x28DA DUP6 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xB333C813A7426A7A11E2B190CAD52C44119421594B47F6F32ACE6D8C7207B2BF SWAP1 DUP1 PUSH2 0x292B DUP11 DUP15 CALLER DUP5 PUSH2 0x2B75 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP5 DUP6 SWAP3 DUP9 DUP7 CALLER PUSH1 0x20 DUP8 ADD PUSH2 0x2BD7 JUMP JUMPDEST PUSH2 0x2F7B JUMP JUMPDEST PUSH2 0x3017 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5A9C31D3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x24ECEF4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2D938F51 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE DUP8 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x1294D2A9 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP5 SWAP4 SWAP1 SWAP2 SWAP3 DUP6 MLOAD SWAP4 DUP4 MLOAD DUP6 EQ DUP1 ISZERO SWAP1 PUSH2 0x2AA1 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x2A96 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x2A8B JUMPI JUMPDEST PUSH2 0x2A79 JUMPI PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH2 0x2A16 JUMPI POP POP POP POP POP POP SWAP1 POP JUMP JUMPDEST DUP1 PUSH2 0x2A73 PUSH2 0x2A36 PUSH2 0x2A29 PUSH1 0x1 SWAP5 DUP13 PUSH2 0x20D3 JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x2A43 PUSH2 0x2A29 DUP5 DUP11 PUSH2 0x20D3 JUMP JUMPDEST PUSH2 0x2A4D DUP5 DUP8 PUSH2 0x20D3 JUMP JUMPDEST MLOAD PUSH2 0x2A61 PUSH2 0x2A5B DUP7 DUP11 PUSH2 0x20D3 JUMP JUMPDEST MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x2A6C DUP7 DUP12 PUSH2 0x20D3 JUMP JUMPDEST MLOAD SWAP4 PUSH2 0x280C JUMP JUMPDEST ADD PUSH2 0x2A05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x93A83119 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP DUP3 MLOAD DUP6 EQ ISZERO PUSH2 0x29FE JUMP JUMPDEST POP DUP2 MLOAD DUP6 EQ ISZERO PUSH2 0x29F7 JUMP JUMPDEST POP DUP1 MLOAD DUP6 EQ ISZERO PUSH2 0x29F0 JUMP JUMPDEST SWAP2 SWAP4 SWAP3 DUP5 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x2AD3 DUP3 DUP3 AND DUP1 SWAP7 PUSH2 0x3288 JUMP JUMPDEST ISZERO PUSH2 0x2B22 JUMPI POP SWAP1 PUSH2 0x2B1D PUSH32 0xC78CD419D6136F9F1C1C6AEC1D3FAE098CFFAF8BC86314A8F2685E32FE574E3C SWAP4 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x40 PUSH1 0x20 DUP6 ADD MSTORE AND SWAP6 PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x12A8C6A3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x452 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x452 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x452 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x452 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x5 SWAP2 PUSH1 0x20 SWAP4 DUP4 DUP6 MSTORE PUSH1 0x40 SWAP2 DUP3 DUP2 KECCAK256 SWAP5 DUP6 SLOAD SWAP6 DUP3 JUMPDEST DUP8 DUP2 LT PUSH2 0x2C3F JUMPI POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 SLOAD ISZERO PUSH2 0x20E7 JUMPI DUP2 DUP5 MSTORE DUP9 DUP5 KECCAK256 SLOAD DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 PUSH2 0x2C64 DUP3 PUSH2 0x4BF JUMP JUMPDEST DUP7 DUP3 MSTORE DUP10 DUP8 MSTORE DUP6 DUP13 MSTORE PUSH2 0x2C79 DUP4 DUP11 DUP10 KECCAK256 PUSH2 0x3288 JUMP JUMPDEST ISZERO PUSH2 0x2CCB JUMPI PUSH1 0x1 SWAP4 SWAP3 PUSH32 0xC78CD419D6136F9F1C1C6AEC1D3FAE098CFFAF8BC86314A8F2685E32FE574E3C DUP14 DUP10 PUSH2 0x2CC2 DUP15 SWAP7 DUP15 SWAP7 DUP15 DUP9 DUP1 MLOAD SWAP7 DUP8 SWAP7 DUP8 MSTORE DUP7 ADD MSTORE AND SWAP7 DUP4 ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST SUB SWAP1 LOG4 ADD PUSH2 0x2C2D JUMP JUMPDEST DUP9 MLOAD PUSH4 0x12A8C6A3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x40 DUP3 MSTORE PUSH2 0x2555 DUP3 PUSH2 0x4FA JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x2D1B DUP4 DUP4 PUSH2 0x2CF2 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 SWAP3 ADD KECCAK256 PUSH1 0x0 MSTORE PUSH1 0x1 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP4 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x4DA JUMPI PUSH2 0x2D57 DUP4 PUSH2 0x2D51 DUP7 SLOAD PUSH2 0xA0F JUMP JUMPDEST DUP7 PUSH2 0x2557 JUMP JUMPDEST DUP1 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x2DC3 JUMPI POP SWAP2 DUP1 DUP1 PUSH2 0x2DB3 SWAP6 SWAP4 PUSH32 0xA6E4251F855F750545FE414F120DB91C76B88DEF14D120969E5BB2D3F05DEBBB SWAP8 SWAP6 PUSH1 0x0 SWAP4 PUSH2 0x2DB8 JUMPI JUMPDEST POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x441 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST DUP7 ADD MLOAD SWAP3 POP CODESIZE PUSH2 0x2D97 JUMP JUMPDEST SWAP1 PUSH1 0x1F SWAP4 SWAP3 SWAP4 NOT DUP4 AND PUSH2 0x2DDB DUP7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2E26 JUMPI POP POP SWAP2 DUP4 SWAP2 PUSH2 0x2DB3 SWAP7 SWAP5 PUSH32 0xA6E4251F855F750545FE414F120DB91C76B88DEF14D120969E5BB2D3F05DEBBB SWAP9 SWAP7 SWAP5 LT PUSH2 0x1FCD JUMPI POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1F4F JUMP JUMPDEST DUP1 DUP8 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP13 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x2DE0 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x341 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x341 JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x341 JUMPI DUP1 MLOAD PUSH2 0x2E6F DUP2 PUSH2 0x70D JUMP JUMPDEST SWAP3 PUSH2 0x2E7D PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x515 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x341 JUMPI PUSH2 0x452 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x3F9 JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH2 0x452 SWAP3 PUSH32 0xB084A55EBF70FD3C06FD755269DAC2212C4D3F0F4D09079780BFA50C1B2984D DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x2EE7 DUP2 PUSH2 0x30FB JUMP JUMPDEST PUSH2 0x2EEF JUMPI POP POP JUMP JUMPDEST PUSH2 0x2F42 PUSH1 0x0 SWAP3 SWAP2 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x1AED5A85 PUSH1 0xE2 SHL DUP4 MSTORE PUSH32 0x8A1C15A8799F71B547E08E2BCB2E85257E81B0A07EEE2CE6712549EEF1F00970 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST SUB SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0xC71 JUMPI PUSH2 0x2F5C JUMPI POP JUMP JUMPDEST PUSH2 0x2F78 SWAP1 RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x2F70 DUP2 DUP4 PUSH2 0x515 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2E3D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2F84 DUP2 PUSH2 0x30FB JUMP JUMPDEST PUSH2 0x2F8C JUMPI POP POP JUMP JUMPDEST PUSH2 0x2F42 PUSH1 0x0 SWAP3 SWAP2 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x1AED5A85 PUSH1 0xE2 SHL DUP4 MSTORE PUSH32 0xB23EAE7E6D1564B295B4C3E3BE402D9A2F0776C57BDF365903496F6FA481AB00 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x41C JUMP JUMPDEST PUSH2 0x2FE8 DUP2 PUSH2 0x30FB JUMP JUMPDEST ISZERO PUSH2 0x3013 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AED5A85 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 PUSH1 0x0 SWAP2 DUP4 SWAP2 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH2 0x2F42 SWAP1 PUSH1 0x4 DUP4 ADD PUSH2 0x2E9B JUMP JUMPDEST POP POP JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x3022 DUP4 PUSH2 0x30FB JUMP JUMPDEST ISZERO PUSH2 0x304C JUMPI POP PUSH2 0x2F42 PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x1AED5A85 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x2E9B JUMP JUMPDEST SWAP1 POP ISZERO PUSH2 0x3056 JUMPI POP JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x3080 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4349776D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3173137 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x30B7 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP2 PUSH1 0x40 MLOAD DUP4 DUP2 ADD SWAP1 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH4 0x1AED5A85 PUSH1 0xE2 SHL PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x24 DUP2 MSTORE PUSH2 0x312B DUP2 PUSH2 0x4FA JUMP JUMPDEST MLOAD SWAP2 PUSH2 0x7530 STATICCALL PUSH1 0x0 MLOAD RETURNDATASIZE DUP3 PUSH2 0x314C JUMPI JUMPDEST POP DUP2 PUSH2 0x3145 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x20 GT ISZERO SWAP2 POP CODESIZE PUSH2 0x313B JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP3 PUSH1 0x40 MLOAD DUP5 DUP2 ADD SWAP2 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x24 DUP2 MSTORE PUSH2 0x312B DUP2 PUSH2 0x4FA JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x20E7 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x23BB JUMPI DUP1 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x4DA JUMPI DUP3 PUSH2 0x31F7 PUSH2 0x31E0 DUP5 PUSH1 0x1 DUP1 SWAP7 ADD DUP6 SSTORE DUP5 PUSH2 0x318A JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE DUP1 SLOAD SWAP3 PUSH1 0x0 MSTORE ADD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x3233 JUMPI JUMP JUMPDEST PUSH2 0x320E JUMP JUMPDEST SWAP1 PUSH2 0x32A SWAP2 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x3233 JUMPI JUMP JUMPDEST DUP1 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x3272 JUMPI PUSH1 0x0 NOT SWAP2 DUP3 ADD SWAP2 PUSH2 0x3262 DUP4 DUP4 PUSH2 0x318A JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SWAP2 DUP1 PUSH1 0x0 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 DUP4 ISZERO ISZERO PUSH1 0x0 EQ PUSH2 0x3334 JUMPI PUSH1 0x0 NOT SWAP3 DUP5 DUP5 ADD SWAP1 DUP6 DUP3 GT PUSH2 0x3233 JUMPI DUP1 SLOAD SWAP5 DUP6 ADD SWAP5 DUP6 GT PUSH2 0x3233 JUMPI PUSH1 0x0 SWAP6 DUP6 DUP4 PUSH2 0x32DC SWAP5 PUSH2 0x32EB SWAP9 SUB PUSH2 0x32F1 JUMPI JUMPDEST POP POP POP PUSH2 0x3248 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x331B PUSH2 0x3315 SWAP2 PUSH2 0x3305 PUSH2 0x332B SWAP5 DUP8 PUSH2 0x318A JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP2 DUP8 PUSH2 0x318A JUMP JUMPDEST SWAP1 PUSH2 0x24F8 JUMP JUMPDEST DUP6 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 DUP1 PUSH2 0x32D4 JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP4 ADD SWAP2 PUSH1 0x0 MSTORE DUP4 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3372 JUMPI POP POP POP PUSH2 0x2555 SWAP3 POP SUB DUP4 PUSH2 0x515 JUMP JUMPDEST DUP6 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 DUP9 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x335C JUMP JUMPDEST PUSH2 0x452 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x31A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x33AC DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x10 DUP3 MSTORE PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x33D8 DUP3 PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x40 DUP1 DUP4 MSTORE CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x33EF DUP3 PUSH2 0x70D JUMP JUMPDEST PUSH2 0x33FC PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x515 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x340D PUSH1 0x1F NOT SWAP2 PUSH2 0x70D JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x3233 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x20E7 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x20E7 JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x1 SHL SWAP2 DUP1 DUP4 DIV PUSH1 0x2 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x3233 JUMPI JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x9 MUL SWAP2 PUSH1 0x9 DUP4 DIV SUB PUSH2 0x3233 JUMPI JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SHL SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFE SHL SUB DUP2 AND SUB PUSH2 0x3233 JUMPI JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x37 MUL SWAP2 PUSH1 0x37 DUP4 DIV SUB PUSH2 0x3233 JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x3233 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x3233 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0xA DUP3 ADD DUP1 SWAP3 GT PUSH2 0x3233 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x30 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x3233 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x2 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x3233 JUMPI JUMP JUMPDEST PUSH1 0x23 ADD SWAP1 DUP2 PUSH1 0x23 GT PUSH2 0x3233 JUMPI JUMP JUMPDEST PUSH1 0xB4 ADD SWAP1 DUP2 PUSH1 0xB4 GT PUSH2 0x3233 JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x3504 PUSH2 0x339F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3511 DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x6 DUP3 MSTORE PUSH1 0x20 CALLDATASIZE DUP2 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x3530 JUMPI POP SWAP2 SWAP4 POP POP POP JUMP JUMPDEST PUSH2 0x3591 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT PUSH2 0x3576 PUSH1 0xF DUP10 DUP5 BYTE DUP4 PUSH2 0x3556 PUSH1 0x4 DUP4 SWAP1 SHR DUP5 AND DUP11 PUSH2 0x3433 JUMP JUMPDEST MLOAD AND PUSH2 0x356E PUSH2 0x3564 DUP8 PUSH2 0x3444 JUMP JUMPDEST SWAP2 DUP10 BYTE SWAP2 DUP12 PUSH2 0x3433 JUMP JUMPDEST MSTORE8 AND DUP7 PUSH2 0x3433 JUMP JUMPDEST MLOAD AND PUSH2 0x1A50 PUSH2 0x3587 PUSH2 0x1A41 DUP5 PUSH2 0x3444 JUMP JUMPDEST SWAP2 DUP6 BYTE SWAP2 DUP8 PUSH2 0x3433 JUMP JUMPDEST PUSH2 0x3520 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3612 JUMPI DUP1 PUSH1 0x0 SWAP1 DUP3 DUP3 SWAP4 JUMPDEST PUSH2 0x35FE JUMPI POP PUSH2 0x35B2 DUP4 PUSH2 0x33E5 JUMP JUMPDEST SWAP3 SWAP1 DUP1 JUMPDEST PUSH2 0x35C0 JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0xA SWAP1 PUSH1 0x30 SWAP3 DUP3 DUP3 MOD DUP5 ADD DUP1 SWAP5 GT PUSH2 0x3233 JUMPI DUP1 ISZERO PUSH2 0x3233 JUMPI PUSH1 0x0 NOT ADD SWAP3 PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND DUP5 BYTE PUSH2 0x35F6 DUP5 DUP8 PUSH2 0x3433 JUMP JUMPDEST MSTORE8 DIV DUP1 PUSH2 0x35B6 JUMP JUMPDEST SWAP3 PUSH2 0x360A PUSH1 0xA SWAP2 PUSH2 0x3417 JUMP JUMPDEST SWAP4 DIV DUP1 PUSH2 0x35A4 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x361F DUP2 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x363D DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x5 DUP3 MSTORE PUSH5 0x33B932B2B7 PUSH1 0xD9 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x365E DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x4 DUP3 MSTORE PUSH4 0x626C7565 PUSH1 0xE0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x367E DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x3 DUP3 MSTORE PUSH3 0x1C9959 PUSH1 0xEA SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x369D DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x6 DUP3 MSTORE PUSH6 0x707572706C65 PUSH1 0xD0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x36BF DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x6 DUP3 MSTORE PUSH6 0x79656C6C6F77 PUSH1 0xD0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x36E7 PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x3F9 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x36F8 DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x23666163633135 PUSH1 0xC8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x371B DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x23613835356637 PUSH1 0xC8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x373E DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x8D9598D0D0D0D PUSH1 0xCA SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3761 DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x1199B11C19331B PUSH1 0xC9 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3784 DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x23613365363335 PUSH1 0xC8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x37A7 DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x2366666363303 PUSH1 0xCC SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x37CA DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x11B1B198183333 PUSH1 0xC9 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x37ED DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x11B33318181B1B PUSH1 0xC9 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3810 DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x11981831B1B333 PUSH1 0xC9 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3833 DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x2330306666303 PUSH1 0xCC SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3856 DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x11B33318183333 PUSH1 0xC9 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH4 0x1E17B39F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD SWAP1 JUMP JUMPDEST SWAP5 SWAP4 SWAP6 SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x437A JUMPI DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 DUP2 ADD SWAP2 DUP3 KECCAK256 PUSH2 0x389B PUSH2 0x3630 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x42C2 JUMPI POP POP POP POP PUSH2 0x38B2 PUSH2 0x3826 JUMP JUMPDEST SWAP5 JUMPDEST PUSH1 0x40 MLOAD SWAP5 PUSH1 0x3 PUSH1 0x20 DUP8 ADD DUP8 PUSH2 0x38DC DUP5 DUP4 PUSH1 0x26 SWAP2 DUP2 MSTORE PUSH6 0xDAC2E8E4D2F PUSH1 0xD3 SHL PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SUB SWAP8 PUSH2 0x38F0 PUSH1 0x1F NOT SWAP10 DUP11 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x515 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP5 ISZERO PUSH2 0x42BA JUMPI DUP2 AND LT SWAP7 JUMPDEST DUP4 ISZERO PUSH2 0x42AC JUMPI PUSH2 0x390C PUSH2 0x3849 JUMP JUMPDEST SWAP6 JUMPDEST PUSH2 0x3929 PUSH2 0x3922 PUSH2 0x391D DUP9 PUSH2 0x345A JUMP JUMPDEST PUSH2 0x3238 JUMP JUMPDEST PUSH1 0xB SWAP1 DIV SWAP1 JUMP JUMPDEST SWAP3 DUP10 ISZERO PUSH2 0x429E JUMPI PUSH2 0x3938 PUSH2 0x447C JUMP JUMPDEST SWAP10 JUMPDEST ISZERO PUSH2 0x428C JUMPI PUSH2 0x3957 PUSH2 0x3957 PUSH2 0x3951 PUSH2 0x395D SWAP4 PUSH2 0x46AE JUMP JUMPDEST SWAP9 PUSH2 0x3596 JUMP JUMPDEST SWAP5 PUSH2 0x3596 JUMP JUMPDEST DUP2 MLOAD SWAP1 SWAP6 SWAP1 ISZERO PUSH2 0x427C JUMPI ISZERO PUSH2 0x41EA JUMPI PUSH2 0x3A17 PUSH2 0x39F8 SWAP2 PUSH2 0x3A0B PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH2 0x39F2 PUSH1 0x20 DUP6 ADD PUSH1 0x56 SWAP1 PUSH32 0x3C7465787420783D223230302220793D223330302220636C6173733D22757365 DUP2 MSTORE PUSH32 0x726E616D6522207374796C653D22666F6E742D66616D696C793A2027436F6D69 PUSH1 0x20 DUP3 ADD MSTORE PUSH22 0x319029B0B7399026A993961031BAB939B4BB329D911F PUSH1 0x51 SHL PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x36D4 JUMP JUMPDEST PUSH7 0x1E17BA32BC3A1F PUSH1 0xC9 SHL DUP2 MSTORE PUSH1 0x7 ADD SWAP1 JUMP JUMPDEST SUB DUP10 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x515 JUMP JUMPDEST SWAP5 JUMPDEST PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP8 PUSH1 0x20 DUP10 ADD PUSH2 0x3A9D SWAP1 PUSH1 0x57 SWAP1 PUSH32 0x3C73766720786D6C6E733D22687474703A2F2F7777772E77332E6F72672F3230 DUP2 MSTORE PUSH32 0x30302F737667222076696577426F783D22302030203430302034303022207769 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6474683D2234303022206865696768743D22343030223E000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH6 0x1E3232B3399F PUSH1 0xD1 SHL DUP2 MSTORE PUSH1 0x6 ADD PUSH7 0x1E39BA3CB6329F PUSH1 0xC9 SHL DUP2 MSTORE PUSH1 0x7 ADD PUSH32 0x40696D706F72742075726C282268747470733A2F2F666F6E74732E676F6F676C DUP2 MSTORE PUSH32 0x65617069732E636F6D2F637373323F66616D696C793D436F6D69632B53616E73 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2B4D5326616D703B646973706C61793D7377617022293B000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x57 ADD PUSH32 0x2E757365726E616D65207B20666F6E742D66616D696C793A2022436F6D696320 DUP2 MSTORE PUSH32 0x53616E73204D53222C20637572736976653B20666F6E742D73697A653A203136 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x70783B2066696C6C3A2077686974653B20746578742D616E63686F723A206D69 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x64646C653B207D PUSH1 0xC8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x67 ADD PUSH32 0x2E6D61747269782D63686172207B20666F6E742D66616D696C793A206D6F6E6F DUP2 MSTORE PUSH13 0x39B830B1B29D903334B6361D1 PUSH1 0x9D SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2D ADD PUSH2 0x3BF5 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH32 0x3B206F7061636974793A20302E333B20616E696D6174696F6E3A206661646520 DUP2 MSTORE PUSH32 0x337320696E66696E6974652C2066616C6C203873206C696E65617220696E6669 PUSH1 0x20 DUP3 ADD MSTORE PUSH7 0x6E6974653B207D PUSH1 0xC8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x47 ADD PUSH32 0x406B65796672616D65732066616465207B203025207B206F7061636974793A20 DUP2 MSTORE PUSH32 0x302E323B207D20333025207B206F7061636974793A20302E393B207D20373025 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x207B206F7061636974793A20302E393B207D2031303025207B206F7061636974 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x793A20302E323B207D207D PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x6B ADD PUSH32 0x406B65796672616D65732066616C6C207B2066726F6D207B207472616E73666F DUP2 MSTORE PUSH32 0x726D3A207472616E736C61746559282D32307078293B207D20746F207B207472 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x616E73666F726D3A207472616E736C61746559283432307078293B207D207D00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x5F ADD PUSH8 0x1E17B9BA3CB6329F PUSH1 0xC1 SHL DUP2 MSTORE PUSH1 0x8 ADD PUSH2 0x3D63 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH7 0x1E17B232B3399F PUSH1 0xC9 SHL DUP2 MSTORE PUSH1 0x7 ADD PUSH32 0x3C726563742077696474683D2234303022206865696768743D22343030222066 DUP2 MSTORE PUSH13 0x34B6361E91313630B1B591179F PUSH1 0x99 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2D ADD PUSH2 0x3DB8 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH32 0x3C6720636C6173733D226C6F6F6769652D636F6E7461696E6572223E00000000 DUP2 MSTORE PUSH1 0x1C ADD PUSH13 0x1E339034B21E9132BCB298911F PUSH1 0x99 SHL DUP2 MSTORE PUSH1 0xD ADD PUSH32 0x3C656C6C69707365207374726F6B652D77696474683D2233222072793D223239 DUP2 MSTORE PUSH32 0x2E35222072783D2232392E35222069643D227376675F31222063793D22313534 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2E35222063783D223138312E3522207374726F6B653D2223303030222066696C PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x361E9111B3333311179F PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x6A ADD PUSH32 0x3C656C6C697073652072793D22332E35222072783D22322E35222069643D2273 DUP2 MSTORE PUSH32 0x76675F33222063793D223135342E35222063783D223137332E3522207374726F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6B652D77696474683D223322207374726F6B653D2223303030222066696C6C3D PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x111198181818181811179F PUSH1 0xA9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x6B ADD PUSH2 0x3F08 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH13 0x1E339034B21E913432B0B2111F PUSH1 0x99 SHL DUP2 MSTORE PUSH1 0xD ADD PUSH15 0x1E32B63634B839B2903334B6361E91 PUSH1 0x89 SHL DUP2 MSTORE PUSH1 0xF ADD PUSH2 0x3F3F SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH32 0x22207374726F6B652D77696474683D2233222063783D223230342E3522206379 DUP2 MSTORE PUSH32 0x3D223231312E3830303635222069643D227376675F35222072783D2200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C ADD PUSH2 0x3F94 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH32 0x222072793D2235312E383030363522207374726F6B653D2223303030222F3E00 DUP2 MSTORE PUSH1 0x1F ADD PUSH2 0x3FC3 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH13 0x1E339034B21E9132BCB299111F PUSH1 0x99 SHL DUP2 MSTORE PUSH1 0xD ADD PUSH32 0x3C656C6C69707365207374726F6B652D77696474683D2233222072793D223239 DUP2 MSTORE PUSH32 0x2E35222072783D2232392E35222069643D227376675F32222063793D22313638 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2E35222063783D223230392E3522207374726F6B653D2223303030222066696C PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x361E9111B3333311179F PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x6A ADD PUSH32 0x3C656C6C697073652072793D22332E35222072783D2233222069643D22737667 DUP2 MSTORE PUSH32 0x5F34222063793D223136392E35222063783D2232303822207374726F6B652D77 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x696474683D2233222066696C6C3D222330303030303022207374726F6B653D22 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x1198181811179F PUSH1 0xC9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x67 ADD PUSH2 0x40E9 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH32 0x3C6720636C6173733D226D6F75746822207472616E73666F726D3D227472616E DUP2 MSTORE PUSH6 0xE6D8C2E8CA5 PUSH1 0xD3 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x26 ADD PUSH2 0x4127 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH5 0x161814911F PUSH1 0xD9 SHL DUP2 MSTORE PUSH1 0x5 ADD PUSH32 0x3C7061746820643D224D20313330203234302051203136352032353020000000 DUP2 MSTORE PUSH1 0x1D ADD PUSH2 0x4164 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH32 0x2032333522207374726F6B653D22626C61636B22207374726F6B652D77696474 DUP2 MSTORE PUSH32 0x683D2233222066696C6C3D227472616E73706172656E74222F3E000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3A ADD PUSH2 0x41B9 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH2 0x41C2 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH2 0x41CB SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH6 0x1E17B9BB339F PUSH1 0xD1 SHL DUP2 MSTORE PUSH1 0x6 ADD SUB SWAP1 DUP2 ADD DUP3 MSTORE PUSH2 0x452 SWAP1 DUP3 PUSH2 0x515 JUMP JUMPDEST PUSH2 0x4277 PUSH2 0x39F8 SWAP2 PUSH2 0x3A0B PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH2 0x39F2 PUSH1 0x20 DUP6 ADD PUSH1 0x5D SWAP1 PUSH32 0x3C7465787420783D223230302220793D223330302220666F6E742D66616D696C DUP2 MSTORE PUSH32 0x793D22417269616C2220666F6E742D73697A653D223136222066696C6C3D2223 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6666666666662220746578742D616E63686F723D226D6964646C65223E000000 PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH2 0x3A17 JUMP JUMPDEST POP POP PUSH2 0x4286 PUSH2 0x21AE JUMP JUMPDEST SWAP5 PUSH2 0x3A19 JUMP JUMPDEST POP PUSH2 0x395D PUSH2 0x3957 PUSH2 0x3957 PUSH2 0x3951 PUSH2 0x21AE JUMP JUMPDEST PUSH2 0x42A6 PUSH2 0x21AE JUMP JUMPDEST SWAP10 PUSH2 0x393A JUMP JUMPDEST PUSH2 0x42B4 PUSH2 0x3826 JUMP JUMPDEST SWAP6 PUSH2 0x390E JUMP JUMPDEST AND ISZERO SWAP7 PUSH2 0x38FE JUMP JUMPDEST DUP1 MLOAD DUP3 KECCAK256 PUSH2 0x42CE PUSH2 0x3651 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x42EB JUMPI POP POP POP POP PUSH2 0x42E5 PUSH2 0x3803 JUMP JUMPDEST SWAP5 PUSH2 0x38B4 JUMP JUMPDEST DUP1 MLOAD DUP3 KECCAK256 PUSH2 0x42F7 PUSH2 0x3671 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x430E JUMPI POP POP POP POP PUSH2 0x42E5 PUSH2 0x37E0 JUMP JUMPDEST DUP1 MLOAD DUP3 KECCAK256 PUSH2 0x431A PUSH2 0x3690 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x4331 JUMPI POP POP POP POP PUSH2 0x42E5 PUSH2 0x37BD JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x433C PUSH2 0x36B2 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP5 ADD KECCAK256 SUB PUSH2 0x4351 JUMPI POP POP PUSH2 0x42E5 PUSH2 0x379A JUMP JUMPDEST PUSH2 0x39F2 SWAP2 PUSH2 0x878 PUSH2 0x4364 PUSH2 0x42E5 SWAP4 PUSH2 0x34FB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 ADD PUSH1 0x1 SWAP1 PUSH1 0x23 PUSH1 0xF8 SHL DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 DUP2 ADD SWAP2 DUP3 KECCAK256 PUSH2 0x438D PUSH2 0x3630 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x43A4 JUMPI POP POP POP POP PUSH2 0x42E5 PUSH2 0x3777 JUMP JUMPDEST DUP1 MLOAD DUP3 KECCAK256 PUSH2 0x43B0 PUSH2 0x3651 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x43C7 JUMPI POP POP POP POP PUSH2 0x42E5 PUSH2 0x3754 JUMP JUMPDEST DUP1 MLOAD DUP3 KECCAK256 PUSH2 0x43D3 PUSH2 0x3671 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x43EA JUMPI POP POP POP POP PUSH2 0x42E5 PUSH2 0x3731 JUMP JUMPDEST DUP1 MLOAD DUP3 KECCAK256 PUSH2 0x43F6 PUSH2 0x3690 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x440D JUMPI POP POP POP POP PUSH2 0x42E5 PUSH2 0x370E JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x4418 PUSH2 0x36B2 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP5 ADD KECCAK256 SUB PUSH2 0x4351 JUMPI POP POP PUSH2 0x42E5 PUSH2 0x36EB JUMP JUMPDEST PUSH32 0x3C6665436F6D706F7369746520696E3D22536F75726365477261706869632220 DUP2 MSTORE PUSH32 0x696E323D22626C757222206F70657261746F723D226F766572222F3E00000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x3C66696C7465722069643D226D61747269782D676C6F772220783D222D323025 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2220793D222D323025222077696474683D223134302522206865696768743D22 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x189A1812911F PUSH1 0xD1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x3C6665476175737369616E426C757220737464446576696174696F6E3D223322 PUSH1 0x66 DUP3 ADD MSTORE PUSH16 0x103932B9BAB63A1E9131363AB911179F PUSH1 0x81 SHL PUSH1 0x86 DUP3 ADD MSTORE PUSH2 0x452 DUP2 PUSH2 0x878 PUSH2 0x4612 PUSH2 0x45D6 PUSH1 0x4A PUSH2 0x4534 PUSH1 0x96 DUP7 ADD PUSH2 0x442D JUMP JUMPDEST PUSH9 0x1E17B334B63A32B91F PUSH1 0xB9 SHL DUP2 MSTORE PUSH32 0x3C6C696E6561724772616469656E742069643D226D61747269782D6267222078 PUSH1 0x9 DUP3 ADD MSTORE PUSH32 0x313D223025222079313D223025222078323D223025222079323D223130302522 PUSH1 0x29 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0xF9 SHL PUSH1 0x49 DUP3 ADD MSTORE PUSH32 0x3C73746F70206F66667365743D223025222073746F702D636F6C6F723D222330 SWAP2 ADD SWAP1 DUP2 MSTORE PUSH8 0x18181C181811179F PUSH1 0xC1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x28 ADD SWAP1 JUMP JUMPDEST PUSH32 0x3C73746F70206F66667365743D2231303025222073746F702D636F6C6F723D22 DUP2 MSTORE PUSH10 0x1198181898181811179F PUSH1 0xB1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2A ADD SWAP1 JUMP JUMPDEST PUSH17 0x1E17B634B732B0B923B930B234B2B73A1F PUSH1 0x79 SHL DUP2 MSTORE PUSH1 0x11 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x463C DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x18 DUP3 MSTORE PUSH32 0x3C6720636C6173733D226D61747269782D6368617273223E0000000000000000 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1E0 DUP1 DUP4 ADD DUP4 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x4DA JUMPI PUSH1 0x40 MSTORE CALLDATASIZE DUP4 CALLDATACOPY JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xFF DUP2 EQ PUSH2 0x3233 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xF DUP2 LT ISZERO PUSH2 0x20E7 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH2 0x46B6 PUSH2 0x462F JUMP JUMPDEST PUSH2 0x46BE PUSH2 0x4668 JUMP JUMPDEST SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0xF DUP3 LT ISZERO PUSH2 0x473E JUMPI PUSH2 0x4734 PUSH2 0x4739 SWAP3 PUSH2 0x472C PUSH2 0x4725 PUSH2 0x471F PUSH2 0x471A DUP9 PUSH1 0x40 MLOAD PUSH2 0x470F DUP2 PUSH2 0x878 DUP12 PUSH1 0x20 DUP4 ADD SWAP6 DUP7 SWAP1 SWAP2 PUSH1 0x21 SWAP3 DUP3 MSTORE PUSH1 0xFF PUSH1 0xF8 SHL SWAP1 PUSH1 0xF8 SHL AND PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x17C SWAP1 MOD SWAP1 JUMP JUMPDEST PUSH2 0x34B5 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP2 DUP9 PUSH2 0x469D JUMP JUMPDEST SWAP1 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x468C JUMP JUMPDEST PUSH2 0x46C2 JUMP JUMPDEST POP POP PUSH1 0x0 JUMPDEST PUSH1 0xFF DUP1 DUP3 AND SWAP1 PUSH1 0xF DUP3 LT ISZERO PUSH2 0x49BE JUMPI SWAP1 PUSH1 0x0 SWAP2 JUMPDEST PUSH1 0x8 DUP2 DUP5 AND LT PUSH2 0x4772 JUMPI POP POP POP PUSH2 0x476D SWAP1 PUSH2 0x468C JUMP JUMPDEST PUSH2 0x4743 JUMP JUMPDEST SWAP1 SWAP2 SWAP5 PUSH1 0x40 DUP8 DUP8 DUP3 MLOAD SWAP3 DUP7 DUP10 DUP8 DUP1 PUSH1 0x20 SWAP7 DUP13 DUP9 DUP11 ADD DUP11 PUSH2 0x47B4 DUP11 DUP5 DUP10 DUP6 SWAP2 SWAP1 SWAP3 PUSH1 0x22 SWAP4 DUP4 MSTORE PUSH1 0xFF PUSH1 0xF8 SHL DUP1 SWAP3 PUSH1 0xF8 SHL AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0xF8 SHL AND PUSH1 0x21 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SUB SWAP11 PUSH1 0x1F NOT SWAP12 DUP13 DUP2 ADD DUP3 MSTORE PUSH2 0x47C9 SWAP1 DUP3 PUSH2 0x515 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x17C SWAP1 MOD PUSH2 0x47DA SWAP1 PUSH2 0x34B5 JUMP JUMPDEST PUSH1 0xFF AND DUP8 MLOAD DUP11 DUP2 ADD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT PUSH1 0xF8 DUP6 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE DUP13 SWAP1 SHL AND PUSH1 0x21 DUP3 ADD MSTORE PUSH4 0x31B430B9 PUSH1 0xE1 SHL PUSH1 0x22 DUP3 ADD MSTORE SWAP2 SWAP7 SWAP2 SWAP1 DUP1 PUSH1 0x26 DUP4 ADD SUB DUP14 DUP2 ADD DUP3 MSTORE PUSH2 0x4829 SWAP1 DUP3 PUSH2 0x515 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0xA SWAP1 MOD PUSH2 0x4839 SWAP1 PUSH2 0x34C3 JUMP JUMPDEST PUSH1 0xFF AND DUP9 MLOAD DUP12 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT PUSH1 0xF8 SWAP5 DUP6 SHL DUP2 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP11 SWAP1 SWAP4 SHL SWAP1 SWAP10 AND PUSH1 0x21 DUP3 ADD MSTORE PUSH5 0x64656C6179 PUSH1 0xD8 SHL PUSH1 0x22 DUP3 ADD MSTORE SWAP1 DUP1 PUSH1 0x27 DUP4 ADD SUB DUP12 DUP2 ADD DUP3 MSTORE PUSH2 0x4889 SWAP1 DUP3 PUSH2 0x515 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x5 SWAP1 MOD PUSH1 0xFF AND SWAP5 PUSH2 0x489D SWAP2 PUSH2 0x469D JUMP JUMPDEST MLOAD PUSH2 0x48AA SWAP1 PUSH1 0xFF AND PUSH2 0x3596 JUMP JUMPDEST SWAP3 AND PUSH2 0x48B5 SWAP1 PUSH2 0x3596 JUMP JUMPDEST SWAP3 AND PUSH2 0x48C0 SWAP1 PUSH2 0x3596 JUMP JUMPDEST DUP4 MLOAD PUSH1 0xF8 SWAP6 SWAP1 SWAP6 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND DUP7 DUP7 ADD SWAP1 DUP2 MSTORE SWAP1 SWAP4 SWAP1 DUP6 SWAP1 PUSH1 0x1 ADD SUB DUP8 DUP2 ADD DUP7 MSTORE PUSH2 0x48F0 SWAP1 DUP7 PUSH2 0x515 JUMP JUMPDEST MLOAD SWAP7 DUP8 SWAP6 DUP7 ADD PUSH2 0x48FF SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH9 0x1E3A32BC3A103C1E91 PUSH1 0xB9 SHL DUP2 MSTORE PUSH1 0x9 ADD PUSH2 0x491A SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH5 0x11103C9E91 PUSH1 0xD9 SHL DUP2 MSTORE PUSH1 0x5 ADD PUSH2 0x4931 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH32 0x2220636C6173733D226D61747269782D6368617222207374796C653D22616E69 DUP2 MSTORE PUSH14 0x36B0BA34B7B716B232B630BC9D1 PUSH1 0x95 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2E ADD PUSH2 0x4977 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH4 0x399D911F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x498D SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH7 0x1E17BA32BC3A1F PUSH1 0xC9 SHL DUP2 MSTORE PUSH1 0x7 ADD SUB SWAP1 DUP2 ADD DUP3 MSTORE PUSH2 0x49AD SWAP1 DUP3 PUSH2 0x515 JUMP JUMPDEST SWAP5 PUSH2 0x49B7 SWAP1 PUSH2 0x468C JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x4757 JUMP JUMPDEST POP POP POP POP PUSH2 0x49DE SWAP2 POP PUSH2 0x452 SWAP1 PUSH2 0x878 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x36D4 JUMP JUMPDEST PUSH2 0x386C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x3C73766720786D6C6E733D22687474703A2F2F7777772E77332E6F72672F3230 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x30302F737667222077696474683D2234303022206865696768743D2234303022 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x2076696577426F783D223020302034303020343030223E000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x3C726563742077696474683D2234303022206865696768743D22343030222066 PUSH1 0x77 DUP3 ADD MSTORE PUSH12 0x34B6361E911198181811179F PUSH1 0xA1 SHL PUSH1 0x97 DUP3 ADD MSTORE PUSH18 0x1E3334B63A32B91034B21E9133B637BB911F PUSH1 0x71 SHL PUSH1 0xA3 DUP3 ADD MSTORE PUSH32 0x3C6665476175737369616E426C757220737464446576696174696F6E3D22332E PUSH1 0xB5 DUP3 ADD MSTORE PUSH18 0x1A91103932B9BAB63A1E9131363AB911179F PUSH1 0x71 SHL PUSH1 0xD5 DUP3 ADD MSTORE PUSH2 0x4CD7 SWAP2 SWAP1 PUSH2 0x4CE3 DUP2 PUSH2 0x4C86 PUSH2 0x4C74 PUSH2 0x4BCD PUSH2 0x4B28 PUSH2 0x4B13 PUSH1 0xE7 DUP7 ADD PUSH2 0x442D JUMP JUMPDEST PUSH9 0x1E17B334B63A32B91F PUSH1 0xB9 SHL DUP2 MSTORE PUSH1 0x9 ADD SWAP1 JUMP JUMPDEST PUSH32 0x3C7465787420783D223230302220793D223138302220666F6E742D66616D696C DUP2 MSTORE PUSH32 0x793D22417269616C2220666F6E742D73697A653D223430222066696C6C3D2223 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6666662220746578742D616E63686F723D226D6964646C65222066696C746572 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x3D2275726C2823676C6F7729223E4C756B736F4C6F6F676965733C2F74657874 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0xF9 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x81 ADD SWAP1 JUMP JUMPDEST PUSH32 0x3C7465787420783D223230302220793D223233302220666F6E742D66616D696C DUP2 MSTORE PUSH32 0x793D22417269616C2220666F6E742D73697A653D223230222066696C6C3D2223 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x3066302220746578742D616E63686F723D226D6964646C65222066696C746572 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x3D2275726C2823676C6F7729223E4D61747269782045646974696F6E3C2F7465 PUSH1 0x60 DUP3 ADD MSTORE PUSH3 0x3C3A1F PUSH1 0xE9 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x83 ADD SWAP1 JUMP JUMPDEST PUSH6 0x1E17B9BB339F PUSH1 0xD1 SHL DUP2 MSTORE PUSH1 0x6 ADD SWAP1 JUMP JUMPDEST SUB PUSH2 0x4C99 PUSH1 0x1F NOT SWAP2 DUP3 DUP2 ADD DUP6 MSTORE DUP5 PUSH2 0x515 JUMP JUMPDEST PUSH2 0x4CA2 DUP4 PUSH2 0x4D46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x646174613A696D6167652F7376672B786D6C3B6261736536342C000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP6 DUP7 SWAP2 PUSH1 0x3A DUP4 ADD PUSH2 0x39F2 JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP6 MSTORE DUP5 PUSH2 0x515 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x4CF4 DUP3 PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x40 DUP3 MSTORE PUSH32 0x6768696A6B6C6D6E6F707172737475767778797A303132333435363738392B2F PUSH1 0x40 DUP4 PUSH32 0x4142434445464748494A4B4C4D4E4F505152535455565758595A616263646566 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x4E24 JUMPI PUSH2 0x4D55 PUSH2 0x4CE7 JUMP JUMPDEST PUSH2 0x4D79 PUSH2 0x4D74 PUSH2 0x4D6F PUSH2 0x4D68 DUP6 MLOAD PUSH2 0x34D1 JUMP JUMPDEST PUSH1 0x3 SWAP1 DIV SWAP1 JUMP JUMPDEST PUSH2 0x346B JUMP JUMPDEST PUSH2 0x33E5 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP4 ADD SWAP2 DUP2 DUP3 MLOAD DUP4 ADD PUSH1 0x20 DUP2 ADD SWAP2 DUP3 MLOAD SWAP4 PUSH1 0x0 DUP5 MSTORE JUMPDEST DUP3 DUP3 LT PUSH2 0x4DD2 JUMPI POP POP POP MSTORE MLOAD PUSH1 0x3 SWAP1 MOD PUSH1 0x1 DUP2 EQ PUSH2 0x4DBF JUMPI PUSH1 0x2 EQ PUSH2 0x4DB4 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x3D SWAP1 PUSH1 0x0 NOT ADD MSTORE8 SWAP1 JUMP JUMPDEST POP PUSH1 0x3D SWAP1 DUP2 PUSH1 0x0 NOT DUP3 ADD MSTORE8 PUSH1 0x1 NOT ADD MSTORE8 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP6 PUSH1 0x4 SWAP1 PUSH1 0x3 DUP1 SWAP5 ADD SWAP4 DUP5 MLOAD PUSH1 0x1 SWAP1 PUSH1 0x3F SWAP1 DUP3 DUP3 DUP3 PUSH1 0x12 SHR AND DUP9 ADD ADD MLOAD DUP6 MSTORE8 DUP3 DUP3 DUP3 PUSH1 0xC SHR AND DUP9 ADD ADD MLOAD DUP4 DUP7 ADD MSTORE8 DUP3 DUP3 DUP3 PUSH1 0x6 SHR AND DUP9 ADD ADD MLOAD PUSH1 0x2 DUP7 ADD MSTORE8 AND DUP6 ADD ADD MLOAD SWAP1 DUP3 ADD MSTORE8 ADD SWAP6 SWAP2 SWAP1 PUSH2 0x4D91 JUMP JUMPDEST POP PUSH2 0x452 PUSH2 0x21AE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x4E3A DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x1 DUP3 MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x4E57 DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x1F DUP3 MSTORE PUSH32 0x2E204F776E6564206279206120556E6976657273616C2050726F66696C652100 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x4E90 DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x5 DUP3 MSTORE PUSH5 0x66616C7365 PUSH1 0xD8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x4EB1 DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x4 DUP3 MSTORE PUSH4 0x74727565 PUSH1 0xE0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST SWAP7 SWAP6 DUP5 PUSH2 0x4EF0 PUSH2 0x4EEA PUSH2 0x4EE4 DUP5 DUP11 PUSH2 0x4F10 SWAP11 DUP11 DUP16 SWAP11 DUP11 DUP2 SWAP16 SWAP12 SWAP14 SWAP13 PUSH2 0x387C JUMP JUMPDEST SWAP9 PUSH2 0x34FB JUMP JUMPDEST SWAP10 PUSH2 0x53C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0x4C6F6F6769652023 PUSH1 0xC0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP7 DUP8 SWAP2 PUSH1 0x28 DUP4 ADD PUSH2 0x39F2 JUMP JUMPDEST SUB SWAP9 PUSH2 0x4F24 PUSH1 0x1F NOT SWAP11 DUP12 DUP2 ADD DUP10 MSTORE DUP9 PUSH2 0x515 JUMP JUMPDEST PUSH2 0x4F2D DUP6 PUSH2 0x3596 JUMP JUMPDEST SWAP8 PUSH2 0x4F37 DUP4 PUSH2 0x3596 JUMP JUMPDEST SWAP9 DUP5 ISZERO PUSH2 0x53B4 JUMPI PUSH2 0x4F46 PUSH2 0x4E4A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP3 PUSH1 0x20 DUP5 ADD PUSH2 0x4F88 SWAP1 PUSH1 0x21 SWAP1 PUSH32 0x54686973204D6174726978204C6F6F6769652069732074686520636F6C6F7220 DUP2 MSTORE PUSH1 0x23 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH2 0x4F92 SWAP1 DUP8 PUSH2 0x36D4 JUMP JUMPDEST PUSH22 0x103BB4BA3410309031B43AB13134B732B9B99037B31 PUSH1 0x55 SHL DUP2 MSTORE PUSH1 0x16 ADD PUSH2 0x4FBA SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH21 0x1030B7321036B7BABA34103632B733BA341037B31 PUSH1 0x5D SHL DUP2 MSTORE PUSH1 0x15 ADD PUSH2 0x4FE1 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH2 0x4FEA SWAP2 PUSH2 0x36D4 JUMP JUMPDEST SUB DUP12 DUP2 ADD DUP11 MSTORE PUSH2 0x4FFA SWAP1 DUP11 PUSH2 0x515 JUMP JUMPDEST PUSH2 0x5003 SWAP1 PUSH2 0x4D46 JUMP JUMPDEST SWAP5 PUSH2 0x500D SWAP1 PUSH2 0x3596 JUMP JUMPDEST SWAP2 PUSH2 0x5017 SWAP1 PUSH2 0x3596 JUMP JUMPDEST SWAP3 ISZERO PUSH2 0x53A6 JUMPI PUSH2 0x5025 PUSH2 0x4EA4 JUMP JUMPDEST SWAP5 JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x7B224C5350344D65746164617461223A207B226E616D65223A20220000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP9 DUP10 SWAP9 PUSH1 0x3B DUP11 ADD PUSH2 0x5060 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH18 0x1116113232B9B1B934B83A34B7B7111D1011 PUSH1 0x71 SHL DUP2 MSTORE PUSH1 0x12 ADD PUSH2 0x5084 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH32 0x222C226C696E6B73223A205B7B227469746C65223A2257656273697465222C22 DUP2 MSTORE PUSH32 0x75726C223A2268747470733A2F2F6C756B736F6C6F6F676965732E7665726365 PUSH1 0x20 DUP3 ADD MSTORE PUSH19 0x1B0B985C1C089F574B089A58DBDB888E96D74B PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x53 ADD PUSH32 0x22696D61676573223A205B5B7B227769647468223A203430302C226865696768 DUP2 MSTORE PUSH16 0x3A111D101A181816113AB936111D1011 PUSH1 0x81 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x30 ADD PUSH32 0x646174613A696D6167652F7376672B786D6C3B6261736536342C000000000000 DUP2 MSTORE PUSH1 0x1A ADD PUSH2 0x515A SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH5 0x89F57574B PUSH1 0xDA SHL DUP2 MSTORE PUSH1 0x5 ADD PUSH14 0x2261747472696275746573223A5B PUSH1 0x90 SHL DUP2 MSTORE PUSH1 0xE ADD PUSH32 0x7B226B6579223A22636F6C6F72222C2276616C7565223A222300000000000000 DUP2 MSTORE PUSH1 0x19 ADD PUSH2 0x51AE SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH19 0x88B089D1E5C19488E889CDD1C9A5B99C89F4B PUSH1 0x6A SHL DUP2 MSTORE PUSH1 0x13 ADD PUSH32 0x7B226B6579223A226368756262696E657373222C2276616C7565223A00000000 DUP2 MSTORE PUSH1 0x1C ADD PUSH2 0x51F9 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH18 0xB089D1E5C19488E889B9D5B58995C889F4B PUSH1 0x72 SHL DUP2 MSTORE PUSH1 0x12 ADD PUSH32 0x7B226B6579223A226D6F7574684C656E677468222C2276616C7565223A000000 DUP2 MSTORE PUSH1 0x1D ADD PUSH2 0x5243 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH18 0xB089D1E5C19488E889B9D5B58995C889F4B PUSH1 0x72 SHL DUP2 MSTORE PUSH1 0x12 ADD PUSH32 0x7B226B6579223A22757365726E616D65222C2276616C7565223A220000000000 DUP2 MSTORE PUSH1 0x1B ADD PUSH2 0x528D SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH19 0x88B089D1E5C19488E889CDD1C9A5B99C89F4B PUSH1 0x6A SHL DUP2 MSTORE PUSH1 0x13 ADD PUSH22 0x3D9135B2BC911D1134B9AAA81116113B30B63AB2911D PUSH1 0x51 SHL DUP2 MSTORE PUSH1 0x16 ADD PUSH2 0x52D1 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH19 0xB089D1E5C19488E88989BDBDB19585B889F4B PUSH1 0x6A SHL DUP2 MSTORE PUSH1 0x13 ADD PUSH32 0x7B226B6579223A2274797065222C2276616C7565223A22000000000000000000 DUP2 MSTORE PUSH1 0x17 ADD PUSH2 0x531C SWAP2 PUSH2 0x36D4 JUMP JUMPDEST PUSH18 0x222C2274797065223A22737472696E67227D PUSH1 0x70 SHL DUP2 MSTORE PUSH1 0x12 ADD PUSH3 0x5D7D7D PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x3 ADD SUB DUP4 DUP2 ADD DUP3 MSTORE PUSH2 0x5353 SWAP1 DUP3 PUSH2 0x515 JUMP JUMPDEST PUSH2 0x535C DUP2 PUSH2 0x4D46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP4 SWAP1 DUP5 SWAP1 PUSH1 0x3D DUP3 ADD PUSH2 0x5396 SWAP2 PUSH2 0x36D4 JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP5 MSTORE PUSH2 0x4CE3 SWAP1 DUP5 PUSH2 0x515 JUMP JUMPDEST PUSH2 0x53AE PUSH2 0x4E83 JUMP JUMPDEST SWAP5 PUSH2 0x5027 JUMP JUMPDEST PUSH2 0x53BC PUSH2 0x4E2D JUMP JUMPDEST PUSH2 0x4F46 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP2 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP1 DUP3 LT ISZERO PUSH2 0x54F6 JUMPI JUMPDEST POP PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP1 DUP4 LT ISZERO PUSH2 0x54E7 JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 DUP1 DUP4 LT ISZERO PUSH2 0x54D8 JUMPI JUMPDEST POP PUSH4 0x5F5E100 DUP1 DUP4 LT ISZERO PUSH2 0x54C9 JUMPI JUMPDEST POP PUSH2 0x2710 DUP1 DUP4 LT ISZERO PUSH2 0x54BA JUMPI JUMPDEST POP PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x54AA JUMPI JUMPDEST PUSH1 0xA DUP1 SWAP3 LT ISZERO PUSH2 0x54A0 JUMPI JUMPDEST PUSH1 0x1 SWAP1 DUP2 PUSH1 0x21 PUSH2 0x5458 DUP3 DUP8 ADD PUSH2 0x33E5 JUMP JUMPDEST SWAP6 DUP7 ADD ADD SWAP1 JUMPDEST PUSH2 0x546A JUMPI JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 DUP4 SWAP1 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP3 DUP3 MOD BYTE DUP4 MSTORE8 DIV SWAP2 DUP3 ISZERO PUSH2 0x549B JUMPI SWAP2 SWAP1 DUP3 PUSH2 0x545E JUMP JUMPDEST PUSH2 0x5463 JUMP JUMPDEST SWAP2 PUSH1 0x1 ADD SWAP2 PUSH2 0x5447 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x64 PUSH1 0x2 SWAP2 DIV SWAP2 ADD SWAP2 PUSH2 0x543C JUMP JUMPDEST PUSH1 0x4 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x5431 JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x5424 JUMP JUMPDEST PUSH1 0x10 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x5415 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x5403 JUMP JUMPDEST PUSH1 0x40 SWAP4 POP DUP2 DIV SWAP2 POP CODESIZE PUSH2 0x53EA JUMP JUMPDEST ISZERO PUSH2 0x550B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5075626C6963206D696E74696E6720697320636C6F7365640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x5557 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x444F4E45204D494E54494E47 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x5592 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x9C9EA8408A9C9EAA8E9 PUSH1 0xB3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x55CB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x135253950813125352550814915050D21151 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x560C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x18DBDD5B19081B9BDD081CD95B99 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD EQ PUSH2 0x5653 JUMPI PUSH1 0x2 PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x56A5 DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x9 DUP3 MSTORE PUSH9 0x1B1D5ADCDBDB985D5D PUSH1 0xBA SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x56CA DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x8 DUP3 MSTORE PUSH8 0x2AA81027BBB732B9 PUSH1 0xC1 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH4 0x1C537DDF PUSH1 0xE2 SHL PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x5725 JUMPI JUMPDEST POP PUSH2 0x452 JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x5759 JUMPI JUMPDEST DUP2 PUSH2 0x573F PUSH1 0x20 SWAP4 DUP4 PUSH2 0x515 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xE1A JUMPI POP MLOAD PUSH2 0x5752 DUP2 PUSH2 0x8D8 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x571A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5732 JUMP JUMPDEST PUSH2 0x576D PUSH2 0x11DE DUP3 PUSH2 0x56E1 JUMP JUMPDEST PUSH2 0x4E24 JUMPI PUSH1 0x40 MLOAD PUSH4 0x54F6127F PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0xA5F25703C828C6D3C468FA5542C279E8C98F1ACC783318E4FCD67EA8FD61BE02 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP4 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 SWAP3 DUP3 SWAP4 PUSH2 0x5866 JUMPI JUMPDEST POP PUSH2 0x57D4 JUMPI POP POP PUSH2 0x452 PUSH2 0x21AE JUMP JUMPDEST DUP2 MLOAD DUP1 PUSH2 0x57E7 JUMPI JUMPDEST POP POP POP PUSH2 0x452 PUSH2 0x21AE JUMP JUMPDEST PUSH1 0x1 DUP1 SWAP2 GT DUP1 PUSH2 0x5849 JUMPI JUMPDEST ISZERO PUSH2 0x57DC JUMPI PUSH2 0x5804 PUSH2 0x4D74 DUP5 MLOAD PUSH2 0x3224 JUMP JUMPDEST SWAP3 DUP2 DUP1 JUMPDEST PUSH2 0x5813 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x549B JUMPI DUP1 PUSH2 0x582D PUSH2 0x1A0A PUSH2 0x5843 SWAP4 DUP6 PUSH2 0x3433 JUMP JUMPDEST PUSH2 0x1A50 PUSH2 0x5839 DUP4 PUSH2 0x3224 JUMP JUMPDEST SWAP2 DUP8 BYTE SWAP2 DUP9 PUSH2 0x3433 JUMP JUMPDEST DUP3 PUSH2 0x5808 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT PUSH2 0x585F PUSH2 0x1A0A DUP6 PUSH2 0x3426 JUMP JUMPDEST AND ISZERO PUSH2 0x57F2 JUMP JUMPDEST PUSH2 0x587B SWAP2 SWAP4 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH2 0x2F70 DUP2 DUP4 PUSH2 0x515 JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x57C5 JUMP JUMPDEST PUSH2 0x5895 PUSH2 0x588F DUP3 SLOAD PUSH2 0xA0F JUMP JUMPDEST DUP3 PUSH2 0x252D JUMP JUMPDEST PUSH1 0xC PUSH6 0x79656C6C6F77 PUSH1 0xD0 SHL ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x58B3 PUSH2 0x588F DUP3 SLOAD PUSH2 0xA0F JUMP JUMPDEST PUSH1 0xC PUSH6 0x707572706C65 PUSH1 0xD0 SHL ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x58D1 PUSH2 0x588F DUP3 SLOAD PUSH2 0xA0F JUMP JUMPDEST PUSH1 0x6 PUSH3 0x1C9959 PUSH1 0xEA SHL ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x58EC PUSH2 0x588F DUP3 SLOAD PUSH2 0xA0F JUMP JUMPDEST PUSH1 0x8 PUSH4 0x626C7565 PUSH1 0xE0 SHL ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x5908 PUSH2 0x588F DUP3 SLOAD PUSH2 0xA0F JUMP JUMPDEST PUSH1 0xA PUSH5 0x33B932B2B7 PUSH1 0xD9 SHL ADD SWAP1 SSTORE JUMP JUMPDEST SWAP2 PUSH2 0x2555 SWAP4 PUSH1 0x5 PUSH2 0x5A2B SWAP3 PUSH2 0x5974 PUSH1 0xFF PUSH1 0xE8 SHL DUP3 PUSH1 0x2 BYTE PUSH1 0xE8 SHL AND PUSH1 0xFF PUSH1 0xF0 SHL DUP4 PUSH1 0x1 BYTE PUSH1 0xF0 SHL AND PUSH1 0xFF PUSH1 0xF8 SHL DUP5 PUSH1 0x0 BYTE PUSH1 0xF8 SHL AND OR OR PUSH2 0x5963 DUP8 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xE8 SHR PUSH3 0xFFFFFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x5992 PUSH2 0x598D PUSH2 0x5986 DUP4 PUSH1 0x3 BYTE PUSH2 0x3483 JUMP JUMPDEST PUSH1 0xFF SWAP1 DIV SWAP1 JUMP JUMPDEST PUSH2 0x34DF JUMP JUMPDEST PUSH2 0x59A6 DUP7 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH2 0x59DD PUSH2 0x59D8 PUSH2 0x5986 PUSH2 0x59CE PUSH2 0x59C7 DUP10 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x2 SHR SWAP1 JUMP JUMPDEST DUP5 PUSH1 0x4 BYTE SWAP1 PUSH2 0x3494 JUMP JUMPDEST PUSH2 0x34ED JUMP JUMPDEST PUSH2 0x59F1 DUP7 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP2 BYTE MOD DUP1 PUSH2 0x5A39 JUMPI POP PUSH2 0x5A17 PUSH2 0x5A12 DUP5 PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x58FB JUMP JUMPDEST PUSH2 0x24DC DUP4 PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x5A33 PUSH2 0x21AE JUMP JUMPDEST SWAP2 PUSH2 0x5AC7 JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x5A63 JUMPI POP PUSH2 0x5A5E PUSH2 0x5A59 DUP5 PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x58DF JUMP JUMPDEST PUSH2 0x5A17 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x5A88 JUMPI POP PUSH2 0x5A5E PUSH2 0x5A83 DUP5 PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x58C4 JUMP JUMPDEST PUSH1 0x3 SUB PUSH2 0x5AAB JUMPI PUSH2 0x5A5E PUSH2 0x5AA6 DUP5 PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x58A6 JUMP JUMPDEST PUSH2 0x5A5E PUSH2 0x5AC2 DUP5 PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x5882 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 ISZERO PUSH2 0x297C JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5BBA JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5BBA JUMPI DUP5 PUSH2 0x2555 SWAP5 SWAP6 PUSH2 0x5BB5 SWAP3 PUSH2 0x5B30 PUSH2 0x5B2B PUSH1 0x2 SLOAD PUSH2 0x3417 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x5B53 SWAP1 DUP4 SWAP1 PUSH2 0x31A2 JUMP JUMPDEST POP PUSH2 0x5B6C DUP6 PUSH2 0x28DA DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xB333C813A7426A7A11E2B190CAD52C44119421594B47F6F32ACE6D8C7207B2BF PUSH1 0x40 MLOAD DUP1 PUSH2 0x5B9E DUP11 CALLER DUP4 PUSH2 0x2B4C JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x1237 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP3 DUP6 CALLER PUSH1 0x20 DUP7 ADD PUSH2 0x2B9F JUMP JUMPDEST PUSH2 0x2FDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x34C7B511 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x48 PUSH2 0x2555 SWAP2 SWAP4 SWAP3 SWAP4 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP2 PUSH6 0x379ABE35001 PUSH1 0xC5 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x28 DUP4 ADD MSTORE PUSH2 0x5C09 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0x3F9 JUMP JUMPDEST DUP2 ADD SUB PUSH1 0x28 DUP2 ADD DUP6 MSTORE ADD DUP4 PUSH2 0x515 JUMP JUMPDEST SWAP1 PUSH32 0x9AFB95CACC9F95858EC44AA8C3B685511002E30AE54415823F406128B85B238E DUP2 SUB PUSH2 0x5D04 JUMPI POP PUSH2 0x5CF7 DUP2 PUSH2 0x5CD9 PUSH2 0xB15 PUSH2 0x5C72 PUSH2 0x5C66 PUSH2 0x452 SWAP7 PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0xA49 JUMP JUMPDEST PUSH2 0x5C86 DUP4 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xE8 SHL PUSH2 0x5C9E DUP5 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 PUSH2 0x5CB4 DUP6 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP3 PUSH2 0x5CE0 PUSH2 0x5CCD DUP8 PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP7 DUP8 DUP1 SWAP3 PUSH2 0xA49 JUMP JUMPDEST SUB DUP7 PUSH2 0x515 JUMP JUMPDEST PUSH2 0x5CF1 PUSH2 0x5CEC DUP8 PUSH2 0x266A JUMP JUMPDEST PUSH2 0x56E1 JUMP JUMPDEST SWAP6 PUSH2 0x4EC4 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x5BD3 JUMP JUMPDEST PUSH2 0x5D0D SWAP2 PUSH2 0x2CF2 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0xB15 PUSH2 0x452 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0xA49 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 STATICCALL DUP11 PUSH11 0xC35E76FAF5B5AF745A909F GT PUSH25 0x73761088C311A16FB9027A08C9685B64736F6C634300081400 CALLER ","sourceMap":"19923:9327:30:-:0;;;;;;;;;-1:-1:-1;19923:9327:30;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;19923:9327:30;;;;;;-1:-1:-1;19923:9327:30;20211:46;19923:9327;;;;-1:-1:-1;19923:9327:30;;;;;;;;;-1:-1:-1;19923:9327:30;;;;;;;;-1:-1:-1;;19923:9327:30;;;;;;-1:-1:-1;;;;;;19923:9327:30;;;;;;;;;-1:-1:-1;;;10393:32:18;;;:84;;;;19923:9327:30;10393:164:18;;;;;19923:9327:30;-1:-1:-1;19923:9327:30;;;;;;;;;;;;;;;;;;;10393:164:18;10493:64;;;;:::i;:::-;10393:164;;;:84;19923:9327:30;;-1:-1:-1;;;;1132:44:10;;;:96;;;;10393:84:18;;;;;;1132:96:10;-1:-1:-1;;;7097:35:0;;;-1:-1:-1;7097:87:0;;;;1132:96:10;;;;;7097:87:0;-1:-1:-1;;;937:40:24;;-1:-1:-1;7097:87:0;;;19923:9327:30;;;;;;;;-1:-1:-1;;19923:9327:30;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;19923:9327:30;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;-1:-1:-1;;19923:9327:30;;;;;12409:36:18;19923:9327:30;;;;12409:36:18;:::i;:::-;19923:9327:30;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;19923:9327:30;;;;;22459:9;19923:9327;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;:::o;:::-;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19923:9327:30;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;12711:34:18;12707:104;;12834:28;19923:9327:30;;12834:28:18;:::i;:::-;12878:9;-1:-1:-1;12878:9:18;19923:9327:30;;12889:19:18;;;;;12961:11;12942:44;12961:11;19923:9327:30;12961:11:18;;;:::i;:::-;19923:9327:30;12974:11:18;;;;:::i;:::-;19923:9327:30;12942:44:18;;:::i;:::-;12926:60;;;;:::i;:::-;;;;;;:::i;:::-;;19923:9327:30;12878:9:18;;12889:19;19923:9327:30;;;;12889:19:18;19923:9327:30;;:::i;12707:104:18:-;19923:9327:30;;-1:-1:-1;;;12768:32:18;;19923:9327:30;;12768:32:18;19923:9327:30;;;;;;-1:-1:-1;;19923:9327:30;;;;;;-1:-1:-1;19923:9327:30;20115:39;19923:9327;;;;-1:-1:-1;19923:9327:30;;;;;;;;;;;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;-1:-1:-1;;19923:9327:30;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;19923:9327:30;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;19923:9327:30;;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;;;:::i;:::-;2227:103:20;;:::i;:::-;22974:50:30;19923:9327;22982:13;19923:9327;;;;;;22974:50;:::i;:::-;23034:47;20435:4;23042:9;19923:9327;23042:22;23034:47;:::i;:::-;23091:41;20524:9;23099;:18;;23091:41;:::i;:::-;23167:10;19923:9327;;;;23150:16;19923:9327;;;;;23142:74;;20484:2;;23150:28;19923:9327;23150:43;23142:74;:::i;:::-;23167:10;19923:9327;;;;23150:16;19923:9327;;;;;23286:30;19923:9327;;23286:30;:::i;:::-;19923:9327;;23357:11;;23042:9;19923:9327;23357:11;:::i;:::-;23042:9;19923:9327;;23357:11;23864:9;23042;19923:9327;23600:12;:16;:12;:16;:::i;:::-;19923:9327;;;;23531:159;;19923:9327;;;23590:27;;19923:9327;;;;;;;-1:-1:-1;;23167:10:30;19923:9327;;;;;;;;;;23671:4;19923:9327;;;;;;;23531:159;19923:9327;;;;23531:159;;19923:9327;;23531:159;;;;;;:::i;:::-;19923:9327;23508:192;;23167:10;;23864:9;:::i;:::-;23995:34;-1:-1:-1;23099:9:30;;;;20619:42;23947:38;;;;:::i;:::-;;23995:34;:::i;:::-;2292:1:20;1716;2809:22;19923:9327:30;2629:209:20;2292:1;19923:9327:30;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;19923:9327:30;;;;;;;;;:::i;:::-;1063:62:19;;:::i;:::-;19923:9327:30;;;22762:30;19923:9327;;;;;;;22762:30;19923:9327;-1:-1:-1;19923:9327:30;;;;;;;;-1:-1:-1;;19923:9327:30;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;:::o;:::-;;;;;;-1:-1:-1;;19923:9327:30;;;;;18159:37:18;19923:9327:30;;;;;:::i;:::-;;;18159:37:18;;:::i;:::-;19923:9327:30;;;;;;;;;;;;;;-1:-1:-1;;19923:9327:30;;;;;;;20435:4;19923:9327;;;;;;;;;-1:-1:-1;;19923:9327:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;19923:9327:30;;;;;;;20484:2;19923:9327;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;19923:9327:30;;;;-1:-1:-1;19923:9327:30;;;-1:-1:-1;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19923:9327:30;;;;;;-1:-1:-1;19923:9327:30;20314:45;19923:9327;;;;;;-1:-1:-1;19923:9327:30;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;19923:9327:30;;;22260:12:18;19923:9327:30;;;;;;-1:-1:-1;;;;;19923:9327:30;22260:35:18;22466:86;;-1:-1:-1;19923:9327:30;18436:10:18;19923:9327:30;;;;-1:-1:-1;19923:9327:30;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19923:9327:30;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;-1:-1:-1;19923:9327:30;;;;;;;;;;;;22466:86:18;19923:9327:30;;;;22510:31:18;;;;;;19923:9327:30;22510:31:18;;19923:9327:30;22510:31:18;19923:9327:30;;;;;;-1:-1:-1;;19923:9327:30;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;19923:9327:30;;;;-1:-1:-1;19923:9327:30;;;;;;;;:::i;:::-;1063:62:19;;:::i;:::-;27780:21:30;27767:35;;;;;;;19923:9327;-1:-1:-1;;;;;19923:9327:30;;27767:35;;;;19923:9327;27767:35;;:::i;:::-;;;-1:-1:-1;27767:35:30;;19923:9327;;;;;;-1:-1:-1;;19923:9327:30;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;19923:9327:30;;;;;;20695:33;19923:9327;;;;;;;;;;;;;;;;-1:-1:-1;;19923:9327:30;;;;;;-1:-1:-1;19923:9327:30;20160:45;19923:9327;;;;-1:-1:-1;19923:9327:30;;;;;;;;;;;;;;-1:-1:-1;;19923:9327:30;;;;;;;20619:42;19923:9327;;;;;;;;;-1:-1:-1;;19923:9327:30;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;19923:9327:30;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;19923:9327:30;;;;;;-1:-1:-1;19923:9327:30;;;;;;;;;;;;;;;;;;;;;1063:62:19;;:::i;:::-;19923:9327:30;;-1:-1:-1;;;;;;19923:9327:30;;;;;;-1:-1:-1;;;;;19923:9327:30;2566:40:19;19923:9327:30;;2566:40:19;19923:9327:30;;;;;;;;;;;-1:-1:-1;;19923:9327:30;;;;;;-1:-1:-1;;;;;;19923:9327:30;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;19923:9327:30;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;;19923:9327:30;;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;;:::i;:::-;1063:62:19;;:::i;:::-;3212:9:0;3208:55;;3291:9;19923:9327:30;;;3291:9:0;:::i;3208:55::-;19923:9327:30;;-1:-1:-1;;;3235:28:0;;19923:9327:30;;3235:28:0;19923:9327:30;;-1:-1:-1;;19923:9327:30;;;;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;19923:9327:30;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;;:::i;:::-;15841:21:18;;;;:::i;:::-;-1:-1:-1;;;;;19923:9327:30;;;;;15891:10:18;15877:24;;15873:112;;19923:9327:30;;;15999:22:18;;;15995:96;;16105:22;;;16101:92;;16265:8;16218:33;:19;;;19923:9327:30;;16218:10:18;19923:9327:30;;;;;;;16218:19:18;:33;:::i;:::-;16265:8;;19923:9327:30;16265:8:18;16261:69;;19923:9327:30;;;16524:135:18;19923:9327:30;33400:8:18;19923:9327:30;;16346:143:18;19923:9327:30;;16346:143:18;;;;;:::i;:::-;;;;16524:135;19923:9327:30;;15891:10:18;;;;19923:9327:30;16524:135:18;;;:::i;:::-;;19923:9327:30;;16524:135:18;;;;;;:::i;:::-;33400:8;:::i;16261:69::-;19923:9327:30;;;-1:-1:-1;;;16282:48:18;;-1:-1:-1;;;;;19923:9327:30;;16282:48:18;;;19923:9327:30;;;;;;;;;;;;;16282:48:18;;;;;;;16101:92;19923:9327:30;;-1:-1:-1;;;16150:32:18;;;15995:96;19923:9327:30;;-1:-1:-1;;;16044:36:18;;;15873:112;19923:9327:30;;;-1:-1:-1;;;15924:50:18;;-1:-1:-1;;;;;19923:9327:30;;;15924:50:18;;;19923:9327:30;;;;;;;;;15891:10:18;19923:9327:30;;;;;;;;;;;16282:48:18;;;19923:9327:30;;;;;;-1:-1:-1;;19923:9327:30;;;;;;18428:23;;:::i;:::-;18717:15;;;;;;:::i;:::-;19303;;;;:::i;:::-;19923:9327;;-1:-1:-1;;;19923:9327:30;18534:912;;19923:9327;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;:::i;:::-;-1:-1:-1;;;19923:9327:30;;;;-1:-1:-1;;;19923:9327:30;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;19923:9327:30;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;-1:-1:-1;;;19923:9327:30;;;;-1:-1:-1;;;19923:9327:30;;;;18534:912;19923:9327;;18534:912;;;;;;;;;;:::i;:::-;19701:18;;;:::i;:::-;19923:9327;;;;19618:115;;19923:9327;;;;;;;;;;;:::i;:::-;19618:115;;;;;;;;;;:::i;:::-;19923:9327;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;19923:9327:30;;;;;;;20524:9;19923:9327;;;;;;;;;-1:-1:-1;;19923:9327:30;;;;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;;-1:-1:-1;;19923:9327:30;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;1063:62:19;;;:::i;:::-;4201:9:0;4197:55;;19923:9327:30;;;;6456:36:0;6452:112;;19923:9327:30;;6578:20:0;6574:92;;6681:13;-1:-1:-1;6681:13:0;19923:9327:30;;6696:19:0;;;;;6742:11;6755:13;6742:11;19923:9327:30;6742:11:0;;;:::i;:::-;19923:9327:30;6755:13:0;;;;:::i;:::-;;;;:::i;:::-;19923:9327:30;6681:13:0;;6574:92;19923:9327:30;;-1:-1:-1;;;6621:34:0;;;6452:112;19923:9327:30;;-1:-1:-1;;;6515:38:0;;;4197:55;19923:9327:30;;-1:-1:-1;;;4224:28:0;;;19923:9327:30;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;19923:9327:30;-1:-1:-1;19923:9327:30;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19923:9327:30;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19923:9327:30;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;19923:9327:30;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;1063:62:19;;;:::i;:::-;19923:9327:30;;;;13720:34:18;;;;;;:86;;;19923:9327:30;13703:178:18;;;19923:9327:30;;13895:20:18;13891:86;;13992:9;-1:-1:-1;13992:9:18;19923:9327:30;;14003:19:18;;;;;14059:11;14085:13;14059:11;19923:9327:30;14059:11:18;;;:::i;:::-;19923:9327:30;14072:11:18;;;;:::i;:::-;19923:9327:30;14085:13:18;;;;:::i;:::-;;;;:::i;:::-;19923:9327:30;13992:9:18;;13891:86;19923:9327:30;;-1:-1:-1;;;13938:28:18;;;13703:178;19923:9327:30;;-1:-1:-1;;;13838:32:18;;;13720:86;19923:9327:30;;;;13770:36:18;;13720:86;;;19923:9327:30;;;;;;-1:-1:-1;;19923:9327:30;;;;;;-1:-1:-1;19923:9327:30;20263:45;19923:9327;;;;;;-1:-1:-1;19923:9327:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;4775:13;;:::i;:::-;4812;-1:-1:-1;4812:13:30;;4827:6;;;;;;4785:2;19923:9327;;;;;;:::i;4835:3::-;;;4930:32;;19923:9327;4883:8;;;19923:9327;4854:44;4868:30;4930:32;19923:9327;;;;;4868:30;;:::i;:::-;19923:9327;-1:-1:-1;;;;;;19923:9327:30;;;4868:30;4861:3;;;:::i;:::-;4854:44;;;;;:::i;:::-;;4939:22;4930:32;;:::i;:::-;4912:50;4919:7;:3;;;:::i;:::-;:7;:::i;:::-;4912:50;;;;;;:::i;:::-;;4835:3;:::i;:::-;4812:13;;19923:9327;;;;;;-1:-1:-1;;19923:9327:30;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;19923:9327:30;20792:48;19923:9327;;;;-1:-1:-1;19923:9327:30;;;;;;;;;;;;;;-1:-1:-1;;19923:9327:30;;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;13427:9:18;19923:9327:30;;;;;;:::i;:::-;1063:62:19;;:::i;:::-;19923:9327:30;;;;13427:9:18;:::i;19923:9327:30:-;;;;;;-1:-1:-1;;19923:9327:30;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;;:::i;:::-;16992:21:18;;;:::i;:::-;19923:9327:30;-1:-1:-1;;;;;19923:9327:30;;;;17028:10:18;:24;;;17024:264;;19923:9327:30;;;17302:22:18;;;17298:96;;17408:22;17404:92;;17622:24;;;;;;;:::i;:::-;17667:274;;19923:9327:30;17667:274:18;33400:8;19923:9327:30;17717:158:18;;19923:9327:30;;;17717:158:18;;;19923:9327:30;17717:158:18;;;:::i;17404:92::-;19923:9327:30;;-1:-1:-1;;;17453:32:18;;19923:9327:30;;17453:32:18;17298:96;19923:9327:30;;-1:-1:-1;;;17347:36:18;;19923:9327:30;;17347:36:18;17024:264;19923:9327:30;;;17028:10:18;17068:210;17024:264;17068:210;19923:9327:30;;-1:-1:-1;;;17121:142:18;;17028:10;19923:9327:30;17121:142:18;;19923:9327:30;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;;;;;16282:48:18;19923:9327:30;;;;;;-1:-1:-1;;19923:9327:30;;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;;:::i;:::-;2167:28:0;19923:9327:30;;2167:28:0;:::i;:::-;2211:13;-1:-1:-1;2211:13:0;19923:9327:30;;2226:19:0;;;;;2288:11;2279:21;2288:11;19923:9327:30;2288:11:0;;;:::i;:::-;19923:9327:30;2279:21:0;:::i;:::-;2263:37;;;;:::i;:::-;;;;;;:::i;:::-;;19923:9327:30;2211:13:0;;2226:19;19923:9327:30;;;;2226:19:0;19923:9327:30;;:::i;:::-;;;;;;;;;;;2227:103:20;;;:::i;:::-;24223:50:30;19923:9327;24231:13;19923:9327;;;;;24223:50;24283:47;20435:4;24291:9;19923:9327;24291:22;24283:47;:::i;:::-;24340:41;20524:9;24348;:18;;24340:41;:::i;:::-;24416:10;19923:9327;;;;23150:16;19923:9327;;;;;24391:74;;20484:2;;24399:28;19923:9327;24391:74;24416:10;19923:9327;;;;23150:16;19923:9327;;;;;24535:30;19923:9327;;24535:30;:::i;:::-;19923:9327;;24606:11;;24291:9;19923:9327;24606:11;:::i;:::-;25574:34;24291:9;19923:9327;24849:12;25446:6;24849:16;:12;:16;:::i;:::-;19923:9327;;;24780:159;;;19923:9327;;;24839:27;;19923:9327;;;;;;;-1:-1:-1;;24416:10:30;19923:9327;;;;;;;;;;24920:4;19923:9327;;;;;;;24780:159;19923:9327;;;;24780:159;19923:9327;24780:159;19923:9327;24757:192;;19923:9327;;:::i;:::-;24416:10;25070:30;24416:10;25070:30;:::i;:::-;24416:10;;;25125:21;24416:10;25125:21;:::i;:::-;19923:9327;;;25164:25;25160:83;;25066:238;24416:10;;25446:6;:::i;:::-;24348:9;;;;20619:42;25526:38;;;;:::i;25160:83::-;19923:9327;;;;:::i;:::-;25160:83;;;25066:238;19923:9327;;:::i;:::-;;;;;;-1:-1:-1;;19923:9327:30;;;;;;;;;:::i;:::-;1063:62:19;;:::i;:::-;-1:-1:-1;;;;;19923:9327:30;;;2162:22:19;;19923:9327:30;;2518:6:19;19923:9327:30;;-1:-1:-1;;;;;;19923:9327:30;;;;;;2518:6:19;;19923:9327:30;2566:40:19;2518:6;;2566:40;19923:9327:30;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;;-1:-1:-1;;19923:9327:30;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;;;;;;;:::i;:::-;27494:21;;;:::i;:::-;27519:10;-1:-1:-1;;;;;19923:9327:30;;;27494:35;19923:9327;;-1:-1:-1;19923:9327:30;;;;;;27559:11;19923:9327;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;27605:34;19923:9327;;27605:34;19923:9327;;;;;;915:66:12;;;;;;;;;;19923:9327:30;915:66:12;;;19923:9327:30;;;;;27605:34;;;;;:::i;:::-;;;;19923:9327;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27605:34;19923:9327;;;;;27605:34;19923:9327;;;;;;;;;;;;;;;;;;;915:66:12;;;;19923:9327:30;915:66:12;;19923:9327:30;915:66:12;;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;;-1:-1:-1;;19923:9327:30;;;;;;;;;:::i;1815:151:0:-;-1:-1:-1;19923:9327:30;4920:6:0;19923:9327:30;;;;;-1:-1:-1;19923:9327:30;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;19923:9327:30;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;6452:253:18:-;6580:1;6562:8;:19;6558:90;;6664:34;;;:::i;6558:90::-;19923:9327:30;;;6604:33:18;;;;;;;19923:9327:30;6580:1:18;6604:33;;19923:9327:30;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19923:9327:30;;;6604:33:18;;;;6924:240;7020:9;:14;7016:90;;19923:9327:30;;-1:-1:-1;;;7123:34:18;;;;;7016:90;19923:9327:30;;;6604:33:18;;;7057:38;;19923:9327:30;7057:38:18;;;19923:9327:30;7057:38:18;19923:9327:30;;;;7033:1:18;19923:9327:30;;;;7057:38:18;19923:9327:30;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;19923:9327:30;;;;:::o;:::-;;;:::o;8159:1031:18:-;19923:9327:30;;;;8387:7:18;;19923:9327:30;9940:32:18;5469:21:11;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5469:21:11;:::i;:::-;9940:32:18;:::i;:::-;19923:9327:30;;10013:2:18;9986:29;;;:61;;;;8159:1031;9982:127;;;10136:25;;;:::i;:::-;433:22:8;;8455:23:18;;;8451:92;;19923:9327:30;;;;;;;8638:49:18;;;19923:9327:30;8638:49:18;;8614:9;;8665:10;;8638:49;;;:::i;:::-;8592:105;8614:9;;8592:105;;;;;:::i;:::-;8708:476;;;;8735:13;:::o;8708:476::-;19923:9327:30;9040:134:18;;;;;8451:92;19923:9327:30;;-1:-1:-1;;;8499:44:18;;-1:-1:-1;;;;;;19923:9327:30;;;;8499:44:18;;;19923:9327:30;;;16282:48:18;9982:127;19923:9327:30;;-1:-1:-1;;;10068:41:18;;19923:9327:30;10068:41:18;;;19923:9327:30;;;;;;;;;;;:::i;9986:61:18:-;10019:28;;;;9986:61;;;433:22:8;;19923:9327:30;;;;;433:22:8;19923:9327:30;;433:22:8;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;433:22:8:o;19923:9327:30:-;;;;;;;;;;;;;;;:::o;:::-;915:66:12;;19923:9327:30;;;;;433:22:8;19923:9327:30;;:::o;1658:457:10:-;9940:32:18;5469:21:11;19923:9327:30;;;;;;;;;-1:-1:-1;19923:9327:30;;;;952:25:24;;;19923:9327:30;;;;;;;;;;:::i;9940:32:18:-;19923:9327:30;;10013:2:18;9986:29;;;:61;;;;1658:457:10;9982:127:18;;;10136:25;;;:::i;:::-;433:22:8;;1913:29:10;;;1909:47;;1986:122;;;:::i;1909:47::-;1944:12;;-1:-1:-1;1944:12:10;:::o;9986:61:18:-;10019:28;;;;9986:61;;;10779:289;;359:66:16;10900:35:18;;10896:103;;633:66:12;2056:31:13;;633:66:12;;19923:9327:30;;-1:-1:-1;;;2110:26:13;;;;;2052:410;776:66:12;2157:33:13;;776:66:12;;19923:9327:30;;-1:-1:-1;;;2213:28:13;;;;;2153:309;915:66:12;2262:31:13;;915:66:12;;19923:9327:30;;-1:-1:-1;;;2316:26:13;;;;;2258:204;2420:31;2373:15;915:66:12;2420:31:13;2373:15;;;19923:9327:30;;2373:6:13;19923:9327:30;;;;;;;2373:15:13;915:66:12;:::i;2420:31:13:-;;;;10779:289:18:o;10896:103::-;19923:9327:30;;-1:-1:-1;;;10958:30:18;;;;;915:66:12;;;;;;;;;;;;;;;433:22:8;;915:66:12;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;-1:-1:-1;915:66:12;;;;;;;;;;;;;;;:::o;:::-;;19923:9327:30;-1:-1:-1;19923:9327:30;915:66:12;19923:9327:30;-1:-1:-1;19923:9327:30;915:66:12;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;:::o;:::-;;19923:9327:30;-1:-1:-1;19923:9327:30;;-1:-1:-1;19923:9327:30;915:66:12;19923:9327:30;915:66:12;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;915:66:12;;;;;;;;19923:9327:30;;-1:-1:-1;;;;;915:66:12;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19923:9327:30;915:66:12;;;;;:::o;:::-;;;;-1:-1:-1;915:66:12;;;;;19923:9327:30;;;915:66:12;;;;;19923:9327:30;;;;;;;915:66:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;19923:9327:30;915:66:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11605:290:18;-1:-1:-1;19923:9327:30;;;11736:12:18;19923:9327:30;;;;;;-1:-1:-1;;;;;19923:9327:30;;11772:24:18;;11768:93;;11871:17;11605:290;:::o;19923:9327:30:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;;;;;;:::o;14468:1081:18:-;;;14602:24;;;:::i;:::-;14641:9;-1:-1:-1;14641:9:18;;14652:15;;;;;;14468:1081;;;;:::o;14641:9::-;14767:7;;;;;;;:::i;:::-;19923:9327:30;;;;;;;;;;;:::i;:::-;14723:65:18;14731:4;;14723:65;;;;;:::i;:::-;14807:8;;14803:636;;15453:19;;19923:9327:30;15453:19:18;;;;;:::i;:::-;;;;;;:::i;:::-;;19923:9327:30;14641:9:18;;14803:636;19923:9327:30;;;;;14909:18:18;:13;;15160:158;;;;;;14905:520;19923:9327:30;-1:-1:-1;;;15371:35:18;;;;;19923:9327:30;;;;;;-1:-1:-1;16282:48:18;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;17322:1:18;19923:9327:30;;;;;;;;;;;;:::i;18629:229:18:-;-1:-1:-1;;;;;19923:9327:30;18777:21:18;;;:::i;:::-;19923:9327:30;;;18767:31:18;;;:83;;;;;18759:92;;18629:229;:::o;18767:83::-;8963:55:29;19923:9327:30;;-1:-1:-1;19923:9327:30;18814:10:18;19923:9327:30;;;-1:-1:-1;19923:9327:30;4351:12:29;4255:127;-1:-1:-1;19923:9327:30;4351:12:29;19923:9327:30;;;-1:-1:-1;19923:9327:30;;4351:24:29;;4255:127;;18964:349:18;;;;;19141:39;19160:10;;19141:39;:::i;:::-;19140:40;19136:119;;28619:21;;;:::i;:::-;-1:-1:-1;;;;;19923:9327:30;;;;;;;;28654:18:18;;;28650:100;;19923:9327:30;;;28764:16:18;;;28760:83;;29039:21;;;:::i;:::-;19923:9327:30;;;29074:31:18;29070:192;;29294:7;;;29587:47;29294:7;;29721:8;29294:7;;;29587:47;29294:7;;;34240:8;29294:7;;;:::i;:::-;-1:-1:-1;;;;;19923:9327:30;;;;;;29313:12:18;19923:9327:30;;;;;6306:26:29;;29313:18:18;;6306:26:29;:::i;:::-;-1:-1:-1;;;;;;19923:9327:30;;;;;;29313:12:18;19923:9327:30;;;;;6012:23:29;;29357:16:18;;6012:23:29;:::i;:::-;;29396:26:18;:21;;;19923:9327:30;;29396:12:18;19923:9327:30;;;;;;;29396:21:18;19923:9327:30;;-1:-1:-1;;;;;;19923:9327:30;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;29396:26:18;19923:9327:30;;29438:52:18;;19923:9327:30;29438:52:18;19923:9327:30;;19160:10:18;19923:9327:30;29438:52:18;:::i;:::-;;;;19923:9327:30;;19160:10:18;;;;;;;;29587:47;;;;:::i;:::-;34240:8;:::i;:::-;29721;:::i;29070:192::-;19923:9327:30;;-1:-1:-1;;;29128:123:18;;;;;19923:9327:30;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;;;;;;16282:48:18;28760:83;19923:9327:30;;-1:-1:-1;;;28803:29:18;;;;;28650:100;19923:9327:30;;-1:-1:-1;;;28695:44:18;;-1:-1:-1;;;;;19923:9327:30;;;28695:44:18;;;19923:9327:30;;;;;;;;;;;;;;;16282:48:18;19136:119;19923:9327:30;;;;19203:41:18;;;;;;;;;19923:9327:30;19160:10:18;19923:9327:30;;;;19203:41:18;19384:683;;;;;;19923:9327:30;;;;;19658:23:18;;;;:67;;;19384:683;19658:109;;;;19384:683;19658:150;;;;19384:683;19641:236;;-1:-1:-1;19903:14:18;;;;;;19384:683;;;;;;;;:::o;19892:9::-;19944:7;19982;19944;;19923:9327:30;19944:7:18;;;:::i;:::-;19923:9327:30;-1:-1:-1;;;;;19923:9327:30;;;19944:7:18;19953:5;;;;;:::i;:::-;19960:10;;;;:::i;:::-;19923:9327:30;19972:8:18;;;;;:::i;:::-;19923:9327:30;;;;;19972:8:18;19982:7;;;;;:::i;:::-;;;;:::i;:::-;19923:9327:30;19892:9:18;;19641:236;19923:9327:30;;-1:-1:-1;;;19840:26:18;;;;;19658:150;19923:9327:30;;;19783:25:18;;;19658:150;;:109;19923:9327:30;;;19741:26:18;;;19658:109;;:67;19923:9327:30;;;19697:28:18;;;19658:67;;20165:510;;;;19923:9327:30;-1:-1:-1;19923:9327:30;20389:10:18;19923:9327:30;;;-1:-1:-1;19923:9327:30;;;;;;;;8719:53:29;19923:9327:30;;;8719:53:29;;;:::i;:::-;20439:10:18;20435:65;;19923:9327:30;;;20516:152:18;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20516:152:18;;;20165:510::o;20435:65::-;19923:9327:30;;-1:-1:-1;;;20458:42:18;;-1:-1:-1;;;;;19923:9327:30;;;;20458:42:18;;;19923:9327:30;;;;;;;;;16282:48:18;19923:9327:30;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;20956:1030:18:-;;-1:-1:-1;19923:9327:30;;;;21533:10:18;19923:9327:30;;;;;;;;;;;;;;21683:9:18;;21694:22;;;;;;20956:1030;;;;;;;;;:::o;21683:9::-;19923:9327:30;;;;;;;;;;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;:::i;:::-;;;;;;;;;;8719:53:29;19923:9327:30;;;;8719:53:29;:::i;:::-;20439:10:18;20435:65;;19923:9327:30;;;20516:152:18;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20516:152:18;;;19923:9327:30;21683:9:18;;20435:65;19923:9327:30;;-1:-1:-1;;;20458:42:18;;-1:-1:-1;;;;;19923:9327:30;;20458:42:18;;;19923:9327:30;;;;;;;;;16282:48:18;19923:9327:30;;;;;;;;;;;;;;;;;;;;:::i;30150:273:18:-;;;30310:30;;;;:::i;:::-;19923:9327:30;;;;;;30300:41:18;-1:-1:-1;19923:9327:30;30293:6:18;19923:9327:30;;;;;-1:-1:-1;19923:9327:30;;;;915:66:12;-1:-1:-1;;;;;915:66:12;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;30369:47:18;915:66:12;;30369:47:18;915:66:12;;-1:-1:-1;915:66:12;;;;;;;;;;;;19923:9327:30;915:66:12;;;;;19923:9327:30;;30369:47:18;;;;;:::i;:::-;;;;30150:273::o;915:66:12:-;;;;;-1:-1:-1;915:66:12;;;;19923:9327:30;;;;;;915:66:12;;;;19923:9327:30;;;;;;;915:66:12;;-1:-1:-1;915:66:12;;;;;;;;;;;;30369:47:18;915:66:12;;30369:47:18;915:66:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;128:10:6;;;;;;;;;;;-1:-1:-1;;;;;128:10:6;;;;;;;;;;;;;;;;;;:::i;:::-;19923:9327:30;;;;;;;:::i;:::-;128:10:6;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1015:66:16;19923:9327:30;;128:10:6;;;;;;;;:::i;:::-;19923:9327:30;;128:10:6;;;;;;;1351:361:7;1513:100;;;:::i;:::-;1496:210;;1351:361;;:::o;1496:210::-;128:10:6;1638:57:7;19923:9327:30;;;;;;;;;;;;;;;1638:57:7;;1178:66:16;1638:57:7;;;19923:9327:30;;128:10:6;;;;;;;;;:::i;:::-;1638:57:7;;-1:-1:-1;;;;;19923:9327:30;1638:57:7;;;;;;;;1351:361;:::o;1638:57::-;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;1351:361::o;:::-;1513:100;;;:::i;:::-;1496:210;;1351:361;;:::o;1496:210::-;128:10:6;1638:57:7;19923:9327:30;;;;;;;;;;;;;;;1638:57:7;;849:66:16;1638:57:7;;;19923:9327:30;;128:10:6;;;;;;;;;:::i;35155:615:18:-;35306:115;;;:::i;:::-;;;;19923:9327:30;;-1:-1:-1;;;35446:67:18;;19923:9327:30;35446:67:18;;19923:9327:30;;;;35446:67:18;;19923:9327:30;;35446:67:18;;;;;;:::i;35289:475::-;;;35155:615::o;:::-;;;35306:115;;;:::i;:::-;;;;19923:9327:30;35446:67:18;;19923:9327:30;;;;;;;;;;;;;;35446:67:18;;;;;;:::i;35289:475::-;35534:6;;;35530:234;;35289:475;35155:615::o;35530:234::-;35560:14;;:19;:14;;19923:9327:30;;-1:-1:-1;;;35606:55:18;;-1:-1:-1;;;;;19923:9327:30;;;;35606:55:18;;;19923:9327:30;;;16282:48:18;35556:198;19923:9327:30;;-1:-1:-1;;;35707:32:18;;-1:-1:-1;;;;;19923:9327:30;;;;35707:32:18;;;19923:9327:30;;;16282:48:18;1359:130:19;1273:6;19923:9327:30;-1:-1:-1;;;;;19923:9327:30;734:10:22;1422:23:19;19923:9327:30;;1359:130:19:o;19923:9327:30:-;;;;;;;;;;;;;;;;;;;;;;;;;4421:647:25;-1:-1:-1;4592:71:25;4421:647;19923:9327:30;;4592:71:25;;;952:25:24;;;;4592:71:25;;19923:9327:30;;;4592:71:25;;;19923:9327:30;4592:71:25;;;;;;:::i;:::-;4784:212;;;;-1:-1:-1;4784:212:25;;5013:29;;;4421:647;5013:48;;;;5006:55;4421:647;:::o;5013:48::-;5046:15;;;;4421:647;:::o;5013:29::-;4592:71;-1:-1:-1;5024:18:25;;-1:-1:-1;5013:29:25;;;4421:647;-1:-1:-1;4421:647:25;4592:71;4421:647;19923:9327:30;;4592:71:25;;;952:25:24;;;;4592:71:25;;19923:9327:30;;;;4592:71:25;;;19923:9327:30;4592:71:25;;;;;;:::i;19923:9327:30:-;;;;;;;;-1:-1:-1;19923:9327:30;;-1:-1:-1;19923:9327:30;;;-1:-1:-1;19923:9327:30;:::o;2214:404:29:-;-1:-1:-1;19923:9327:30;;;4351:12:29;;;19923:9327:30;;;;;;2298:21:29;;19923:9327:30;;;;;;;;;;915:66:12;19923:9327:30;;;;;;;;;;:::i;:::-;915:66:12;;;;;;;;;;;;;433:22:8;;915:66:12;;;;;;;;19923:9327:30;;;-1:-1:-1;19923:9327:30;2493:12:29;19923:9327:30;;;-1:-1:-1;19923:9327:30;;;2547:11:29;:::o;19923:9327:30:-;;;;;;;;;;;;;-1:-1:-1;;19923:9327:30;;;;;;;;:::o;:::-;;:::i;:::-;;8243:3;19923:9327;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;19923:9327:30;;;;;;;;:::i;:::-;915:66:12;;;;;;;433:22:8;915:66:12;;;;19923:9327:30;:::o;:::-;;;;;;;;;;;;2786:1388:29;2989:12;;;19923:9327:30;;-1:-1:-1;19923:9327:30;;;;;-1:-1:-1;19923:9327:30;;3023:15:29;;;;3019:1149;3023:15;;;-1:-1:-1;;915:66:12;19923:9327:30;;;;;;;;;;;;;;;;;;;-1:-1:-1;3505:26:29;;;3977:15;3505:26;4069:19;3505:26;;3501:398;;3019:1149;3977:15;;;;:::i;:::-;19923:9327:30;;;;;;;;;;4069:19:29;915:66:12;2989:12:29;4103:11;:::o;3501:398::-;3693:38;:26;3571:22;;3805:23;3571:22;;;:::i;:::-;19923:9327:30;;;;;;3693:26:29;;;;;:::i;:::-;:38;;:::i;:::-;3805:23;19923:9327:30;;;;;;;;;;3805:23:29;19923:9327:30;3501:398:29;;;;;3019:1149;4145:12;;;;-1:-1:-1;4145:12:29;:::o;19923:9327:30:-;;;;;;;;;;;;;;;;;;-1:-1:-1;19923:9327:30;;-1:-1:-1;19923:9327:30;;-1:-1:-1;19923:9327:30;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;19923:9327:30;;;;;;;;;;8305:150:29;8398:50;;-1:-1:-1;;;;;19923:9327:30;;8398:50:29;:::i;19923:9327:30:-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;19923:9327:30;;;;:::o;:::-;4785:2;19923:9327;;;;;:::i;:::-;4785:2;19923:9327;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;-1:-1:-1;;19923:9327:30;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;4863:1;19923:9327;;;;;;;:::o;:::-;;;8249:1;19923:9327;;8249:1;19923:9327;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;:::o;:::-;;;26082:2;19923:9327;;26082:2;19923:9327;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;4925:1;19923:9327;;;;;;;:::o;:::-;;12609:2;19923:9327;;;;;;;:::o;:::-;;12956:2;19923:9327;;;;;;;:::o;:::-;;1357:1:21;19923:9327:30;;;;;;;:::o;:::-;26075:2;19923:9327;;;26075:2;19923:9327;;;:::o;:::-;26168:3;19923:9327;;;26168:3;19923:9327;;;:::o;3392:453::-;;19923:9327;;:::i;:::-;;;;;;;:::i;:::-;3563:1;19923:9327;;;;;;;;-1:-1:-1;3589:13:30;3604:5;3608:1;3604:5;;;;-1:-1:-1;3817:21:30;;-1:-1:-1;;;3392:453:30:o;3611:3::-;;;-1:-1:-1;;;;;;3755:33:30;19923:9327;3654:9;;;19923:9327;3692:31;19923:9327;;;;;;3692:31;;:::i;:::-;19923:9327;;3678:45;3685:3;;;:::i;:::-;3678:45;;;;;;:::i;:::-;;3770:16;3755:33;;:::i;:::-;19923:9327;;3737:51;3744:7;:3;;;:::i;:7::-;3737:51;;;;;;:::i;3611:3::-;3589:13;;3998:474;4089:7;;4085:48;;4142:11;4095:1;4163:8;;;4181:66;4188:6;;;4276:14;;;;:::i;:::-;4300:12;4322:6;4338:99;4345:6;;;4446:19;;;3998:474;:::o;4338:99::-;4234:2;4392;;19923:9327;;;;;;;;;;;;;;;-1:-1:-1;;19923:9327:30;;;;-1:-1:-1;;;;;;19923:9327:30;4367:38;;;19923:9327;4367:38;;:::i;:::-;;19923:9327;;4338:99;;4181:66;4210:5;;4234:2;4210:5;;:::i;:::-;19923:9327;;4181:66;;;4085:48;19923:9327;;;;;;:::i;:::-;;;;-1:-1:-1;;;19923:9327:30;;;;4112:10;:::o;19923:9327::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;19923:9327:30;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;19923:9327:30;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;19923:9327:30;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;19923:9327:30;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;19923:9327:30;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;19923:9327:30;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;19923:9327:30;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;19923:9327:30;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;19923:9327:30;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;19923:9327:30;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;19923:9327:30;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;19923:9327:30;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;19923:9327:30;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;19923:9327:30;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;19923:9327:30;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;19923:9327:30;;;;:::o;:::-;-1:-1:-1;;;19923:9327:30;;;;;:::o;5479:5905::-;;;;;5871:1678;;;;;19923:9327;;;;;;;5944:28;;;19923:9327;;:::i;:::-;;;;;;5976:25;5944:57;5976:25;;19923:9327;;;;;;:::i;:::-;5940:802;;19923:9327;;7773:35;7879:1;7773:35;;;;;;;19923:9327;;;;-1:-1:-1;;;19923:9327:30;;;;;;;7773:35;;19923:9327;7773:35;19923:9327;;7773:35;;;;;;;;:::i;:::-;19923:9327;7763:46;;7820:167;;;;19923:9327;;7862:18;7820:167;;8080:28;;;;19923:9327;;:::i;:::-;8080:28;;8242:32;8243:25;8249:19;;;:::i;:::-;8243:25;:::i;:::-;8272:2;19923:9327;;;;8242:32;9246:56;;;;;;;:::i;:::-;;;9412:57;;;10584:24;10042:25;9430:34;10668:26;9430:34;;:::i;:::-;9412:57;10042:25;:::i;:::-;10584:24;;:::i;10668:26::-;19923:9327;;;;;10857:26;:417;;10908:339;;;10947:129;19923:9327;;;;;10947:129;;;19923:9327;7773:35;10947:129;;19923:9327;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;19923:9327:30;;;;;;;10947:129;;;;;;;;:::i;:::-;10857:417;;19923:9327;;8399:2939;;;7773:35;8399:2939;;19923:9327;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;:::i;:::-;-1:-1:-1;;;19923:9327:30;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;:::i;:::-;-1:-1:-1;;;19923:9327:30;;;;-1:-1:-1;;;19923:9327:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;:::i;:::-;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;19923:9327:30;;;;8399:2939;;;;;;;;;;:::i;10908:339::-;11112:134;19923:9327;;;;;11112:134;;;19923:9327;7773:35;11112:134;;19923:9327;;;;;;;;;;;;;;;;;;11112:134;10908:339;;10857:417;19923:9327;;;;:::i;:::-;10857:417;;;9412:57;19923:9327;10668:26;10584:24;10042:25;19923:9327;;:::i;9246:56::-;19923:9327;;:::i;:::-;9246:56;;;8080:28;19923:9327;;:::i;:::-;8080:28;;;7820:167;19923:9327;7943:19;7820:167;;;5940:802;19923:9327;;6083:28;;19923:9327;;:::i;:::-;;;;;;6115:24;6083:56;6115:24;;19923:9327;;;;;;:::i;:::-;6079:663;5940:802;;6079:663;19923:9327;;6220:28;;19923:9327;;:::i;:::-;;;;;;6252:23;6220:55;6252:23;;19923:9327;;;;;;:::i;6216:526::-;19923:9327;;6360:28;;19923:9327;;:::i;:::-;;;;;;6392:26;6360:58;6392:26;;19923:9327;;;;;;:::i;6356:386::-;19923:9327;6501:28;;19923:9327;;:::i;:::-;;;;;;6533:26;6501:58;6533:26;;19923:9327;;;;:::i;6497:245::-;19923:9327;6697:28;19923:9327;6697:28;6675:51;6697:28;;:::i;:::-;19923:9327;;6675:51;;;;;19923:9327;;-1:-1:-1;;;19923:9327:30;;;;;5871:1678;19923:9327;;;;;;;6825:28;;;19923:9327;;:::i;:::-;;;;;;6857:25;6825:57;6857:25;;19923:9327;;;;;;:::i;6821:718::-;19923:9327;;6948:28;;19923:9327;;:::i;:::-;;;;;;6980:24;6948:56;6980:24;;19923:9327;;;;;;:::i;6944:595::-;19923:9327;;7070:28;;19923:9327;;:::i;:::-;;;;;;7102:23;7070:55;7102:23;;19923:9327;;;;;;:::i;7066:473::-;19923:9327;;7191:28;;19923:9327;;:::i;:::-;;;;;;7223:26;7191:58;7223:26;;19923:9327;;;;;;:::i;7187:352::-;19923:9327;7315:28;;19923:9327;;:::i;:::-;;;;;;7347:26;7315:58;7347:26;;19923:9327;;;;:::i;:::-;;;;;;;;;;;;:::o;11458:684::-;19923:9327;;;11584:541;;;19923:9327;;;;;;;;;;;;;;;;;;;;;;;;;11584:541;19923:9327;;;;;;;;;;:::i;:::-;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;19923:9327:30;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;12229:1460::-;19923:9327;;:::i;:::-;;;:::i;:::-;12493:11;-1:-1:-1;12514:3:30;19923:9327;;;12506:6;19923:9327;12506:6;;;;;12533:79;12514:3;19923:9327;12533:79;12549:63;12555:56;:51;19923:9327;;;12573:25;;;;;;;;;19923:9327;;;;;;;;;;;;;;;;;;;;12573:25;19923:9327;12563:36;;12603:3;19923:9327;;;;12555:51;:56;:::i;:::-;19923:9327;;;;12549:63;12533:79;;;:::i;:::-;19923:9327;;;;;;12533:79;12514:3;:::i;:::-;12493:11;;12506:6;;;-1:-1:-1;12705:3:30;19923:9327;;;;12697:6;19923:9327;12697:6;;;;;12729:11;-1:-1:-1;12724:884:30;12742:5;12746:1;19923:9327;;;12742:5;;;12705:3;;;;;;:::i;:::-;12684:11;;12749:3;19923:9327;;;;;;;;12573:25;;;;;;12809:28;;;;;;;;;;;19923:9327;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12809:28;;19923:9327;;;12809:28;;;;;;;;;;:::i;:::-;19923:9327;12799:39;;12603:3;19923:9327;;12791:59;;;:::i;:::-;19923:9327;;;;12910:36;;;19923:9327;;;-1:-1:-1;;;;;;19923:9327:30;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;12910:36;19923:9327;;;;12910:36;;;;;;;;;;:::i;:::-;19923:9327;12900:47;;12609:2;19923:9327;;12892:66;;;:::i;:::-;19923:9327;;;;13074:37;;;19923:9327;;;-1:-1:-1;;;;;;19923:9327:30;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;13074:37;19923:9327;;;;13074:37;;;;;;;;;;:::i;:::-;19923:9327;13064:48;;13116:1;19923:9327;;;;13292:13;;;;:::i;:::-;19923:9327;13275:32;;19923:9327;;13275:32;:::i;:::-;19923:9327;;13318:23;;;:::i;:::-;19923:9327;;13418:24;;;:::i;:::-;19923:9327;;;;;;;-1:-1:-1;;;;;;19923:9327:30;13483:34;;;19923:9327;;;;;;;;;;13483:34;;;;;;;;;;:::i;:::-;19923:9327;13189:386;;;;;19923:9327;;;:::i;:::-;-1:-1:-1;;;19923:9327:30;;;;;;;:::i;:::-;-1:-1:-1;;;19923:9327:30;;;;;;;:::i;:::-;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;:::i;:::-;-1:-1:-1;;;19923:9327:30;;;;;;;:::i;:::-;-1:-1:-1;;;19923:9327:30;;;;13189:386;;;;;;;;;;:::i;:::-;12749:3;;;;:::i;:::-;12729:11;;;;12697:6;;;;;19923:9327;12697:6;;13650:31;12697:6;19923:9327;;;13650:31;;;12573:25;13650:31;;19923:9327;;:::i;:::-;;:::i;13844:1120::-;19923:9327;;;;13979:744;;;19923:9327;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;13844:1120;14785:119;19923:9327;;;;;;;;;;:::i;:::-;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;13979:744;;19923:9327;;13979:744;;;;;;;;:::i;:::-;14865:25;;;:::i;:::-;19923:9327;;;13979:744;14785:119;;19923:9327;;;;;;;;;;14785:119;;;;;;;;:::i;:::-;14933:24;13844:1120;:::o;19923:9327::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;505:3382:21:-;19923:9327:30;;795:16:21;791:31;;19923:9327:30;;:::i;:::-;1326:39:21;1337:27;1342:21;1343:15;19923:9327:30;;1343:15:21;:::i;:::-;1362:1;19923:9327:30;;;;1342:21:21;1337:27;:::i;:::-;1326:39;:::i;:::-;1419:2438;;;;;;;;;;;;;;;;;810:1;1419:2438;;;;;;;;-1:-1:-1;;;1419:2438:21;;1362:1;1419:2438;;;1362:1;;;;1419:2438;;;;3867:13;505:3382;:::o;1419:2438::-;;;-1:-1:-1;;1419:2438:21;;505:3382;:::o;1419:2438::-;-1:-1:-1;1419:2438:21;;;-1:-1:-1;;1419:2438:21;;;-1:-1:-1;;1419:2438:21;;505:3382;:::o;1419:2438::-;1362:1;;;1337;1362;;1419:2438;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1357:1;1419:2438;;;;;;;;;;;;;;;;;;791:31;19923:9327:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;19923:9327:30;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;19923:9327:30;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;19923:9327:30;;;;:::o;15439:2564::-;;;;16213:36;16059:28;15795:195;15439:2564;;19923:9327;15439:2564;;;;;;;;;;15795:195;:::i;:::-;16059:28;;:::i;:::-;16213:36;;:::i;:::-;19923:9327;;-1:-1:-1;;;16184:66:30;;;19923:9327;;;;;;;;;;16184:66;19923:9327;16184:66;19923:9327;;16184:66;;;;;;;;:::i;:::-;16464:20;;;:::i;:::-;16543:21;;;;:::i;:::-;16582:46;;;;;19923:9327;;:::i;:::-;;;16309:333;;;16184:66;16309:333;;19923:9327;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;19923:9327:30;;;;;;;:::i;:::-;-1:-1:-1;;;19923:9327:30;;;;;;;:::i;:::-;;;;:::i;:::-;16309:333;;;;;;;;;;:::i;:::-;17061:25;;;:::i;:::-;17257:20;;;;:::i;:::-;17346:21;;;;:::i;:::-;17505:23;;;;19923:9327;;:::i;:::-;17505:23;;19923:9327;;;16184:66;16735:923;;19923:9327;;;;;;;;;;:::i;:::-;-1:-1:-1;;;19923:9327:30;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;19923:9327:30;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;19923:9327:30;;;;-1:-1:-1;;;19923:9327:30;;;;;;;:::i;:::-;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;19923:9327:30;;;;-1:-1:-1;;;19923:9327:30;;;;16735:923;;;;;;;;;;:::i;:::-;17913:18;;;:::i;:::-;19923:9327;;;16184:66;17830:115;;19923:9327;;;;;;;;;;;:::i;:::-;17830:115;;;;;;;;;;:::i;17505:23::-;19923:9327;;:::i;:::-;17505:23;;;16582:46;19923:9327;;:::i;:::-;16582:46;;447:696:23;569:17;-1:-1:-1;10276:8:27;;10267:17;;;;10263:103;;447:696:23;10392:8:27;;10383:17;;;;10379:103;;447:696:23;10508:8:27;;10499:17;;;;10495:103;;447:696:23;10624:7:27;;10615:16;;;;10611:100;;447:696:23;10737:7:27;;10728:16;;;;10724:100;;447:696:23;10841:16:27;10850:7;10841:16;;;10837:100;;447:696:23;10963:7:27;10954:16;;;;10950:66;;447:696:23;589:1;19923:9327:30;;731:76:23;627:18;19923:9327:30;;;627:18:23;:::i;:::-;659:11;731:76;;;820:280;589:1;;;820:280;1113:13;;;;447:696;:::o;820:280::-;-1:-1:-1;;19923:9327:30;;915:66:12;;-1:-1:-1;;;925:93:23;;;;19923:9327:30;925:93:23;19923:9327:30;1035:11:23;;1068:10;1064:21;;820:280;;;;;1064:21;1080:5;;10950:66:27;19923:9327:30;11000:1:27;19923:9327:30;10950:66:27;;;10837:100;19923:9327:30;;10850:7:27;10921:1;19923:9327:30;;;;10837:100:27;;;10724;10808:1;19923:9327:30;;;;;;10724:100:27;;;;10611;10695:1;19923:9327:30;;;;;;10611:100:27;;;;10495:103;10581:2;19923:9327:30;;;;;;10495:103:27;;;;10379;10465:2;19923:9327:30;;;;;;10379:103:27;;;;10263;10349:2;;-1:-1:-1;19923:9327:30;;;-1:-1:-1;10263:103:27;;;19923:9327:30;;;;:::o;:::-;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;19923:9327:30;;;;;;;;;;;;-1:-1:-1;;;19923:9327:30;;;;;;;2336:287:20;1759:1;2468:7;19923:9327:30;2468:19:20;1759:1;;;2468:7;19923:9327:30;2336:287:20:o;1759:1::-;19923:9327:30;;-1:-1:-1;;;1759:1:20;;;;;;;;;;;19923:9327:30;1759:1:20;19923:9327:30;;;1759:1:20;;;;19923:9327:30;;;;;;;:::i;:::-;;;;-1:-1:-1;;;19923:9327:30;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;19923:9327:30;;;;:::o;1190:256::-;19923:9327;;-1:-1:-1;;;1278:57:30;;-1:-1:-1;;;1278:57:30;;;19923:9327;;1278:57;;19923:9327;;;;;;-1:-1:-1;;;;;19923:9327:30;1278:57;;-1:-1:-1;;1278:57:30;;;1190:256;-1:-1:-1;1274:166:30;;1417:12;-1:-1:-1;1417:12:30;:::o;1278:57::-;;;;;;;;;;;;;;;;;:::i;:::-;;;948:10;;;;;;;;;:::i;:::-;1278:57;;;;;;;-1:-1:-1;1278:57:30;;1488:1023;1576:28;1577:27;;;:::i;1576:28::-;1572:68;;19923:9327;;-1:-1:-1;;;1662:45:30;;1002:66;1662:45;;;19923:9327;;-1:-1:-1;;;;19923:9327:30;;;;;;-1:-1:-1;;;;;19923:9327:30;1662:45;;;;;;;;1488:1023;-1:-1:-1;1658:847:30;;19923:9327;;;;:::i;1658:847::-;19923:9327;;1758:19;1754:677;;1658:847;19923:9327;;;;;:::i;1754:677::-;19923:9327;2025:19;;;:39;;;1754:677;2021:396;1754:677;2021:396;2183:30;2193:19;19923:9327;;2193:19;:::i;2183:30::-;2240:10;;;19923:9327;;;2375:23;;;;;:::o;2273:3::-;19923:9327;;2252:19;;;;;2320:11;;;2273:3;2320:11;;;:::i;:::-;2304:27;2313:3;;;:::i;:::-;2304:27;;;;;;:::i;2273:3::-;2240:10;;;2025:39;-1:-1:-1;;;;;;;2048:11:30;;;;:::i;:::-;19923:9327;2048:16;2025:39;;1662:45;;;;;;;;;;;;;;:::i;:::-;;;;;19923:9327;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;19923:9327:30;;:::o;:::-;;;;;;:::i;:::-;-1:-1:-1;;;;;19923:9327:30;;:::o;:::-;;;;;;:::i;:::-;-1:-1:-1;;;;;19923:9327:30;;:::o;:::-;;;;;;:::i;:::-;-1:-1:-1;;;;;19923:9327:30;;:::o;:::-;;;;;;:::i;:::-;-1:-1:-1;;;;;19923:9327:30;;:::o;25735:1089::-;;26787:30;25735:1089;26354:1;19923:9327;25735:1089;25900:129;19923:9327;;;26007:14;26019:1;26007:14;19923:9327;;;;;;25963:14;25925;25963;19923:9327;;;;;;25925:14;25937:1;25925:14;19923:9327;;;;25918:111;25900:15;;19923:9327;;25900:5;19923:9327;;;;;;;25900:15;19923:9327;;;;;;;;;;;;25900:129;26075:50;26081:43;26082:35;26101:14;26113:1;26101:14;26082:35;:::i;:::-;19923:9327;;;;;26081:43;26075:50;:::i;:::-;26052:20;;19923:9327;;26052:10;19923:9327;;;;;;;26052:20;19923:9327;26168:82;26175:74;26176:66;26184:24;:20;;19923:9327;;26052:10;19923:9327;;;;;;;26184:20;19923:9327;;;;;26184:24;26226:14;26207:1;26226:14;26176:66;;:::i;26175:74::-;26168:82;:::i;:::-;26144:21;;19923:9327;;26144:11;19923:9327;;;;;;;26144:21;19923:9327;26342:14;;19923:9327;26376:14;;;26392:21;19923:9327;26392:21;;19923:9327;;26634:11;19923:9327;;;;;;;26392:21;19923:9327;:::i;:::-;26709:21;;19923:9327;;26709:11;19923:9327;;;;;;;;;;:::i;:::-;26787:30;;:::i;26372:294::-;25925:14;26442;;25925;;26458:21;19923:9327;26458:21;;19923:9327;;26634:11;19923:9327;;;;;;;26458:21;19923:9327;:::i;:::-;26372:294;;26438:228;26019:1;26507:14;;26019:1;;26523:21;19923:9327;26523:21;;19923:9327;;26634:11;19923:9327;;;;;;;26523:21;19923:9327;:::i;26503:163::-;26113:1;26571:14;26113:1;;19923:9327;26587:21;;19923:9327;;26634:11;19923:9327;;;;;;;26587:21;19923:9327;:::i;26567:99::-;19923:9327;26634:21;;19923:9327;;26634:11;19923:9327;;;;;;;26634:21;19923:9327;:::i;23582:1117:18:-;;;;;-1:-1:-1;;;;;19923:9327:30;;23726:16:18;;23722:83;;-1:-1:-1;19923:9327:30;;;22260:12:18;19923:9327:30;;;;;;-1:-1:-1;;;;;19923:9327:30;23869:87:18;;-1:-1:-1;19923:9327:30;;;22260:12:18;19923:9327:30;;;;;;-1:-1:-1;;;;;19923:9327:30;24121:87:18;;19923:9327:30;24683:8:18;19923:9327:30;;24518:123:18;19923:9327:30;24248:17:18;;;19923:9327:30;24248:17:18;:::i;:::-;;19923:9327:30;;24248:17:18;-1:-1:-1;;;;;19923:9327:30;;;;;;29313:12:18;19923:9327:30;;;;;6012:23:29;;24276:16:18;;6012:23:29;:::i;:::-;;24315:26:18;:21;;;19923:9327:30;;29396:12:18;19923:9327:30;;;;;;;24315:26:18;23740:1;24357:58;19923:9327:30;;24366:10:18;24357:58;24366:10;;24357:58;;:::i;:::-;;;;24518:123;19923:9327:30;;24366:10:18;;;;;24518:123;;;;:::i;:::-;24683:8;:::i;24121:87::-;19923:9327:30;;-1:-1:-1;;;24164:33:18;;;;;19923:9327:30;;;;;16282:48:18;1310:66:12;;;;;;;19923:9327:30;;1310:66:12;;;;;;;;;;;;;19923:9327:30;;;;1310:66:12;;;;;;19923:9327:30;;;:::i;:::-;;;1310:66:12;;;;;;;;;:::i;27909:1339:30:-;;1310:66:12;28119:29:30;;28115:109;;28302:20;28794:195;28302:20;19923:9327;;;28302:20;29089:113;28302:20;19923:9327;;26634:11;19923:9327;;;;;;;28302:20;19923:9327;;;;;;;:::i;:::-;28352:14;;19923:9327;;25900:5;19923:9327;;;;;;;28352:14;1310:66:12;19923:9327:30;;28402:19;;19923:9327;;26052:10;19923:9327;;;;;;;28402:19;19923:9327;28458:20;;;19923:9327;;26144:11;19923:9327;;;;;;;28458:20;19923:9327;28513:20;19923:9327;28513:20;;19923:9327;;26709:11;19923:9327;;;;;;;28513:20;19923:9327;;;;;;;:::i;:::-;;;;:::i;:::-;28660:25;28617:21;;;:::i;:::-;28660:25;:::i;:::-;28794:195;;:::i;:::-;19923:9327;;;;;;29150:20;29089:113;:::i;28115:109::-;30999:30:18;;;:::i;:::-;19923:9327:30;;;;;30989:41:18;-1:-1:-1;19923:9327:30;30982:6:18;19923:9327:30;;;;;-1:-1:-1;19923:9327:30;;;;;;;;:::i"},"methodIdentifiers":{"MAX_MINTABLE()":"3f879faf","MAX_SUPPLY()":"32cb6b0c","PRICE()":"8d859f3e","authorizeOperator(address,bytes32,bytes)":"86a10ddd","balanceOf(address)":"70a08231","batchCalls(bytes[])":"6963d438","bytes32ToHexString(bytes32)":"c68b3787","chubbiness(bytes32)":"6643a686","color(bytes32)":"1ead90b0","generateCollectionSVG()":"3be699f9","generateLoogieSVG(bytes32,string,bytes3,uint256,uint256,string,bool)":"ad30ddbf","getCollectionMetadataBytes(uint256)":"8cda5103","getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","getDataBatchForTokenIds(bytes32[],bytes32[])":"1d26fce6","getDataForTokenId(bytes32,bytes32)":"16e023b3","getMetadataBytes(bytes32,string,bytes3,uint256,uint256,string,bool)":"8528247f","getOperatorsOf(bytes32)":"49a6078d","isOperatorFor(address,bytes32)":"2a3654a4","loogieTypes(bytes32)":"c65eb180","mintItem()":"eb93406b","mintItemWithUsername(string)":"1ef0352d","mintedPerAddress(address)":"d445b978","mouthLength(bytes32)":"017c96b8","owner()":"8da5cb5b","publicMintSet()":"5a9c2b1c","recipient()":"66d003ac","renounceOwnership()":"715018a6","revokeOperator(address,bytes32,bool,bytes)":"db8c9663","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])":"be9f0e6f","setDataForTokenId(bytes32,bytes32,bytes)":"d6c1407c","setMintStatus(bool)":"1f85e3ca","setUsername(bytes32,string)":"f3ba2059","supportsInterface(bytes4)":"01ffc9a7","toColorHexString(bytes3)":"76799136","tokenIdsOf(address)":"a3b261f2","tokenOwnerOf(bytes32)":"217b2270","tokenSupplyCap()":"52058d8a","totalSupply()":"18160ddd","transfer(address,address,bytes32,bool,bytes)":"511b6952","transferBatch(address[],address[],bytes32[],bool[],bytes[])":"7e87632c","transferOwnership(address)":"f2fde38b","uint2str(uint256)":"f76f950e","upUsernames(bytes32)":"472dfcfb","withdraw(address)":"51cff8d9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_MsgValueDisallowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"storedData\",\"type\":\"bytes\"}],\"name\":\"InvalidExtensionAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"InvalidFunctionSelector\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenTypeNotEditable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callIndex\",\"type\":\"uint256\"}],\"name\":\"LSP8BatchCallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotUseAddressZeroAsOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8InvalidTransferBatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistentTokenId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistingOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverContractMissingLSP1Interface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverIsEOA\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8OperatorAlreadyAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8RevokeOperatorNotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenContractCannotHoldValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8TokenIdAlreadyMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdFormatNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdsDataEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdsDataLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenOwnerCannotBeOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"LSP8TokenOwnerChanged\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"}],\"name\":\"NoExtensionFoundForFunctionSelector\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableCannotSetZeroAddressAsOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorAuthorizationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"notified\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"TokenIdDataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"}],\"name\":\"UsernameUpdated\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MAX_MINTABLE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"batchCalls\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"bytes32ToHexString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"chubbiness\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"color\",\"outputs\":[{\"internalType\":\"bytes3\",\"name\":\"\",\"type\":\"bytes3\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"generateCollectionSVG\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"svg\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"encodedSvg\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"loogieType\",\"type\":\"string\"},{\"internalType\":\"bytes3\",\"name\":\"colorValue\",\"type\":\"bytes3\"},{\"internalType\":\"uint256\",\"name\":\"chubbinessValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mouthLengthValue\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isUP\",\"type\":\"bool\"}],\"name\":\"generateLoogieSVG\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"getCollectionMetadataBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"raw\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatchForTokenIds\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getDataForTokenId\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"loogieTypeValue\",\"type\":\"string\"},{\"internalType\":\"bytes3\",\"name\":\"colorBytes\",\"type\":\"bytes3\"},{\"internalType\":\"uint256\",\"name\":\"chubbiness\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mouthLength\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isUP\",\"type\":\"bool\"}],\"name\":\"getMetadataBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"raw\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"loogieTypes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintItem\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_username\",\"type\":\"string\"}],\"name\":\"mintItemWithUsername\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mintedPerAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"mouthLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicMintSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recipient\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"notify\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatchForTokenIds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setDataForTokenId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_publicMintSet\",\"type\":\"bool\"}],\"name\":\"setMintStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"}],\"name\":\"setUsername\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes3\",\"name\":\"_color\",\"type\":\"bytes3\"}],\"name\":\"toColorHexString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokenIdsOf\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"tokenOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenSupplyCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"tokenId\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_i\",\"type\":\"uint256\"}],\"name\":\"uint2str\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_uintAsString\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"upUsernames\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"ERC725Y_MsgValueDisallowed()\":[{\"details\":\"Reverts when sending value to the {setData} or {setDataBatch} function.\"}],\"InvalidExtensionAddress(bytes)\":[{\"details\":\"reverts when the bytes retrieved from the LSP17 data key is not a valid address (not 20 bytes)\"}],\"InvalidFunctionSelector(bytes)\":[{\"details\":\"reverts when the contract is called with a function selector not valid (less than 4 bytes of data)\"}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized. The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized. The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenTypeNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized. The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP8BatchCallFailed(uint256)\":[{\"details\":\"Reverts when a batch call failed.\"}],\"LSP8CannotSendToAddressZero()\":[{\"details\":\"Reverts when trying to send token to the zero address.\"}],\"LSP8CannotUseAddressZeroAsOperator()\":[{\"details\":\"Reverts when trying to set the zero address as an operator.\"}],\"LSP8InvalidTransferBatch()\":[{\"details\":\"Reverts when the parameters used for `transferBatch` have different lengths.\"}],\"LSP8NonExistentTokenId(bytes32)\":[{\"details\":\"Reverts when `tokenId` has not been minted.\"}],\"LSP8NonExistingOperator(address,bytes32)\":[{\"details\":\"Reverts when `operator` is not an operator for the `tokenId`.\"}],\"LSP8NotTokenOperator(bytes32,address)\":[{\"details\":\"Reverts when `caller` is not an allowed operator for `tokenId`.\"}],\"LSP8NotTokenOwner(address,bytes32,address)\":[{\"details\":\"Reverts when `caller` is not the `tokenOwner` of the `tokenId`.\"}],\"LSP8NotifyTokenReceiverContractMissingLSP1Interface(address)\":[{\"details\":\"Reverts if the `tokenReceiver` does not implement LSP1 when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8NotifyTokenReceiverIsEOA(address)\":[{\"details\":\"Reverts if the `tokenReceiver` is an EOA when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8OperatorAlreadyAuthorized(address,bytes32)\":[{\"details\":\"Reverts when `operator` is already authorized for the `tokenId`.\"}],\"LSP8RevokeOperatorNotAuthorized(address,address,bytes32)\":[{\"details\":\"Reverts when the call to revoke operator is not authorized.\"}],\"LSP8TokenContractCannotHoldValue()\":[{\"details\":\"Error occurs when sending native tokens to the LSP8 contract without sending any data. E.g. Sending value without passing a bytes4 function selector to call a LSP17 Extension.\"}],\"LSP8TokenIdAlreadyMinted(bytes32)\":[{\"details\":\"Reverts when `tokenId` has already been minted.\"}],\"LSP8TokenIdFormatNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP8TokenIdFormat` after the identifiable digital asset contract has been deployed. The `LSP8TokenIdFormat` data key is located inside the ERC725Y Data key-value store of the identifiable digital asset contract. It can be set only once inside the constructor/initializer when the identifiable digital asset contract is being deployed.\"}],\"LSP8TokenIdsDataEmptyArray()\":[{\"details\":\"Reverts when empty arrays is passed to the function\"}],\"LSP8TokenIdsDataLengthMismatch()\":[{\"details\":\"Reverts when the length of the token IDs data arrays is not equal\"}],\"LSP8TokenOwnerCannotBeOperator()\":[{\"details\":\"Reverts when trying to authorize or revoke the token's owner as an operator.\"}],\"LSP8TokenOwnerChanged(bytes32,address,address)\":[{\"details\":\"Reverts when the token owner changed inside the {_beforeTokenTransfer} hook.\"}],\"NoExtensionFoundForFunctionSelector(bytes4)\":[{\"details\":\"reverts when there is no extension for the function selector being called with\"}],\"OwnableCannotSetZeroAddressAsOwner()\":[{\"details\":\"Reverts when trying to set `address(0)` as the contract owner when deploying the contract or initializing it.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}},\"OperatorAuthorizationChanged(address,address,bytes32,bytes)\":{\"details\":\"Emitted when `tokenOwner` enables `operator` to transfer or burn the `tokenId`.\",\"params\":{\"operator\":\"The address authorized as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` address has access on behalf of `tokenOwner`.\",\"tokenOwner\":\"The owner of the `tokenId`.\"}},\"OperatorRevoked(address,address,bytes32,bool,bytes)\":{\"details\":\"Emitted when `tokenOwner` disables `operator` to transfer or burn `tokenId` on its behalf.\",\"params\":{\"notified\":\"Bool indicating whether the operator has been notified or not\",\"operator\":\"The address revoked from the operator array ({getOperatorsOf}).\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` is revoked from operating on.\",\"tokenOwner\":\"The owner of the `tokenId`.\"}},\"TokenIdDataChanged(bytes32,bytes32,bytes)\":{\"details\":\"Emitted when setting data for `tokenId`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\",\"tokenId\":\"The tokenId which data is set for.\"}},\"Transfer(address,address,address,bytes32,bool,bytes)\":{\"details\":\"Emitted when `tokenId` token is transferred from the `from` to the `to` address.\",\"params\":{\"data\":\"Any additional data the caller included by the caller during the transfer, and sent in the hooks to the `from` and `to` addresses.\",\"force\":\"If the token transfer enforces the `to` recipient address to be a contract that implements the LSP1 standard or not.\",\"from\":\"The previous owner of the `tokenId`\",\"operator\":\"The address of operator that sent the `tokenId`\",\"to\":\"The new owner of `tokenId`\",\"tokenId\":\"The tokenId that was transferred\"}}},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address,bytes32,bytes)\":{\"details\":\"Allow an `operator` address to transfer or burn a specific `tokenId` on behalf of its token owner. See {isOperatorFor}. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"operator\":\"The address to authorize as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The token ID operator has access to.\"}},\"balanceOf(address)\":{\"details\":\"Get the number of token IDs owned by `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The address to query     *\"},\"returns\":{\"_0\":\"The total number of token IDs that `tokenOwner` owns.\"}},\"batchCalls(bytes[])\":{\"custom:info\":\"It's not possible to send value along the functions call due to the use of `delegatecall`.\",\"details\":\"Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\",\"params\":{\"data\":\"An array of ABI encoded function calls to be called on the contract.\"},\"returns\":{\"results\":\"An array of abi-encoded data returned by the functions executed.\"}},\"bytes32ToHexString(bytes32)\":{\"details\":\"Convert bytes32 to string\",\"params\":{\"value\":\"The bytes32 to convert\"},\"returns\":{\"_0\":\"string The hex string\"}},\"constructor\":{\"details\":\"Constructor\"},\"generateCollectionSVG()\":{\"details\":\"Generate collection SVG\",\"returns\":{\"encodedSvg\":\"Base64 encoded SVG with data URI\",\"svg\":\"The SVG string\"}},\"generateLoogieSVG(bytes32,string,bytes3,uint256,uint256,string,bool)\":{\"details\":\"Generate Loogie SVG based on attributes\",\"params\":{\"chubbinessValue\":\"The chubbiness value\",\"colorValue\":\"The color value\",\"isUP\":\"Whether the owner is a Universal Profile\",\"loogieType\":\"The loogie type\",\"mouthLengthValue\":\"The mouth length value\",\"tokenId\":\"The token ID for randomization\",\"username\":\"The username to display\"},\"returns\":{\"_0\":\"string The complete SVG\"}},\"getCollectionMetadataBytes(uint256)\":{\"details\":\"Get collection metadata in LUKSO LSP4 format\",\"params\":{\"limit\":\"The token supply limit\"},\"returns\":{\"encoded\":\"Encoded metadata bytes\",\"raw\":\"Raw metadata bytes\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"tokenIds\":\"An array of token IDs.\"},\"returns\":{\"dataValues\":\"An array of data values for each pair of `tokenId` and `dataKey`.\"}},\"getDataForTokenId(bytes32,bytes32)\":{\"params\":{\"dataKey\":\"The key for the data to retrieve.\",\"tokenId\":\"The unique identifier for a token.\"},\"returns\":{\"dataValue\":\"The data value associated with the given `tokenId` and `dataKey`.\"}},\"getMetadataBytes(bytes32,string,bytes3,uint256,uint256,string,bool)\":{\"details\":\"Get token metadata in LUKSO LSP4 format\",\"params\":{\"chubbiness\":\"The chubbiness value\",\"colorBytes\":\"The color bytes\",\"isUP\":\"Whether the owner is a Universal Profile\",\"loogieTypeValue\":\"The loogie type\",\"mouthLength\":\"The mouth length value\",\"tokenId\":\"The token ID\",\"username\":\"The username\"},\"returns\":{\"encoded\":\"Encoded metadata bytes\",\"raw\":\"Raw metadata bytes\"}},\"getOperatorsOf(bytes32)\":{\"details\":\"Returns all `operator` addresses that are allowed to transfer or burn a specific `tokenId` on behalf of its owner.\",\"params\":{\"tokenId\":\"The token ID to get the operators for.\"},\"returns\":{\"_0\":\"An array of operators allowed to transfer or burn a specific `tokenId`. Requirements - `tokenId` must exist.\"}},\"isOperatorFor(address,bytes32)\":{\"details\":\"Returns whether `operator` address is an operator for a given `tokenId`.\",\"params\":{\"operator\":\"The address to query operator status for.\",\"tokenId\":\"The token ID to check if `operator` is allowed to operate on.\"},\"returns\":{\"_0\":\"`true` if `operator` is an operator for `tokenId`, `false` otherwise.\"}},\"mintItem()\":{\"details\":\"Mint with auto-detected username for UP\"},\"mintItemWithUsername(string)\":{\"details\":\"Mint with custom username\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"revokeOperator(address,bytes32,bool,bytes)\":{\"details\":\"Remove access of `operator` for a given `tokenId`, disallowing it to transfer `tokenId` on behalf of its owner. See also {isOperatorFor}.\",\"params\":{\"notify\":\"Boolean indicating whether to notify the operator or not\",\"operator\":\"The address to revoke as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` is revoked from operating on.\"}},\"setData(bytes32,bytes)\":{\"custom:events\":\"{DataChanged} event.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner}.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**. If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"{DataChanged} event **for each data key/value pair set**.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, the function is not intended to receive value (= native tokens). **An additional check has been implemented to ensure that `msg.value` sent was equal to 0**. If you want to allow this function to receive value in your inheriting contract, this function can be overriden to remove this check.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"dataValues\":\"An array of values to set for the given data keys.\",\"tokenIds\":\"An array of token IDs.\"}},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"params\":{\"dataKey\":\"The key for the data to set.\",\"dataValue\":\"The value to set for the given data key.\",\"tokenId\":\"The unique identifier for a token.\"}},\"setMintStatus(bool)\":{\"details\":\"Set minting status\"},\"setUsername(bytes32,string)\":{\"details\":\"Set username for token\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"toColorHexString(bytes3)\":{\"details\":\"Convert bytes3 to hex string\",\"params\":{\"_color\":\"The color bytes\"},\"returns\":{\"_0\":\"string The hex string\"}},\"tokenIdsOf(address)\":{\"details\":\"Returns the list of token IDs that the `tokenOwner` address owns.\",\"params\":{\"tokenOwner\":\"The address that we want to get the list of token IDs for.\"},\"returns\":{\"_0\":\"An array of `bytes32[] tokenIds` owned by `tokenOwner`.\"}},\"tokenOwnerOf(bytes32)\":{\"details\":\"Returns the address that owns a given `tokenId`.\",\"params\":{\"tokenId\":\"The token ID to query the owner for.\"},\"returns\":{\"_0\":\"The owner address of the given `tokenId`.\"}},\"tokenSupplyCap()\":{\"details\":\"Get token supply cap\"},\"totalSupply()\":{\"details\":\"Get total supply\"},\"transfer(address,address,bytes32,bool,bytes)\":{\"details\":\"Transfer a given `tokenId` token from the `from` address to the `to` address. If operators are set for a specific `tokenId`, all the operators are revoked after the tokenId have been transferred. The `force` parameter MUST be set to `true` when transferring tokens to Externally Owned Accounts (EOAs) or contracts that do not implement the LSP1 standard.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\",\"force\":\"When set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\",\"from\":\"The address that owns the given `tokenId`.\",\"to\":\"The address that will receive the `tokenId`.\",\"tokenId\":\"The token ID to transfer.\"}},\"transferBatch(address[],address[],bytes32[],bool[],bytes[])\":{\"details\":\"Transfers multiple tokens at once based on the arrays of `from`, `to` and `tokenId`. If any transfer fails, the whole call will revert.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks to the `from` and `to` addresses.\",\"force\":\"When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard and not revert.\",\"from\":\"An array of sending addresses.\",\"to\":\"An array of recipient addresses.\",\"tokenId\":\"An array of token IDs to transfer.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uint2str(uint256)\":{\"details\":\"Convert uint to string\",\"params\":{\"_i\":\"The uint to convert\"},\"returns\":{\"_uintAsString\":\"The string representation\"}},\"withdraw(address)\":{\"details\":\"Withdraw funds\"}},\"title\":\"LSP8LoogiesEnhanced\",\"version\":1},\"userdoc\":{\"errors\":{\"LSP8BatchCallFailed(uint256)\":[{\"notice\":\"Batch call failed.\"}],\"LSP8TokenContractCannotHoldValue()\":[{\"notice\":\"LSP8 contract cannot receive native tokens.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"batchCalls(bytes[])\":{\"notice\":\"Executing the following batch of abi-encoded function calls on the contract: `data`.\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"notice\":\"Retrieves data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"getDataForTokenId(bytes32,bytes32)\":{\"notice\":\"Retrieves data for a specific `tokenId` and `dataKey`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"notice\":\"Sets data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"notice\":\"Sets data for a specific `tokenId` and `dataKey`.\"}},\"notice\":\"An LSP8 NFT contract for LuksoLoogies with improved SVG rendering and metadata\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/standalone/LSP8LoogiesEnhanced.sol\":\"LSP8LoogiesEnhanced\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@erc725/smart-contracts-v8/contracts/ERC725Y.sol\":{\"keccak256\":\"0x209d6b52eb0d5dcb8c180773dd67e507f603c98ede7e5a64457752159a52ad3d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dbfa427c80ba998d30c721fb41795502d19aa09acb8e1f59f6982d080f029692\",\"dweb:/ipfs/QmPQXeYEU7kaDtskZ1ha2umRuGSrFTfXfpyiGgBSQfwZBn\"]},\"@erc725/smart-contracts-v8/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts-v8/contracts/errors.sol\":{\"keccak256\":\"0x198fece17fcfec61d40d3453ebbaa49760968ea8caa128dd5314a12b98ecec66\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5e705131b03cf4167ff312e7ebaa679cf56c22b01de518dfa4d2163d7e1ddb8b\",\"dweb:/ipfs/QmbH8q7MgrR7fJm1QEmYoKcnZCxWwejt4Jum2DUYmLJAGA\"]},\"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x943d0f67d6455cfb1bed5d1fb77995df0b202ecdbb028fa0e85bc26bcd3219a5\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c3b8b0daa2fed9c0513444120b87beec7c2b102eadbcbeccae73ece67819a658\",\"dweb:/ipfs/QmaSb9Xhma6UwhK1FosJtbP8EkBn8i9PTcLKg5FU1VAJSH\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x72dd4f342e059edd246032d2cd2e45707453ceb27c187161e31af345d058dced\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9a8fb9c285da565984f6a168ecee00a647b988a829c218813e9d2e007b28b48d\",\"dweb:/ipfs/QmbXznWjhZPLXWF6NJAyVKD8ZReSWZaJyRdYZMLWaQHZWa\"]},\"@lukso/lsp1-contracts/contracts/LSP1Constants.sol\":{\"keccak256\":\"0x0f87fc38243fc70316e22814f5a79d9c0770a39f64077cbc6fb5fddfa1d4c23c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7d83f054b71dfa5ca48a9a811e6a985ff6b38a9e5f4c220ea2ec3a322cce7cf\",\"dweb:/ipfs/QmaehpHpqc5dtRCm9BoU8vCY59AeEnmGvmmwPirVr47oGp\"]},\"@lukso/lsp1-contracts/contracts/LSP1Utils.sol\":{\"keccak256\":\"0x7dd32ff416b7275c5dbb8daa39c0f13bb1b4db2df8132221fc07619dbfe08cd0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fc3eaaa85cb6e14939417ba73729e65722f95c9db714bfda173a438fc2ce771d\",\"dweb:/ipfs/QmTg39yTVneeptAGBDTfGJfYrQMXJ153Y7VN4hJE2eNf1o\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol\":{\"keccak256\":\"0x6d4bb208587872ad563fef31655c44f7de03baa5b4a513910c0003aea0c04036\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://880c3b21e2090a14e7bba94ac5c8d4633e8a81d93c6f619454167a01dcc866d8\",\"dweb:/ipfs/QmZp6YVM4Eor5XtuXXqGRaPAJ3u5KCmLwuNRAGf4JY7sK1\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol\":{\"keccak256\":\"0x75a0159f76a3c5bf26b13aa404aca2f588ea41928eb1483683e29d2031fe5abf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f1b93e7eb5a88a2f42a9dfa061ca5e93e7650cd9114010faa18faf0a5508f579\",\"dweb:/ipfs/QmXmLhf1ejsF7G1FZnvpTBRS9oQ9ZTuqCBRT1im3vAuUYW\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol\":{\"keccak256\":\"0x4536ed09238f33ca9d40ed2e7c6254aac84bf81010b3524711524ae7fd30227c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://abaed57358cb811d3b368d52f66db3c1327b96c38301d6eccf2ffaa6d5fa5928\",\"dweb:/ipfs/QmS1FtQH4Gn6xYrHCTHWJwxgAURvGvvfypsuQ2rRhrkPgi\"]},\"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@lukso/lsp4-contracts/contracts/LSP4Constants.sol\":{\"keccak256\":\"0xdf9b7c688d39a92cb3238136a9f56554245d5ae9b6568dcd6164d0e15c6f56c7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bb36a427cdfa0f394d2d78014f85152ab383499fc3c3d6285d4b801c656e7c3f\",\"dweb:/ipfs/QmZJehfeWKfHLyZLufhs9u4ZyVztGCUNWXzFgfZSU837vU\"]},\"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol\":{\"keccak256\":\"0x6a718979925b05064c15e4de4b376dadec8d107d720aa762d22a06e44ed67fa4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c82f6c8133c4d35d8cbbfc4da647204989acc5f38980be787263881e9f732f5\",\"dweb:/ipfs/QmdhHBnJvvo4Ax183HgHkL7w5A4w3ADXDQuewocnTVqsW6\"]},\"@lukso/lsp4-contracts/contracts/LSP4Errors.sol\":{\"keccak256\":\"0x3db7fd252ed02ce27686141125c3d65d3ff682a32601e1e8611becd9357a57b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5aded62a160ed7f9860996004d1656e8592b3f97d478d8597f8ad6afbe4f34b7\",\"dweb:/ipfs/QmcnmLVt8cmz1iRNaX5c6iNYckRgUXGz8YkjHW9T1KNB5A\"]},\"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x2ca5a81c6c006030e2204d2a9997b15e954bc0696959c051a570c8a19eac4786\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bef5bbbad59c2dbd09e9e80ffe2dcf6dc3da5101d4f4b8beedcb0245d04b7b8a\",\"dweb:/ipfs/QmQYeCHfTtCTQVpy36De1d1vFacvbjTNipxDRNWuCQPNo6\"]},\"@lukso/lsp8-contracts/contracts/LSP8Constants.sol\":{\"keccak256\":\"0xe958d7d5ab694eb054df65ef6fb37864ff9da33604a28a14ca42e25c23629065\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://41f8b02e4c05b6eb3cfc447dae5862e38ba100269c56bb8d23ab26255085a41e\",\"dweb:/ipfs/QmVgeWYBovEJR1Xqph5AuJoP5EizSuY77gUUDmt48wmgWm\"]},\"@lukso/lsp8-contracts/contracts/LSP8Errors.sol\":{\"keccak256\":\"0xff2c1791043272eb4a7c05bc77fa0a0234678991b0700f84d92edbd31fefd905\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://72b32242e8a4b7c12355de3f1c463437a81d8d5f8d34b3a8d25d726340b891c0\",\"dweb:/ipfs/Qmbhz53zdudSQbPwES2qMHqLHaph4GhigNETC481VWwK6J\"]},\"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x1f707425bbcd5a84c7de2ad8ba9c2f620617b5f6483074c27ad6f259d91b7dd2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://799901e6bb5e3465a610d88dd4d314bac0aa787e8aaffd69e960e3e0975bda60\",\"dweb:/ipfs/QmVtLccrrEmvJuMiTFDrbxFuBQcSR8u9St14jXtFB9tmE8\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/utils/Base64.sol\":{\"keccak256\":\"0x822fe67e9e671773d29c8182e7287b42edf5f575eab1eb98558d5ccbdff61c96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce73cb57d5a2e705a0a65cac2ed73ab2fa91932e8af22b7ec1a6a3d88f28669\",\"dweb:/ipfs/QmcbjWFekUTsNeoFwGgUT4xtXoVzsA38ca9pkC4jxvxy7L\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"contracts/standalone/LSP8LoogiesEnhanced.sol\":{\"keccak256\":\"0xd0c8a4fb35197b420b295d198409055cfc82ff98764878a30a60609d31336f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4eaa152dbe1f6f784f091b9aff3f3faba6472796a608b022a39f00587dc6b4b\",\"dweb:/ipfs/QmUo1QHrHNT5ELy6HvrmJk48V7aN7EHtP1FJrpiknCJipX\"]}},\"version\":1}"},"OnChainMetadata":{"abi":[{"inputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}],"name":"bytes32ToHexString","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"generateCollectionSVG","outputs":[{"internalType":"string","name":"svg","type":"string"},{"internalType":"string","name":"encodedSvg","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"string","name":"loogieType","type":"string"},{"internalType":"bytes3","name":"colorValue","type":"bytes3"},{"internalType":"uint256","name":"chubbinessValue","type":"uint256"},{"internalType":"uint256","name":"mouthLengthValue","type":"uint256"},{"internalType":"string","name":"username","type":"string"},{"internalType":"bool","name":"isUP","type":"bool"}],"name":"generateLoogieSVG","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"limit","type":"uint256"}],"name":"getCollectionMetadataBytes","outputs":[{"internalType":"bytes","name":"raw","type":"bytes"},{"internalType":"bytes","name":"encoded","type":"bytes"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"string","name":"loogieTypeValue","type":"string"},{"internalType":"bytes3","name":"colorBytes","type":"bytes3"},{"internalType":"uint256","name":"chubbiness","type":"uint256"},{"internalType":"uint256","name":"mouthLength","type":"uint256"},{"internalType":"string","name":"username","type":"string"},{"internalType":"bool","name":"isUP","type":"bool"}],"name":"getMetadataBytes","outputs":[{"internalType":"bytes","name":"raw","type":"bytes"},{"internalType":"bytes","name":"encoded","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes3","name":"_color","type":"bytes3"}],"name":"toColorHexString","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"_i","type":"uint256"}],"name":"uint2str","outputs":[{"internalType":"string","name":"_uintAsString","type":"string"}],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523461001657612a21908161001c8239f35b600080fdfe604060808152600436101561001357600080fd5b600090813560e01c80633be699f914610d9e5780637679913614610d6a5780638528247f146106055780638cda5103146101c0578063ad30ddbf1461019e578063c68b3787146100a75763f76f950e1461006c57600080fd5b346100a35760203660031901126100a35761009f9061008c600435611133565b9051918291602083526020830190610e02565b0390f35b5080fd5b50346100a3576020908160031936011261019a57600435926100c7610fb7565b938251946100d486610e59565b838652833686880137825b8581106100f85784518681528061009f8189018a610e02565b6001600160f81b031983821a81610116600483901c60ff168661103a565b51169160019184831b93858504600214861517156101865761014991600f918a1a610141878f61103a565b53168661103a565b5116908201809211610172579061016761016d9392871a918a61103a565b53611015565b6100df565b634e487b7160e01b86526011600452602486fd5b634e487b7160e01b89526011600452602489fd5b8280fd5b50346100a35761009f9061008c6101b436610f1b565b95949094939193611292565b5090346106025760209081600319360112610602575061009f6105e8926105f8603d600435946105a661027e6101f461259f565b98905061020961020382611133565b91611133565b8751998a92707b224c5350344d65746164617461223a7b60781b8785015275089b985b59488e88931d5adcdbd31bdbd9da595cc88b60521b60318501527f226465736372697074696f6e223a224c756b736f4c6f6f67696573206172652060478501527f4c554b534f205374616e64617264204c535038204e465473207769746820612060678501526d039b6b4b632901d149027b7363c960951b60878501526102bc8151809289609588019101610ddf565b83017f204c756b736f4c6f6f6769657320617661696c61626c65206f6e20612070726960958201527f636520637572766520696e6372656173696e6720302e3225207769746820656160b58201527f6368206e6577206d696e742e2054686973204d61747269782045646974696f6e60d58201527f20666561747572657320616e696d61746564204d61747269782d7374796c652060f58201527f64657369676e7320666f722065616368204c6f6f6769652e222c0000000000006101158201527f226c696e6b73223a5b7b227469746c65223a2257656273697465222c2275726c61012f8201527f223a2268747470733a2f2f6c756b736f6c6f6f676965732e76657263656c2e6161014f8201527f7070227d2c7b227469746c65223a2254776974746572222c2275726c223a226861016f8201527f747470733a2f2f747769747465722e636f6d2f6c756b736f4c6f6f676965732261018f820152621f574b60ea1b6101af8201527f22696d61676573223a5b5b7b227769647468223a3430302c22686569676874226101b28201526b1d1a181816113ab936111d1160a11b6101d2820152815190610479826101de948a8685019101610ddf565b64089f57574b60da1b9101918201526d2261747472696275746573223a5b60901b6101e38201527f7b226b6579223a2274797065222c2276616c7565223a22636f6c6c656374696f6101f1820152731b888b089d1e5c19488e889cdd1c9a5b99c89f4b60621b6102118201527f7b226b6579223a226c696d6974222c2276616c7565223a000000000000000000610225820152815161023c92909190610526908390858401908a01610ddf565b710b089d1e5c19488e889b9d5b58995c889f4b60721b9101918201527f7b226b6579223a226375727665222c2276616c7565223a3130302e322c22747961024e8201526c7065223a226e756d626572227d60981b61026e820152605d60f81b61027b820152617d7d60f01b61027c8201520361025e810189520187610e91565b6105af86612897565b845197827f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c0000008a9485015282519283918686019101610ddf565b810103601d810187520185610e91565b5192839283610f8f565b80fd5b50346100a3576106309161063661061b36610f1b565b9399848284868e8a8c9e999c9d979b9d611292565b99611061565b87889084997a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000009081811015610d5d575b50506d04ee2d6d415b85acef810000000080831015610d4e575b50662386f26fc1000080831015610d3f575b506305f5e10080831015610d30575b5061271080831015610d21575b506064821015610d11575b600a80921015610d07575b8160216106ce60018d01610fe3565b9b8c01015b60001901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304908b8215610703575082906106d3565b989250505061074560288851809b674c6f6f676965202360c01b60208301526107358151809260208686019101610ddf565b810103600881018c52018a610e91565b61074e81611133565b9461075884611133565b9b8115610ce857885161076a81610e27565b601f81527f2e204f776e6564206279206120556e6976657273616c2050726f66696c65210060208201529c5b8951809e8192602083019c7f54686973204d6174726978204c6f6f6769652069732074686520636f6c6f72208e528301602360f81b905287519a602089019b8c81604187016107e492610ddf565b840160418101750103bb4ba3410309031b43ab13134b732b9b99037b3160551b90528151918260578301916020019161081c92610ddf565b01605781017401030b7321036b7baba34103632b733ba341037b31605d1b905281519182606c8301916020019161085292610ddf565b0181519182606c8301916020019161086992610ddf565b0103604c81018252606c0161087d91610e91565b61088690612897565b9161089090611133565b9361089a90611133565b945015610cc55789516108ac81610e27565b60048152637472756560e01b6020820152965b8a519b8c809b602082017f7b224c5350344d65746164617461223a207b226e616d65223a2022000000000090528051603b819301916020019161090192610ddf565b8b0190711116113232b9b1b934b83a34b7b7111d101160711b603b830152519182604d830161092f92610ddf565b7f222c226c696e6b73223a205b7b227469746c65223a2257656273697465222c22604d92909101918201527f75726c223a2268747470733a2f2f6c756b736f6c6f6f676965732e7665726365606d820152721b0b985c1c089f574b089a58dbdb888e96d74b606a1b608d8201527f22696d61676573223a205b5b7b227769647468223a203430302c22686569676860a08201526f3a111d101a181816113ab936111d101160811b60c08201527f646174613a696d6167652f7376672b786d6c3b6261736536342c00000000000060d0820152815191610a1790839060ea840190602001610ddf565b019064089f57574b60da1b60ea8301526d2261747472696275746573223a5b60901b60ef83015260fd82017f7b226b6579223a22636f6c6f72222c2276616c7565223a222300000000000000905251906101169482868301610a7892610ddf565b0172088b089d1e5c19488e889cdd1c9a5b99c89f4b606a1b809482015261012981017f7b226b6579223a226368756262696e657373222c2276616c7565223a00000000905281519061014592828483019160200191610ad692610ddf565b01710b089d1e5c19488e889b9d5b58995c889f4b60721b809282015261015781017f7b226b6579223a226d6f7574684c656e677468222c2276616c7565223a000000905282519061017493828583019160200191610b3392610ddf565b019182015261018681017f7b226b6579223a22757365726e616d65222c2276616c7565223a22000000000090528251906101a193828583019160200191610b7992610ddf565b0191820152753d9135b2bc911d1134b9aaa81116113b30b63ab2911d60511b6101b48201528151906101ca92828483019160200191610bb792610ddf565b720b089d1e5c19488e88989bdbdb19585b889f4b606a1b9101918201527f7b226b6579223a2274797065222c2276616c7565223a220000000000000000006101dd82015281516101f492909190610c1690839085840190602001610ddf565b019071222c2274797065223a22737472696e67227d60701b908201526102068101625d7d7d60e81b9052036101e98101835261020901610c569083610e91565b610c5f82612897565b9080518092602082017f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000905280519081603d84019160200191610ca192610ddf565b810103601d81018352603d01610cb79083610e91565b5191829161009f9183610f8f565b8951610cd081610e27565b600581526466616c736560d81b6020820152966108bf565b8851610cf381610e27565b60018152601760f91b60208201529c610796565b98600101986106bf565b98906064600291049101986106b4565b6004919a9204910198386106a9565b6008919a92049101983861069c565b6010919a92049101983861068d565b6020919a92049101983861067b565b8c9b500491503880610661565b50346100a35760203660031901126100a357600435916001600160e81b031983168303610602575061008c61009f92611061565b50346100a357816003193601126100a35761009f90610dbb61259f565b610dd18394929451948486958652850190610e02565b908382036020850152610e02565b60005b838110610df25750506000910152565b8181015183820152602001610de2565b90602091610e1b81518092818552858086019101610ddf565b601f01601f1916010190565b6040810190811067ffffffffffffffff821117610e4357604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff821117610e4357604052565b6020810190811067ffffffffffffffff821117610e4357604052565b90601f8019910116810190811067ffffffffffffffff821117610e4357604052565b67ffffffffffffffff8111610e4357601f01601f191660200190565b81601f82011215610f1657803590610ee682610eb3565b92610ef46040519485610e91565b82845260208383010111610f1657816000926020809301838601378301015290565b600080fd5b60e0600319820112610f16576004359167ffffffffffffffff602435818111610f165783610f4b91600401610ecf565b926044356001600160e81b031981168103610f165792606435926084359260a435918211610f1657610f7f91600401610ecf565b9060c4358015158103610f165790565b9091610fa6610fb493604084526040840190610e02565b916020818403910152610e02565b90565b60405190610fc482610e27565b601082526f181899199a1a9b1b9c1cb0b131b232b360811b6020830152565b90610fed82610eb3565b610ffa6040519182610e91565b828152809261100b601f1991610eb3565b0190602036910137565b60001981146110245760010190565b634e487b7160e01b600052601160045260246000fd5b90815181101561104b570160200190565b634e487b7160e01b600052603260045260246000fd5b611069610fb7565b6040519161107683610e27565b600683526020368185013760005b600381106110925750505090565b6001600160f81b031982821a6004826110b083831c60ff168861103a565b51169260019285841b948686046002148715171561111e576110e491600f9160001a6110dc888d61103a565b53168861103a565b5116918301809311611109575090610167611104939260001a918761103a565b611084565b601190634e487b7160e01b6000525260246000fd5b601184634e487b7160e01b6000525260246000fd5b80156111ad5780816000925b611199575061114d82610fe3565b9190805b61115a57505090565b600a90603092828206840180941161102457801561102457600019019260f81b6001600160f81b03191660001a611191848661103a565b530480611151565b916111a5600a91611015565b92048061113f565b506040516111ba81610e27565b60018152600360fc1b602082015290565b604051906111d882610e27565b600582526433b932b2b760d91b6020830152565b604051906111f982610e27565b6004825263626c756560e01b6020830152565b6040519061121982610e27565b60038252621c995960ea1b6020830152565b6040519061123882610e27565b6006825265707572706c6560d01b6020830152565b6040519061125a82610e27565b600682526579656c6c6f7760d01b6020830152565b6040519061127c82610e27565b60078252660233030666630360cc1b6020830152565b94959492939185156124305781516020928381019182206112b16111cb565b8051908601200361231857505050506112c861126f565b955b60036040516020810190858252650dac2e8e4d2f60d31b6040820152602681526112f381610e59565b5190208615612311578116105b85156123035760405161131281610e27565b600781526611b3331818333360c91b6020820152905b85600902956009870481036110245761032a97888881031161102457600083156122ee57506040517f3c66696c7465722069643d226d61747269782d676c6f772220783d222d32302560208201527f2220793d222d323025222077696474683d223134302522206865696768743d22604082015265189a1812911f60d11b60608201527f3c6665476175737369616e426c757220737464446576696174696f6e3d22332260668201526f103932b9bab63a1e9131363ab911179f60811b60868201526114f960ad826113fc6096820161252e565b681e17b334b63a32b91f60b91b81527f3c6c696e6561724772616469656e742069643d226d61747269782d626722207860098201527f313d223025222079313d223025222078323d223025222079323d2231303025226029820152601f60f91b60498201527f3c73746f70206f66667365743d223025222073746f702d636f6c6f723d222330604a8201526718181c181811179f60c11b606a8201527f3c73746f70206f66667365743d2231303025222073746f702d636f6c6f723d226072820152691198181898181811179f60b11b6092820152701e17b634b732b0b923b930b234b2b73a1f60791b609c82015203608d810184520182610e91565b925b60009015612257575060405161151081610e27565b601881527f3c6720636c6173733d226d61747269782d6368617273223e0000000000000000602082015295604051996101e0808c018c811067ffffffffffffffff821117610e4357604052368c3760005b60ff9081811691600f8310156115c65761017c8c6040516020810191825260ff60f81b8560f81b1660408201526021815261159b81610e59565b51902006600a8101809111611024576115c1938f926115bb92169261258e565b5261257d565b611561565b50505091939597999b90929496989a60ff9b600f60009d8e5b16101561182e5760008e5b600860ff83161061160b575050600f61160460ff9e61257d565b9d8e6115df565b909b8c8f918f90604051602081019383855260ff60f81b60f89261017c82808a871b1694856040850152861b169760419289848201526022815261164e81610e59565b5190200697600a998a8a01809a11611024576331b430b960e11b9a60405160208101908a82528760408201528b8682015260429d8e8201526026815261169381610e59565b5190200692603084018094116110245760ff6117128161170b6118289f95826118229f60679f600590661e17ba32bc3a1f60c91b9e6464656c617960d81b6117199c86956102039d60405194602086019687526040860152840152820152602781526116fe81610e59565b519020061698169061258e565b5116611133565b9b16611133565b926040519260208401961b1685526001825261173482610e27565b7f2220636c6173733d226d61747269782d6368617222207374796c653d22616e69604051998761176e8c995180926020808d019101610ddf565b8801681e3a32bc3a103c1e9160b91b60208201528151906117988260299460208685019101610ddf565b01906411103c9e9160d91b908201528251906117bd82602e9560208785019101610ddf565b01918201526d036b0ba34b7b716b232b630bc9d160951b604e8201528251906117ef82605c9560208785019101610ddf565b019163399d911f60e11b90830152519061180f8260609586840190610ddf565b0191820152036047810184520182610e91565b9b61257d565b8e6115ea565b7f2032333522207374726f6b653d22626c61636b22207374726f6b652d7769647495969798999d507f3b206f7061636974793a20302e333b20616e696d6174696f6e3a2066616465209c50610fb49b50906118fe6118f8600b7f3c6720636c6173733d226c6f6f6769652d636f6e7461696e6572223e00000000946118f06105ab9f6118ea6024604051836118cd829551809260208086019101610ddf565b8101631e17b39f60e11b6020820152036004810184520182610e91565b9c611133565b970304611133565b95611133565b81519097906000901561223f57501561218a576119ba607d60405180937f3c7465787420783d223230302220793d223330302220636c6173733d2275736560208301527f726e616d6522207374796c653d22666f6e742d66616d696c793a2027436f6d69604083015275319029b0b7399026a993961031bab939b4bb329d911f60511b606083015261199a815180926020607686019101610ddf565b8101661e17ba32bc3a1f60c91b607682015203605d810184520182610e91565b975b661e17b232b3399f60c91b604051809e819c7f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323060208401527f30302f737667222076696577426f783d2230203020343030203430302220776960408401527f6474683d2234303022206865696768743d22343030223e0000000000000000006060840152651e3232b3399f60d11b6077840152661e39ba3cb6329f60c91b607d8401527f40696d706f72742075726c282268747470733a2f2f666f6e74732e676f6f676c60848401527f65617069732e636f6d2f637373323f66616d696c793d436f6d69632b53616e7360a48401527f2b4d5326616d703b646973706c61793d7377617022293b00000000000000000060c48401527f2e757365726e616d65207b20666f6e742d66616d696c793a2022436f6d69632060db8401527f53616e73204d53222c20637572736976653b20666f6e742d73697a653a20313660fb8401527f70783b2066696c6c3a2077686974653b20746578742d616e63686f723a206d6961011b8401526664646c653b207d60c81b61013b8401527f2e6d61747269782d63686172207b20666f6e742d66616d696c793a206d6f6e6f6101428401526c039b830b1b29d903334b6361d1609d1b610162840152611ba981518092602061016f8097019101610ddf565b8d01918201527f337320696e66696e6974652c2066616c6c203873206c696e65617220696e666961018f820152666e6974653b207d60c81b6101af8201527f406b65796672616d65732066616465207b203025207b206f7061636974793a206101b68201527f302e323b207d20333025207b206f7061636974793a20302e393b207d203730256101d68201527f207b206f7061636974793a20302e393b207d2031303025207b206f70616369746101f68201526a793a20302e323b207d207d60a81b6102168201527f406b65796672616d65732066616c6c207b2066726f6d207b207472616e73666f6102218201527f726d3a207472616e736c61746559282d32307078293b207d20746f207b2074726102418201527f616e73666f726d3a207472616e736c61746559283432307078293b207d207d00610261820152671e17b9ba3cb6329f60c11b610280820152825190611d0f826102889560208785019101610ddf565b01918201527f3c726563742077696474683d2234303022206865696768743d2234303022206661028f8201526c34b6361e91313630b1b591179f60991b6102af820152875190611d69826102bc9a60208c85019101610ddf565b01968701526c1e339034b21e9132bcb298911f60991b6102d88701527f3c656c6c69707365207374726f6b652d77696474683d2233222072793d223239806102e58801527f2e35222072783d2232392e35222069643d227376675f31222063793d223135346103058801527f2e35222063783d223138312e3522207374726f6b653d2223303030222066696c6103258801527f222072793d2235312e383030363522207374726f6b653d2223303030222f3e0069361e9111b3333311179f60b11b92836103458a01527f3c656c6c697073652072793d22332e35222072783d22322e35222069643d227361034f8a01527f76675f33222063793d223135342e35222063783d223137332e3522207374726f61036f8a01527f6b652d77696474683d223322207374726f6b653d2223303030222066696c6c3d61038f8a01526a111198181818181811179f60a91b6103af8a01527f22207374726f6b652d77696474683d2233222063783d223230342e3522206379631e17b39f60e11b998a6103ba8201526c1e339034b21e913432b0b2111f60991b6103be8201526e1e32b63634b839b2903334b6361e9160891b6103cb820152825190611f34826103da9560208785019101610ddf565b01918201527f3d223231312e3830303635222069643d227376675f35222072783d22000000006103fa820152845190611f77826104169760208985019101610ddf565b0193840152866104358401526c1e339034b21e9132bcb299111f60991b6104398401526104468301527f2e35222072783d2232392e35222069643d227376675f32222063793d223136386104668301527f2e35222063783d223230392e3522207374726f6b653d2223303030222066696c6104868301526104a68201527f3c656c6c697073652072793d22332e35222072783d2233222069643d227376676104b08201527f5f34222063793d223136392e35222063783d2232303822207374726f6b652d776104d08201527f696474683d2233222066696c6c3d222330303030303022207374726f6b653d226104f0820152661198181811179f60c91b610510820152846105178201527f3c6720636c6173733d226d6f75746822207472616e73666f726d3d227472616e61051b820152650e6d8c2e8ca560d31b61053b8201528151906120cf826105419460208685019101610ddf565b019064161814911f60d91b908201527f3c7061746820643d224d2031333020323430205120313635203235302000000061054682015282519061211c826105639560208785019101610ddf565b01918201527f683d2233222066696c6c3d227472616e73706172656e74222f3e0000000000006105838201528161059d820152825190612166826105a19560208785019101610ddf565b0191820152651e17b9bb339f60d11b6105a58201520361058b810184520182610e91565b61223a608460405180937f3c7465787420783d223230302220793d223330302220666f6e742d66616d696c60208301527f793d22417269616c2220666f6e742d73697a653d223136222066696c6c3d222360408301527f6666666666662220746578742d616e63686f723d226d6964646c65223e000000606083015261221a815180926020607d86019101610ddf565b8101661e17ba32bc3a1f60c91b607d820152036064810184520182610e91565b6119ba565b9150506040519061224f82610e75565b8152976119bc565b610fb499919497509a7f3c6720636c6173733d226c6f6f6769652d636f6e7461696e6572223e000000007f3b206f7061636974793a20302e333b20616e696d6174696f6e3a2066616465209b6118fe6118f87f2032333522207374726f6b653d22626c61636b22207374726f6b652d77696474979a96999f6105ab9d6118f0600b92604051906122e682610e75565b81529c611133565b604051906122fb82610e75565b8152926114fb565b61230b61126f565b90611328565b1615611300565b805182206123246111ec565b80519086012003612357575050506611981831b1b33360c91b6040519161234a83610e27565b60078352820152956112ca565b8051822061236361120c565b80519086012003612389575050506611b33318181b1b60c91b6040519161234a83610e27565b8051822061239561122b565b805190860120036123bb575050506611b1b19818333360c91b6040519161234a83610e27565b5190206123c661124d565b805190840120036123ea5750660236666636330360cc1b6040519161234a83610e27565b602161241a926123fc61242a93611061565b6040519482602360f81b879485015282519283918686019101610ddf565b8101036001810184520182610e91565b956112ca565b81516020928381019182206124436111cb565b8051908601200361246957505050662361336536333560c81b6040519161234a83610e27565b805182206124756111ec565b8051908601200361249b57505050661199b11c19331b60c91b6040519161234a83610e27565b805182206124a761120c565b805190860120036124cd575050506608d9598d0d0d0d60ca1b6040519161234a83610e27565b805182206124d961122b565b805190860120036124ff57505050662361383535663760c81b6040519161234a83610e27565b51902061250a61124d565b805190840120036123ea5750662366616363313560c81b6040519161234a83610e27565b7f3c6665436f6d706f7369746520696e3d22536f7572636547726170686963222081527f696e323d22626c757222206f70657261746f723d226f766572222f3e000000006020820152603c0190565b60ff1660ff81146110245760010190565b90600f81101561104b5760051b0190565b604080517f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323060208201527f30302f737667222077696474683d2234303022206865696768743d2234303022918101919091527f2076696577426f783d223020302034303020343030223e00000000000000000060608201527f3c726563742077696474683d2234303022206865696768743d2234303022206660778201526b34b6361e911198181811179f60a11b6097820152711e3334b63a32b91034b21e9133b637bb911f60711b60a38201527f3c6665476175737369616e426c757220737464446576696174696f6e3d22332e60b5820152711a91103932b9bab63a1e9131363ab911179f60711b60d582015290612836610113836126c260e7820161252e565b681e17b334b63a32b91f60b91b81527f3c7465787420783d223230302220793d223138302220666f6e742d66616d696c60098201527f793d22417269616c2220666f6e742d73697a653d223430222066696c6c3d222360298201527f6666662220746578742d616e63686f723d226d6964646c65222066696c74657260498201527f3d2275726c2823676c6f7729223e4c756b736f4c6f6f676965733c2f746578746069820152601f60f91b60898201527f3c7465787420783d223230302220793d223233302220666f6e742d66616d696c608a8201527f793d22417269616c2220666f6e742d73697a653d223230222066696c6c3d222360aa8201527f3066302220746578742d616e63686f723d226d6964646c65222066696c74657260ca8201527f3d2275726c2823676c6f7729223e4d61747269782045646974696f6e3c2f746560ea820152623c3a1f60e91b61010a820152651e17b9bb339f60d11b61010d8201520360f3810185520183610e91565b61283f82612897565b91612893603a60405180957f646174613a696d6167652f7376672b786d6c3b6261736536342c00000000000060208301526128838151809260208686019101610ddf565b810103601a810186520184610e91565b9190565b8051156129d757604051906128ab82610e59565b604082527f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208301527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f60408301528051600291828201809211611024576003918290046001600160fe1b03811681036110245761292d908495941b610fe3565b936020850193829183518401906020820192835194600085525b83811061298657505050505251068060011461297357600214612968575090565b603d90600019015390565b50603d9081600019820153600119015390565b87600491999293949901918251600190603f9082828260121c16880101518453828282600c1c16880101518385015382828260061c1688010151888501531685010151898201530197929190612947565b506040516129e481610e75565b600081529056fea264697066735822122099ee386245555d1a2c1a2a6e6099d829ca03411ba3a550fd95fcce2ace7dc93264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x2A21 SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3BE699F9 EQ PUSH2 0xD9E JUMPI DUP1 PUSH4 0x76799136 EQ PUSH2 0xD6A JUMPI DUP1 PUSH4 0x8528247F EQ PUSH2 0x605 JUMPI DUP1 PUSH4 0x8CDA5103 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0xAD30DDBF EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xC68B3787 EQ PUSH2 0xA7 JUMPI PUSH4 0xF76F950E EQ PUSH2 0x6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xA3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xA3 JUMPI PUSH2 0x9F SWAP1 PUSH2 0x8C PUSH1 0x4 CALLDATALOAD PUSH2 0x1133 JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0xE02 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xA3 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19A JUMPI PUSH1 0x4 CALLDATALOAD SWAP3 PUSH2 0xC7 PUSH2 0xFB7 JUMP JUMPDEST SWAP4 DUP3 MLOAD SWAP5 PUSH2 0xD4 DUP7 PUSH2 0xE59 JUMP JUMPDEST DUP4 DUP7 MSTORE DUP4 CALLDATASIZE DUP7 DUP9 ADD CALLDATACOPY DUP3 JUMPDEST DUP6 DUP2 LT PUSH2 0xF8 JUMPI DUP5 MLOAD DUP7 DUP2 MSTORE DUP1 PUSH2 0x9F DUP2 DUP10 ADD DUP11 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP4 DUP3 BYTE DUP2 PUSH2 0x116 PUSH1 0x4 DUP4 SWAP1 SHR PUSH1 0xFF AND DUP7 PUSH2 0x103A JUMP JUMPDEST MLOAD AND SWAP2 PUSH1 0x1 SWAP2 DUP5 DUP4 SHL SWAP4 DUP6 DUP6 DIV PUSH1 0x2 EQ DUP7 ISZERO OR ISZERO PUSH2 0x186 JUMPI PUSH2 0x149 SWAP2 PUSH1 0xF SWAP2 DUP11 BYTE PUSH2 0x141 DUP8 DUP16 PUSH2 0x103A JUMP JUMPDEST MSTORE8 AND DUP7 PUSH2 0x103A JUMP JUMPDEST MLOAD AND SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x172 JUMPI SWAP1 PUSH2 0x167 PUSH2 0x16D SWAP4 SWAP3 DUP8 BYTE SWAP2 DUP11 PUSH2 0x103A JUMP JUMPDEST MSTORE8 PUSH2 0x1015 JUMP JUMPDEST PUSH2 0xDF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xA3 JUMPI PUSH2 0x9F SWAP1 PUSH2 0x8C PUSH2 0x1B4 CALLDATASIZE PUSH2 0xF1B JUMP JUMPDEST SWAP6 SWAP5 SWAP1 SWAP5 SWAP4 SWAP2 SWAP4 PUSH2 0x1292 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x602 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x602 JUMPI POP PUSH2 0x9F PUSH2 0x5E8 SWAP3 PUSH2 0x5F8 PUSH1 0x3D PUSH1 0x4 CALLDATALOAD SWAP5 PUSH2 0x5A6 PUSH2 0x27E PUSH2 0x1F4 PUSH2 0x259F JUMP JUMPDEST SWAP9 SWAP1 POP PUSH2 0x209 PUSH2 0x203 DUP3 PUSH2 0x1133 JUMP JUMPDEST SWAP2 PUSH2 0x1133 JUMP JUMPDEST DUP8 MLOAD SWAP10 DUP11 SWAP3 PUSH17 0x7B224C5350344D65746164617461223A7B PUSH1 0x78 SHL DUP8 DUP6 ADD MSTORE PUSH22 0x89B985B59488E88931D5ADCDBD31BDBD9DA595CC88B PUSH1 0x52 SHL PUSH1 0x31 DUP6 ADD MSTORE PUSH32 0x226465736372697074696F6E223A224C756B736F4C6F6F676965732061726520 PUSH1 0x47 DUP6 ADD MSTORE PUSH32 0x4C554B534F205374616E64617264204C535038204E4654732077697468206120 PUSH1 0x67 DUP6 ADD MSTORE PUSH14 0x39B6B4B632901D149027B7363C9 PUSH1 0x95 SHL PUSH1 0x87 DUP6 ADD MSTORE PUSH2 0x2BC DUP2 MLOAD DUP1 SWAP3 DUP10 PUSH1 0x95 DUP9 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST DUP4 ADD PUSH32 0x204C756B736F4C6F6F6769657320617661696C61626C65206F6E206120707269 PUSH1 0x95 DUP3 ADD MSTORE PUSH32 0x636520637572766520696E6372656173696E6720302E32252077697468206561 PUSH1 0xB5 DUP3 ADD MSTORE PUSH32 0x6368206E6577206D696E742E2054686973204D61747269782045646974696F6E PUSH1 0xD5 DUP3 ADD MSTORE PUSH32 0x20666561747572657320616E696D61746564204D61747269782D7374796C6520 PUSH1 0xF5 DUP3 ADD MSTORE PUSH32 0x64657369676E7320666F722065616368204C6F6F6769652E222C000000000000 PUSH2 0x115 DUP3 ADD MSTORE PUSH32 0x226C696E6B73223A5B7B227469746C65223A2257656273697465222C2275726C PUSH2 0x12F DUP3 ADD MSTORE PUSH32 0x223A2268747470733A2F2F6C756B736F6C6F6F676965732E76657263656C2E61 PUSH2 0x14F DUP3 ADD MSTORE PUSH32 0x7070227D2C7B227469746C65223A2254776974746572222C2275726C223A2268 PUSH2 0x16F DUP3 ADD MSTORE PUSH32 0x747470733A2F2F747769747465722E636F6D2F6C756B736F4C6F6F6769657322 PUSH2 0x18F DUP3 ADD MSTORE PUSH3 0x1F574B PUSH1 0xEA SHL PUSH2 0x1AF DUP3 ADD MSTORE PUSH32 0x22696D61676573223A5B5B7B227769647468223A3430302C2268656967687422 PUSH2 0x1B2 DUP3 ADD MSTORE PUSH12 0x1D1A181816113AB936111D11 PUSH1 0xA1 SHL PUSH2 0x1D2 DUP3 ADD MSTORE DUP2 MLOAD SWAP1 PUSH2 0x479 DUP3 PUSH2 0x1DE SWAP5 DUP11 DUP7 DUP6 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST PUSH5 0x89F57574B PUSH1 0xDA SHL SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH14 0x2261747472696275746573223A5B PUSH1 0x90 SHL PUSH2 0x1E3 DUP3 ADD MSTORE PUSH32 0x7B226B6579223A2274797065222C2276616C7565223A22636F6C6C656374696F PUSH2 0x1F1 DUP3 ADD MSTORE PUSH20 0x1B888B089D1E5C19488E889CDD1C9A5B99C89F4B PUSH1 0x62 SHL PUSH2 0x211 DUP3 ADD MSTORE PUSH32 0x7B226B6579223A226C696D6974222C2276616C7565223A000000000000000000 PUSH2 0x225 DUP3 ADD MSTORE DUP2 MLOAD PUSH2 0x23C SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x526 SWAP1 DUP4 SWAP1 DUP6 DUP5 ADD SWAP1 DUP11 ADD PUSH2 0xDDF JUMP JUMPDEST PUSH18 0xB089D1E5C19488E889B9D5B58995C889F4B PUSH1 0x72 SHL SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH32 0x7B226B6579223A226375727665222C2276616C7565223A3130302E322C227479 PUSH2 0x24E DUP3 ADD MSTORE PUSH13 0x7065223A226E756D626572227D PUSH1 0x98 SHL PUSH2 0x26E DUP3 ADD MSTORE PUSH1 0x5D PUSH1 0xF8 SHL PUSH2 0x27B DUP3 ADD MSTORE PUSH2 0x7D7D PUSH1 0xF0 SHL PUSH2 0x27C DUP3 ADD MSTORE SUB PUSH2 0x25E DUP2 ADD DUP10 MSTORE ADD DUP8 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0x5AF DUP7 PUSH2 0x2897 JUMP JUMPDEST DUP5 MLOAD SWAP8 DUP3 PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP11 SWAP5 DUP6 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 SWAP2 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST DUP2 ADD SUB PUSH1 0x1D DUP2 ADD DUP8 MSTORE ADD DUP6 PUSH2 0xE91 JUMP JUMPDEST MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0xF8F JUMP JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xA3 JUMPI PUSH2 0x630 SWAP2 PUSH2 0x636 PUSH2 0x61B CALLDATASIZE PUSH2 0xF1B JUMP JUMPDEST SWAP4 SWAP10 DUP5 DUP3 DUP5 DUP7 DUP15 DUP11 DUP13 SWAP15 SWAP10 SWAP13 SWAP14 SWAP8 SWAP12 SWAP14 PUSH2 0x1292 JUMP JUMPDEST SWAP10 PUSH2 0x1061 JUMP JUMPDEST DUP8 DUP9 SWAP1 DUP5 SWAP10 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 SWAP1 DUP2 DUP2 LT ISZERO PUSH2 0xD5D JUMPI JUMPDEST POP POP PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP1 DUP4 LT ISZERO PUSH2 0xD4E JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 DUP1 DUP4 LT ISZERO PUSH2 0xD3F JUMPI JUMPDEST POP PUSH4 0x5F5E100 DUP1 DUP4 LT ISZERO PUSH2 0xD30 JUMPI JUMPDEST POP PUSH2 0x2710 DUP1 DUP4 LT ISZERO PUSH2 0xD21 JUMPI JUMPDEST POP PUSH1 0x64 DUP3 LT ISZERO PUSH2 0xD11 JUMPI JUMPDEST PUSH1 0xA DUP1 SWAP3 LT ISZERO PUSH2 0xD07 JUMPI JUMPDEST DUP2 PUSH1 0x21 PUSH2 0x6CE PUSH1 0x1 DUP14 ADD PUSH2 0xFE3 JUMP JUMPDEST SWAP12 DUP13 ADD ADD JUMPDEST PUSH1 0x0 NOT ADD SWAP2 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP3 DUP3 MOD BYTE DUP4 MSTORE8 DIV SWAP1 DUP12 DUP3 ISZERO PUSH2 0x703 JUMPI POP DUP3 SWAP1 PUSH2 0x6D3 JUMP JUMPDEST SWAP9 SWAP3 POP POP POP PUSH2 0x745 PUSH1 0x28 DUP9 MLOAD DUP1 SWAP12 PUSH8 0x4C6F6F6769652023 PUSH1 0xC0 SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x735 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST DUP2 ADD SUB PUSH1 0x8 DUP2 ADD DUP13 MSTORE ADD DUP11 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0x74E DUP2 PUSH2 0x1133 JUMP JUMPDEST SWAP5 PUSH2 0x758 DUP5 PUSH2 0x1133 JUMP JUMPDEST SWAP12 DUP2 ISZERO PUSH2 0xCE8 JUMPI DUP9 MLOAD PUSH2 0x76A DUP2 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x1F DUP2 MSTORE PUSH32 0x2E204F776E6564206279206120556E6976657273616C2050726F66696C652100 PUSH1 0x20 DUP3 ADD MSTORE SWAP13 JUMPDEST DUP10 MLOAD DUP1 SWAP15 DUP2 SWAP3 PUSH1 0x20 DUP4 ADD SWAP13 PUSH32 0x54686973204D6174726978204C6F6F6769652069732074686520636F6C6F7220 DUP15 MSTORE DUP4 ADD PUSH1 0x23 PUSH1 0xF8 SHL SWAP1 MSTORE DUP8 MLOAD SWAP11 PUSH1 0x20 DUP10 ADD SWAP12 DUP13 DUP2 PUSH1 0x41 DUP8 ADD PUSH2 0x7E4 SWAP3 PUSH2 0xDDF JUMP JUMPDEST DUP5 ADD PUSH1 0x41 DUP2 ADD PUSH22 0x103BB4BA3410309031B43AB13134B732B9B99037B31 PUSH1 0x55 SHL SWAP1 MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0x57 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x81C SWAP3 PUSH2 0xDDF JUMP JUMPDEST ADD PUSH1 0x57 DUP2 ADD PUSH21 0x1030B7321036B7BABA34103632B733BA341037B31 PUSH1 0x5D SHL SWAP1 MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0x6C DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x852 SWAP3 PUSH2 0xDDF JUMP JUMPDEST ADD DUP2 MLOAD SWAP2 DUP3 PUSH1 0x6C DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x869 SWAP3 PUSH2 0xDDF JUMP JUMPDEST ADD SUB PUSH1 0x4C DUP2 ADD DUP3 MSTORE PUSH1 0x6C ADD PUSH2 0x87D SWAP2 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0x886 SWAP1 PUSH2 0x2897 JUMP JUMPDEST SWAP2 PUSH2 0x890 SWAP1 PUSH2 0x1133 JUMP JUMPDEST SWAP4 PUSH2 0x89A SWAP1 PUSH2 0x1133 JUMP JUMPDEST SWAP5 POP ISZERO PUSH2 0xCC5 JUMPI DUP10 MLOAD PUSH2 0x8AC DUP2 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH4 0x74727565 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP7 JUMPDEST DUP11 MLOAD SWAP12 DUP13 DUP1 SWAP12 PUSH1 0x20 DUP3 ADD PUSH32 0x7B224C5350344D65746164617461223A207B226E616D65223A20220000000000 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x3B DUP2 SWAP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x901 SWAP3 PUSH2 0xDDF JUMP JUMPDEST DUP12 ADD SWAP1 PUSH18 0x1116113232B9B1B934B83A34B7B7111D1011 PUSH1 0x71 SHL PUSH1 0x3B DUP4 ADD MSTORE MLOAD SWAP2 DUP3 PUSH1 0x4D DUP4 ADD PUSH2 0x92F SWAP3 PUSH2 0xDDF JUMP JUMPDEST PUSH32 0x222C226C696E6B73223A205B7B227469746C65223A2257656273697465222C22 PUSH1 0x4D SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH32 0x75726C223A2268747470733A2F2F6C756B736F6C6F6F676965732E7665726365 PUSH1 0x6D DUP3 ADD MSTORE PUSH19 0x1B0B985C1C089F574B089A58DBDB888E96D74B PUSH1 0x6A SHL PUSH1 0x8D DUP3 ADD MSTORE PUSH32 0x22696D61676573223A205B5B7B227769647468223A203430302C226865696768 PUSH1 0xA0 DUP3 ADD MSTORE PUSH16 0x3A111D101A181816113AB936111D1011 PUSH1 0x81 SHL PUSH1 0xC0 DUP3 ADD MSTORE PUSH32 0x646174613A696D6167652F7376672B786D6C3B6261736536342C000000000000 PUSH1 0xD0 DUP3 ADD MSTORE DUP2 MLOAD SWAP2 PUSH2 0xA17 SWAP1 DUP4 SWAP1 PUSH1 0xEA DUP5 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0xDDF JUMP JUMPDEST ADD SWAP1 PUSH5 0x89F57574B PUSH1 0xDA SHL PUSH1 0xEA DUP4 ADD MSTORE PUSH14 0x2261747472696275746573223A5B PUSH1 0x90 SHL PUSH1 0xEF DUP4 ADD MSTORE PUSH1 0xFD DUP3 ADD PUSH32 0x7B226B6579223A22636F6C6F72222C2276616C7565223A222300000000000000 SWAP1 MSTORE MLOAD SWAP1 PUSH2 0x116 SWAP5 DUP3 DUP7 DUP4 ADD PUSH2 0xA78 SWAP3 PUSH2 0xDDF JUMP JUMPDEST ADD PUSH19 0x88B089D1E5C19488E889CDD1C9A5B99C89F4B PUSH1 0x6A SHL DUP1 SWAP5 DUP3 ADD MSTORE PUSH2 0x129 DUP2 ADD PUSH32 0x7B226B6579223A226368756262696E657373222C2276616C7565223A00000000 SWAP1 MSTORE DUP2 MLOAD SWAP1 PUSH2 0x145 SWAP3 DUP3 DUP5 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAD6 SWAP3 PUSH2 0xDDF JUMP JUMPDEST ADD PUSH18 0xB089D1E5C19488E889B9D5B58995C889F4B PUSH1 0x72 SHL DUP1 SWAP3 DUP3 ADD MSTORE PUSH2 0x157 DUP2 ADD PUSH32 0x7B226B6579223A226D6F7574684C656E677468222C2276616C7565223A000000 SWAP1 MSTORE DUP3 MLOAD SWAP1 PUSH2 0x174 SWAP4 DUP3 DUP6 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB33 SWAP3 PUSH2 0xDDF JUMP JUMPDEST ADD SWAP2 DUP3 ADD MSTORE PUSH2 0x186 DUP2 ADD PUSH32 0x7B226B6579223A22757365726E616D65222C2276616C7565223A220000000000 SWAP1 MSTORE DUP3 MLOAD SWAP1 PUSH2 0x1A1 SWAP4 DUP3 DUP6 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB79 SWAP3 PUSH2 0xDDF JUMP JUMPDEST ADD SWAP2 DUP3 ADD MSTORE PUSH22 0x3D9135B2BC911D1134B9AAA81116113B30B63AB2911D PUSH1 0x51 SHL PUSH2 0x1B4 DUP3 ADD MSTORE DUP2 MLOAD SWAP1 PUSH2 0x1CA SWAP3 DUP3 DUP5 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBB7 SWAP3 PUSH2 0xDDF JUMP JUMPDEST PUSH19 0xB089D1E5C19488E88989BDBDB19585B889F4B PUSH1 0x6A SHL SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH32 0x7B226B6579223A2274797065222C2276616C7565223A22000000000000000000 PUSH2 0x1DD DUP3 ADD MSTORE DUP2 MLOAD PUSH2 0x1F4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xC16 SWAP1 DUP4 SWAP1 DUP6 DUP5 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0xDDF JUMP JUMPDEST ADD SWAP1 PUSH18 0x222C2274797065223A22737472696E67227D PUSH1 0x70 SHL SWAP1 DUP3 ADD MSTORE PUSH2 0x206 DUP2 ADD PUSH3 0x5D7D7D PUSH1 0xE8 SHL SWAP1 MSTORE SUB PUSH2 0x1E9 DUP2 ADD DUP4 MSTORE PUSH2 0x209 ADD PUSH2 0xC56 SWAP1 DUP4 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0xC5F DUP3 PUSH2 0x2897 JUMP JUMPDEST SWAP1 DUP1 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP3 ADD PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 SWAP1 MSTORE DUP1 MLOAD SWAP1 DUP2 PUSH1 0x3D DUP5 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCA1 SWAP3 PUSH2 0xDDF JUMP JUMPDEST DUP2 ADD SUB PUSH1 0x1D DUP2 ADD DUP4 MSTORE PUSH1 0x3D ADD PUSH2 0xCB7 SWAP1 DUP4 PUSH2 0xE91 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 PUSH2 0x9F SWAP2 DUP4 PUSH2 0xF8F JUMP JUMPDEST DUP10 MLOAD PUSH2 0xCD0 DUP2 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x66616C7365 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP7 PUSH2 0x8BF JUMP JUMPDEST DUP9 MLOAD PUSH2 0xCF3 DUP2 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP13 PUSH2 0x796 JUMP JUMPDEST SWAP9 PUSH1 0x1 ADD SWAP9 PUSH2 0x6BF JUMP JUMPDEST SWAP9 SWAP1 PUSH1 0x64 PUSH1 0x2 SWAP2 DIV SWAP2 ADD SWAP9 PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x4 SWAP2 SWAP11 SWAP3 DIV SWAP2 ADD SWAP9 CODESIZE PUSH2 0x6A9 JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP11 SWAP3 DIV SWAP2 ADD SWAP9 CODESIZE PUSH2 0x69C JUMP JUMPDEST PUSH1 0x10 SWAP2 SWAP11 SWAP3 DIV SWAP2 ADD SWAP9 CODESIZE PUSH2 0x68D JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP11 SWAP3 DIV SWAP2 ADD SWAP9 CODESIZE PUSH2 0x67B JUMP JUMPDEST DUP13 SWAP12 POP DIV SWAP2 POP CODESIZE DUP1 PUSH2 0x661 JUMP JUMPDEST POP CALLVALUE PUSH2 0xA3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xA3 JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE8 SHL SUB NOT DUP4 AND DUP4 SUB PUSH2 0x602 JUMPI POP PUSH2 0x8C PUSH2 0x9F SWAP3 PUSH2 0x1061 JUMP JUMPDEST POP CALLVALUE PUSH2 0xA3 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA3 JUMPI PUSH2 0x9F SWAP1 PUSH2 0xDBB PUSH2 0x259F JUMP JUMPDEST PUSH2 0xDD1 DUP4 SWAP5 SWAP3 SWAP5 MLOAD SWAP5 DUP5 DUP7 SWAP6 DUP7 MSTORE DUP6 ADD SWAP1 PUSH2 0xE02 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xDF2 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDE2 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0xE1B DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE43 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE43 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE43 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE43 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE43 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xF16 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0xEE6 DUP3 PUSH2 0xEB3 JUMP JUMPDEST SWAP3 PUSH2 0xEF4 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xE91 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0xF16 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE0 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0xF16 JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xF16 JUMPI DUP4 PUSH2 0xF4B SWAP2 PUSH1 0x4 ADD PUSH2 0xECF JUMP JUMPDEST SWAP3 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE8 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0xF16 JUMPI SWAP3 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x84 CALLDATALOAD SWAP3 PUSH1 0xA4 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0xF16 JUMPI PUSH2 0xF7F SWAP2 PUSH1 0x4 ADD PUSH2 0xECF JUMP JUMPDEST SWAP1 PUSH1 0xC4 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xF16 JUMPI SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0xFA6 PUSH2 0xFB4 SWAP4 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0xE02 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0xE02 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0xFC4 DUP3 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x10 DUP3 MSTORE PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0xFED DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH2 0xFFA PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0xE91 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x100B PUSH1 0x1F NOT SWAP2 PUSH2 0xEB3 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1024 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x104B JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1069 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1076 DUP4 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x6 DUP4 MSTORE PUSH1 0x20 CALLDATASIZE DUP2 DUP6 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1092 JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 DUP3 BYTE PUSH1 0x4 DUP3 PUSH2 0x10B0 DUP4 DUP4 SHR PUSH1 0xFF AND DUP9 PUSH2 0x103A JUMP JUMPDEST MLOAD AND SWAP3 PUSH1 0x1 SWAP3 DUP6 DUP5 SHL SWAP5 DUP7 DUP7 DIV PUSH1 0x2 EQ DUP8 ISZERO OR ISZERO PUSH2 0x111E JUMPI PUSH2 0x10E4 SWAP2 PUSH1 0xF SWAP2 PUSH1 0x0 BYTE PUSH2 0x10DC DUP9 DUP14 PUSH2 0x103A JUMP JUMPDEST MSTORE8 AND DUP9 PUSH2 0x103A JUMP JUMPDEST MLOAD AND SWAP2 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x1109 JUMPI POP SWAP1 PUSH2 0x167 PUSH2 0x1104 SWAP4 SWAP3 PUSH1 0x0 BYTE SWAP2 DUP8 PUSH2 0x103A JUMP JUMPDEST PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x11 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x11AD JUMPI DUP1 DUP2 PUSH1 0x0 SWAP3 JUMPDEST PUSH2 0x1199 JUMPI POP PUSH2 0x114D DUP3 PUSH2 0xFE3 JUMP JUMPDEST SWAP2 SWAP1 DUP1 JUMPDEST PUSH2 0x115A JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH1 0xA SWAP1 PUSH1 0x30 SWAP3 DUP3 DUP3 MOD DUP5 ADD DUP1 SWAP5 GT PUSH2 0x1024 JUMPI DUP1 ISZERO PUSH2 0x1024 JUMPI PUSH1 0x0 NOT ADD SWAP3 PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x0 BYTE PUSH2 0x1191 DUP5 DUP7 PUSH2 0x103A JUMP JUMPDEST MSTORE8 DIV DUP1 PUSH2 0x1151 JUMP JUMPDEST SWAP2 PUSH2 0x11A5 PUSH1 0xA SWAP2 PUSH2 0x1015 JUMP JUMPDEST SWAP3 DIV DUP1 PUSH2 0x113F JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x11BA DUP2 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x11D8 DUP3 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x5 DUP3 MSTORE PUSH5 0x33B932B2B7 PUSH1 0xD9 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x11F9 DUP3 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x4 DUP3 MSTORE PUSH4 0x626C7565 PUSH1 0xE0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1219 DUP3 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x3 DUP3 MSTORE PUSH3 0x1C9959 PUSH1 0xEA SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1238 DUP3 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x6 DUP3 MSTORE PUSH6 0x707572706C65 PUSH1 0xD0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x125A DUP3 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x6 DUP3 MSTORE PUSH6 0x79656C6C6F77 PUSH1 0xD0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x127C DUP3 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x2330306666303 PUSH1 0xCC SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST SWAP5 SWAP6 SWAP5 SWAP3 SWAP4 SWAP2 DUP6 ISZERO PUSH2 0x2430 JUMPI DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 DUP2 ADD SWAP2 DUP3 KECCAK256 PUSH2 0x12B1 PUSH2 0x11CB JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x2318 JUMPI POP POP POP POP PUSH2 0x12C8 PUSH2 0x126F JUMP JUMPDEST SWAP6 JUMPDEST PUSH1 0x3 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 DUP6 DUP3 MSTORE PUSH6 0xDAC2E8E4D2F PUSH1 0xD3 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x26 DUP2 MSTORE PUSH2 0x12F3 DUP2 PUSH2 0xE59 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP7 ISZERO PUSH2 0x2311 JUMPI DUP2 AND LT JUMPDEST DUP6 ISZERO PUSH2 0x2303 JUMPI PUSH1 0x40 MLOAD PUSH2 0x1312 DUP2 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x7 DUP2 MSTORE PUSH7 0x11B33318183333 PUSH1 0xC9 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMPDEST DUP6 PUSH1 0x9 MUL SWAP6 PUSH1 0x9 DUP8 DIV DUP2 SUB PUSH2 0x1024 JUMPI PUSH2 0x32A SWAP8 DUP9 DUP9 DUP2 SUB GT PUSH2 0x1024 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x22EE JUMPI POP PUSH1 0x40 MLOAD PUSH32 0x3C66696C7465722069643D226D61747269782D676C6F772220783D222D323025 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2220793D222D323025222077696474683D223134302522206865696768743D22 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x189A1812911F PUSH1 0xD1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x3C6665476175737369616E426C757220737464446576696174696F6E3D223322 PUSH1 0x66 DUP3 ADD MSTORE PUSH16 0x103932B9BAB63A1E9131363AB911179F PUSH1 0x81 SHL PUSH1 0x86 DUP3 ADD MSTORE PUSH2 0x14F9 PUSH1 0xAD DUP3 PUSH2 0x13FC PUSH1 0x96 DUP3 ADD PUSH2 0x252E JUMP JUMPDEST PUSH9 0x1E17B334B63A32B91F PUSH1 0xB9 SHL DUP2 MSTORE PUSH32 0x3C6C696E6561724772616469656E742069643D226D61747269782D6267222078 PUSH1 0x9 DUP3 ADD MSTORE PUSH32 0x313D223025222079313D223025222078323D223025222079323D223130302522 PUSH1 0x29 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0xF9 SHL PUSH1 0x49 DUP3 ADD MSTORE PUSH32 0x3C73746F70206F66667365743D223025222073746F702D636F6C6F723D222330 PUSH1 0x4A DUP3 ADD MSTORE PUSH8 0x18181C181811179F PUSH1 0xC1 SHL PUSH1 0x6A DUP3 ADD MSTORE PUSH32 0x3C73746F70206F66667365743D2231303025222073746F702D636F6C6F723D22 PUSH1 0x72 DUP3 ADD MSTORE PUSH10 0x1198181898181811179F PUSH1 0xB1 SHL PUSH1 0x92 DUP3 ADD MSTORE PUSH17 0x1E17B634B732B0B923B930B234B2B73A1F PUSH1 0x79 SHL PUSH1 0x9C DUP3 ADD MSTORE SUB PUSH1 0x8D DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xE91 JUMP JUMPDEST SWAP3 JUMPDEST PUSH1 0x0 SWAP1 ISZERO PUSH2 0x2257 JUMPI POP PUSH1 0x40 MLOAD PUSH2 0x1510 DUP2 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x18 DUP2 MSTORE PUSH32 0x3C6720636C6173733D226D61747269782D6368617273223E0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP6 PUSH1 0x40 MLOAD SWAP10 PUSH2 0x1E0 DUP1 DUP13 ADD DUP13 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE43 JUMPI PUSH1 0x40 MSTORE CALLDATASIZE DUP13 CALLDATACOPY PUSH1 0x0 JUMPDEST PUSH1 0xFF SWAP1 DUP2 DUP2 AND SWAP2 PUSH1 0xF DUP4 LT ISZERO PUSH2 0x15C6 JUMPI PUSH2 0x17C DUP13 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0xFF PUSH1 0xF8 SHL DUP6 PUSH1 0xF8 SHL AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x21 DUP2 MSTORE PUSH2 0x159B DUP2 PUSH2 0xE59 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 MOD PUSH1 0xA DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1024 JUMPI PUSH2 0x15C1 SWAP4 DUP16 SWAP3 PUSH2 0x15BB SWAP3 AND SWAP3 PUSH2 0x258E JUMP JUMPDEST MSTORE PUSH2 0x257D JUMP JUMPDEST PUSH2 0x1561 JUMP JUMPDEST POP POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP10 SWAP12 SWAP1 SWAP3 SWAP5 SWAP7 SWAP9 SWAP11 PUSH1 0xFF SWAP12 PUSH1 0xF PUSH1 0x0 SWAP14 DUP15 JUMPDEST AND LT ISZERO PUSH2 0x182E JUMPI PUSH1 0x0 DUP15 JUMPDEST PUSH1 0x8 PUSH1 0xFF DUP4 AND LT PUSH2 0x160B JUMPI POP POP PUSH1 0xF PUSH2 0x1604 PUSH1 0xFF SWAP15 PUSH2 0x257D JUMP JUMPDEST SWAP14 DUP15 PUSH2 0x15DF JUMP JUMPDEST SWAP1 SWAP12 DUP13 DUP16 SWAP2 DUP16 SWAP1 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP4 DUP4 DUP6 MSTORE PUSH1 0xFF PUSH1 0xF8 SHL PUSH1 0xF8 SWAP3 PUSH2 0x17C DUP3 DUP1 DUP11 DUP8 SHL AND SWAP5 DUP6 PUSH1 0x40 DUP6 ADD MSTORE DUP7 SHL AND SWAP8 PUSH1 0x41 SWAP3 DUP10 DUP5 DUP3 ADD MSTORE PUSH1 0x22 DUP2 MSTORE PUSH2 0x164E DUP2 PUSH2 0xE59 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 MOD SWAP8 PUSH1 0xA SWAP10 DUP11 DUP11 ADD DUP1 SWAP11 GT PUSH2 0x1024 JUMPI PUSH4 0x31B430B9 PUSH1 0xE1 SHL SWAP11 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 DUP11 DUP3 MSTORE DUP8 PUSH1 0x40 DUP3 ADD MSTORE DUP12 DUP7 DUP3 ADD MSTORE PUSH1 0x42 SWAP14 DUP15 DUP3 ADD MSTORE PUSH1 0x26 DUP2 MSTORE PUSH2 0x1693 DUP2 PUSH2 0xE59 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 MOD SWAP3 PUSH1 0x30 DUP5 ADD DUP1 SWAP5 GT PUSH2 0x1024 JUMPI PUSH1 0xFF PUSH2 0x1712 DUP2 PUSH2 0x170B PUSH2 0x1828 SWAP16 SWAP6 DUP3 PUSH2 0x1822 SWAP16 PUSH1 0x67 SWAP16 PUSH1 0x5 SWAP1 PUSH7 0x1E17BA32BC3A1F PUSH1 0xC9 SHL SWAP15 PUSH5 0x64656C6179 PUSH1 0xD8 SHL PUSH2 0x1719 SWAP13 DUP7 SWAP6 PUSH2 0x203 SWAP14 PUSH1 0x40 MLOAD SWAP5 PUSH1 0x20 DUP7 ADD SWAP7 DUP8 MSTORE PUSH1 0x40 DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH1 0x27 DUP2 MSTORE PUSH2 0x16FE DUP2 PUSH2 0xE59 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 MOD AND SWAP9 AND SWAP1 PUSH2 0x258E JUMP JUMPDEST MLOAD AND PUSH2 0x1133 JUMP JUMPDEST SWAP12 AND PUSH2 0x1133 JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP7 SHL AND DUP6 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH2 0x1734 DUP3 PUSH2 0xE27 JUMP JUMPDEST PUSH32 0x2220636C6173733D226D61747269782D6368617222207374796C653D22616E69 PUSH1 0x40 MLOAD SWAP10 DUP8 PUSH2 0x176E DUP13 SWAP10 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP1 DUP14 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST DUP9 ADD PUSH9 0x1E3A32BC3A103C1E91 PUSH1 0xB9 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD SWAP1 PUSH2 0x1798 DUP3 PUSH1 0x29 SWAP5 PUSH1 0x20 DUP7 DUP6 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST ADD SWAP1 PUSH5 0x11103C9E91 PUSH1 0xD9 SHL SWAP1 DUP3 ADD MSTORE DUP3 MLOAD SWAP1 PUSH2 0x17BD DUP3 PUSH1 0x2E SWAP6 PUSH1 0x20 DUP8 DUP6 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST ADD SWAP2 DUP3 ADD MSTORE PUSH14 0x36B0BA34B7B716B232B630BC9D1 PUSH1 0x95 SHL PUSH1 0x4E DUP3 ADD MSTORE DUP3 MLOAD SWAP1 PUSH2 0x17EF DUP3 PUSH1 0x5C SWAP6 PUSH1 0x20 DUP8 DUP6 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST ADD SWAP2 PUSH4 0x399D911F PUSH1 0xE1 SHL SWAP1 DUP4 ADD MSTORE MLOAD SWAP1 PUSH2 0x180F DUP3 PUSH1 0x60 SWAP6 DUP7 DUP5 ADD SWAP1 PUSH2 0xDDF JUMP JUMPDEST ADD SWAP2 DUP3 ADD MSTORE SUB PUSH1 0x47 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xE91 JUMP JUMPDEST SWAP12 PUSH2 0x257D JUMP JUMPDEST DUP15 PUSH2 0x15EA JUMP JUMPDEST PUSH32 0x2032333522207374726F6B653D22626C61636B22207374726F6B652D77696474 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 SWAP14 POP PUSH32 0x3B206F7061636974793A20302E333B20616E696D6174696F6E3A206661646520 SWAP13 POP PUSH2 0xFB4 SWAP12 POP SWAP1 PUSH2 0x18FE PUSH2 0x18F8 PUSH1 0xB PUSH32 0x3C6720636C6173733D226C6F6F6769652D636F6E7461696E6572223E00000000 SWAP5 PUSH2 0x18F0 PUSH2 0x5AB SWAP16 PUSH2 0x18EA PUSH1 0x24 PUSH1 0x40 MLOAD DUP4 PUSH2 0x18CD DUP3 SWAP6 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST DUP2 ADD PUSH4 0x1E17B39F PUSH1 0xE1 SHL PUSH1 0x20 DUP3 ADD MSTORE SUB PUSH1 0x4 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xE91 JUMP JUMPDEST SWAP13 PUSH2 0x1133 JUMP JUMPDEST SWAP8 SUB DIV PUSH2 0x1133 JUMP JUMPDEST SWAP6 PUSH2 0x1133 JUMP JUMPDEST DUP2 MLOAD SWAP1 SWAP8 SWAP1 PUSH1 0x0 SWAP1 ISZERO PUSH2 0x223F JUMPI POP ISZERO PUSH2 0x218A JUMPI PUSH2 0x19BA PUSH1 0x7D PUSH1 0x40 MLOAD DUP1 SWAP4 PUSH32 0x3C7465787420783D223230302220793D223330302220636C6173733D22757365 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x726E616D6522207374796C653D22666F6E742D66616D696C793A2027436F6D69 PUSH1 0x40 DUP4 ADD MSTORE PUSH22 0x319029B0B7399026A993961031BAB939B4BB329D911F PUSH1 0x51 SHL PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x199A DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 PUSH1 0x76 DUP7 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST DUP2 ADD PUSH7 0x1E17BA32BC3A1F PUSH1 0xC9 SHL PUSH1 0x76 DUP3 ADD MSTORE SUB PUSH1 0x5D DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xE91 JUMP JUMPDEST SWAP8 JUMPDEST PUSH7 0x1E17B232B3399F PUSH1 0xC9 SHL PUSH1 0x40 MLOAD DUP1 SWAP15 DUP2 SWAP13 PUSH32 0x3C73766720786D6C6E733D22687474703A2F2F7777772E77332E6F72672F3230 PUSH1 0x20 DUP5 ADD MSTORE PUSH32 0x30302F737667222076696577426F783D22302030203430302034303022207769 PUSH1 0x40 DUP5 ADD MSTORE PUSH32 0x6474683D2234303022206865696768743D22343030223E000000000000000000 PUSH1 0x60 DUP5 ADD MSTORE PUSH6 0x1E3232B3399F PUSH1 0xD1 SHL PUSH1 0x77 DUP5 ADD MSTORE PUSH7 0x1E39BA3CB6329F PUSH1 0xC9 SHL PUSH1 0x7D DUP5 ADD MSTORE PUSH32 0x40696D706F72742075726C282268747470733A2F2F666F6E74732E676F6F676C PUSH1 0x84 DUP5 ADD MSTORE PUSH32 0x65617069732E636F6D2F637373323F66616D696C793D436F6D69632B53616E73 PUSH1 0xA4 DUP5 ADD MSTORE PUSH32 0x2B4D5326616D703B646973706C61793D7377617022293B000000000000000000 PUSH1 0xC4 DUP5 ADD MSTORE PUSH32 0x2E757365726E616D65207B20666F6E742D66616D696C793A2022436F6D696320 PUSH1 0xDB DUP5 ADD MSTORE PUSH32 0x53616E73204D53222C20637572736976653B20666F6E742D73697A653A203136 PUSH1 0xFB DUP5 ADD MSTORE PUSH32 0x70783B2066696C6C3A2077686974653B20746578742D616E63686F723A206D69 PUSH2 0x11B DUP5 ADD MSTORE PUSH7 0x64646C653B207D PUSH1 0xC8 SHL PUSH2 0x13B DUP5 ADD MSTORE PUSH32 0x2E6D61747269782D63686172207B20666F6E742D66616D696C793A206D6F6E6F PUSH2 0x142 DUP5 ADD MSTORE PUSH13 0x39B830B1B29D903334B6361D1 PUSH1 0x9D SHL PUSH2 0x162 DUP5 ADD MSTORE PUSH2 0x1BA9 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 PUSH2 0x16F DUP1 SWAP8 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST DUP14 ADD SWAP2 DUP3 ADD MSTORE PUSH32 0x337320696E66696E6974652C2066616C6C203873206C696E65617220696E6669 PUSH2 0x18F DUP3 ADD MSTORE PUSH7 0x6E6974653B207D PUSH1 0xC8 SHL PUSH2 0x1AF DUP3 ADD MSTORE PUSH32 0x406B65796672616D65732066616465207B203025207B206F7061636974793A20 PUSH2 0x1B6 DUP3 ADD MSTORE PUSH32 0x302E323B207D20333025207B206F7061636974793A20302E393B207D20373025 PUSH2 0x1D6 DUP3 ADD MSTORE PUSH32 0x207B206F7061636974793A20302E393B207D2031303025207B206F7061636974 PUSH2 0x1F6 DUP3 ADD MSTORE PUSH11 0x793A20302E323B207D207D PUSH1 0xA8 SHL PUSH2 0x216 DUP3 ADD MSTORE PUSH32 0x406B65796672616D65732066616C6C207B2066726F6D207B207472616E73666F PUSH2 0x221 DUP3 ADD MSTORE PUSH32 0x726D3A207472616E736C61746559282D32307078293B207D20746F207B207472 PUSH2 0x241 DUP3 ADD MSTORE PUSH32 0x616E73666F726D3A207472616E736C61746559283432307078293B207D207D00 PUSH2 0x261 DUP3 ADD MSTORE PUSH8 0x1E17B9BA3CB6329F PUSH1 0xC1 SHL PUSH2 0x280 DUP3 ADD MSTORE DUP3 MLOAD SWAP1 PUSH2 0x1D0F DUP3 PUSH2 0x288 SWAP6 PUSH1 0x20 DUP8 DUP6 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST ADD SWAP2 DUP3 ADD MSTORE PUSH32 0x3C726563742077696474683D2234303022206865696768743D22343030222066 PUSH2 0x28F DUP3 ADD MSTORE PUSH13 0x34B6361E91313630B1B591179F PUSH1 0x99 SHL PUSH2 0x2AF DUP3 ADD MSTORE DUP8 MLOAD SWAP1 PUSH2 0x1D69 DUP3 PUSH2 0x2BC SWAP11 PUSH1 0x20 DUP13 DUP6 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST ADD SWAP7 DUP8 ADD MSTORE PUSH13 0x1E339034B21E9132BCB298911F PUSH1 0x99 SHL PUSH2 0x2D8 DUP8 ADD MSTORE PUSH32 0x3C656C6C69707365207374726F6B652D77696474683D2233222072793D223239 DUP1 PUSH2 0x2E5 DUP9 ADD MSTORE PUSH32 0x2E35222072783D2232392E35222069643D227376675F31222063793D22313534 PUSH2 0x305 DUP9 ADD MSTORE PUSH32 0x2E35222063783D223138312E3522207374726F6B653D2223303030222066696C PUSH2 0x325 DUP9 ADD MSTORE PUSH32 0x222072793D2235312E383030363522207374726F6B653D2223303030222F3E00 PUSH10 0x361E9111B3333311179F PUSH1 0xB1 SHL SWAP3 DUP4 PUSH2 0x345 DUP11 ADD MSTORE PUSH32 0x3C656C6C697073652072793D22332E35222072783D22322E35222069643D2273 PUSH2 0x34F DUP11 ADD MSTORE PUSH32 0x76675F33222063793D223135342E35222063783D223137332E3522207374726F PUSH2 0x36F DUP11 ADD MSTORE PUSH32 0x6B652D77696474683D223322207374726F6B653D2223303030222066696C6C3D PUSH2 0x38F DUP11 ADD MSTORE PUSH11 0x111198181818181811179F PUSH1 0xA9 SHL PUSH2 0x3AF DUP11 ADD MSTORE PUSH32 0x22207374726F6B652D77696474683D2233222063783D223230342E3522206379 PUSH4 0x1E17B39F PUSH1 0xE1 SHL SWAP10 DUP11 PUSH2 0x3BA DUP3 ADD MSTORE PUSH13 0x1E339034B21E913432B0B2111F PUSH1 0x99 SHL PUSH2 0x3BE DUP3 ADD MSTORE PUSH15 0x1E32B63634B839B2903334B6361E91 PUSH1 0x89 SHL PUSH2 0x3CB DUP3 ADD MSTORE DUP3 MLOAD SWAP1 PUSH2 0x1F34 DUP3 PUSH2 0x3DA SWAP6 PUSH1 0x20 DUP8 DUP6 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST ADD SWAP2 DUP3 ADD MSTORE PUSH32 0x3D223231312E3830303635222069643D227376675F35222072783D2200000000 PUSH2 0x3FA DUP3 ADD MSTORE DUP5 MLOAD SWAP1 PUSH2 0x1F77 DUP3 PUSH2 0x416 SWAP8 PUSH1 0x20 DUP10 DUP6 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST ADD SWAP4 DUP5 ADD MSTORE DUP7 PUSH2 0x435 DUP5 ADD MSTORE PUSH13 0x1E339034B21E9132BCB299111F PUSH1 0x99 SHL PUSH2 0x439 DUP5 ADD MSTORE PUSH2 0x446 DUP4 ADD MSTORE PUSH32 0x2E35222072783D2232392E35222069643D227376675F32222063793D22313638 PUSH2 0x466 DUP4 ADD MSTORE PUSH32 0x2E35222063783D223230392E3522207374726F6B653D2223303030222066696C PUSH2 0x486 DUP4 ADD MSTORE PUSH2 0x4A6 DUP3 ADD MSTORE PUSH32 0x3C656C6C697073652072793D22332E35222072783D2233222069643D22737667 PUSH2 0x4B0 DUP3 ADD MSTORE PUSH32 0x5F34222063793D223136392E35222063783D2232303822207374726F6B652D77 PUSH2 0x4D0 DUP3 ADD MSTORE PUSH32 0x696474683D2233222066696C6C3D222330303030303022207374726F6B653D22 PUSH2 0x4F0 DUP3 ADD MSTORE PUSH7 0x1198181811179F PUSH1 0xC9 SHL PUSH2 0x510 DUP3 ADD MSTORE DUP5 PUSH2 0x517 DUP3 ADD MSTORE PUSH32 0x3C6720636C6173733D226D6F75746822207472616E73666F726D3D227472616E PUSH2 0x51B DUP3 ADD MSTORE PUSH6 0xE6D8C2E8CA5 PUSH1 0xD3 SHL PUSH2 0x53B DUP3 ADD MSTORE DUP2 MLOAD SWAP1 PUSH2 0x20CF DUP3 PUSH2 0x541 SWAP5 PUSH1 0x20 DUP7 DUP6 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST ADD SWAP1 PUSH5 0x161814911F PUSH1 0xD9 SHL SWAP1 DUP3 ADD MSTORE PUSH32 0x3C7061746820643D224D20313330203234302051203136352032353020000000 PUSH2 0x546 DUP3 ADD MSTORE DUP3 MLOAD SWAP1 PUSH2 0x211C DUP3 PUSH2 0x563 SWAP6 PUSH1 0x20 DUP8 DUP6 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST ADD SWAP2 DUP3 ADD MSTORE PUSH32 0x683D2233222066696C6C3D227472616E73706172656E74222F3E000000000000 PUSH2 0x583 DUP3 ADD MSTORE DUP2 PUSH2 0x59D DUP3 ADD MSTORE DUP3 MLOAD SWAP1 PUSH2 0x2166 DUP3 PUSH2 0x5A1 SWAP6 PUSH1 0x20 DUP8 DUP6 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST ADD SWAP2 DUP3 ADD MSTORE PUSH6 0x1E17B9BB339F PUSH1 0xD1 SHL PUSH2 0x5A5 DUP3 ADD MSTORE SUB PUSH2 0x58B DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0x223A PUSH1 0x84 PUSH1 0x40 MLOAD DUP1 SWAP4 PUSH32 0x3C7465787420783D223230302220793D223330302220666F6E742D66616D696C PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x793D22417269616C2220666F6E742D73697A653D223136222066696C6C3D2223 PUSH1 0x40 DUP4 ADD MSTORE PUSH32 0x6666666666662220746578742D616E63686F723D226D6964646C65223E000000 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x221A DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 PUSH1 0x7D DUP7 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST DUP2 ADD PUSH7 0x1E17BA32BC3A1F PUSH1 0xC9 SHL PUSH1 0x7D DUP3 ADD MSTORE SUB PUSH1 0x64 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0x19BA JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 MLOAD SWAP1 PUSH2 0x224F DUP3 PUSH2 0xE75 JUMP JUMPDEST DUP2 MSTORE SWAP8 PUSH2 0x19BC JUMP JUMPDEST PUSH2 0xFB4 SWAP10 SWAP2 SWAP5 SWAP8 POP SWAP11 PUSH32 0x3C6720636C6173733D226C6F6F6769652D636F6E7461696E6572223E00000000 PUSH32 0x3B206F7061636974793A20302E333B20616E696D6174696F6E3A206661646520 SWAP12 PUSH2 0x18FE PUSH2 0x18F8 PUSH32 0x2032333522207374726F6B653D22626C61636B22207374726F6B652D77696474 SWAP8 SWAP11 SWAP7 SWAP10 SWAP16 PUSH2 0x5AB SWAP14 PUSH2 0x18F0 PUSH1 0xB SWAP3 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x22E6 DUP3 PUSH2 0xE75 JUMP JUMPDEST DUP2 MSTORE SWAP13 PUSH2 0x1133 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x22FB DUP3 PUSH2 0xE75 JUMP JUMPDEST DUP2 MSTORE SWAP3 PUSH2 0x14FB JUMP JUMPDEST PUSH2 0x230B PUSH2 0x126F JUMP JUMPDEST SWAP1 PUSH2 0x1328 JUMP JUMPDEST AND ISZERO PUSH2 0x1300 JUMP JUMPDEST DUP1 MLOAD DUP3 KECCAK256 PUSH2 0x2324 PUSH2 0x11EC JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x2357 JUMPI POP POP POP PUSH7 0x11981831B1B333 PUSH1 0xC9 SHL PUSH1 0x40 MLOAD SWAP2 PUSH2 0x234A DUP4 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x7 DUP4 MSTORE DUP3 ADD MSTORE SWAP6 PUSH2 0x12CA JUMP JUMPDEST DUP1 MLOAD DUP3 KECCAK256 PUSH2 0x2363 PUSH2 0x120C JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x2389 JUMPI POP POP POP PUSH7 0x11B33318181B1B PUSH1 0xC9 SHL PUSH1 0x40 MLOAD SWAP2 PUSH2 0x234A DUP4 PUSH2 0xE27 JUMP JUMPDEST DUP1 MLOAD DUP3 KECCAK256 PUSH2 0x2395 PUSH2 0x122B JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x23BB JUMPI POP POP POP PUSH7 0x11B1B198183333 PUSH1 0xC9 SHL PUSH1 0x40 MLOAD SWAP2 PUSH2 0x234A DUP4 PUSH2 0xE27 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x23C6 PUSH2 0x124D JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP5 ADD KECCAK256 SUB PUSH2 0x23EA JUMPI POP PUSH7 0x2366666363303 PUSH1 0xCC SHL PUSH1 0x40 MLOAD SWAP2 PUSH2 0x234A DUP4 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x21 PUSH2 0x241A SWAP3 PUSH2 0x23FC PUSH2 0x242A SWAP4 PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP3 PUSH1 0x23 PUSH1 0xF8 SHL DUP8 SWAP5 DUP6 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 SWAP2 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST DUP2 ADD SUB PUSH1 0x1 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xE91 JUMP JUMPDEST SWAP6 PUSH2 0x12CA JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 DUP2 ADD SWAP2 DUP3 KECCAK256 PUSH2 0x2443 PUSH2 0x11CB JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x2469 JUMPI POP POP POP PUSH7 0x23613365363335 PUSH1 0xC8 SHL PUSH1 0x40 MLOAD SWAP2 PUSH2 0x234A DUP4 PUSH2 0xE27 JUMP JUMPDEST DUP1 MLOAD DUP3 KECCAK256 PUSH2 0x2475 PUSH2 0x11EC JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x249B JUMPI POP POP POP PUSH7 0x1199B11C19331B PUSH1 0xC9 SHL PUSH1 0x40 MLOAD SWAP2 PUSH2 0x234A DUP4 PUSH2 0xE27 JUMP JUMPDEST DUP1 MLOAD DUP3 KECCAK256 PUSH2 0x24A7 PUSH2 0x120C JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x24CD JUMPI POP POP POP PUSH7 0x8D9598D0D0D0D PUSH1 0xCA SHL PUSH1 0x40 MLOAD SWAP2 PUSH2 0x234A DUP4 PUSH2 0xE27 JUMP JUMPDEST DUP1 MLOAD DUP3 KECCAK256 PUSH2 0x24D9 PUSH2 0x122B JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x24FF JUMPI POP POP POP PUSH7 0x23613835356637 PUSH1 0xC8 SHL PUSH1 0x40 MLOAD SWAP2 PUSH2 0x234A DUP4 PUSH2 0xE27 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x250A PUSH2 0x124D JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP5 ADD KECCAK256 SUB PUSH2 0x23EA JUMPI POP PUSH7 0x23666163633135 PUSH1 0xC8 SHL PUSH1 0x40 MLOAD SWAP2 PUSH2 0x234A DUP4 PUSH2 0xE27 JUMP JUMPDEST PUSH32 0x3C6665436F6D706F7369746520696E3D22536F75726365477261706869632220 DUP2 MSTORE PUSH32 0x696E323D22626C757222206F70657261746F723D226F766572222F3E00000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xFF DUP2 EQ PUSH2 0x1024 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xF DUP2 LT ISZERO PUSH2 0x104B JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x3C73766720786D6C6E733D22687474703A2F2F7777772E77332E6F72672F3230 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x30302F737667222077696474683D2234303022206865696768743D2234303022 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x2076696577426F783D223020302034303020343030223E000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x3C726563742077696474683D2234303022206865696768743D22343030222066 PUSH1 0x77 DUP3 ADD MSTORE PUSH12 0x34B6361E911198181811179F PUSH1 0xA1 SHL PUSH1 0x97 DUP3 ADD MSTORE PUSH18 0x1E3334B63A32B91034B21E9133B637BB911F PUSH1 0x71 SHL PUSH1 0xA3 DUP3 ADD MSTORE PUSH32 0x3C6665476175737369616E426C757220737464446576696174696F6E3D22332E PUSH1 0xB5 DUP3 ADD MSTORE PUSH18 0x1A91103932B9BAB63A1E9131363AB911179F PUSH1 0x71 SHL PUSH1 0xD5 DUP3 ADD MSTORE SWAP1 PUSH2 0x2836 PUSH2 0x113 DUP4 PUSH2 0x26C2 PUSH1 0xE7 DUP3 ADD PUSH2 0x252E JUMP JUMPDEST PUSH9 0x1E17B334B63A32B91F PUSH1 0xB9 SHL DUP2 MSTORE PUSH32 0x3C7465787420783D223230302220793D223138302220666F6E742D66616D696C PUSH1 0x9 DUP3 ADD MSTORE PUSH32 0x793D22417269616C2220666F6E742D73697A653D223430222066696C6C3D2223 PUSH1 0x29 DUP3 ADD MSTORE PUSH32 0x6666662220746578742D616E63686F723D226D6964646C65222066696C746572 PUSH1 0x49 DUP3 ADD MSTORE PUSH32 0x3D2275726C2823676C6F7729223E4C756B736F4C6F6F676965733C2F74657874 PUSH1 0x69 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0xF9 SHL PUSH1 0x89 DUP3 ADD MSTORE PUSH32 0x3C7465787420783D223230302220793D223233302220666F6E742D66616D696C PUSH1 0x8A DUP3 ADD MSTORE PUSH32 0x793D22417269616C2220666F6E742D73697A653D223230222066696C6C3D2223 PUSH1 0xAA DUP3 ADD MSTORE PUSH32 0x3066302220746578742D616E63686F723D226D6964646C65222066696C746572 PUSH1 0xCA DUP3 ADD MSTORE PUSH32 0x3D2275726C2823676C6F7729223E4D61747269782045646974696F6E3C2F7465 PUSH1 0xEA DUP3 ADD MSTORE PUSH3 0x3C3A1F PUSH1 0xE9 SHL PUSH2 0x10A DUP3 ADD MSTORE PUSH6 0x1E17B9BB339F PUSH1 0xD1 SHL PUSH2 0x10D DUP3 ADD MSTORE SUB PUSH1 0xF3 DUP2 ADD DUP6 MSTORE ADD DUP4 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0x283F DUP3 PUSH2 0x2897 JUMP JUMPDEST SWAP2 PUSH2 0x2893 PUSH1 0x3A PUSH1 0x40 MLOAD DUP1 SWAP6 PUSH32 0x646174613A696D6167652F7376672B786D6C3B6261736536342C000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2883 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST DUP2 ADD SUB PUSH1 0x1A DUP2 ADD DUP7 MSTORE ADD DUP5 PUSH2 0xE91 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x29D7 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x28AB DUP3 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 DUP3 MSTORE PUSH32 0x4142434445464748494A4B4C4D4E4F505152535455565758595A616263646566 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x6768696A6B6C6D6E6F707172737475767778797A303132333435363738392B2F PUSH1 0x40 DUP4 ADD MSTORE DUP1 MLOAD PUSH1 0x2 SWAP2 DUP3 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1024 JUMPI PUSH1 0x3 SWAP2 DUP3 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xFE SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1024 JUMPI PUSH2 0x292D SWAP1 DUP5 SWAP6 SWAP5 SHL PUSH2 0xFE3 JUMP JUMPDEST SWAP4 PUSH1 0x20 DUP6 ADD SWAP4 DUP3 SWAP2 DUP4 MLOAD DUP5 ADD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MLOAD SWAP5 PUSH1 0x0 DUP6 MSTORE JUMPDEST DUP4 DUP2 LT PUSH2 0x2986 JUMPI POP POP POP POP MSTORE MLOAD MOD DUP1 PUSH1 0x1 EQ PUSH2 0x2973 JUMPI PUSH1 0x2 EQ PUSH2 0x2968 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x3D SWAP1 PUSH1 0x0 NOT ADD MSTORE8 SWAP1 JUMP JUMPDEST POP PUSH1 0x3D SWAP1 DUP2 PUSH1 0x0 NOT DUP3 ADD MSTORE8 PUSH1 0x1 NOT ADD MSTORE8 SWAP1 JUMP JUMPDEST DUP8 PUSH1 0x4 SWAP2 SWAP10 SWAP3 SWAP4 SWAP5 SWAP10 ADD SWAP2 DUP3 MLOAD PUSH1 0x1 SWAP1 PUSH1 0x3F SWAP1 DUP3 DUP3 DUP3 PUSH1 0x12 SHR AND DUP9 ADD ADD MLOAD DUP5 MSTORE8 DUP3 DUP3 DUP3 PUSH1 0xC SHR AND DUP9 ADD ADD MLOAD DUP4 DUP6 ADD MSTORE8 DUP3 DUP3 DUP3 PUSH1 0x6 SHR AND DUP9 ADD ADD MLOAD DUP9 DUP6 ADD MSTORE8 AND DUP6 ADD ADD MLOAD DUP10 DUP3 ADD MSTORE8 ADD SWAP8 SWAP3 SWAP2 SWAP1 PUSH2 0x2947 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x29E4 DUP2 PUSH2 0xE75 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0xEE CODESIZE PUSH3 0x45555D BYTE 0x2C BYTE 0x2A PUSH15 0x6099D829CA03411BA3A550FD95FCCE 0x2A 0xCE PUSH30 0xC93264736F6C634300081400330000000000000000000000000000000000 ","sourceMap":"810:18983:30:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_bytes32t_stringt_bytes3t_uint256t_uint256t_stringt_bool":{"entryPoint":3867,"id":null,"parameterSlots":1,"returnSlots":7},"abi_decode_string":{"entryPoint":3791,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes_bytes":{"entryPoint":3983,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":3586,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral_427b":{"entryPoint":9518,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_array_bytes":{"entryPoint":4067,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":3763,"id":null,"parameterSlots":1,"returnSlots":1},"copy_literal_to_memory_0ceb74360896f85b39388579e9f44ea71ffeef099012760c53d69361c5916c4e":{"entryPoint":4651,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_27617207effe6bfd81a3e2b21d8a20c4e622b23e5422d607771b4f8b8ba006fa":{"entryPoint":4685,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_8eec9d5ae546887db6b6a3889e6591fe96f3c16bc9d921551a4aac3adce52996":{"entryPoint":4620,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_c84abec21ba1fee09b64be2206d75e3d0bfa99fc7af73751b1fd348db78e9eb7":{"entryPoint":4719,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f":{"entryPoint":4023,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_f99e8d094ee97e7be9a3d7269f09f9996041160cc5c134b6a863be5b0ce9b5bd":{"entryPoint":4555,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_fa187c1e7b6b42ab8b2d9415ab7e6b1e71b551fcdc8151ebafe46e40a10d90ad":{"entryPoint":4588,"id":null,"parameterSlots":0,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3551,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":3729,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_19102":{"entryPoint":3623,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_19106":{"entryPoint":3673,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_19127":{"entryPoint":3701,"id":null,"parameterSlots":1,"returnSlots":0},"fun_encode":{"entryPoint":10391,"id":3833,"parameterSlots":1,"returnSlots":1},"fun_generateCollectionSVG":{"entryPoint":9631,"id":7024,"parameterSlots":0,"returnSlots":2},"fun_generateLoogieSVG":{"entryPoint":4754,"id":6757,"parameterSlots":7,"returnSlots":1},"fun_toColorHexString":{"entryPoint":4193,"id":6205,"parameterSlots":1,"returnSlots":1},"fun_uint2str":{"entryPoint":4403,"id":6286,"parameterSlots":1,"returnSlots":1},"increment_uint256":{"entryPoint":4117,"id":null,"parameterSlots":1,"returnSlots":1},"increment_uint8":{"entryPoint":9597,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_bytes":{"entryPoint":4154,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_uint8":{"entryPoint":9614,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"604060808152600436101561001357600080fd5b600090813560e01c80633be699f914610d9e5780637679913614610d6a5780638528247f146106055780638cda5103146101c0578063ad30ddbf1461019e578063c68b3787146100a75763f76f950e1461006c57600080fd5b346100a35760203660031901126100a35761009f9061008c600435611133565b9051918291602083526020830190610e02565b0390f35b5080fd5b50346100a3576020908160031936011261019a57600435926100c7610fb7565b938251946100d486610e59565b838652833686880137825b8581106100f85784518681528061009f8189018a610e02565b6001600160f81b031983821a81610116600483901c60ff168661103a565b51169160019184831b93858504600214861517156101865761014991600f918a1a610141878f61103a565b53168661103a565b5116908201809211610172579061016761016d9392871a918a61103a565b53611015565b6100df565b634e487b7160e01b86526011600452602486fd5b634e487b7160e01b89526011600452602489fd5b8280fd5b50346100a35761009f9061008c6101b436610f1b565b95949094939193611292565b5090346106025760209081600319360112610602575061009f6105e8926105f8603d600435946105a661027e6101f461259f565b98905061020961020382611133565b91611133565b8751998a92707b224c5350344d65746164617461223a7b60781b8785015275089b985b59488e88931d5adcdbd31bdbd9da595cc88b60521b60318501527f226465736372697074696f6e223a224c756b736f4c6f6f67696573206172652060478501527f4c554b534f205374616e64617264204c535038204e465473207769746820612060678501526d039b6b4b632901d149027b7363c960951b60878501526102bc8151809289609588019101610ddf565b83017f204c756b736f4c6f6f6769657320617661696c61626c65206f6e20612070726960958201527f636520637572766520696e6372656173696e6720302e3225207769746820656160b58201527f6368206e6577206d696e742e2054686973204d61747269782045646974696f6e60d58201527f20666561747572657320616e696d61746564204d61747269782d7374796c652060f58201527f64657369676e7320666f722065616368204c6f6f6769652e222c0000000000006101158201527f226c696e6b73223a5b7b227469746c65223a2257656273697465222c2275726c61012f8201527f223a2268747470733a2f2f6c756b736f6c6f6f676965732e76657263656c2e6161014f8201527f7070227d2c7b227469746c65223a2254776974746572222c2275726c223a226861016f8201527f747470733a2f2f747769747465722e636f6d2f6c756b736f4c6f6f676965732261018f820152621f574b60ea1b6101af8201527f22696d61676573223a5b5b7b227769647468223a3430302c22686569676874226101b28201526b1d1a181816113ab936111d1160a11b6101d2820152815190610479826101de948a8685019101610ddf565b64089f57574b60da1b9101918201526d2261747472696275746573223a5b60901b6101e38201527f7b226b6579223a2274797065222c2276616c7565223a22636f6c6c656374696f6101f1820152731b888b089d1e5c19488e889cdd1c9a5b99c89f4b60621b6102118201527f7b226b6579223a226c696d6974222c2276616c7565223a000000000000000000610225820152815161023c92909190610526908390858401908a01610ddf565b710b089d1e5c19488e889b9d5b58995c889f4b60721b9101918201527f7b226b6579223a226375727665222c2276616c7565223a3130302e322c22747961024e8201526c7065223a226e756d626572227d60981b61026e820152605d60f81b61027b820152617d7d60f01b61027c8201520361025e810189520187610e91565b6105af86612897565b845197827f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c0000008a9485015282519283918686019101610ddf565b810103601d810187520185610e91565b5192839283610f8f565b80fd5b50346100a3576106309161063661061b36610f1b565b9399848284868e8a8c9e999c9d979b9d611292565b99611061565b87889084997a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000009081811015610d5d575b50506d04ee2d6d415b85acef810000000080831015610d4e575b50662386f26fc1000080831015610d3f575b506305f5e10080831015610d30575b5061271080831015610d21575b506064821015610d11575b600a80921015610d07575b8160216106ce60018d01610fe3565b9b8c01015b60001901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304908b8215610703575082906106d3565b989250505061074560288851809b674c6f6f676965202360c01b60208301526107358151809260208686019101610ddf565b810103600881018c52018a610e91565b61074e81611133565b9461075884611133565b9b8115610ce857885161076a81610e27565b601f81527f2e204f776e6564206279206120556e6976657273616c2050726f66696c65210060208201529c5b8951809e8192602083019c7f54686973204d6174726978204c6f6f6769652069732074686520636f6c6f72208e528301602360f81b905287519a602089019b8c81604187016107e492610ddf565b840160418101750103bb4ba3410309031b43ab13134b732b9b99037b3160551b90528151918260578301916020019161081c92610ddf565b01605781017401030b7321036b7baba34103632b733ba341037b31605d1b905281519182606c8301916020019161085292610ddf565b0181519182606c8301916020019161086992610ddf565b0103604c81018252606c0161087d91610e91565b61088690612897565b9161089090611133565b9361089a90611133565b945015610cc55789516108ac81610e27565b60048152637472756560e01b6020820152965b8a519b8c809b602082017f7b224c5350344d65746164617461223a207b226e616d65223a2022000000000090528051603b819301916020019161090192610ddf565b8b0190711116113232b9b1b934b83a34b7b7111d101160711b603b830152519182604d830161092f92610ddf565b7f222c226c696e6b73223a205b7b227469746c65223a2257656273697465222c22604d92909101918201527f75726c223a2268747470733a2f2f6c756b736f6c6f6f676965732e7665726365606d820152721b0b985c1c089f574b089a58dbdb888e96d74b606a1b608d8201527f22696d61676573223a205b5b7b227769647468223a203430302c22686569676860a08201526f3a111d101a181816113ab936111d101160811b60c08201527f646174613a696d6167652f7376672b786d6c3b6261736536342c00000000000060d0820152815191610a1790839060ea840190602001610ddf565b019064089f57574b60da1b60ea8301526d2261747472696275746573223a5b60901b60ef83015260fd82017f7b226b6579223a22636f6c6f72222c2276616c7565223a222300000000000000905251906101169482868301610a7892610ddf565b0172088b089d1e5c19488e889cdd1c9a5b99c89f4b606a1b809482015261012981017f7b226b6579223a226368756262696e657373222c2276616c7565223a00000000905281519061014592828483019160200191610ad692610ddf565b01710b089d1e5c19488e889b9d5b58995c889f4b60721b809282015261015781017f7b226b6579223a226d6f7574684c656e677468222c2276616c7565223a000000905282519061017493828583019160200191610b3392610ddf565b019182015261018681017f7b226b6579223a22757365726e616d65222c2276616c7565223a22000000000090528251906101a193828583019160200191610b7992610ddf565b0191820152753d9135b2bc911d1134b9aaa81116113b30b63ab2911d60511b6101b48201528151906101ca92828483019160200191610bb792610ddf565b720b089d1e5c19488e88989bdbdb19585b889f4b606a1b9101918201527f7b226b6579223a2274797065222c2276616c7565223a220000000000000000006101dd82015281516101f492909190610c1690839085840190602001610ddf565b019071222c2274797065223a22737472696e67227d60701b908201526102068101625d7d7d60e81b9052036101e98101835261020901610c569083610e91565b610c5f82612897565b9080518092602082017f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000905280519081603d84019160200191610ca192610ddf565b810103601d81018352603d01610cb79083610e91565b5191829161009f9183610f8f565b8951610cd081610e27565b600581526466616c736560d81b6020820152966108bf565b8851610cf381610e27565b60018152601760f91b60208201529c610796565b98600101986106bf565b98906064600291049101986106b4565b6004919a9204910198386106a9565b6008919a92049101983861069c565b6010919a92049101983861068d565b6020919a92049101983861067b565b8c9b500491503880610661565b50346100a35760203660031901126100a357600435916001600160e81b031983168303610602575061008c61009f92611061565b50346100a357816003193601126100a35761009f90610dbb61259f565b610dd18394929451948486958652850190610e02565b908382036020850152610e02565b60005b838110610df25750506000910152565b8181015183820152602001610de2565b90602091610e1b81518092818552858086019101610ddf565b601f01601f1916010190565b6040810190811067ffffffffffffffff821117610e4357604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff821117610e4357604052565b6020810190811067ffffffffffffffff821117610e4357604052565b90601f8019910116810190811067ffffffffffffffff821117610e4357604052565b67ffffffffffffffff8111610e4357601f01601f191660200190565b81601f82011215610f1657803590610ee682610eb3565b92610ef46040519485610e91565b82845260208383010111610f1657816000926020809301838601378301015290565b600080fd5b60e0600319820112610f16576004359167ffffffffffffffff602435818111610f165783610f4b91600401610ecf565b926044356001600160e81b031981168103610f165792606435926084359260a435918211610f1657610f7f91600401610ecf565b9060c4358015158103610f165790565b9091610fa6610fb493604084526040840190610e02565b916020818403910152610e02565b90565b60405190610fc482610e27565b601082526f181899199a1a9b1b9c1cb0b131b232b360811b6020830152565b90610fed82610eb3565b610ffa6040519182610e91565b828152809261100b601f1991610eb3565b0190602036910137565b60001981146110245760010190565b634e487b7160e01b600052601160045260246000fd5b90815181101561104b570160200190565b634e487b7160e01b600052603260045260246000fd5b611069610fb7565b6040519161107683610e27565b600683526020368185013760005b600381106110925750505090565b6001600160f81b031982821a6004826110b083831c60ff168861103a565b51169260019285841b948686046002148715171561111e576110e491600f9160001a6110dc888d61103a565b53168861103a565b5116918301809311611109575090610167611104939260001a918761103a565b611084565b601190634e487b7160e01b6000525260246000fd5b601184634e487b7160e01b6000525260246000fd5b80156111ad5780816000925b611199575061114d82610fe3565b9190805b61115a57505090565b600a90603092828206840180941161102457801561102457600019019260f81b6001600160f81b03191660001a611191848661103a565b530480611151565b916111a5600a91611015565b92048061113f565b506040516111ba81610e27565b60018152600360fc1b602082015290565b604051906111d882610e27565b600582526433b932b2b760d91b6020830152565b604051906111f982610e27565b6004825263626c756560e01b6020830152565b6040519061121982610e27565b60038252621c995960ea1b6020830152565b6040519061123882610e27565b6006825265707572706c6560d01b6020830152565b6040519061125a82610e27565b600682526579656c6c6f7760d01b6020830152565b6040519061127c82610e27565b60078252660233030666630360cc1b6020830152565b94959492939185156124305781516020928381019182206112b16111cb565b8051908601200361231857505050506112c861126f565b955b60036040516020810190858252650dac2e8e4d2f60d31b6040820152602681526112f381610e59565b5190208615612311578116105b85156123035760405161131281610e27565b600781526611b3331818333360c91b6020820152905b85600902956009870481036110245761032a97888881031161102457600083156122ee57506040517f3c66696c7465722069643d226d61747269782d676c6f772220783d222d32302560208201527f2220793d222d323025222077696474683d223134302522206865696768743d22604082015265189a1812911f60d11b60608201527f3c6665476175737369616e426c757220737464446576696174696f6e3d22332260668201526f103932b9bab63a1e9131363ab911179f60811b60868201526114f960ad826113fc6096820161252e565b681e17b334b63a32b91f60b91b81527f3c6c696e6561724772616469656e742069643d226d61747269782d626722207860098201527f313d223025222079313d223025222078323d223025222079323d2231303025226029820152601f60f91b60498201527f3c73746f70206f66667365743d223025222073746f702d636f6c6f723d222330604a8201526718181c181811179f60c11b606a8201527f3c73746f70206f66667365743d2231303025222073746f702d636f6c6f723d226072820152691198181898181811179f60b11b6092820152701e17b634b732b0b923b930b234b2b73a1f60791b609c82015203608d810184520182610e91565b925b60009015612257575060405161151081610e27565b601881527f3c6720636c6173733d226d61747269782d6368617273223e0000000000000000602082015295604051996101e0808c018c811067ffffffffffffffff821117610e4357604052368c3760005b60ff9081811691600f8310156115c65761017c8c6040516020810191825260ff60f81b8560f81b1660408201526021815261159b81610e59565b51902006600a8101809111611024576115c1938f926115bb92169261258e565b5261257d565b611561565b50505091939597999b90929496989a60ff9b600f60009d8e5b16101561182e5760008e5b600860ff83161061160b575050600f61160460ff9e61257d565b9d8e6115df565b909b8c8f918f90604051602081019383855260ff60f81b60f89261017c82808a871b1694856040850152861b169760419289848201526022815261164e81610e59565b5190200697600a998a8a01809a11611024576331b430b960e11b9a60405160208101908a82528760408201528b8682015260429d8e8201526026815261169381610e59565b5190200692603084018094116110245760ff6117128161170b6118289f95826118229f60679f600590661e17ba32bc3a1f60c91b9e6464656c617960d81b6117199c86956102039d60405194602086019687526040860152840152820152602781526116fe81610e59565b519020061698169061258e565b5116611133565b9b16611133565b926040519260208401961b1685526001825261173482610e27565b7f2220636c6173733d226d61747269782d6368617222207374796c653d22616e69604051998761176e8c995180926020808d019101610ddf565b8801681e3a32bc3a103c1e9160b91b60208201528151906117988260299460208685019101610ddf565b01906411103c9e9160d91b908201528251906117bd82602e9560208785019101610ddf565b01918201526d036b0ba34b7b716b232b630bc9d160951b604e8201528251906117ef82605c9560208785019101610ddf565b019163399d911f60e11b90830152519061180f8260609586840190610ddf565b0191820152036047810184520182610e91565b9b61257d565b8e6115ea565b7f2032333522207374726f6b653d22626c61636b22207374726f6b652d7769647495969798999d507f3b206f7061636974793a20302e333b20616e696d6174696f6e3a2066616465209c50610fb49b50906118fe6118f8600b7f3c6720636c6173733d226c6f6f6769652d636f6e7461696e6572223e00000000946118f06105ab9f6118ea6024604051836118cd829551809260208086019101610ddf565b8101631e17b39f60e11b6020820152036004810184520182610e91565b9c611133565b970304611133565b95611133565b81519097906000901561223f57501561218a576119ba607d60405180937f3c7465787420783d223230302220793d223330302220636c6173733d2275736560208301527f726e616d6522207374796c653d22666f6e742d66616d696c793a2027436f6d69604083015275319029b0b7399026a993961031bab939b4bb329d911f60511b606083015261199a815180926020607686019101610ddf565b8101661e17ba32bc3a1f60c91b607682015203605d810184520182610e91565b975b661e17b232b3399f60c91b604051809e819c7f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323060208401527f30302f737667222076696577426f783d2230203020343030203430302220776960408401527f6474683d2234303022206865696768743d22343030223e0000000000000000006060840152651e3232b3399f60d11b6077840152661e39ba3cb6329f60c91b607d8401527f40696d706f72742075726c282268747470733a2f2f666f6e74732e676f6f676c60848401527f65617069732e636f6d2f637373323f66616d696c793d436f6d69632b53616e7360a48401527f2b4d5326616d703b646973706c61793d7377617022293b00000000000000000060c48401527f2e757365726e616d65207b20666f6e742d66616d696c793a2022436f6d69632060db8401527f53616e73204d53222c20637572736976653b20666f6e742d73697a653a20313660fb8401527f70783b2066696c6c3a2077686974653b20746578742d616e63686f723a206d6961011b8401526664646c653b207d60c81b61013b8401527f2e6d61747269782d63686172207b20666f6e742d66616d696c793a206d6f6e6f6101428401526c039b830b1b29d903334b6361d1609d1b610162840152611ba981518092602061016f8097019101610ddf565b8d01918201527f337320696e66696e6974652c2066616c6c203873206c696e65617220696e666961018f820152666e6974653b207d60c81b6101af8201527f406b65796672616d65732066616465207b203025207b206f7061636974793a206101b68201527f302e323b207d20333025207b206f7061636974793a20302e393b207d203730256101d68201527f207b206f7061636974793a20302e393b207d2031303025207b206f70616369746101f68201526a793a20302e323b207d207d60a81b6102168201527f406b65796672616d65732066616c6c207b2066726f6d207b207472616e73666f6102218201527f726d3a207472616e736c61746559282d32307078293b207d20746f207b2074726102418201527f616e73666f726d3a207472616e736c61746559283432307078293b207d207d00610261820152671e17b9ba3cb6329f60c11b610280820152825190611d0f826102889560208785019101610ddf565b01918201527f3c726563742077696474683d2234303022206865696768743d2234303022206661028f8201526c34b6361e91313630b1b591179f60991b6102af820152875190611d69826102bc9a60208c85019101610ddf565b01968701526c1e339034b21e9132bcb298911f60991b6102d88701527f3c656c6c69707365207374726f6b652d77696474683d2233222072793d223239806102e58801527f2e35222072783d2232392e35222069643d227376675f31222063793d223135346103058801527f2e35222063783d223138312e3522207374726f6b653d2223303030222066696c6103258801527f222072793d2235312e383030363522207374726f6b653d2223303030222f3e0069361e9111b3333311179f60b11b92836103458a01527f3c656c6c697073652072793d22332e35222072783d22322e35222069643d227361034f8a01527f76675f33222063793d223135342e35222063783d223137332e3522207374726f61036f8a01527f6b652d77696474683d223322207374726f6b653d2223303030222066696c6c3d61038f8a01526a111198181818181811179f60a91b6103af8a01527f22207374726f6b652d77696474683d2233222063783d223230342e3522206379631e17b39f60e11b998a6103ba8201526c1e339034b21e913432b0b2111f60991b6103be8201526e1e32b63634b839b2903334b6361e9160891b6103cb820152825190611f34826103da9560208785019101610ddf565b01918201527f3d223231312e3830303635222069643d227376675f35222072783d22000000006103fa820152845190611f77826104169760208985019101610ddf565b0193840152866104358401526c1e339034b21e9132bcb299111f60991b6104398401526104468301527f2e35222072783d2232392e35222069643d227376675f32222063793d223136386104668301527f2e35222063783d223230392e3522207374726f6b653d2223303030222066696c6104868301526104a68201527f3c656c6c697073652072793d22332e35222072783d2233222069643d227376676104b08201527f5f34222063793d223136392e35222063783d2232303822207374726f6b652d776104d08201527f696474683d2233222066696c6c3d222330303030303022207374726f6b653d226104f0820152661198181811179f60c91b610510820152846105178201527f3c6720636c6173733d226d6f75746822207472616e73666f726d3d227472616e61051b820152650e6d8c2e8ca560d31b61053b8201528151906120cf826105419460208685019101610ddf565b019064161814911f60d91b908201527f3c7061746820643d224d2031333020323430205120313635203235302000000061054682015282519061211c826105639560208785019101610ddf565b01918201527f683d2233222066696c6c3d227472616e73706172656e74222f3e0000000000006105838201528161059d820152825190612166826105a19560208785019101610ddf565b0191820152651e17b9bb339f60d11b6105a58201520361058b810184520182610e91565b61223a608460405180937f3c7465787420783d223230302220793d223330302220666f6e742d66616d696c60208301527f793d22417269616c2220666f6e742d73697a653d223136222066696c6c3d222360408301527f6666666666662220746578742d616e63686f723d226d6964646c65223e000000606083015261221a815180926020607d86019101610ddf565b8101661e17ba32bc3a1f60c91b607d820152036064810184520182610e91565b6119ba565b9150506040519061224f82610e75565b8152976119bc565b610fb499919497509a7f3c6720636c6173733d226c6f6f6769652d636f6e7461696e6572223e000000007f3b206f7061636974793a20302e333b20616e696d6174696f6e3a2066616465209b6118fe6118f87f2032333522207374726f6b653d22626c61636b22207374726f6b652d77696474979a96999f6105ab9d6118f0600b92604051906122e682610e75565b81529c611133565b604051906122fb82610e75565b8152926114fb565b61230b61126f565b90611328565b1615611300565b805182206123246111ec565b80519086012003612357575050506611981831b1b33360c91b6040519161234a83610e27565b60078352820152956112ca565b8051822061236361120c565b80519086012003612389575050506611b33318181b1b60c91b6040519161234a83610e27565b8051822061239561122b565b805190860120036123bb575050506611b1b19818333360c91b6040519161234a83610e27565b5190206123c661124d565b805190840120036123ea5750660236666636330360cc1b6040519161234a83610e27565b602161241a926123fc61242a93611061565b6040519482602360f81b879485015282519283918686019101610ddf565b8101036001810184520182610e91565b956112ca565b81516020928381019182206124436111cb565b8051908601200361246957505050662361336536333560c81b6040519161234a83610e27565b805182206124756111ec565b8051908601200361249b57505050661199b11c19331b60c91b6040519161234a83610e27565b805182206124a761120c565b805190860120036124cd575050506608d9598d0d0d0d60ca1b6040519161234a83610e27565b805182206124d961122b565b805190860120036124ff57505050662361383535663760c81b6040519161234a83610e27565b51902061250a61124d565b805190840120036123ea5750662366616363313560c81b6040519161234a83610e27565b7f3c6665436f6d706f7369746520696e3d22536f7572636547726170686963222081527f696e323d22626c757222206f70657261746f723d226f766572222f3e000000006020820152603c0190565b60ff1660ff81146110245760010190565b90600f81101561104b5760051b0190565b604080517f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323060208201527f30302f737667222077696474683d2234303022206865696768743d2234303022918101919091527f2076696577426f783d223020302034303020343030223e00000000000000000060608201527f3c726563742077696474683d2234303022206865696768743d2234303022206660778201526b34b6361e911198181811179f60a11b6097820152711e3334b63a32b91034b21e9133b637bb911f60711b60a38201527f3c6665476175737369616e426c757220737464446576696174696f6e3d22332e60b5820152711a91103932b9bab63a1e9131363ab911179f60711b60d582015290612836610113836126c260e7820161252e565b681e17b334b63a32b91f60b91b81527f3c7465787420783d223230302220793d223138302220666f6e742d66616d696c60098201527f793d22417269616c2220666f6e742d73697a653d223430222066696c6c3d222360298201527f6666662220746578742d616e63686f723d226d6964646c65222066696c74657260498201527f3d2275726c2823676c6f7729223e4c756b736f4c6f6f676965733c2f746578746069820152601f60f91b60898201527f3c7465787420783d223230302220793d223233302220666f6e742d66616d696c608a8201527f793d22417269616c2220666f6e742d73697a653d223230222066696c6c3d222360aa8201527f3066302220746578742d616e63686f723d226d6964646c65222066696c74657260ca8201527f3d2275726c2823676c6f7729223e4d61747269782045646974696f6e3c2f746560ea820152623c3a1f60e91b61010a820152651e17b9bb339f60d11b61010d8201520360f3810185520183610e91565b61283f82612897565b91612893603a60405180957f646174613a696d6167652f7376672b786d6c3b6261736536342c00000000000060208301526128838151809260208686019101610ddf565b810103601a810186520184610e91565b9190565b8051156129d757604051906128ab82610e59565b604082527f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208301527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f60408301528051600291828201809211611024576003918290046001600160fe1b03811681036110245761292d908495941b610fe3565b936020850193829183518401906020820192835194600085525b83811061298657505050505251068060011461297357600214612968575090565b603d90600019015390565b50603d9081600019820153600119015390565b87600491999293949901918251600190603f9082828260121c16880101518453828282600c1c16880101518385015382828260061c1688010151888501531685010151898201530197929190612947565b506040516129e481610e75565b600081529056fea264697066735822122099ee386245555d1a2c1a2a6e6099d829ca03411ba3a550fd95fcce2ace7dc93264736f6c63430008140033","opcodes":"PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3BE699F9 EQ PUSH2 0xD9E JUMPI DUP1 PUSH4 0x76799136 EQ PUSH2 0xD6A JUMPI DUP1 PUSH4 0x8528247F EQ PUSH2 0x605 JUMPI DUP1 PUSH4 0x8CDA5103 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0xAD30DDBF EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xC68B3787 EQ PUSH2 0xA7 JUMPI PUSH4 0xF76F950E EQ PUSH2 0x6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xA3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xA3 JUMPI PUSH2 0x9F SWAP1 PUSH2 0x8C PUSH1 0x4 CALLDATALOAD PUSH2 0x1133 JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0xE02 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xA3 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19A JUMPI PUSH1 0x4 CALLDATALOAD SWAP3 PUSH2 0xC7 PUSH2 0xFB7 JUMP JUMPDEST SWAP4 DUP3 MLOAD SWAP5 PUSH2 0xD4 DUP7 PUSH2 0xE59 JUMP JUMPDEST DUP4 DUP7 MSTORE DUP4 CALLDATASIZE DUP7 DUP9 ADD CALLDATACOPY DUP3 JUMPDEST DUP6 DUP2 LT PUSH2 0xF8 JUMPI DUP5 MLOAD DUP7 DUP2 MSTORE DUP1 PUSH2 0x9F DUP2 DUP10 ADD DUP11 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP4 DUP3 BYTE DUP2 PUSH2 0x116 PUSH1 0x4 DUP4 SWAP1 SHR PUSH1 0xFF AND DUP7 PUSH2 0x103A JUMP JUMPDEST MLOAD AND SWAP2 PUSH1 0x1 SWAP2 DUP5 DUP4 SHL SWAP4 DUP6 DUP6 DIV PUSH1 0x2 EQ DUP7 ISZERO OR ISZERO PUSH2 0x186 JUMPI PUSH2 0x149 SWAP2 PUSH1 0xF SWAP2 DUP11 BYTE PUSH2 0x141 DUP8 DUP16 PUSH2 0x103A JUMP JUMPDEST MSTORE8 AND DUP7 PUSH2 0x103A JUMP JUMPDEST MLOAD AND SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x172 JUMPI SWAP1 PUSH2 0x167 PUSH2 0x16D SWAP4 SWAP3 DUP8 BYTE SWAP2 DUP11 PUSH2 0x103A JUMP JUMPDEST MSTORE8 PUSH2 0x1015 JUMP JUMPDEST PUSH2 0xDF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xA3 JUMPI PUSH2 0x9F SWAP1 PUSH2 0x8C PUSH2 0x1B4 CALLDATASIZE PUSH2 0xF1B JUMP JUMPDEST SWAP6 SWAP5 SWAP1 SWAP5 SWAP4 SWAP2 SWAP4 PUSH2 0x1292 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x602 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x602 JUMPI POP PUSH2 0x9F PUSH2 0x5E8 SWAP3 PUSH2 0x5F8 PUSH1 0x3D PUSH1 0x4 CALLDATALOAD SWAP5 PUSH2 0x5A6 PUSH2 0x27E PUSH2 0x1F4 PUSH2 0x259F JUMP JUMPDEST SWAP9 SWAP1 POP PUSH2 0x209 PUSH2 0x203 DUP3 PUSH2 0x1133 JUMP JUMPDEST SWAP2 PUSH2 0x1133 JUMP JUMPDEST DUP8 MLOAD SWAP10 DUP11 SWAP3 PUSH17 0x7B224C5350344D65746164617461223A7B PUSH1 0x78 SHL DUP8 DUP6 ADD MSTORE PUSH22 0x89B985B59488E88931D5ADCDBD31BDBD9DA595CC88B PUSH1 0x52 SHL PUSH1 0x31 DUP6 ADD MSTORE PUSH32 0x226465736372697074696F6E223A224C756B736F4C6F6F676965732061726520 PUSH1 0x47 DUP6 ADD MSTORE PUSH32 0x4C554B534F205374616E64617264204C535038204E4654732077697468206120 PUSH1 0x67 DUP6 ADD MSTORE PUSH14 0x39B6B4B632901D149027B7363C9 PUSH1 0x95 SHL PUSH1 0x87 DUP6 ADD MSTORE PUSH2 0x2BC DUP2 MLOAD DUP1 SWAP3 DUP10 PUSH1 0x95 DUP9 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST DUP4 ADD PUSH32 0x204C756B736F4C6F6F6769657320617661696C61626C65206F6E206120707269 PUSH1 0x95 DUP3 ADD MSTORE PUSH32 0x636520637572766520696E6372656173696E6720302E32252077697468206561 PUSH1 0xB5 DUP3 ADD MSTORE PUSH32 0x6368206E6577206D696E742E2054686973204D61747269782045646974696F6E PUSH1 0xD5 DUP3 ADD MSTORE PUSH32 0x20666561747572657320616E696D61746564204D61747269782D7374796C6520 PUSH1 0xF5 DUP3 ADD MSTORE PUSH32 0x64657369676E7320666F722065616368204C6F6F6769652E222C000000000000 PUSH2 0x115 DUP3 ADD MSTORE PUSH32 0x226C696E6B73223A5B7B227469746C65223A2257656273697465222C2275726C PUSH2 0x12F DUP3 ADD MSTORE PUSH32 0x223A2268747470733A2F2F6C756B736F6C6F6F676965732E76657263656C2E61 PUSH2 0x14F DUP3 ADD MSTORE PUSH32 0x7070227D2C7B227469746C65223A2254776974746572222C2275726C223A2268 PUSH2 0x16F DUP3 ADD MSTORE PUSH32 0x747470733A2F2F747769747465722E636F6D2F6C756B736F4C6F6F6769657322 PUSH2 0x18F DUP3 ADD MSTORE PUSH3 0x1F574B PUSH1 0xEA SHL PUSH2 0x1AF DUP3 ADD MSTORE PUSH32 0x22696D61676573223A5B5B7B227769647468223A3430302C2268656967687422 PUSH2 0x1B2 DUP3 ADD MSTORE PUSH12 0x1D1A181816113AB936111D11 PUSH1 0xA1 SHL PUSH2 0x1D2 DUP3 ADD MSTORE DUP2 MLOAD SWAP1 PUSH2 0x479 DUP3 PUSH2 0x1DE SWAP5 DUP11 DUP7 DUP6 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST PUSH5 0x89F57574B PUSH1 0xDA SHL SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH14 0x2261747472696275746573223A5B PUSH1 0x90 SHL PUSH2 0x1E3 DUP3 ADD MSTORE PUSH32 0x7B226B6579223A2274797065222C2276616C7565223A22636F6C6C656374696F PUSH2 0x1F1 DUP3 ADD MSTORE PUSH20 0x1B888B089D1E5C19488E889CDD1C9A5B99C89F4B PUSH1 0x62 SHL PUSH2 0x211 DUP3 ADD MSTORE PUSH32 0x7B226B6579223A226C696D6974222C2276616C7565223A000000000000000000 PUSH2 0x225 DUP3 ADD MSTORE DUP2 MLOAD PUSH2 0x23C SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x526 SWAP1 DUP4 SWAP1 DUP6 DUP5 ADD SWAP1 DUP11 ADD PUSH2 0xDDF JUMP JUMPDEST PUSH18 0xB089D1E5C19488E889B9D5B58995C889F4B PUSH1 0x72 SHL SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH32 0x7B226B6579223A226375727665222C2276616C7565223A3130302E322C227479 PUSH2 0x24E DUP3 ADD MSTORE PUSH13 0x7065223A226E756D626572227D PUSH1 0x98 SHL PUSH2 0x26E DUP3 ADD MSTORE PUSH1 0x5D PUSH1 0xF8 SHL PUSH2 0x27B DUP3 ADD MSTORE PUSH2 0x7D7D PUSH1 0xF0 SHL PUSH2 0x27C DUP3 ADD MSTORE SUB PUSH2 0x25E DUP2 ADD DUP10 MSTORE ADD DUP8 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0x5AF DUP7 PUSH2 0x2897 JUMP JUMPDEST DUP5 MLOAD SWAP8 DUP3 PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP11 SWAP5 DUP6 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 SWAP2 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST DUP2 ADD SUB PUSH1 0x1D DUP2 ADD DUP8 MSTORE ADD DUP6 PUSH2 0xE91 JUMP JUMPDEST MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0xF8F JUMP JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xA3 JUMPI PUSH2 0x630 SWAP2 PUSH2 0x636 PUSH2 0x61B CALLDATASIZE PUSH2 0xF1B JUMP JUMPDEST SWAP4 SWAP10 DUP5 DUP3 DUP5 DUP7 DUP15 DUP11 DUP13 SWAP15 SWAP10 SWAP13 SWAP14 SWAP8 SWAP12 SWAP14 PUSH2 0x1292 JUMP JUMPDEST SWAP10 PUSH2 0x1061 JUMP JUMPDEST DUP8 DUP9 SWAP1 DUP5 SWAP10 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 SWAP1 DUP2 DUP2 LT ISZERO PUSH2 0xD5D JUMPI JUMPDEST POP POP PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP1 DUP4 LT ISZERO PUSH2 0xD4E JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 DUP1 DUP4 LT ISZERO PUSH2 0xD3F JUMPI JUMPDEST POP PUSH4 0x5F5E100 DUP1 DUP4 LT ISZERO PUSH2 0xD30 JUMPI JUMPDEST POP PUSH2 0x2710 DUP1 DUP4 LT ISZERO PUSH2 0xD21 JUMPI JUMPDEST POP PUSH1 0x64 DUP3 LT ISZERO PUSH2 0xD11 JUMPI JUMPDEST PUSH1 0xA DUP1 SWAP3 LT ISZERO PUSH2 0xD07 JUMPI JUMPDEST DUP2 PUSH1 0x21 PUSH2 0x6CE PUSH1 0x1 DUP14 ADD PUSH2 0xFE3 JUMP JUMPDEST SWAP12 DUP13 ADD ADD JUMPDEST PUSH1 0x0 NOT ADD SWAP2 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP3 DUP3 MOD BYTE DUP4 MSTORE8 DIV SWAP1 DUP12 DUP3 ISZERO PUSH2 0x703 JUMPI POP DUP3 SWAP1 PUSH2 0x6D3 JUMP JUMPDEST SWAP9 SWAP3 POP POP POP PUSH2 0x745 PUSH1 0x28 DUP9 MLOAD DUP1 SWAP12 PUSH8 0x4C6F6F6769652023 PUSH1 0xC0 SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x735 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST DUP2 ADD SUB PUSH1 0x8 DUP2 ADD DUP13 MSTORE ADD DUP11 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0x74E DUP2 PUSH2 0x1133 JUMP JUMPDEST SWAP5 PUSH2 0x758 DUP5 PUSH2 0x1133 JUMP JUMPDEST SWAP12 DUP2 ISZERO PUSH2 0xCE8 JUMPI DUP9 MLOAD PUSH2 0x76A DUP2 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x1F DUP2 MSTORE PUSH32 0x2E204F776E6564206279206120556E6976657273616C2050726F66696C652100 PUSH1 0x20 DUP3 ADD MSTORE SWAP13 JUMPDEST DUP10 MLOAD DUP1 SWAP15 DUP2 SWAP3 PUSH1 0x20 DUP4 ADD SWAP13 PUSH32 0x54686973204D6174726978204C6F6F6769652069732074686520636F6C6F7220 DUP15 MSTORE DUP4 ADD PUSH1 0x23 PUSH1 0xF8 SHL SWAP1 MSTORE DUP8 MLOAD SWAP11 PUSH1 0x20 DUP10 ADD SWAP12 DUP13 DUP2 PUSH1 0x41 DUP8 ADD PUSH2 0x7E4 SWAP3 PUSH2 0xDDF JUMP JUMPDEST DUP5 ADD PUSH1 0x41 DUP2 ADD PUSH22 0x103BB4BA3410309031B43AB13134B732B9B99037B31 PUSH1 0x55 SHL SWAP1 MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0x57 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x81C SWAP3 PUSH2 0xDDF JUMP JUMPDEST ADD PUSH1 0x57 DUP2 ADD PUSH21 0x1030B7321036B7BABA34103632B733BA341037B31 PUSH1 0x5D SHL SWAP1 MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0x6C DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x852 SWAP3 PUSH2 0xDDF JUMP JUMPDEST ADD DUP2 MLOAD SWAP2 DUP3 PUSH1 0x6C DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x869 SWAP3 PUSH2 0xDDF JUMP JUMPDEST ADD SUB PUSH1 0x4C DUP2 ADD DUP3 MSTORE PUSH1 0x6C ADD PUSH2 0x87D SWAP2 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0x886 SWAP1 PUSH2 0x2897 JUMP JUMPDEST SWAP2 PUSH2 0x890 SWAP1 PUSH2 0x1133 JUMP JUMPDEST SWAP4 PUSH2 0x89A SWAP1 PUSH2 0x1133 JUMP JUMPDEST SWAP5 POP ISZERO PUSH2 0xCC5 JUMPI DUP10 MLOAD PUSH2 0x8AC DUP2 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH4 0x74727565 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP7 JUMPDEST DUP11 MLOAD SWAP12 DUP13 DUP1 SWAP12 PUSH1 0x20 DUP3 ADD PUSH32 0x7B224C5350344D65746164617461223A207B226E616D65223A20220000000000 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x3B DUP2 SWAP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x901 SWAP3 PUSH2 0xDDF JUMP JUMPDEST DUP12 ADD SWAP1 PUSH18 0x1116113232B9B1B934B83A34B7B7111D1011 PUSH1 0x71 SHL PUSH1 0x3B DUP4 ADD MSTORE MLOAD SWAP2 DUP3 PUSH1 0x4D DUP4 ADD PUSH2 0x92F SWAP3 PUSH2 0xDDF JUMP JUMPDEST PUSH32 0x222C226C696E6B73223A205B7B227469746C65223A2257656273697465222C22 PUSH1 0x4D SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH32 0x75726C223A2268747470733A2F2F6C756B736F6C6F6F676965732E7665726365 PUSH1 0x6D DUP3 ADD MSTORE PUSH19 0x1B0B985C1C089F574B089A58DBDB888E96D74B PUSH1 0x6A SHL PUSH1 0x8D DUP3 ADD MSTORE PUSH32 0x22696D61676573223A205B5B7B227769647468223A203430302C226865696768 PUSH1 0xA0 DUP3 ADD MSTORE PUSH16 0x3A111D101A181816113AB936111D1011 PUSH1 0x81 SHL PUSH1 0xC0 DUP3 ADD MSTORE PUSH32 0x646174613A696D6167652F7376672B786D6C3B6261736536342C000000000000 PUSH1 0xD0 DUP3 ADD MSTORE DUP2 MLOAD SWAP2 PUSH2 0xA17 SWAP1 DUP4 SWAP1 PUSH1 0xEA DUP5 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0xDDF JUMP JUMPDEST ADD SWAP1 PUSH5 0x89F57574B PUSH1 0xDA SHL PUSH1 0xEA DUP4 ADD MSTORE PUSH14 0x2261747472696275746573223A5B PUSH1 0x90 SHL PUSH1 0xEF DUP4 ADD MSTORE PUSH1 0xFD DUP3 ADD PUSH32 0x7B226B6579223A22636F6C6F72222C2276616C7565223A222300000000000000 SWAP1 MSTORE MLOAD SWAP1 PUSH2 0x116 SWAP5 DUP3 DUP7 DUP4 ADD PUSH2 0xA78 SWAP3 PUSH2 0xDDF JUMP JUMPDEST ADD PUSH19 0x88B089D1E5C19488E889CDD1C9A5B99C89F4B PUSH1 0x6A SHL DUP1 SWAP5 DUP3 ADD MSTORE PUSH2 0x129 DUP2 ADD PUSH32 0x7B226B6579223A226368756262696E657373222C2276616C7565223A00000000 SWAP1 MSTORE DUP2 MLOAD SWAP1 PUSH2 0x145 SWAP3 DUP3 DUP5 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAD6 SWAP3 PUSH2 0xDDF JUMP JUMPDEST ADD PUSH18 0xB089D1E5C19488E889B9D5B58995C889F4B PUSH1 0x72 SHL DUP1 SWAP3 DUP3 ADD MSTORE PUSH2 0x157 DUP2 ADD PUSH32 0x7B226B6579223A226D6F7574684C656E677468222C2276616C7565223A000000 SWAP1 MSTORE DUP3 MLOAD SWAP1 PUSH2 0x174 SWAP4 DUP3 DUP6 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB33 SWAP3 PUSH2 0xDDF JUMP JUMPDEST ADD SWAP2 DUP3 ADD MSTORE PUSH2 0x186 DUP2 ADD PUSH32 0x7B226B6579223A22757365726E616D65222C2276616C7565223A220000000000 SWAP1 MSTORE DUP3 MLOAD SWAP1 PUSH2 0x1A1 SWAP4 DUP3 DUP6 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB79 SWAP3 PUSH2 0xDDF JUMP JUMPDEST ADD SWAP2 DUP3 ADD MSTORE PUSH22 0x3D9135B2BC911D1134B9AAA81116113B30B63AB2911D PUSH1 0x51 SHL PUSH2 0x1B4 DUP3 ADD MSTORE DUP2 MLOAD SWAP1 PUSH2 0x1CA SWAP3 DUP3 DUP5 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBB7 SWAP3 PUSH2 0xDDF JUMP JUMPDEST PUSH19 0xB089D1E5C19488E88989BDBDB19585B889F4B PUSH1 0x6A SHL SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH32 0x7B226B6579223A2274797065222C2276616C7565223A22000000000000000000 PUSH2 0x1DD DUP3 ADD MSTORE DUP2 MLOAD PUSH2 0x1F4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xC16 SWAP1 DUP4 SWAP1 DUP6 DUP5 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0xDDF JUMP JUMPDEST ADD SWAP1 PUSH18 0x222C2274797065223A22737472696E67227D PUSH1 0x70 SHL SWAP1 DUP3 ADD MSTORE PUSH2 0x206 DUP2 ADD PUSH3 0x5D7D7D PUSH1 0xE8 SHL SWAP1 MSTORE SUB PUSH2 0x1E9 DUP2 ADD DUP4 MSTORE PUSH2 0x209 ADD PUSH2 0xC56 SWAP1 DUP4 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0xC5F DUP3 PUSH2 0x2897 JUMP JUMPDEST SWAP1 DUP1 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP3 ADD PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 SWAP1 MSTORE DUP1 MLOAD SWAP1 DUP2 PUSH1 0x3D DUP5 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCA1 SWAP3 PUSH2 0xDDF JUMP JUMPDEST DUP2 ADD SUB PUSH1 0x1D DUP2 ADD DUP4 MSTORE PUSH1 0x3D ADD PUSH2 0xCB7 SWAP1 DUP4 PUSH2 0xE91 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 PUSH2 0x9F SWAP2 DUP4 PUSH2 0xF8F JUMP JUMPDEST DUP10 MLOAD PUSH2 0xCD0 DUP2 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x66616C7365 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP7 PUSH2 0x8BF JUMP JUMPDEST DUP9 MLOAD PUSH2 0xCF3 DUP2 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP13 PUSH2 0x796 JUMP JUMPDEST SWAP9 PUSH1 0x1 ADD SWAP9 PUSH2 0x6BF JUMP JUMPDEST SWAP9 SWAP1 PUSH1 0x64 PUSH1 0x2 SWAP2 DIV SWAP2 ADD SWAP9 PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x4 SWAP2 SWAP11 SWAP3 DIV SWAP2 ADD SWAP9 CODESIZE PUSH2 0x6A9 JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP11 SWAP3 DIV SWAP2 ADD SWAP9 CODESIZE PUSH2 0x69C JUMP JUMPDEST PUSH1 0x10 SWAP2 SWAP11 SWAP3 DIV SWAP2 ADD SWAP9 CODESIZE PUSH2 0x68D JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP11 SWAP3 DIV SWAP2 ADD SWAP9 CODESIZE PUSH2 0x67B JUMP JUMPDEST DUP13 SWAP12 POP DIV SWAP2 POP CODESIZE DUP1 PUSH2 0x661 JUMP JUMPDEST POP CALLVALUE PUSH2 0xA3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xA3 JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE8 SHL SUB NOT DUP4 AND DUP4 SUB PUSH2 0x602 JUMPI POP PUSH2 0x8C PUSH2 0x9F SWAP3 PUSH2 0x1061 JUMP JUMPDEST POP CALLVALUE PUSH2 0xA3 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA3 JUMPI PUSH2 0x9F SWAP1 PUSH2 0xDBB PUSH2 0x259F JUMP JUMPDEST PUSH2 0xDD1 DUP4 SWAP5 SWAP3 SWAP5 MLOAD SWAP5 DUP5 DUP7 SWAP6 DUP7 MSTORE DUP6 ADD SWAP1 PUSH2 0xE02 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xDF2 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDE2 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0xE1B DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE43 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE43 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE43 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE43 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE43 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xF16 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0xEE6 DUP3 PUSH2 0xEB3 JUMP JUMPDEST SWAP3 PUSH2 0xEF4 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xE91 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0xF16 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE0 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0xF16 JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xF16 JUMPI DUP4 PUSH2 0xF4B SWAP2 PUSH1 0x4 ADD PUSH2 0xECF JUMP JUMPDEST SWAP3 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE8 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0xF16 JUMPI SWAP3 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x84 CALLDATALOAD SWAP3 PUSH1 0xA4 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0xF16 JUMPI PUSH2 0xF7F SWAP2 PUSH1 0x4 ADD PUSH2 0xECF JUMP JUMPDEST SWAP1 PUSH1 0xC4 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xF16 JUMPI SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0xFA6 PUSH2 0xFB4 SWAP4 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0xE02 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0xE02 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0xFC4 DUP3 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x10 DUP3 MSTORE PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0xFED DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH2 0xFFA PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0xE91 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x100B PUSH1 0x1F NOT SWAP2 PUSH2 0xEB3 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1024 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x104B JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1069 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1076 DUP4 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x6 DUP4 MSTORE PUSH1 0x20 CALLDATASIZE DUP2 DUP6 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1092 JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 DUP3 BYTE PUSH1 0x4 DUP3 PUSH2 0x10B0 DUP4 DUP4 SHR PUSH1 0xFF AND DUP9 PUSH2 0x103A JUMP JUMPDEST MLOAD AND SWAP3 PUSH1 0x1 SWAP3 DUP6 DUP5 SHL SWAP5 DUP7 DUP7 DIV PUSH1 0x2 EQ DUP8 ISZERO OR ISZERO PUSH2 0x111E JUMPI PUSH2 0x10E4 SWAP2 PUSH1 0xF SWAP2 PUSH1 0x0 BYTE PUSH2 0x10DC DUP9 DUP14 PUSH2 0x103A JUMP JUMPDEST MSTORE8 AND DUP9 PUSH2 0x103A JUMP JUMPDEST MLOAD AND SWAP2 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x1109 JUMPI POP SWAP1 PUSH2 0x167 PUSH2 0x1104 SWAP4 SWAP3 PUSH1 0x0 BYTE SWAP2 DUP8 PUSH2 0x103A JUMP JUMPDEST PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x11 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x11AD JUMPI DUP1 DUP2 PUSH1 0x0 SWAP3 JUMPDEST PUSH2 0x1199 JUMPI POP PUSH2 0x114D DUP3 PUSH2 0xFE3 JUMP JUMPDEST SWAP2 SWAP1 DUP1 JUMPDEST PUSH2 0x115A JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH1 0xA SWAP1 PUSH1 0x30 SWAP3 DUP3 DUP3 MOD DUP5 ADD DUP1 SWAP5 GT PUSH2 0x1024 JUMPI DUP1 ISZERO PUSH2 0x1024 JUMPI PUSH1 0x0 NOT ADD SWAP3 PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x0 BYTE PUSH2 0x1191 DUP5 DUP7 PUSH2 0x103A JUMP JUMPDEST MSTORE8 DIV DUP1 PUSH2 0x1151 JUMP JUMPDEST SWAP2 PUSH2 0x11A5 PUSH1 0xA SWAP2 PUSH2 0x1015 JUMP JUMPDEST SWAP3 DIV DUP1 PUSH2 0x113F JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x11BA DUP2 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x11D8 DUP3 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x5 DUP3 MSTORE PUSH5 0x33B932B2B7 PUSH1 0xD9 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x11F9 DUP3 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x4 DUP3 MSTORE PUSH4 0x626C7565 PUSH1 0xE0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1219 DUP3 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x3 DUP3 MSTORE PUSH3 0x1C9959 PUSH1 0xEA SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1238 DUP3 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x6 DUP3 MSTORE PUSH6 0x707572706C65 PUSH1 0xD0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x125A DUP3 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x6 DUP3 MSTORE PUSH6 0x79656C6C6F77 PUSH1 0xD0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x127C DUP3 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x2330306666303 PUSH1 0xCC SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST SWAP5 SWAP6 SWAP5 SWAP3 SWAP4 SWAP2 DUP6 ISZERO PUSH2 0x2430 JUMPI DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 DUP2 ADD SWAP2 DUP3 KECCAK256 PUSH2 0x12B1 PUSH2 0x11CB JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x2318 JUMPI POP POP POP POP PUSH2 0x12C8 PUSH2 0x126F JUMP JUMPDEST SWAP6 JUMPDEST PUSH1 0x3 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 DUP6 DUP3 MSTORE PUSH6 0xDAC2E8E4D2F PUSH1 0xD3 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x26 DUP2 MSTORE PUSH2 0x12F3 DUP2 PUSH2 0xE59 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP7 ISZERO PUSH2 0x2311 JUMPI DUP2 AND LT JUMPDEST DUP6 ISZERO PUSH2 0x2303 JUMPI PUSH1 0x40 MLOAD PUSH2 0x1312 DUP2 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x7 DUP2 MSTORE PUSH7 0x11B33318183333 PUSH1 0xC9 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMPDEST DUP6 PUSH1 0x9 MUL SWAP6 PUSH1 0x9 DUP8 DIV DUP2 SUB PUSH2 0x1024 JUMPI PUSH2 0x32A SWAP8 DUP9 DUP9 DUP2 SUB GT PUSH2 0x1024 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x22EE JUMPI POP PUSH1 0x40 MLOAD PUSH32 0x3C66696C7465722069643D226D61747269782D676C6F772220783D222D323025 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2220793D222D323025222077696474683D223134302522206865696768743D22 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x189A1812911F PUSH1 0xD1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x3C6665476175737369616E426C757220737464446576696174696F6E3D223322 PUSH1 0x66 DUP3 ADD MSTORE PUSH16 0x103932B9BAB63A1E9131363AB911179F PUSH1 0x81 SHL PUSH1 0x86 DUP3 ADD MSTORE PUSH2 0x14F9 PUSH1 0xAD DUP3 PUSH2 0x13FC PUSH1 0x96 DUP3 ADD PUSH2 0x252E JUMP JUMPDEST PUSH9 0x1E17B334B63A32B91F PUSH1 0xB9 SHL DUP2 MSTORE PUSH32 0x3C6C696E6561724772616469656E742069643D226D61747269782D6267222078 PUSH1 0x9 DUP3 ADD MSTORE PUSH32 0x313D223025222079313D223025222078323D223025222079323D223130302522 PUSH1 0x29 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0xF9 SHL PUSH1 0x49 DUP3 ADD MSTORE PUSH32 0x3C73746F70206F66667365743D223025222073746F702D636F6C6F723D222330 PUSH1 0x4A DUP3 ADD MSTORE PUSH8 0x18181C181811179F PUSH1 0xC1 SHL PUSH1 0x6A DUP3 ADD MSTORE PUSH32 0x3C73746F70206F66667365743D2231303025222073746F702D636F6C6F723D22 PUSH1 0x72 DUP3 ADD MSTORE PUSH10 0x1198181898181811179F PUSH1 0xB1 SHL PUSH1 0x92 DUP3 ADD MSTORE PUSH17 0x1E17B634B732B0B923B930B234B2B73A1F PUSH1 0x79 SHL PUSH1 0x9C DUP3 ADD MSTORE SUB PUSH1 0x8D DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xE91 JUMP JUMPDEST SWAP3 JUMPDEST PUSH1 0x0 SWAP1 ISZERO PUSH2 0x2257 JUMPI POP PUSH1 0x40 MLOAD PUSH2 0x1510 DUP2 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x18 DUP2 MSTORE PUSH32 0x3C6720636C6173733D226D61747269782D6368617273223E0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP6 PUSH1 0x40 MLOAD SWAP10 PUSH2 0x1E0 DUP1 DUP13 ADD DUP13 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE43 JUMPI PUSH1 0x40 MSTORE CALLDATASIZE DUP13 CALLDATACOPY PUSH1 0x0 JUMPDEST PUSH1 0xFF SWAP1 DUP2 DUP2 AND SWAP2 PUSH1 0xF DUP4 LT ISZERO PUSH2 0x15C6 JUMPI PUSH2 0x17C DUP13 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0xFF PUSH1 0xF8 SHL DUP6 PUSH1 0xF8 SHL AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x21 DUP2 MSTORE PUSH2 0x159B DUP2 PUSH2 0xE59 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 MOD PUSH1 0xA DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1024 JUMPI PUSH2 0x15C1 SWAP4 DUP16 SWAP3 PUSH2 0x15BB SWAP3 AND SWAP3 PUSH2 0x258E JUMP JUMPDEST MSTORE PUSH2 0x257D JUMP JUMPDEST PUSH2 0x1561 JUMP JUMPDEST POP POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP10 SWAP12 SWAP1 SWAP3 SWAP5 SWAP7 SWAP9 SWAP11 PUSH1 0xFF SWAP12 PUSH1 0xF PUSH1 0x0 SWAP14 DUP15 JUMPDEST AND LT ISZERO PUSH2 0x182E JUMPI PUSH1 0x0 DUP15 JUMPDEST PUSH1 0x8 PUSH1 0xFF DUP4 AND LT PUSH2 0x160B JUMPI POP POP PUSH1 0xF PUSH2 0x1604 PUSH1 0xFF SWAP15 PUSH2 0x257D JUMP JUMPDEST SWAP14 DUP15 PUSH2 0x15DF JUMP JUMPDEST SWAP1 SWAP12 DUP13 DUP16 SWAP2 DUP16 SWAP1 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP4 DUP4 DUP6 MSTORE PUSH1 0xFF PUSH1 0xF8 SHL PUSH1 0xF8 SWAP3 PUSH2 0x17C DUP3 DUP1 DUP11 DUP8 SHL AND SWAP5 DUP6 PUSH1 0x40 DUP6 ADD MSTORE DUP7 SHL AND SWAP8 PUSH1 0x41 SWAP3 DUP10 DUP5 DUP3 ADD MSTORE PUSH1 0x22 DUP2 MSTORE PUSH2 0x164E DUP2 PUSH2 0xE59 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 MOD SWAP8 PUSH1 0xA SWAP10 DUP11 DUP11 ADD DUP1 SWAP11 GT PUSH2 0x1024 JUMPI PUSH4 0x31B430B9 PUSH1 0xE1 SHL SWAP11 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 DUP11 DUP3 MSTORE DUP8 PUSH1 0x40 DUP3 ADD MSTORE DUP12 DUP7 DUP3 ADD MSTORE PUSH1 0x42 SWAP14 DUP15 DUP3 ADD MSTORE PUSH1 0x26 DUP2 MSTORE PUSH2 0x1693 DUP2 PUSH2 0xE59 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 MOD SWAP3 PUSH1 0x30 DUP5 ADD DUP1 SWAP5 GT PUSH2 0x1024 JUMPI PUSH1 0xFF PUSH2 0x1712 DUP2 PUSH2 0x170B PUSH2 0x1828 SWAP16 SWAP6 DUP3 PUSH2 0x1822 SWAP16 PUSH1 0x67 SWAP16 PUSH1 0x5 SWAP1 PUSH7 0x1E17BA32BC3A1F PUSH1 0xC9 SHL SWAP15 PUSH5 0x64656C6179 PUSH1 0xD8 SHL PUSH2 0x1719 SWAP13 DUP7 SWAP6 PUSH2 0x203 SWAP14 PUSH1 0x40 MLOAD SWAP5 PUSH1 0x20 DUP7 ADD SWAP7 DUP8 MSTORE PUSH1 0x40 DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH1 0x27 DUP2 MSTORE PUSH2 0x16FE DUP2 PUSH2 0xE59 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 MOD AND SWAP9 AND SWAP1 PUSH2 0x258E JUMP JUMPDEST MLOAD AND PUSH2 0x1133 JUMP JUMPDEST SWAP12 AND PUSH2 0x1133 JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP7 SHL AND DUP6 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH2 0x1734 DUP3 PUSH2 0xE27 JUMP JUMPDEST PUSH32 0x2220636C6173733D226D61747269782D6368617222207374796C653D22616E69 PUSH1 0x40 MLOAD SWAP10 DUP8 PUSH2 0x176E DUP13 SWAP10 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP1 DUP14 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST DUP9 ADD PUSH9 0x1E3A32BC3A103C1E91 PUSH1 0xB9 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD SWAP1 PUSH2 0x1798 DUP3 PUSH1 0x29 SWAP5 PUSH1 0x20 DUP7 DUP6 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST ADD SWAP1 PUSH5 0x11103C9E91 PUSH1 0xD9 SHL SWAP1 DUP3 ADD MSTORE DUP3 MLOAD SWAP1 PUSH2 0x17BD DUP3 PUSH1 0x2E SWAP6 PUSH1 0x20 DUP8 DUP6 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST ADD SWAP2 DUP3 ADD MSTORE PUSH14 0x36B0BA34B7B716B232B630BC9D1 PUSH1 0x95 SHL PUSH1 0x4E DUP3 ADD MSTORE DUP3 MLOAD SWAP1 PUSH2 0x17EF DUP3 PUSH1 0x5C SWAP6 PUSH1 0x20 DUP8 DUP6 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST ADD SWAP2 PUSH4 0x399D911F PUSH1 0xE1 SHL SWAP1 DUP4 ADD MSTORE MLOAD SWAP1 PUSH2 0x180F DUP3 PUSH1 0x60 SWAP6 DUP7 DUP5 ADD SWAP1 PUSH2 0xDDF JUMP JUMPDEST ADD SWAP2 DUP3 ADD MSTORE SUB PUSH1 0x47 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xE91 JUMP JUMPDEST SWAP12 PUSH2 0x257D JUMP JUMPDEST DUP15 PUSH2 0x15EA JUMP JUMPDEST PUSH32 0x2032333522207374726F6B653D22626C61636B22207374726F6B652D77696474 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 SWAP14 POP PUSH32 0x3B206F7061636974793A20302E333B20616E696D6174696F6E3A206661646520 SWAP13 POP PUSH2 0xFB4 SWAP12 POP SWAP1 PUSH2 0x18FE PUSH2 0x18F8 PUSH1 0xB PUSH32 0x3C6720636C6173733D226C6F6F6769652D636F6E7461696E6572223E00000000 SWAP5 PUSH2 0x18F0 PUSH2 0x5AB SWAP16 PUSH2 0x18EA PUSH1 0x24 PUSH1 0x40 MLOAD DUP4 PUSH2 0x18CD DUP3 SWAP6 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST DUP2 ADD PUSH4 0x1E17B39F PUSH1 0xE1 SHL PUSH1 0x20 DUP3 ADD MSTORE SUB PUSH1 0x4 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xE91 JUMP JUMPDEST SWAP13 PUSH2 0x1133 JUMP JUMPDEST SWAP8 SUB DIV PUSH2 0x1133 JUMP JUMPDEST SWAP6 PUSH2 0x1133 JUMP JUMPDEST DUP2 MLOAD SWAP1 SWAP8 SWAP1 PUSH1 0x0 SWAP1 ISZERO PUSH2 0x223F JUMPI POP ISZERO PUSH2 0x218A JUMPI PUSH2 0x19BA PUSH1 0x7D PUSH1 0x40 MLOAD DUP1 SWAP4 PUSH32 0x3C7465787420783D223230302220793D223330302220636C6173733D22757365 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x726E616D6522207374796C653D22666F6E742D66616D696C793A2027436F6D69 PUSH1 0x40 DUP4 ADD MSTORE PUSH22 0x319029B0B7399026A993961031BAB939B4BB329D911F PUSH1 0x51 SHL PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x199A DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 PUSH1 0x76 DUP7 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST DUP2 ADD PUSH7 0x1E17BA32BC3A1F PUSH1 0xC9 SHL PUSH1 0x76 DUP3 ADD MSTORE SUB PUSH1 0x5D DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xE91 JUMP JUMPDEST SWAP8 JUMPDEST PUSH7 0x1E17B232B3399F PUSH1 0xC9 SHL PUSH1 0x40 MLOAD DUP1 SWAP15 DUP2 SWAP13 PUSH32 0x3C73766720786D6C6E733D22687474703A2F2F7777772E77332E6F72672F3230 PUSH1 0x20 DUP5 ADD MSTORE PUSH32 0x30302F737667222076696577426F783D22302030203430302034303022207769 PUSH1 0x40 DUP5 ADD MSTORE PUSH32 0x6474683D2234303022206865696768743D22343030223E000000000000000000 PUSH1 0x60 DUP5 ADD MSTORE PUSH6 0x1E3232B3399F PUSH1 0xD1 SHL PUSH1 0x77 DUP5 ADD MSTORE PUSH7 0x1E39BA3CB6329F PUSH1 0xC9 SHL PUSH1 0x7D DUP5 ADD MSTORE PUSH32 0x40696D706F72742075726C282268747470733A2F2F666F6E74732E676F6F676C PUSH1 0x84 DUP5 ADD MSTORE PUSH32 0x65617069732E636F6D2F637373323F66616D696C793D436F6D69632B53616E73 PUSH1 0xA4 DUP5 ADD MSTORE PUSH32 0x2B4D5326616D703B646973706C61793D7377617022293B000000000000000000 PUSH1 0xC4 DUP5 ADD MSTORE PUSH32 0x2E757365726E616D65207B20666F6E742D66616D696C793A2022436F6D696320 PUSH1 0xDB DUP5 ADD MSTORE PUSH32 0x53616E73204D53222C20637572736976653B20666F6E742D73697A653A203136 PUSH1 0xFB DUP5 ADD MSTORE PUSH32 0x70783B2066696C6C3A2077686974653B20746578742D616E63686F723A206D69 PUSH2 0x11B DUP5 ADD MSTORE PUSH7 0x64646C653B207D PUSH1 0xC8 SHL PUSH2 0x13B DUP5 ADD MSTORE PUSH32 0x2E6D61747269782D63686172207B20666F6E742D66616D696C793A206D6F6E6F PUSH2 0x142 DUP5 ADD MSTORE PUSH13 0x39B830B1B29D903334B6361D1 PUSH1 0x9D SHL PUSH2 0x162 DUP5 ADD MSTORE PUSH2 0x1BA9 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 PUSH2 0x16F DUP1 SWAP8 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST DUP14 ADD SWAP2 DUP3 ADD MSTORE PUSH32 0x337320696E66696E6974652C2066616C6C203873206C696E65617220696E6669 PUSH2 0x18F DUP3 ADD MSTORE PUSH7 0x6E6974653B207D PUSH1 0xC8 SHL PUSH2 0x1AF DUP3 ADD MSTORE PUSH32 0x406B65796672616D65732066616465207B203025207B206F7061636974793A20 PUSH2 0x1B6 DUP3 ADD MSTORE PUSH32 0x302E323B207D20333025207B206F7061636974793A20302E393B207D20373025 PUSH2 0x1D6 DUP3 ADD MSTORE PUSH32 0x207B206F7061636974793A20302E393B207D2031303025207B206F7061636974 PUSH2 0x1F6 DUP3 ADD MSTORE PUSH11 0x793A20302E323B207D207D PUSH1 0xA8 SHL PUSH2 0x216 DUP3 ADD MSTORE PUSH32 0x406B65796672616D65732066616C6C207B2066726F6D207B207472616E73666F PUSH2 0x221 DUP3 ADD MSTORE PUSH32 0x726D3A207472616E736C61746559282D32307078293B207D20746F207B207472 PUSH2 0x241 DUP3 ADD MSTORE PUSH32 0x616E73666F726D3A207472616E736C61746559283432307078293B207D207D00 PUSH2 0x261 DUP3 ADD MSTORE PUSH8 0x1E17B9BA3CB6329F PUSH1 0xC1 SHL PUSH2 0x280 DUP3 ADD MSTORE DUP3 MLOAD SWAP1 PUSH2 0x1D0F DUP3 PUSH2 0x288 SWAP6 PUSH1 0x20 DUP8 DUP6 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST ADD SWAP2 DUP3 ADD MSTORE PUSH32 0x3C726563742077696474683D2234303022206865696768743D22343030222066 PUSH2 0x28F DUP3 ADD MSTORE PUSH13 0x34B6361E91313630B1B591179F PUSH1 0x99 SHL PUSH2 0x2AF DUP3 ADD MSTORE DUP8 MLOAD SWAP1 PUSH2 0x1D69 DUP3 PUSH2 0x2BC SWAP11 PUSH1 0x20 DUP13 DUP6 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST ADD SWAP7 DUP8 ADD MSTORE PUSH13 0x1E339034B21E9132BCB298911F PUSH1 0x99 SHL PUSH2 0x2D8 DUP8 ADD MSTORE PUSH32 0x3C656C6C69707365207374726F6B652D77696474683D2233222072793D223239 DUP1 PUSH2 0x2E5 DUP9 ADD MSTORE PUSH32 0x2E35222072783D2232392E35222069643D227376675F31222063793D22313534 PUSH2 0x305 DUP9 ADD MSTORE PUSH32 0x2E35222063783D223138312E3522207374726F6B653D2223303030222066696C PUSH2 0x325 DUP9 ADD MSTORE PUSH32 0x222072793D2235312E383030363522207374726F6B653D2223303030222F3E00 PUSH10 0x361E9111B3333311179F PUSH1 0xB1 SHL SWAP3 DUP4 PUSH2 0x345 DUP11 ADD MSTORE PUSH32 0x3C656C6C697073652072793D22332E35222072783D22322E35222069643D2273 PUSH2 0x34F DUP11 ADD MSTORE PUSH32 0x76675F33222063793D223135342E35222063783D223137332E3522207374726F PUSH2 0x36F DUP11 ADD MSTORE PUSH32 0x6B652D77696474683D223322207374726F6B653D2223303030222066696C6C3D PUSH2 0x38F DUP11 ADD MSTORE PUSH11 0x111198181818181811179F PUSH1 0xA9 SHL PUSH2 0x3AF DUP11 ADD MSTORE PUSH32 0x22207374726F6B652D77696474683D2233222063783D223230342E3522206379 PUSH4 0x1E17B39F PUSH1 0xE1 SHL SWAP10 DUP11 PUSH2 0x3BA DUP3 ADD MSTORE PUSH13 0x1E339034B21E913432B0B2111F PUSH1 0x99 SHL PUSH2 0x3BE DUP3 ADD MSTORE PUSH15 0x1E32B63634B839B2903334B6361E91 PUSH1 0x89 SHL PUSH2 0x3CB DUP3 ADD MSTORE DUP3 MLOAD SWAP1 PUSH2 0x1F34 DUP3 PUSH2 0x3DA SWAP6 PUSH1 0x20 DUP8 DUP6 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST ADD SWAP2 DUP3 ADD MSTORE PUSH32 0x3D223231312E3830303635222069643D227376675F35222072783D2200000000 PUSH2 0x3FA DUP3 ADD MSTORE DUP5 MLOAD SWAP1 PUSH2 0x1F77 DUP3 PUSH2 0x416 SWAP8 PUSH1 0x20 DUP10 DUP6 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST ADD SWAP4 DUP5 ADD MSTORE DUP7 PUSH2 0x435 DUP5 ADD MSTORE PUSH13 0x1E339034B21E9132BCB299111F PUSH1 0x99 SHL PUSH2 0x439 DUP5 ADD MSTORE PUSH2 0x446 DUP4 ADD MSTORE PUSH32 0x2E35222072783D2232392E35222069643D227376675F32222063793D22313638 PUSH2 0x466 DUP4 ADD MSTORE PUSH32 0x2E35222063783D223230392E3522207374726F6B653D2223303030222066696C PUSH2 0x486 DUP4 ADD MSTORE PUSH2 0x4A6 DUP3 ADD MSTORE PUSH32 0x3C656C6C697073652072793D22332E35222072783D2233222069643D22737667 PUSH2 0x4B0 DUP3 ADD MSTORE PUSH32 0x5F34222063793D223136392E35222063783D2232303822207374726F6B652D77 PUSH2 0x4D0 DUP3 ADD MSTORE PUSH32 0x696474683D2233222066696C6C3D222330303030303022207374726F6B653D22 PUSH2 0x4F0 DUP3 ADD MSTORE PUSH7 0x1198181811179F PUSH1 0xC9 SHL PUSH2 0x510 DUP3 ADD MSTORE DUP5 PUSH2 0x517 DUP3 ADD MSTORE PUSH32 0x3C6720636C6173733D226D6F75746822207472616E73666F726D3D227472616E PUSH2 0x51B DUP3 ADD MSTORE PUSH6 0xE6D8C2E8CA5 PUSH1 0xD3 SHL PUSH2 0x53B DUP3 ADD MSTORE DUP2 MLOAD SWAP1 PUSH2 0x20CF DUP3 PUSH2 0x541 SWAP5 PUSH1 0x20 DUP7 DUP6 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST ADD SWAP1 PUSH5 0x161814911F PUSH1 0xD9 SHL SWAP1 DUP3 ADD MSTORE PUSH32 0x3C7061746820643D224D20313330203234302051203136352032353020000000 PUSH2 0x546 DUP3 ADD MSTORE DUP3 MLOAD SWAP1 PUSH2 0x211C DUP3 PUSH2 0x563 SWAP6 PUSH1 0x20 DUP8 DUP6 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST ADD SWAP2 DUP3 ADD MSTORE PUSH32 0x683D2233222066696C6C3D227472616E73706172656E74222F3E000000000000 PUSH2 0x583 DUP3 ADD MSTORE DUP2 PUSH2 0x59D DUP3 ADD MSTORE DUP3 MLOAD SWAP1 PUSH2 0x2166 DUP3 PUSH2 0x5A1 SWAP6 PUSH1 0x20 DUP8 DUP6 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST ADD SWAP2 DUP3 ADD MSTORE PUSH6 0x1E17B9BB339F PUSH1 0xD1 SHL PUSH2 0x5A5 DUP3 ADD MSTORE SUB PUSH2 0x58B DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0x223A PUSH1 0x84 PUSH1 0x40 MLOAD DUP1 SWAP4 PUSH32 0x3C7465787420783D223230302220793D223330302220666F6E742D66616D696C PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x793D22417269616C2220666F6E742D73697A653D223136222066696C6C3D2223 PUSH1 0x40 DUP4 ADD MSTORE PUSH32 0x6666666666662220746578742D616E63686F723D226D6964646C65223E000000 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x221A DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 PUSH1 0x7D DUP7 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST DUP2 ADD PUSH7 0x1E17BA32BC3A1F PUSH1 0xC9 SHL PUSH1 0x7D DUP3 ADD MSTORE SUB PUSH1 0x64 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0x19BA JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 MLOAD SWAP1 PUSH2 0x224F DUP3 PUSH2 0xE75 JUMP JUMPDEST DUP2 MSTORE SWAP8 PUSH2 0x19BC JUMP JUMPDEST PUSH2 0xFB4 SWAP10 SWAP2 SWAP5 SWAP8 POP SWAP11 PUSH32 0x3C6720636C6173733D226C6F6F6769652D636F6E7461696E6572223E00000000 PUSH32 0x3B206F7061636974793A20302E333B20616E696D6174696F6E3A206661646520 SWAP12 PUSH2 0x18FE PUSH2 0x18F8 PUSH32 0x2032333522207374726F6B653D22626C61636B22207374726F6B652D77696474 SWAP8 SWAP11 SWAP7 SWAP10 SWAP16 PUSH2 0x5AB SWAP14 PUSH2 0x18F0 PUSH1 0xB SWAP3 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x22E6 DUP3 PUSH2 0xE75 JUMP JUMPDEST DUP2 MSTORE SWAP13 PUSH2 0x1133 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x22FB DUP3 PUSH2 0xE75 JUMP JUMPDEST DUP2 MSTORE SWAP3 PUSH2 0x14FB JUMP JUMPDEST PUSH2 0x230B PUSH2 0x126F JUMP JUMPDEST SWAP1 PUSH2 0x1328 JUMP JUMPDEST AND ISZERO PUSH2 0x1300 JUMP JUMPDEST DUP1 MLOAD DUP3 KECCAK256 PUSH2 0x2324 PUSH2 0x11EC JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x2357 JUMPI POP POP POP PUSH7 0x11981831B1B333 PUSH1 0xC9 SHL PUSH1 0x40 MLOAD SWAP2 PUSH2 0x234A DUP4 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x7 DUP4 MSTORE DUP3 ADD MSTORE SWAP6 PUSH2 0x12CA JUMP JUMPDEST DUP1 MLOAD DUP3 KECCAK256 PUSH2 0x2363 PUSH2 0x120C JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x2389 JUMPI POP POP POP PUSH7 0x11B33318181B1B PUSH1 0xC9 SHL PUSH1 0x40 MLOAD SWAP2 PUSH2 0x234A DUP4 PUSH2 0xE27 JUMP JUMPDEST DUP1 MLOAD DUP3 KECCAK256 PUSH2 0x2395 PUSH2 0x122B JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x23BB JUMPI POP POP POP PUSH7 0x11B1B198183333 PUSH1 0xC9 SHL PUSH1 0x40 MLOAD SWAP2 PUSH2 0x234A DUP4 PUSH2 0xE27 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x23C6 PUSH2 0x124D JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP5 ADD KECCAK256 SUB PUSH2 0x23EA JUMPI POP PUSH7 0x2366666363303 PUSH1 0xCC SHL PUSH1 0x40 MLOAD SWAP2 PUSH2 0x234A DUP4 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x21 PUSH2 0x241A SWAP3 PUSH2 0x23FC PUSH2 0x242A SWAP4 PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP3 PUSH1 0x23 PUSH1 0xF8 SHL DUP8 SWAP5 DUP6 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 SWAP2 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST DUP2 ADD SUB PUSH1 0x1 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xE91 JUMP JUMPDEST SWAP6 PUSH2 0x12CA JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 DUP2 ADD SWAP2 DUP3 KECCAK256 PUSH2 0x2443 PUSH2 0x11CB JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x2469 JUMPI POP POP POP PUSH7 0x23613365363335 PUSH1 0xC8 SHL PUSH1 0x40 MLOAD SWAP2 PUSH2 0x234A DUP4 PUSH2 0xE27 JUMP JUMPDEST DUP1 MLOAD DUP3 KECCAK256 PUSH2 0x2475 PUSH2 0x11EC JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x249B JUMPI POP POP POP PUSH7 0x1199B11C19331B PUSH1 0xC9 SHL PUSH1 0x40 MLOAD SWAP2 PUSH2 0x234A DUP4 PUSH2 0xE27 JUMP JUMPDEST DUP1 MLOAD DUP3 KECCAK256 PUSH2 0x24A7 PUSH2 0x120C JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x24CD JUMPI POP POP POP PUSH7 0x8D9598D0D0D0D PUSH1 0xCA SHL PUSH1 0x40 MLOAD SWAP2 PUSH2 0x234A DUP4 PUSH2 0xE27 JUMP JUMPDEST DUP1 MLOAD DUP3 KECCAK256 PUSH2 0x24D9 PUSH2 0x122B JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SUB PUSH2 0x24FF JUMPI POP POP POP PUSH7 0x23613835356637 PUSH1 0xC8 SHL PUSH1 0x40 MLOAD SWAP2 PUSH2 0x234A DUP4 PUSH2 0xE27 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x250A PUSH2 0x124D JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP5 ADD KECCAK256 SUB PUSH2 0x23EA JUMPI POP PUSH7 0x23666163633135 PUSH1 0xC8 SHL PUSH1 0x40 MLOAD SWAP2 PUSH2 0x234A DUP4 PUSH2 0xE27 JUMP JUMPDEST PUSH32 0x3C6665436F6D706F7369746520696E3D22536F75726365477261706869632220 DUP2 MSTORE PUSH32 0x696E323D22626C757222206F70657261746F723D226F766572222F3E00000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xFF DUP2 EQ PUSH2 0x1024 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xF DUP2 LT ISZERO PUSH2 0x104B JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x3C73766720786D6C6E733D22687474703A2F2F7777772E77332E6F72672F3230 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x30302F737667222077696474683D2234303022206865696768743D2234303022 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x2076696577426F783D223020302034303020343030223E000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x3C726563742077696474683D2234303022206865696768743D22343030222066 PUSH1 0x77 DUP3 ADD MSTORE PUSH12 0x34B6361E911198181811179F PUSH1 0xA1 SHL PUSH1 0x97 DUP3 ADD MSTORE PUSH18 0x1E3334B63A32B91034B21E9133B637BB911F PUSH1 0x71 SHL PUSH1 0xA3 DUP3 ADD MSTORE PUSH32 0x3C6665476175737369616E426C757220737464446576696174696F6E3D22332E PUSH1 0xB5 DUP3 ADD MSTORE PUSH18 0x1A91103932B9BAB63A1E9131363AB911179F PUSH1 0x71 SHL PUSH1 0xD5 DUP3 ADD MSTORE SWAP1 PUSH2 0x2836 PUSH2 0x113 DUP4 PUSH2 0x26C2 PUSH1 0xE7 DUP3 ADD PUSH2 0x252E JUMP JUMPDEST PUSH9 0x1E17B334B63A32B91F PUSH1 0xB9 SHL DUP2 MSTORE PUSH32 0x3C7465787420783D223230302220793D223138302220666F6E742D66616D696C PUSH1 0x9 DUP3 ADD MSTORE PUSH32 0x793D22417269616C2220666F6E742D73697A653D223430222066696C6C3D2223 PUSH1 0x29 DUP3 ADD MSTORE PUSH32 0x6666662220746578742D616E63686F723D226D6964646C65222066696C746572 PUSH1 0x49 DUP3 ADD MSTORE PUSH32 0x3D2275726C2823676C6F7729223E4C756B736F4C6F6F676965733C2F74657874 PUSH1 0x69 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0xF9 SHL PUSH1 0x89 DUP3 ADD MSTORE PUSH32 0x3C7465787420783D223230302220793D223233302220666F6E742D66616D696C PUSH1 0x8A DUP3 ADD MSTORE PUSH32 0x793D22417269616C2220666F6E742D73697A653D223230222066696C6C3D2223 PUSH1 0xAA DUP3 ADD MSTORE PUSH32 0x3066302220746578742D616E63686F723D226D6964646C65222066696C746572 PUSH1 0xCA DUP3 ADD MSTORE PUSH32 0x3D2275726C2823676C6F7729223E4D61747269782045646974696F6E3C2F7465 PUSH1 0xEA DUP3 ADD MSTORE PUSH3 0x3C3A1F PUSH1 0xE9 SHL PUSH2 0x10A DUP3 ADD MSTORE PUSH6 0x1E17B9BB339F PUSH1 0xD1 SHL PUSH2 0x10D DUP3 ADD MSTORE SUB PUSH1 0xF3 DUP2 ADD DUP6 MSTORE ADD DUP4 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0x283F DUP3 PUSH2 0x2897 JUMP JUMPDEST SWAP2 PUSH2 0x2893 PUSH1 0x3A PUSH1 0x40 MLOAD DUP1 SWAP6 PUSH32 0x646174613A696D6167652F7376672B786D6C3B6261736536342C000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2883 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0xDDF JUMP JUMPDEST DUP2 ADD SUB PUSH1 0x1A DUP2 ADD DUP7 MSTORE ADD DUP5 PUSH2 0xE91 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x29D7 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x28AB DUP3 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 DUP3 MSTORE PUSH32 0x4142434445464748494A4B4C4D4E4F505152535455565758595A616263646566 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x6768696A6B6C6D6E6F707172737475767778797A303132333435363738392B2F PUSH1 0x40 DUP4 ADD MSTORE DUP1 MLOAD PUSH1 0x2 SWAP2 DUP3 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1024 JUMPI PUSH1 0x3 SWAP2 DUP3 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xFE SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1024 JUMPI PUSH2 0x292D SWAP1 DUP5 SWAP6 SWAP5 SHL PUSH2 0xFE3 JUMP JUMPDEST SWAP4 PUSH1 0x20 DUP6 ADD SWAP4 DUP3 SWAP2 DUP4 MLOAD DUP5 ADD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MLOAD SWAP5 PUSH1 0x0 DUP6 MSTORE JUMPDEST DUP4 DUP2 LT PUSH2 0x2986 JUMPI POP POP POP POP MSTORE MLOAD MOD DUP1 PUSH1 0x1 EQ PUSH2 0x2973 JUMPI PUSH1 0x2 EQ PUSH2 0x2968 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x3D SWAP1 PUSH1 0x0 NOT ADD MSTORE8 SWAP1 JUMP JUMPDEST POP PUSH1 0x3D SWAP1 DUP2 PUSH1 0x0 NOT DUP3 ADD MSTORE8 PUSH1 0x1 NOT ADD MSTORE8 SWAP1 JUMP JUMPDEST DUP8 PUSH1 0x4 SWAP2 SWAP10 SWAP3 SWAP4 SWAP5 SWAP10 ADD SWAP2 DUP3 MLOAD PUSH1 0x1 SWAP1 PUSH1 0x3F SWAP1 DUP3 DUP3 DUP3 PUSH1 0x12 SHR AND DUP9 ADD ADD MLOAD DUP5 MSTORE8 DUP3 DUP3 DUP3 PUSH1 0xC SHR AND DUP9 ADD ADD MLOAD DUP4 DUP6 ADD MSTORE8 DUP3 DUP3 DUP3 PUSH1 0x6 SHR AND DUP9 ADD ADD MLOAD DUP9 DUP6 ADD MSTORE8 AND DUP6 ADD ADD MLOAD DUP10 DUP3 ADD MSTORE8 ADD SWAP8 SWAP3 SWAP2 SWAP1 PUSH2 0x2947 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x29E4 DUP2 PUSH2 0xE75 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0xEE CODESIZE PUSH3 0x45555D BYTE 0x2C BYTE 0x2A PUSH15 0x6099D829CA03411BA3A550FD95FCCE 0x2A 0xCE PUSH30 0xC93264736F6C634300081400330000000000000000000000000000000000 ","sourceMap":"810:18983:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;810:18983:30;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;4812:13;4827:6;;;;;;810:18983;;;;;;;;;;;;:::i;4835:3::-;-1:-1:-1;;;;;;4883:8:30;;;810:18983;4868:30;810:18983;;;;;;4868:30;;:::i;:::-;810:18983;;;;;;;;;;;;4863:1;810:18983;;;;;;;4930:32;;4957:4;;4854:44;;;;;;:::i;:::-;;4939:22;4930:32;;:::i;:::-;810:18983;;;;;;;;;;4912:50;;4835:3;4912:50;;;;;;;:::i;:::-;;4835:3;:::i;:::-;4812:13;;810:18983;-1:-1:-1;;;810:18983:30;;;;;;;;;-1:-1:-1;;;810:18983:30;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;19618:115;810:18983;;;18428:23;18534:912;;18428:23;;:::i;:::-;18717:15;;;19303;18717;;;:::i;:::-;19303;;:::i;:::-;810:18983;;;;;;;;18534:912;;;810:18983;;;;;;;;;;;;;;;;;;-1:-1:-1;;;810:18983:30;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;810:18983:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;810:18983:30;;;;;;-1:-1:-1;;;810:18983:30;;;;;;;;;-1:-1:-1;;;810:18983:30;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;810:18983:30;;;;;;;;;;;-1:-1:-1;;;810:18983:30;;;;-1:-1:-1;;;810:18983:30;;;;-1:-1:-1;;;810:18983:30;;;;18534:912;;;;;;;;;:::i;:::-;19701:18;;;:::i;:::-;810:18983;;19618:115;;810:18983;19618:115;;;;810:18983;;;;;;;;;;;;:::i;:::-;;;19618:115;;;;;;;;;:::i;:::-;810:18983;;;;;;:::i;:::-;;;;;;;;15795:195;810:18983;16059:28;810:18983;;;:::i;:::-;15795:195;;;;;;;;;;;;;;;;;:::i;:::-;16059:28;;:::i;:::-;16213:36;569:17:23;10211:18:27;;10276:8;;10267:17;;;;;10263:103;;810:18983:30;10392:8:27;;;10383:17;;;;10379:103;;810:18983:30;10508:8:27;;10499:17;;;;10495:103;;810:18983:30;10624:7:27;;10615:16;;;;10611:100;;810:18983:30;10737:7:27;;10728:16;;;;10724:100;;810:18983:30;10841:16:27;10850:7;10841:16;;;10837:100;;810:18983:30;10963:7:27;10954:16;;;;10950:66;;810:18983:30;;731:76:23;627:18;589:1;810:18983:30;;627:18:23;:::i;:::-;659:11;731:76;;;820:280;-1:-1:-1;;810:18983:30;;-1:-1:-1;;;925:93:23;;;;810:18983:30;925:93:23;810:18983:30;1068:10:23;;;;1064:21;;820:280;;;;;1064:21;1080:5;;;;;16184:66:30;810:18983;;;16184:66;;-1:-1:-1;;;731:76:23;16184:66:30;;810:18983;;;;;;731:76:23;810:18983:30;;;;;;:::i;:::-;;;16184:66;;;;;;;;;:::i;:::-;16464:20;;;:::i;:::-;16543:21;;;;:::i;:::-;16582:46;;;;;810:18983;;;;;:::i;:::-;;;;;731:76:23;810:18983:30;;;16582:46;;810:18983;;16309:333;;;;731:76:23;16309:333:30;;810:18983;;;;;;-1:-1:-1;;;810:18983:30;;;;;731:76:23;810:18983:30;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;810:18983:30;;;;;;;;;;731:76:23;810:18983:30;;;;;:::i;:::-;;;;;-1:-1:-1;;;810:18983:30;;;;;;;;;;731:76:23;810:18983:30;;;;;:::i;:::-;;;;;;;;;;731:76:23;810:18983:30;;;;;:::i;:::-;;16309:333;;;;;;810:18983;16309:333;;;;:::i;:::-;17061:25;;;:::i;:::-;17257:20;;;;:::i;:::-;17346:21;;;;:::i;:::-;17505:23;-1:-1:-1;17505:23:30;;;810:18983;;;;;:::i;:::-;;;;-1:-1:-1;;;731:76:23;810:18983:30;;;17505:23;;810:18983;;16735:923;;;;731:76:23;16735:923:30;;810:18983;;;;;;;;;16184:66;731:76:23;16184:66:30;810:18983;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;810:18983:30;;;;;;;;;-1:-1:-1;;;810:18983:30;;;;;;;;;;;;;;;;;;;;731:76:23;810:18983:30;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;731:76:23;810:18983:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;731:76:23;810:18983:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;731:76:23;810:18983:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;731:76:23;810:18983:30;;;;;:::i;:::-;-1:-1:-1;;;810:18983:30;;;;;;;;;;;;;;;;;;;;;;;;;;731:76:23;810:18983:30;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;810:18983:30;;16735:923;;;;;;;;;;;;:::i;:::-;17913:18;;;:::i;:::-;810:18983;;;17830:115;;731:76:23;17830:115:30;;810:18983;;;;;;;;;;;731:76:23;810:18983:30;;;;;:::i;:::-;;;17830:115;;;;;;810:18983;17830:115;;;;;:::i;:::-;810:18983;;;;;;;;:::i;17505:23::-;810:18983;;;;;:::i;:::-;;;;-1:-1:-1;;;731:76:23;810:18983:30;;;17505:23;;;16582:46;810:18983;;;;;:::i;:::-;589:1:23;810:18983:30;;-1:-1:-1;;;731:76:23;810:18983:30;;;16582:46;;;10950:66:27;810:18983:30;11000:1:27;810:18983:30;10950:66:27;;;10837:100;810:18983:30;;10850:7:27;10921:1;810:18983:30;;;;10837:100:27;;;10724;810:18983:30;;;;;;;10724:100:27;;;;10611;10695:1;810:18983:30;;;;;;10611:100:27;;;;10495:103;10581:2;810:18983:30;;;;;;10495:103:27;;;;10379;10465:2;810:18983:30;;;;;;10379:103:27;;;;10263;10339:12;;-1:-1:-1;810:18983:30;;-1:-1:-1;10263:103:27;;;;810:18983:30;;;;;;;-1:-1:-1;;810:18983:30;;;;;;;-1:-1:-1;;;;;;810:18983:30;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;810:18983:30;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;810:18983:30;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;7773:35;810:18983;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;810:18983:30;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;810:18983:30;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;810:18983:30;;;;-1:-1:-1;;810:18983:30;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;810:18983:30;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;810:18983:30;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;-1:-1:-1;;810:18983:30;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;3392:453;810:18983;;:::i;:::-;;;;;;;:::i;:::-;3563:1;810:18983;;;;;;;;-1:-1:-1;3604:5:30;3608:1;3604:5;;;;3817:21;;;3392:453;:::o;3611:3::-;-1:-1:-1;;;;;;3654:9:30;;;3720:1;810:18983;3692:31;810:18983;;;;;3692:31;;:::i;:::-;810:18983;;3750:1;;810:18983;;;;;;;;3687:1;810:18983;;;;;;;3755:33;3678:45;3782:4;3678:45;-1:-1:-1;3678:45:30;;;;;:::i;:::-;;3770:16;3755:33;;:::i;:::-;810:18983;;;;;;;;;;3737:51;;;3611:3;3737:51;;-1:-1:-1;3737:51:30;;;;:::i;3611:3::-;3589:13;;810:18983;;;;;;-1:-1:-1;810:18983:30;;;-1:-1:-1;810:18983:30;;;;;;;-1:-1:-1;810:18983:30;;;-1:-1:-1;810:18983:30;3998:474;4089:7;;4085:48;;4142:11;4163:8;4095:1;4181:66;4188:6;;;4276:14;;;;:::i;:::-;4300:12;4322:6;4338:99;4345:6;;;4446:19;;3998:474;:::o;4338:99::-;4234:2;4392;;810:18983;;;;;;;;;;;;;;;-1:-1:-1;;810:18983:30;;;;-1:-1:-1;;;;;;810:18983:30;;4367:38;;810:18983;4367:38;;:::i;:::-;;810:18983;4338:99;;;4181:66;4210:5;;4234:2;4210:5;;:::i;:::-;810:18983;;4181:66;;;4085:48;810:18983;;;;;;:::i;:::-;;;;-1:-1:-1;;;810:18983:30;;;;4112:10;:::o;810:18983::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;810:18983:30;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;810:18983:30;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;810:18983:30;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;810:18983:30;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;810:18983:30;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;810:18983:30;;;;:::o;5479:5905::-;;;;;;;5871:1678;;;;810:18983;;;;;;;5944:28;;;810:18983;;:::i;:::-;;;;;;5976:25;5944:57;5976:25;;810:18983;;;;;;:::i;:::-;5940:802;;810:18983;;;7773:35;;;810:18983;;;;-1:-1:-1;;;810:18983:30;;;;7773:35;;;;;;:::i;:::-;810:18983;7763:46;;7820:167;;;;810:18983;;7862:18;7820:167;8080:28;;;;810:18983;;;;;:::i;:::-;;;;-1:-1:-1;;;7773:35:30;810:18983;;;8080:28;;810:18983;8249:1;810:18983;;8249:1;810:18983;;;;;;8243:3;810:18983;;;;;;;;-1:-1:-1;9246:56:30;;;;810:18983;;;;7773:35;11584:541;;810:18983;;;;;;;;;;;;;;;;;;;;;;;;;11584:541;810:18983;;;;;;;:::i;:::-;-1:-1:-1;;;810:18983:30;;;8249:1;810:18983;;;;;;;;-1:-1:-1;;;810:18983:30;;;;;;;;;-1:-1:-1;;;810:18983:30;;;;;;;;;-1:-1:-1;;;810:18983:30;;;;-1:-1:-1;;;810:18983:30;;;;11584:541;;;;;;;;;:::i;:::-;9246:56;;-1:-1:-1;;9412:57:30;;;810:18983;;;;;;:::i;:::-;;;;;7773:35;810:18983;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12514:3:30;810:18983;;;;;12506:6;810:18983;12506:6;;;;;12603:3;810:18983;;;7773:35;12573:25;;810:18983;;;;;;;;;;;;;;12573:25;;;;;;:::i;:::-;810:18983;12563:36;;810:18983;12609:2;810:18983;;;;;;;12514:3;810:18983;;;12533:79;810:18983;;12533:79;;:::i;:::-;810:18983;12514:3;:::i;:::-;12493:11;;12506:6;;;;;;;;;;;;;;;;810:18983;12506:6;810:18983;-1:-1:-1;12679:939:30;;12705:3;810:18983;12697:6;;;;-1:-1:-1;12729:11:30;12742:5;12746:1;810:18983;;;12742:5;;;12705:3;;810:18983;12705:3;810:18983;12705:3;;:::i;:::-;12684:11;;;;12749:3;810:18983;;;;;;;;;7773:35;12809:28;;810:18983;;;;;;;;;12603:3;810:18983;;;;;;;;;;;;;;;;;;;;;;;12809:28;;;;;;:::i;:::-;810:18983;12799:39;;810:18983;12609:2;;810:18983;;;;;;;;;-1:-1:-1;;;810:18983:30;;;7773:35;12910:36;;810:18983;;;;;;;;;;;;;;;;;;;;7773:35;12910:36;;;;;:::i;:::-;810:18983;12900:47;;810:18983;;12956:2;810:18983;;;;;;;;13275:32;810:18983;13292:13;12749:3;810:18983;;;13189:386;810:18983;13189:386;810:18983;13116:1;810:18983;-1:-1:-1;;;810:18983:30;-1:-1:-1;;;13418:24:30;810:18983;;;13318:23;810:18983;;;13074:37;7773:35;13074:37;;810:18983;;;;;;;;;;;;;13074:37;;;;;;:::i;:::-;810:18983;13064:48;;810:18983;;;;13292:13;;:::i;:::-;810:18983;;13275:32;:::i;:::-;810:18983;;13318:23;:::i;13418:24::-;810:18983;;;13483:34;7773:35;13483:34;;810:18983;;;;;13483:34;;;;;;:::i;:::-;810:18983;;;;;;;;;13189:386;;7773:35;13189:386;;;810:18983;;;:::i;:::-;;;;;;7773:35;810:18983;;;;;;;;;;7773:35;810:18983;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;7773:35;810:18983;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;810:18983:30;;;;;;;;;;;7773:35;810:18983;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;13189:386;;;;;;;;;:::i;:::-;12749:3;;:::i;:::-;12729:11;;;12697:6;810:18983;12697:6;;;;;;;810:18983;12697:6;;8399:2939;12697:6;;;10668:26;10584:24;8272:2;810:18983;12697:6;10042:25;8399:2939;12697:6;13650:31;;810:18983;;;;;;;13650:31;;7773:35;13650:31;;;810:18983;;;:::i;:::-;;;-1:-1:-1;;;7773:35:30;810:18983;;;13650:31;810:18983;13650:31;;;;;;;:::i;:::-;9412:57;10042:25;:::i;:::-;810:18983;;;10584:24;:::i;:::-;10668:26;;:::i;:::-;810:18983;;;;;-1:-1:-1;;10857:26:30;:417;;-1:-1:-1;10908:339:30;;;10947:129;;810:18983;;10947:129;;810:18983;7773:35;10947:129;;810:18983;;;;;;;;;;;;;;;;;;7773:35;810:18983;;;;;;:::i;:::-;;;-1:-1:-1;;;810:18983:30;;;;10947:129;;;;;;;;;:::i;:::-;10857:417;;-1:-1:-1;;;810:18983:30;;8399:2939;;;;810:18983;7773:35;8399:2939;;810:18983;;;;;;;;;;;-1:-1:-1;;;810:18983:30;;;;-1:-1:-1;;;810:18983:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;810:18983:30;;;;;;;;;-1:-1:-1;;;810:18983:30;;;;;;;;;7773:35;810:18983;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;810:18983:30;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;810:18983:30;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;810:18983:30;;;;;;;;;;;7773:35;810:18983;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;7773:35;810:18983;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;810:18983:30;;;;;;;;;;;;;;;;;;;;;;;;;;;7773:35;810:18983;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;7773:35;810:18983;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;810:18983:30;;;;;;;;;;;7773:35;810:18983;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;7773:35;810:18983;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7773:35;810:18983;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;810:18983:30;;;;8399:2939;;;;;;;;;:::i;10908:339::-;11112:134;;810:18983;;11112:134;;810:18983;7773:35;11112:134;;810:18983;;;;;;;;;;;;;;;;7773:35;810:18983;;;;;;:::i;:::-;;;-1:-1:-1;;;810:18983:30;;;;11112:134;;;;;;;;;:::i;:::-;10908:339;;10857:417;810:18983;;;;;;;;;:::i;:::-;;;10857:417;;;9412:57;8399:2939;810:18983;;;;;;;;;10668:26;10584:24;810:18983;;;;;;8399:2939;810:18983;10042:25;8272:2;810:18983;;;;;;;:::i;:::-;;;9412:57;10042:25;:::i;9246:56::-;810:18983;;;;;;:::i;:::-;;;9246:56;;;8080:28;810:18983;;:::i;:::-;8080:28;;;7820:167;810:18983;7943:19;7820:167;;5940:802;810:18983;;6083:28;;810:18983;;:::i;:::-;;;;;;6115:24;6083:56;6115:24;;810:18983;;;-1:-1:-1;;;810:18983:30;;;;;;:::i;:::-;;;;;;;6079:663;5940:802;;6079:663;810:18983;;6220:28;;810:18983;;:::i;:::-;;;;;;6252:23;6220:55;6252:23;;810:18983;;;-1:-1:-1;;;810:18983:30;;;;;;:::i;6216:526::-;810:18983;;6360:28;;810:18983;;:::i;:::-;;;;;;6392:26;6360:58;6392:26;;810:18983;;;-1:-1:-1;;;810:18983:30;;;;;;:::i;6356:386::-;810:18983;6501:28;;810:18983;;:::i;:::-;;;;;;6533:26;6501:58;6533:26;;810:18983;-1:-1:-1;;;810:18983:30;;;;;;:::i;6497:245::-;810:18983;;6697:28;;6675:51;6697:28;;:::i;:::-;810:18983;;6675:51;;-1:-1:-1;;;6675:51:30;;;;810:18983;;;;;;;;;;;;:::i;:::-;;;6675:51;;;;;;;;;:::i;:::-;6497:245;5940:802;;5871:1678;810:18983;;;;;;;6825:28;;;810:18983;;:::i;:::-;;;;;;6857:25;6825:57;6857:25;;810:18983;;;-1:-1:-1;;;810:18983:30;;;;;;:::i;6821:718::-;810:18983;;6948:28;;810:18983;;:::i;:::-;;;;;;6980:24;6948:56;6980:24;;810:18983;;;-1:-1:-1;;;810:18983:30;;;;;;:::i;6944:595::-;810:18983;;7070:28;;810:18983;;:::i;:::-;;;;;;7102:23;7070:55;7102:23;;810:18983;;;-1:-1:-1;;;810:18983:30;;;;;;:::i;7066:473::-;810:18983;;7191:28;;810:18983;;:::i;:::-;;;;;;7223:26;7191:58;7223:26;;810:18983;;;-1:-1:-1;;;810:18983:30;;;;;;:::i;7187:352::-;810:18983;7315:28;;810:18983;;:::i;:::-;;;;;;7347:26;7315:58;7347:26;;810:18983;-1:-1:-1;;;810:18983:30;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;13844:1120::-;810:18983;;;;13979:744;;;810:18983;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;810:18983:30;;;;-1:-1:-1;;;810:18983:30;;;;;;;;;-1:-1:-1;;;810:18983:30;;;;;13979:744;810:18983;;;;;;;:::i;:::-;-1:-1:-1;;;810:18983:30;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;810:18983:30;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;810:18983:30;;;;-1:-1:-1;;;810:18983:30;;;;13979:744;;;;;;;;;:::i;:::-;14865:25;;;:::i;:::-;810:18983;14785:119;810:18983;;;14785:119;;810:18983;13979:744;14785:119;;810:18983;;;;;;13979:744;810:18983;;;;;;:::i;:::-;;;14785:119;;;;;;;;;:::i;:::-;14933:24;13844:1120;:::o;505:3382:21:-;810:18983:30;;795:16:21;791:31;;810:18983:30;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1357:1:21;810:18983:30;;;;;;;;;1362:1:21;;810:18983:30;;;-1:-1:-1;;;;;810:18983:30;;;;;;1326:39:21;810:18983:30;;;;;1326:39:21;:::i;:::-;1419:2438;810:18983:30;1419:2438:21;;;;;;;;;;810:18983:30;1419:2438:21;;;;;;810:1;1419:2438;;;;;;;;;;;;;;;1362:1;1419:2438;1362:1;;;1419:2438;;;;3867:13;505:3382;:::o;1419:2438::-;;;-1:-1:-1;;1419:2438:21;;505:3382;:::o;1419:2438::-;-1:-1:-1;1419:2438:21;;;-1:-1:-1;;1419:2438:21;;;-1:-1:-1;;1419:2438:21;;505:3382;:::o;1419:2438::-;;1337:1;1419:2438;;;;;;;;;;810:18983:30;1419:2438:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;791:31;810:18983:30;;;;;;:::i;:::-;:1:21;:18983:30;;813:9:21;:::o"},"methodIdentifiers":{"bytes32ToHexString(bytes32)":"c68b3787","generateCollectionSVG()":"3be699f9","generateLoogieSVG(bytes32,string,bytes3,uint256,uint256,string,bool)":"ad30ddbf","getCollectionMetadataBytes(uint256)":"8cda5103","getMetadataBytes(bytes32,string,bytes3,uint256,uint256,string,bool)":"8528247f","toColorHexString(bytes3)":"76799136","uint2str(uint256)":"f76f950e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"bytes32ToHexString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"generateCollectionSVG\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"svg\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"encodedSvg\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"loogieType\",\"type\":\"string\"},{\"internalType\":\"bytes3\",\"name\":\"colorValue\",\"type\":\"bytes3\"},{\"internalType\":\"uint256\",\"name\":\"chubbinessValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mouthLengthValue\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isUP\",\"type\":\"bool\"}],\"name\":\"generateLoogieSVG\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"getCollectionMetadataBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"raw\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"loogieTypeValue\",\"type\":\"string\"},{\"internalType\":\"bytes3\",\"name\":\"colorBytes\",\"type\":\"bytes3\"},{\"internalType\":\"uint256\",\"name\":\"chubbiness\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mouthLength\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isUP\",\"type\":\"bool\"}],\"name\":\"getMetadataBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"raw\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes3\",\"name\":\"_color\",\"type\":\"bytes3\"}],\"name\":\"toColorHexString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_i\",\"type\":\"uint256\"}],\"name\":\"uint2str\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_uintAsString\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides SVG generation and properly formatted LSP4 metadata\",\"kind\":\"dev\",\"methods\":{\"bytes32ToHexString(bytes32)\":{\"details\":\"Convert bytes32 to string\",\"params\":{\"value\":\"The bytes32 to convert\"},\"returns\":{\"_0\":\"string The hex string\"}},\"generateCollectionSVG()\":{\"details\":\"Generate collection SVG\",\"returns\":{\"encodedSvg\":\"Base64 encoded SVG with data URI\",\"svg\":\"The SVG string\"}},\"generateLoogieSVG(bytes32,string,bytes3,uint256,uint256,string,bool)\":{\"details\":\"Generate Loogie SVG based on attributes\",\"params\":{\"chubbinessValue\":\"The chubbiness value\",\"colorValue\":\"The color value\",\"isUP\":\"Whether the owner is a Universal Profile\",\"loogieType\":\"The loogie type\",\"mouthLengthValue\":\"The mouth length value\",\"tokenId\":\"The token ID for randomization\",\"username\":\"The username to display\"},\"returns\":{\"_0\":\"string The complete SVG\"}},\"getCollectionMetadataBytes(uint256)\":{\"details\":\"Get collection metadata in LUKSO LSP4 format\",\"params\":{\"limit\":\"The token supply limit\"},\"returns\":{\"encoded\":\"Encoded metadata bytes\",\"raw\":\"Raw metadata bytes\"}},\"getMetadataBytes(bytes32,string,bytes3,uint256,uint256,string,bool)\":{\"details\":\"Get token metadata in LUKSO LSP4 format\",\"params\":{\"chubbiness\":\"The chubbiness value\",\"colorBytes\":\"The color bytes\",\"isUP\":\"Whether the owner is a Universal Profile\",\"loogieTypeValue\":\"The loogie type\",\"mouthLength\":\"The mouth length value\",\"tokenId\":\"The token ID\",\"username\":\"The username\"},\"returns\":{\"encoded\":\"Encoded metadata bytes\",\"raw\":\"Raw metadata bytes\"}},\"toColorHexString(bytes3)\":{\"details\":\"Convert bytes3 to hex string\",\"params\":{\"_color\":\"The color bytes\"},\"returns\":{\"_0\":\"string The hex string\"}},\"uint2str(uint256)\":{\"details\":\"Convert uint to string\",\"params\":{\"_i\":\"The uint to convert\"},\"returns\":{\"_uintAsString\":\"The string representation\"}}},\"title\":\"OnChainMetadata\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Handles on-chain SVG generation and metadata formatting for LSP8Loogies\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/standalone/LSP8LoogiesEnhanced.sol\":\"OnChainMetadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@erc725/smart-contracts-v8/contracts/ERC725Y.sol\":{\"keccak256\":\"0x209d6b52eb0d5dcb8c180773dd67e507f603c98ede7e5a64457752159a52ad3d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dbfa427c80ba998d30c721fb41795502d19aa09acb8e1f59f6982d080f029692\",\"dweb:/ipfs/QmPQXeYEU7kaDtskZ1ha2umRuGSrFTfXfpyiGgBSQfwZBn\"]},\"@erc725/smart-contracts-v8/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts-v8/contracts/errors.sol\":{\"keccak256\":\"0x198fece17fcfec61d40d3453ebbaa49760968ea8caa128dd5314a12b98ecec66\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5e705131b03cf4167ff312e7ebaa679cf56c22b01de518dfa4d2163d7e1ddb8b\",\"dweb:/ipfs/QmbH8q7MgrR7fJm1QEmYoKcnZCxWwejt4Jum2DUYmLJAGA\"]},\"@erc725/smart-contracts-v8/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x943d0f67d6455cfb1bed5d1fb77995df0b202ecdbb028fa0e85bc26bcd3219a5\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c3b8b0daa2fed9c0513444120b87beec7c2b102eadbcbeccae73ece67819a658\",\"dweb:/ipfs/QmaSb9Xhma6UwhK1FosJtbP8EkBn8i9PTcLKg5FU1VAJSH\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x72dd4f342e059edd246032d2cd2e45707453ceb27c187161e31af345d058dced\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9a8fb9c285da565984f6a168ecee00a647b988a829c218813e9d2e007b28b48d\",\"dweb:/ipfs/QmbXznWjhZPLXWF6NJAyVKD8ZReSWZaJyRdYZMLWaQHZWa\"]},\"@lukso/lsp1-contracts/contracts/LSP1Constants.sol\":{\"keccak256\":\"0x0f87fc38243fc70316e22814f5a79d9c0770a39f64077cbc6fb5fddfa1d4c23c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7d83f054b71dfa5ca48a9a811e6a985ff6b38a9e5f4c220ea2ec3a322cce7cf\",\"dweb:/ipfs/QmaehpHpqc5dtRCm9BoU8vCY59AeEnmGvmmwPirVr47oGp\"]},\"@lukso/lsp1-contracts/contracts/LSP1Utils.sol\":{\"keccak256\":\"0x7dd32ff416b7275c5dbb8daa39c0f13bb1b4db2df8132221fc07619dbfe08cd0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fc3eaaa85cb6e14939417ba73729e65722f95c9db714bfda173a438fc2ce771d\",\"dweb:/ipfs/QmTg39yTVneeptAGBDTfGJfYrQMXJ153Y7VN4hJE2eNf1o\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol\":{\"keccak256\":\"0x6d4bb208587872ad563fef31655c44f7de03baa5b4a513910c0003aea0c04036\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://880c3b21e2090a14e7bba94ac5c8d4633e8a81d93c6f619454167a01dcc866d8\",\"dweb:/ipfs/QmZp6YVM4Eor5XtuXXqGRaPAJ3u5KCmLwuNRAGf4JY7sK1\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol\":{\"keccak256\":\"0x75a0159f76a3c5bf26b13aa404aca2f588ea41928eb1483683e29d2031fe5abf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f1b93e7eb5a88a2f42a9dfa061ca5e93e7650cd9114010faa18faf0a5508f579\",\"dweb:/ipfs/QmXmLhf1ejsF7G1FZnvpTBRS9oQ9ZTuqCBRT1im3vAuUYW\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol\":{\"keccak256\":\"0x4536ed09238f33ca9d40ed2e7c6254aac84bf81010b3524711524ae7fd30227c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://abaed57358cb811d3b368d52f66db3c1327b96c38301d6eccf2ffaa6d5fa5928\",\"dweb:/ipfs/QmS1FtQH4Gn6xYrHCTHWJwxgAURvGvvfypsuQ2rRhrkPgi\"]},\"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@lukso/lsp4-contracts/contracts/LSP4Constants.sol\":{\"keccak256\":\"0xdf9b7c688d39a92cb3238136a9f56554245d5ae9b6568dcd6164d0e15c6f56c7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bb36a427cdfa0f394d2d78014f85152ab383499fc3c3d6285d4b801c656e7c3f\",\"dweb:/ipfs/QmZJehfeWKfHLyZLufhs9u4ZyVztGCUNWXzFgfZSU837vU\"]},\"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol\":{\"keccak256\":\"0x6a718979925b05064c15e4de4b376dadec8d107d720aa762d22a06e44ed67fa4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c82f6c8133c4d35d8cbbfc4da647204989acc5f38980be787263881e9f732f5\",\"dweb:/ipfs/QmdhHBnJvvo4Ax183HgHkL7w5A4w3ADXDQuewocnTVqsW6\"]},\"@lukso/lsp4-contracts/contracts/LSP4Errors.sol\":{\"keccak256\":\"0x3db7fd252ed02ce27686141125c3d65d3ff682a32601e1e8611becd9357a57b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5aded62a160ed7f9860996004d1656e8592b3f97d478d8597f8ad6afbe4f34b7\",\"dweb:/ipfs/QmcnmLVt8cmz1iRNaX5c6iNYckRgUXGz8YkjHW9T1KNB5A\"]},\"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x2ca5a81c6c006030e2204d2a9997b15e954bc0696959c051a570c8a19eac4786\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bef5bbbad59c2dbd09e9e80ffe2dcf6dc3da5101d4f4b8beedcb0245d04b7b8a\",\"dweb:/ipfs/QmQYeCHfTtCTQVpy36De1d1vFacvbjTNipxDRNWuCQPNo6\"]},\"@lukso/lsp8-contracts/contracts/LSP8Constants.sol\":{\"keccak256\":\"0xe958d7d5ab694eb054df65ef6fb37864ff9da33604a28a14ca42e25c23629065\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://41f8b02e4c05b6eb3cfc447dae5862e38ba100269c56bb8d23ab26255085a41e\",\"dweb:/ipfs/QmVgeWYBovEJR1Xqph5AuJoP5EizSuY77gUUDmt48wmgWm\"]},\"@lukso/lsp8-contracts/contracts/LSP8Errors.sol\":{\"keccak256\":\"0xff2c1791043272eb4a7c05bc77fa0a0234678991b0700f84d92edbd31fefd905\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://72b32242e8a4b7c12355de3f1c463437a81d8d5f8d34b3a8d25d726340b891c0\",\"dweb:/ipfs/Qmbhz53zdudSQbPwES2qMHqLHaph4GhigNETC481VWwK6J\"]},\"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x1f707425bbcd5a84c7de2ad8ba9c2f620617b5f6483074c27ad6f259d91b7dd2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://799901e6bb5e3465a610d88dd4d314bac0aa787e8aaffd69e960e3e0975bda60\",\"dweb:/ipfs/QmVtLccrrEmvJuMiTFDrbxFuBQcSR8u9St14jXtFB9tmE8\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/utils/Base64.sol\":{\"keccak256\":\"0x822fe67e9e671773d29c8182e7287b42edf5f575eab1eb98558d5ccbdff61c96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce73cb57d5a2e705a0a65cac2ed73ab2fa91932e8af22b7ec1a6a3d88f28669\",\"dweb:/ipfs/QmcbjWFekUTsNeoFwGgUT4xtXoVzsA38ca9pkC4jxvxy7L\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"contracts/standalone/LSP8LoogiesEnhanced.sol\":{\"keccak256\":\"0xd0c8a4fb35197b420b295d198409055cfc82ff98764878a30a60609d31336f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4eaa152dbe1f6f784f091b9aff3f3faba6472796a608b022a39f00587dc6b4b\",\"dweb:/ipfs/QmUo1QHrHNT5ELy6HvrmJk48V7aN7EHtP1FJrpiknCJipX\"]}},\"version\":1}"}}}}}